<svg xmlns="http://www.w3.org/2000/svg" lang="en">
	<title>Total time by player (bears)</title>
	<metadata>
		<meta xmlns="http://www.w3.org/1999/xhtml" charset="utf-8" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="viewport" content="width=device-width" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="color-scheme" content="dark light" />
	</metadata>
	<style>
		*,
		::before,
		::after {
			box-sizing: border-box;
		}
		:root {
			background: var(--canvas-background);
			color: var(--canvas-foreground);
			fill: var(--canvas-background);
			stroke: var(--canvas-foreground);
			stroke-linejoin: round;
			stroke-linecap: round;
		}
		foreignObject {
			pointer-events: none;
		}
		foreignObject::before,
		foreignObject::after {
			content: "";
			position: absolute;
			z-index: 1;
			left: 20px;
			bottom: 20px;
			pointer-events: auto;
		}
		foreignObject::before {
			width: calc(100% - 40px);
			height: calc(20px + var(--date-size) * 1px);
		}
		foreignObject::after {
			width: calc(20px + var(--value-size) * 1px);
			height: calc(100% - 40px);
		}
		foreignObject &gt; div {
			position: absolute;
			z-index: 4;
			right: 0;
			top: 0;
			margin: 20px;
			border: 1px solid var(--canvas-foreground);
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			transition: opacity 1s;
			pointer-events: auto;
		}
		foreignObject:is(:hover, :focus-within) &gt; div:not(:hover, :focus-within) {
			opacity: 0;
			pointer-events: none;
		}
		foreignObject &gt; div &gt; p {
			margin: 0;
		}
		label {
			display: table;
			border-collapse: separate;
			border-spacing: 10px;
			direction: rtl;
		}
		progress,
		input[type="checkbox"] {
			display: table-cell;
			width: 16px;
			height: 16px;
			margin: 2px;
			accent-color: var(--canvas-foreground);
			vertical-align: top;
			direction: ltr;
		}
		progress + span,
		input[type="checkbox"] + span {
			display: table-cell;
			vertical-align: top;
			direction: ltr;
		}
		input[type="checkbox"]:not(:disabled):is(:hover, :focus-within) + span {
			text-decoration: underline;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			position: absolute;
			z-index: 2;
			margin: 0;
			padding: 10px;
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			font-weight: bold;
			pointer-events: auto;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg + svg {
			border-top: 1px solid #0000;
			border-bottom: 1px solid var(--canvas-foreground);
		}
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px dashed #0000;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg {
			width: calc(20px + var(--date-size) * 1px);
			height: 42px;
			bottom: 20px;
		}
		foreignObject &gt; svg:first-of-type {
			left: calc(40px + var(--value-size) * 1px);
			transform: rotate(90deg) translate(-100%, 0);
			transform-origin: left bottom;
		}
		foreignObject &gt; svg:first-of-type + svg {
			right: 20px;
			transform: rotate(90deg) translate(0, 100%);
			transform-origin: right bottom;
		}
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			width: calc(20px + var(--value-size) * 1px);
			height: 42px;
			left: 20px;
		}
		foreignObject &gt; svg:first-of-type + svg + svg {
			bottom: calc(40px + var(--date-size) * 1px);
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			top: 20px;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text {
			fill: var(--canvas-foreground);
			stroke: none;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text {
			cursor: vertical-text;
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg + svg {
			position: relative;
			z-index: 3;
			width: calc(100% - 60px - var(--value-size) * 1px);
			height: calc(100% - 60px - var(--date-size) * 1px);
			margin: 20px 20px calc(40px + var(--date-size) * 1px) calc(40px + var(--value-size) * 1px);
			border-left: 1px solid var(--canvas-foreground);
			border-right: 1px dashed var(--canvas-foreground);
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px solid var(--canvas-foreground);
			background: var(--canvas-background);
			pointer-events: auto;
		}
		g &gt; rect {
			vector-effect: non-scaling-stroke;
			fill: var(--highlighted);
			stroke: none;
		}
		g &gt; rect[tabindex] {
			fill: var(--tier, #0000);
			cursor: help;
		}
		g &gt; rect[tabindex][data-tier="diamond"] {
			--tier: var(--diamond);
		}
		g &gt; rect[tabindex][data-tier="gold"] {
			--tier: var(--gold);
		}
		g &gt; rect[tabindex][data-tier="silver"] {
			--tier: var(--silver);
		}
		g &gt; rect[tabindex][data-tier="bronze"] {
			--tier: var(--bronze);
		}
		g &gt; path[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: hsl(calc(var(--index) / var(--count) * 360), 50%, 50%);
			cursor: help;
		}
		g:is(:hover, :focus-within) &gt; path[tabindex] {
			stroke: var(--canvas-foreground);
		}
		g &gt; path[tabindex]:is(:hover, :focus-within) {
			outline: 0;
		}
		g &gt; path[tabindex]:first-of-type {
			stroke-width: 2;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) {
			stroke-width: 4;
		}
		g &gt; path[tabindex]:first-of-type:not(:last-of-type) {
			stroke-dasharray: 4 8;
		}
		g &gt; path[tabindex]:first-of-type + rect {
			fill: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect {
			fill: var(--highlighted);
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] {
			stroke-width: 8;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) {
			stroke-width: 16;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line + line {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			stroke-width: 2;
			stroke-dasharray: 4 8;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line + line {
			stroke: var(--faded);
		}
		@media (prefers-color-scheme: dark) {
			:root {
				--canvas-background: #000;
				--canvas-foreground: #ccc;
				--diamond: #0363;
				--gold: #6303;
				--silver: #3633;
				--bronze: #6363;
				--highlighted: #6663;
				--faded: #9993;
			}
		}
		@media (prefers-color-scheme: light) {
			:root {
				--canvas-background: #fff;
				--canvas-foreground: #333;
				--diamond: #9cf3;
				--gold: #fc93;
				--silver: #9c93;
				--bronze: #c9c3;
				--highlighted: #9993;
				--faded: #6663;
			}
		}
	</style>
	<script>
		"use strict";
		{
			const script = document.currentScript;
			const documentUrl = location.href;
			const scope = new URL("../", documentUrl).pathname;
			const playersKey = `${scope}#players`;
			const leaderboardsKey = `${scope}#leaderboards`;
			const sessionKey = `${scope}#session`;
			const lockKey = `${scope}#lock`;
			async function importDataScript(dataScriptUrl, signal) {
				signal.throwIfAborted();
				if (documentUrl.protocol !== "file:") {
					const response = await fetch(dataScriptUrl, {
						signal,
					});
					if (!response.ok) {
						throw new Error(response.statusText);
					}
					const data = await response.json();
					return data;
				}
				return await new Promise((resolve, reject) =&gt; {
					const name = `callback${Math.random() * 2 ** 53}`;
					let called = false;
					let data = null;
					function callback(value) {
						if (!called) {
							called = true;
							data = value;
						}
					}
					window[name] = callback;
					const dataScript = document.createElementNS("http://www.w3.org/2000/svg", "script");
					dataScript.href = `${dataScriptUrl}&amp;callback=${name}`;
					function handleAbort(event) {
						delete window[name];
						dataScript.removeEventListener("error", handleError);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const reason = signal.reason;
						reject(reason);
					}
					function handleError(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const error = event.error;
						reject(error);
					}
					function handleLoad(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("error", handleError);
						dataScript.remove();
						resolve(data);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					dataScript.addEventListener("error", handleError, {
						once: true,
					});
					dataScript.addEventListener("load", handleLoad, {
						once: true,
					});
					script.after(dataScript);
				});
			}
			async function waitForTimeout(delay, signal) {
				signal.throwIfAborted();
				return await new Promise((resolve, reject) =&gt; {
					let timeout = null;
					function handleAbort() {
						clearTimeout(timeout);
						const reason = signal.reason;
						reject(reason);
					}
					function handleTimeout() {
						signal.removeEventListener("abort", handleAbort);
						resolve(delay);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					timeout = setTimeout(handleTimeout, delay);
				});
			}
			window.addEventListener("pageshow", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully restored page from cache`);
				} else {
					console.log(`Unsuccessfully restored page from cache`);
				}
			});
			window.addEventListener("pagehide", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully saved page to cache`);
				} else {
					console.log(`Unsuccessfully saved page to cache`);
				}
			});
			window.addEventListener("pageshow", async (event) =&gt; {
				const rootTitleElement = document.querySelector("title");
				const rootTitleContent = rootTitleElement.textContent;
				const pathTitleElements = Array.from(document.querySelectorAll("g &gt; path[tabindex]:first-of-type &gt; title"));
				const pathTitleContents = pathTitleElements.map((pathTitleElement) =&gt; {
					const pathTitleContent = pathTitleElement.textContent;
					return pathTitleContent;
				});
				const foreignObject = document.querySelector("foreignObject");
				const div = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
				div.dir = "ltr";
				const p = document.createElementNS("http://www.w3.org/1999/xhtml", "p");
				const label = document.createElementNS("http://www.w3.org/1999/xhtml", "label");
				const progress = document.createElementNS("http://www.w3.org/1999/xhtml", "progress");
				label.append(progress);
				const span = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
				span.textContent = "Loading names";
				label.append(span);
				p.append(label);
				div.append(p);
				foreignObject.prepend(div);
				let lock = false;
				let session = null;
				const broadcastChannel = new BroadcastChannel(sessionKey);
				const abortController = new AbortController();
				const signal = abortController.signal;
				const abort = abortController.abort.bind(abortController);
				const {promise, resolve} = Promise.withResolvers();
				broadcastChannel.addEventListener("message", (event) =&gt; {
					const data = event.data;
					const type = data.type;
					switch (type) {
						case "request": {
							if (lock &amp;&amp; signal.aborted) {
								broadcastChannel.postMessage({
									type: "response",
									session,
								});
							}
							break;
						}
						case "response": {
							if (!signal.aborted) {
								session = data.session;
								if (session != null) {
									const {players, leaderboards} = session;
									try {
										const cachedPlayers = JSON.stringify(players);
										const cachedLeaderboards = JSON.stringify(leaderboards);
										sessionStorage.setItem(playersKey, cachedPlayers);
										sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
									} catch {}
									console.log(`Successfully loaded names from peer`);
									abort();
									resolve();
								} else {
									console.log(`Unsuccessfully loaded names from peer`);
									abort();
									resolve();
								}
							}
							break;
						}
					}
				});
				try {
					const cachedPlayers = sessionStorage.getItem(playersKey);
					const cachedLeaderboards = sessionStorage.getItem(leaderboardsKey);
					if (cachedPlayers == null || cachedLeaderboards == null) {
						throw new Error();
					}
					const players = JSON.parse(cachedPlayers);
					const leaderboards = JSON.parse(cachedLeaderboards);
					session = {players, leaderboards};
				} catch {}
				if (session != null) {
					broadcastChannel.postMessage({
						type: "response",
						session,
					});
					console.log(`Successfully loaded names from local`);
					abort();
					resolve();
				} else {
					broadcastChannel.postMessage({
						type: "request",
					});
					console.log(`Unsuccessfully loaded names from local`);
				}
				(async () =&gt; {
					for (;;) {
						await navigator.locks.request(lockKey, async () =&gt; {
							lock = true;
							console.log(`Acquired lock`);
							if (!signal.aborted) {
								try {
									const players = Object.create(null);
									const leaderboards = Object.create(null);
									const games = ["9d3rrxyd", "w6jl2ned"];
									for (const gameId of games) {
										const {data} = await importDataScript(`https://www.speedrun.com/api/v1/games/${gameId}?embed=categories,levels,variables`, signal);
										const versions = data.variables.data.find((variable) =&gt; {
											return variable.name === "Version";
										});
										const levels = Object.fromEntries(data.levels.data.map((level) =&gt; {
											return [level.id, level];
										}));
										const categories = Object.fromEntries(data.categories.data.map((category) =&gt; {
											return [category.id, category];
										}));
										const variables = Object.fromEntries(data.variables.data.map((variable) =&gt; {
											return [variable.id, variable];
										}));
										console.log(`Got game`);
										await waitForTimeout(800, signal);
										const slice = 200;
										for (let offset = 0;; offset += slice) {
											const {data, pagination} = await importDataScript(`https://www.speedrun.com/api/v1/runs?game=${gameId}&amp;orderby=date&amp;direction=asc&amp;embed=players&amp;offset=${offset}&amp;max=${slice}`, signal);
											const {size} = pagination;
											if (size === 0) {
												break;
											}
											for (const run of data) {
												const status = run.status.status;
												if (status == null || status === "new") {
													continue;
												}
												const player = run.players.data[0].rel === "user" ? run.players.data[0].id : "814p2558";
												const playerName = run.players.data[0].rel === "user" ? run.players.data[0].names.international : "anonymous";
												players[player] ??= playerName;
												const level = run.level;
												const category = run.category;
												const values = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return `-${variable}.${value}`;
												});
												const leaderboard = `${level != null ? `l_${level}-` : ""}${category}${values.join("")}`;
												const levelName = run.level != null ? levels[run.level]?.name ?? null : null;
												const categoryName = categories[run.category]?.name ?? null;
												const valueNames = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return variables[variable]?.values.values[value]?.label ?? null;
												}).filter((valueName) =&gt; {
													return valueName != null;
												});
												const leaderboardName = `${levelName != null ? `${levelName}: ` : ""}${categoryName ?? ""}${values.length !== 0 ? ` - ${valueNames.join(", ")}` : ""}`;
												leaderboards[leaderboard] ??= leaderboardName;
											}
											console.log(`Got runs ${offset}-${offset + size - 1}`);
											await waitForTimeout(800, signal);
										}
									}
									session = {players, leaderboards};
								} catch {}
								if (!signal.aborted) {
									if (session != null) {
										const {players, leaderboards} = session;
										try {
											const cachedPlayers = JSON.stringify(players);
											const cachedLeaderboards = JSON.stringify(leaderboards);
											sessionStorage.setItem(playersKey, cachedPlayers);
											sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
										} catch {}
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Successfully loaded names from remote`);
										abort();
										resolve();
									} else {
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Unsuccessfully loaded names from remote`);
										abort();
										resolve();
									}
								}
							}
							await new Promise((resolve) =&gt; {
								window.addEventListener("beforeunload", () =&gt; {
									resolve();
								}, {
									once: true,
								});
							});
						});
						lock = false;
						console.log(`Released lock`);
						await new Promise((resolve) =&gt; {
							window.addEventListener("pagehide", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
						await new Promise((resolve) =&gt;{
							window.addEventListener("pageshow", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
					}
				})();
				await promise;
				if (session == null) {
					const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
					input.type = "checkbox";
					input.autocomplete = "off";
					input.disabled = true;
					input.indeterminate = true;
					progress.replaceWith(input);
					span.textContent = "Unavailable names";
					return;
				}
				const {players, leaderboards} = session;
				const hasPlayerRoot = rootTitleContent.includes(" for player");
				const hasLeaderboardRoot = rootTitleContent.includes(" for leaderboard");
				const rootTitle = {
					element: rootTitleElement,
					contentWithIds: rootTitleContent,
					contentWithNames: hasPlayerRoot ? rootTitleContent.replace(/ for player ([0-9_a-z]+)/, ($0, $1) =&gt; {
						return ` for player ${players[$1] ?? $1}`;
					}) : hasLeaderboardRoot ? rootTitleContent.replace(/ for leaderboard ((?:l_[0-9_a-z]+-)?[0-9_a-z]+(-[0-9_a-z]+\.[0-9_a-z]+)*)/, ($0, $1) =&gt; {
						return ` for leaderboard ${leaderboards[$1] ?? $1}`;
					}) : rootTitleContent,
				};
				const hasPlayerPaths = rootTitleContent.includes(" by player");
				const hasLeaderboardPaths = rootTitleContent.includes(" by leaderboard");
				const pathTitles = pathTitleElements.map((pathTitleElement, k) =&gt; {
					const pathTitleContent = pathTitleContents[k];
					const pathTitle = {
						element: pathTitleElement,
						contentWithIds: pathTitleContent,
						contentWithNames: hasPlayerPaths ? players[pathTitleContent] ?? pathTitleContent : hasLeaderboardPaths ? leaderboards[pathTitleContent] ?? pathTitleContent : pathTitleContent,
					};
					return pathTitle;
				});
				const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
				input.type = "checkbox";
				input.autocomplete = "off";
				input.addEventListener("change", () =&gt; {
					input.disabled = true;
					if (input.checked) {
						rootTitle.element.textContent = rootTitle.contentWithNames;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithNames;
						}
					} else {
						rootTitle.element.textContent = rootTitle.contentWithIds;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithIds;
						}
					}
					input.disabled = false;
				});
				progress.replaceWith(input);
				span.textContent = "Reveal names";
			}, {
				once: true,
			});
		}
	</script>
	<script>
		"use strict";
		{
			document.addEventListener("DOMContentLoaded", (event) =&gt; {
				const minDateText = document.querySelector("foreignObject &gt; svg:first-of-type &gt; text");
				const maxDateText = document.querySelector("foreignObject &gt; svg:first-of-type + svg &gt; text");
				const startX = Math.round(Date.parse(minDateText.textContent) / 86400000);
				function xToDate(x) {
					const datetime = new Date((startX + x) * 86400000);
					const year = `${datetime.getUTCFullYear()}`.padStart(4, "0");
					const month = `${datetime.getUTCMonth() + 1}`.padStart(2, "0");
					const day = `${datetime.getUTCDate()}`.padStart(2, "0");
					const date = `${year}-${month}-${day}`;
					const size = date.length * 10;
					return {date, size};
				}
				function setMinDate(x) {
					const {date, size} = xToDate(Math.floor(x));
					minDateText.textLength.baseVal.value = size;
					minDateText.textContent = date;
				}
				function setMaxDate(x) {
					const {date, size} = xToDate(Math.ceil(x));
					maxDateText.textLength.baseVal.value = size;
					maxDateText.textContent = date;
				}
				const minValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg &gt; text");
				const maxValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text");
				const timed = minValueText.textContent.includes(":");
				function yToValue(y) {
					if (timed) {
						const minutes = `${(y - y % 6000) / 6000}`.padStart(2, "0");
						const seconds = `${(y - y % 100) / 100 % 60}`.padStart(2, "0");
						const centiseconds = `${y % 100}`.padStart(2, "0");
						const value = `${minutes}:${seconds}.${centiseconds}`;
						const size = value.length * 10;
						return {value, size};
					} else {
						const value = `${y}`;
						const size = value.length * 10;
						return {value, size};
					}
				}
				function setMinValue(y) {
					const {value, size} = yToValue(Math.floor(y));
					minValueText.textLength.baseVal.value = size;
					minValueText.textContent = value;
				}
				function setMaxValue(y) {
					const {value, size} = yToValue(Math.ceil(y));
					maxValueText.textLength.baseVal.value = size;
					maxValueText.textContent = value;
				}
				const svg = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg + svg");
				svg.tabIndex = -1;
				svg.style.setProperty("outline", "0");
				if (CSS.supports("overflow-clip-margin", "8px")) {
					svg.style.setProperty("overflow", "clip");
					svg.style.setProperty("overflow-clip-margin", "8px");
				}
				svg.style.setProperty("touch-action", "none");
				const {x: baseX, y: baseY, width: baseWidth, height: baseHeight} = svg.viewBox.baseVal;
				let pointerCount = 0;
				const pointers = Object.create(null);
				const xPointerIds = [];
				const yPointerIds = [];
				let x = null;
				let y = null;
				let width = null;
				let height = null;
				svg.addEventListener("pointerdown", (event) =&gt; {
					const {pointerId} = event;
					if (pointerId in pointers) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.setPointerCapture(pointerId);
					++pointerCount;
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId] = {
						offsetX,
						offsetY,
					};
					xPointerIds.splice(xPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetX &lt;= offsetX;
					}) + 1, 0, pointerId);
					yPointerIds.splice(yPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetY &lt;= offsetY;
					}) + 1, 0, pointerId);
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					width = Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth);
					height = Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight);
					x = Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX);
					y = Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY);
				});
				svg.addEventListener("pointerup", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.releasePointerCapture(pointerId);
					--pointerCount;
					delete pointers[pointerId];
					xPointerIds.splice(xPointerIds.lastIndexOf(pointerId), 1);
					yPointerIds.splice(yPointerIds.lastIndexOf(pointerId), 1);
					const minOffsetX = pointerCount !== 0 ? pointers[xPointerIds[0]].offsetX : null;
					const minOffsetY = pointerCount !== 0 ? pointers[yPointerIds[0]].offsetY : null;
					const maxClientWidth = pointerCount !== 0 ? pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX : null;
					const maxClientHeight = pointerCount !== 0 ? pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY : null;
					width = pointerCount !== 0 ? Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth) : null;
					height = pointerCount !== 0 ? Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight) : null;
					x = pointerCount !== 0 ? Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX) : null;
					y = pointerCount !== 0 ? Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY) : null;
				});
				svg.addEventListener("pointermove", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					event.preventDefault();
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId].offsetX = offsetX;
					pointers[pointerId].offsetY = offsetY;
					const oldXIndex = xPointerIds.lastIndexOf(pointerId);
					let newXIndex = oldXIndex;
					while (newXIndex &gt; 0 &amp;&amp; pointers[xPointerIds[newXIndex - 1]].offsetX &gt; offsetX) {
						--newXIndex;
					}
					xPointerIds.copyWithin(newXIndex + 1, newXIndex, oldXIndex);
					xPointerIds[newXIndex] = pointerId;
					while (newXIndex &lt; pointerCount - 1 &amp;&amp; pointers[xPointerIds[newXIndex + 1]].offsetX &lt; offsetX) {
						++newXIndex;
					}
					xPointerIds.copyWithin(oldXIndex, oldXIndex + 1, newXIndex + 1);
					xPointerIds[newXIndex] = pointerId;
					const oldYIndex = yPointerIds.lastIndexOf(pointerId);
					let newYIndex = oldYIndex;
					while (newYIndex &gt; 0 &amp;&amp; pointers[yPointerIds[newYIndex - 1]].offsetY &gt; offsetY) {
						--newYIndex;
					}
					yPointerIds.copyWithin(newYIndex + 1, newYIndex, oldYIndex);
					yPointerIds[newYIndex] = pointerId;
					while (newYIndex &lt; pointerCount - 1 &amp;&amp; pointers[yPointerIds[newYIndex + 1]].offsetY &lt; offsetY) {
						++newYIndex;
					}
					yPointerIds.copyWithin(oldYIndex, oldYIndex + 1, newYIndex + 1);
					yPointerIds[newYIndex] = pointerId;
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					animWidth = width === 0 ? animWidth : maxClientWidth === 0 ? baseWidth : Math.min(svg.clientWidth / maxClientWidth * width, baseWidth);
					animHeight = height === 0 ? animHeight : maxClientHeight === 0 ? baseHeight : Math.min(svg.clientHeight / maxClientHeight * height, baseHeight);
					animX = Math.max(Math.min(x - minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(y - minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
				const zoomIntensity = 1.25;
				svg.addEventListener("wheel", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					if (!ctrlKey) {
						const vectorX = (shiftKey ? event.deltaY : event.deltaX) / svg.clientWidth * animWidth;
						const vectorY = (shiftKey ? 0 : event.deltaY) / svg.clientHeight * animHeight;
						animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
						animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
						svg.viewBox.baseVal.x = animX;
						svg.viewBox.baseVal.y = animY;
						setMinDate(animX);
						setMaxDate(animX + animWidth);
						setMinValue(baseY * 2 + baseHeight - animHeight - animY);
						setMaxValue(baseY * 2 + baseHeight - animY);
						return;
					}
					const ratioX = zoomIntensity ** Math.sign(shiftKey ? event.deltaY : event.deltaX);
					const ratioY = zoomIntensity ** Math.sign(shiftKey ? 0 : event.deltaY);
					const positionX = Math.max(0, Math.min(event.offsetX / svg.clientWidth, 1)) * animWidth;
					const positionY = Math.max(0, Math.min(event.offsetY / svg.clientHeight, 1)) * animHeight;
					animWidth = Math.min(animWidth * ratioX, baseWidth);
					animHeight = Math.min(animHeight * ratioY, baseHeight);
					animX = Math.max(Math.min(animX + positionX * (1 - ratioX), baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(animY + positionY * (1 - ratioY), baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				}, {
					passive: false,
				});
				svg.addEventListener("keydown", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					switch (event.code) {
						case "Space": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "Equal":
						case "NumpadAdd":
						case "Minus":
						case "NumpadSubtract": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.code === "Minus" || event.code === "NumpadSubtract" ? zoomIntensity : 1 / zoomIntensity;
							if (!shiftKey) {
								animHeight = Math.min(animHeight * ratio, baseHeight);
								animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "Digit0":
						case "Numpad0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							if (!shiftKey) {
								animY = baseY;
								animHeight = baseHeight;
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animX = baseX;
							animWidth = baseWidth;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
					}
					switch (event.key) {
						case "ArrowRight": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = 50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowLeft": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = -50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowDown": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = 50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "End": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY + baseHeight - animHeight;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "ArrowUp": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = -50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "Home": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "PageDown":
						case "PageUp":
						case " ": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = event.key === "PageUp" || event.key === " " &amp;&amp; shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "+":
						case "-": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.key === "-" ? 1 / zoomIntensity : zoomIntensity;
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animHeight = Math.min(animHeight * ratio, baseHeight);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animX = baseX;
							animY = baseY;
							animWidth = baseWidth;
							animHeight = baseHeight;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
					}
				});
				svg.addEventListener("focusin", (event) =&gt; {
					if (!event.target.matches(":focus-visible")) {
						return;
					}
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					let {x, y, width, height} = event.target.getBBox();
					width = Math.round(width);
					height = Math.round(height);
					x = Math.round(x);
					y = baseY * 2 + baseHeight - height - Math.round(y);
					if (x + width &lt; animX) {
						animX = x;
						if (width &gt; animWidth) {
							animX += (width - animWidth) / 2;
						}
					} else if (x &gt; animX + animWidth) {
						animX = x + width - animWidth;
						if (width &gt; animWidth) {
							animX -= (width - animWidth) / 2;
						}
					}
					if (y + height &lt; animY) {
						animY = y;
						if (height &gt; animHeight) {
							animY += (height - animHeight) / 2;
						}
					} else if (y &gt; animY + animHeight) {
						animY = y + height - animHeight;
						if (height &gt; animHeight) {
							animY -= (height - animHeight) / 2;
						}
					}
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
			}, {
				once: true,
			});
		}
	</script>
	<foreignObject x="0" y="0" width="100%" height="100%" style="--date-size: 100; --value-size: 80;">
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2024-07-11</text>
		</svg>
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2025-08-30</text>
		</svg>
		<svg viewBox="0 0 80 20">
			<text x="40" y="10" dx="0" dy="2" textLength="80" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">00:00.00</text>
		</svg>
		<svg viewBox="0 0 80 20">
			<text x="40" y="10" dx="0" dy="2" textLength="80" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">33:49.96</text>
		</svg>
		<svg viewBox="0 0 415 202996" preserveAspectRatio="none" overflow="visible">
			<g transform="translate(0 202996) scale(1 -1)" style="--count: 6;">
				<g>
					<rect x="0" y="0" width="415" height="202996" tabindex="0" data-tier="diamond">
						<title>35:51.00 for diamond</title>
					</rect>
					<rect x="0" y="202996" width="415" height="0" tabindex="0" data-tier="gold">
						<title>57:55.00 for gold</title>
					</rect>
					<rect x="0" y="202996" width="415" height="0" tabindex="0" data-tier="silver">
						<title>77:23.00 for silver</title>
					</rect>
					<rect x="0" y="202996" width="415" height="0" tabindex="0" data-tier="bronze">
						<title>115:50.00 for bronze</title>
					</rect>
				</g>
				<g style="--index: 0;">
					<path d="M0,167354L4,167354L4,167318L35,167318L35,167308L37,167308L37,167306L41,167306L41,167280L56,167280L56,166520L83,166520L83,165729L87,165729L87,165602L162,165602L162,165581L165,165581L165,165510L172,165510L172,164127L173,164127L173,164024L179,164024L179,163841L239,163841L239,161264L257,161264L257,161074L259,161074L259,160866L270,160866L270,160831L275,160831L275,160777L286,160777L286,160754L304,160754L304,160254L325,160254L325,160160L330,160160L330,160148L331,160148L331,159827L342,159827L342,159812L358,159812L358,159759L371,159759L371,159604L373,159604L373,158779L377,158779L377,158695L380,158695L380,158591L381,158591L381,158480L385,158480L385,158459L386,158459L386,158386L389,158386L389,158322L390,158322L390,158295L397,158295L397,158241L398,158241L398,158237L402,158237L402,158193L403,158193L403,158120L404,158120L404,158051L405,158051L405,158031L406,158031L406,157811L409,157811L409,157777" tabindex="0">
						<title>jn2m23wj</title>
					</path>
					<rect x="0" y="157777" width="409" height="9577"/>
					<path d="M0,167354L0,167354" tabindex="0">
						<title>27:53.54 on 2024-07-11</title>
					</path>
					<line x1="0" y1="167354" x2="415" y2="167354"/>
					<line x1="0" y1="0" x2="0" y2="202996"/>
					<path d="M4,167318L4,167318" tabindex="0">
						<title>27:53.18 on 2024-07-15</title>
					</path>
					<line x1="0" y1="167318" x2="415" y2="167318"/>
					<line x1="4" y1="0" x2="4" y2="202996"/>
					<path d="M35,167308L35,167308" tabindex="0">
						<title>27:53.08 on 2024-08-15</title>
					</path>
					<line x1="0" y1="167308" x2="415" y2="167308"/>
					<line x1="35" y1="0" x2="35" y2="202996"/>
					<path d="M37,167306L37,167306" tabindex="0">
						<title>27:53.06 on 2024-08-17</title>
					</path>
					<line x1="0" y1="167306" x2="415" y2="167306"/>
					<line x1="37" y1="0" x2="37" y2="202996"/>
					<path d="M41,167280L41,167280" tabindex="0">
						<title>27:52.80 on 2024-08-21</title>
					</path>
					<line x1="0" y1="167280" x2="415" y2="167280"/>
					<line x1="41" y1="0" x2="41" y2="202996"/>
					<path d="M56,166520L56,166520" tabindex="0">
						<title>27:45.20 on 2024-09-05</title>
					</path>
					<line x1="0" y1="166520" x2="415" y2="166520"/>
					<line x1="56" y1="0" x2="56" y2="202996"/>
					<path d="M83,165729L83,165729" tabindex="0">
						<title>27:37.29 on 2024-10-02</title>
					</path>
					<line x1="0" y1="165729" x2="415" y2="165729"/>
					<line x1="83" y1="0" x2="83" y2="202996"/>
					<path d="M87,165602L87,165602" tabindex="0">
						<title>27:36.02 on 2024-10-06</title>
					</path>
					<line x1="0" y1="165602" x2="415" y2="165602"/>
					<line x1="87" y1="0" x2="87" y2="202996"/>
					<path d="M162,165581L162,165581" tabindex="0">
						<title>27:35.81 on 2024-12-20</title>
					</path>
					<line x1="0" y1="165581" x2="415" y2="165581"/>
					<line x1="162" y1="0" x2="162" y2="202996"/>
					<path d="M165,165510L165,165510" tabindex="0">
						<title>27:35.10 on 2024-12-23</title>
					</path>
					<line x1="0" y1="165510" x2="415" y2="165510"/>
					<line x1="165" y1="0" x2="165" y2="202996"/>
					<path d="M172,164127L172,164127" tabindex="0">
						<title>27:21.27 on 2024-12-30</title>
					</path>
					<line x1="0" y1="164127" x2="415" y2="164127"/>
					<line x1="172" y1="0" x2="172" y2="202996"/>
					<path d="M173,164024L173,164024" tabindex="0">
						<title>27:20.24 on 2024-12-31</title>
					</path>
					<line x1="0" y1="164024" x2="415" y2="164024"/>
					<line x1="173" y1="0" x2="173" y2="202996"/>
					<path d="M179,163841L179,163841" tabindex="0">
						<title>27:18.41 on 2025-01-06</title>
					</path>
					<line x1="0" y1="163841" x2="415" y2="163841"/>
					<line x1="179" y1="0" x2="179" y2="202996"/>
					<path d="M239,161264L239,161264" tabindex="0">
						<title>26:52.64 on 2025-03-07</title>
					</path>
					<line x1="0" y1="161264" x2="415" y2="161264"/>
					<line x1="239" y1="0" x2="239" y2="202996"/>
					<path d="M257,161074L257,161074" tabindex="0">
						<title>26:50.74 on 2025-03-25</title>
					</path>
					<line x1="0" y1="161074" x2="415" y2="161074"/>
					<line x1="257" y1="0" x2="257" y2="202996"/>
					<path d="M259,160866L259,160866" tabindex="0">
						<title>26:48.66 on 2025-03-27</title>
					</path>
					<line x1="0" y1="160866" x2="415" y2="160866"/>
					<line x1="259" y1="0" x2="259" y2="202996"/>
					<path d="M270,160831L270,160831" tabindex="0">
						<title>26:48.31 on 2025-04-07</title>
					</path>
					<line x1="0" y1="160831" x2="415" y2="160831"/>
					<line x1="270" y1="0" x2="270" y2="202996"/>
					<path d="M275,160777L275,160777" tabindex="0">
						<title>26:47.77 on 2025-04-12</title>
					</path>
					<line x1="0" y1="160777" x2="415" y2="160777"/>
					<line x1="275" y1="0" x2="275" y2="202996"/>
					<path d="M286,160754L286,160754" tabindex="0">
						<title>26:47.54 on 2025-04-23</title>
					</path>
					<line x1="0" y1="160754" x2="415" y2="160754"/>
					<line x1="286" y1="0" x2="286" y2="202996"/>
					<path d="M304,160254L304,160254" tabindex="0">
						<title>26:42.54 on 2025-05-11</title>
					</path>
					<line x1="0" y1="160254" x2="415" y2="160254"/>
					<line x1="304" y1="0" x2="304" y2="202996"/>
					<path d="M325,160160L325,160160" tabindex="0">
						<title>26:41.60 on 2025-06-01</title>
					</path>
					<line x1="0" y1="160160" x2="415" y2="160160"/>
					<line x1="325" y1="0" x2="325" y2="202996"/>
					<path d="M330,160148L330,160148" tabindex="0">
						<title>26:41.48 on 2025-06-06</title>
					</path>
					<line x1="0" y1="160148" x2="415" y2="160148"/>
					<line x1="330" y1="0" x2="330" y2="202996"/>
					<path d="M331,159827L331,159827" tabindex="0">
						<title>26:38.27 on 2025-06-07</title>
					</path>
					<line x1="0" y1="159827" x2="415" y2="159827"/>
					<line x1="331" y1="0" x2="331" y2="202996"/>
					<path d="M342,159812L342,159812" tabindex="0">
						<title>26:38.12 on 2025-06-18</title>
					</path>
					<line x1="0" y1="159812" x2="415" y2="159812"/>
					<line x1="342" y1="0" x2="342" y2="202996"/>
					<path d="M358,159759L358,159759" tabindex="0">
						<title>26:37.59 on 2025-07-04</title>
					</path>
					<line x1="0" y1="159759" x2="415" y2="159759"/>
					<line x1="358" y1="0" x2="358" y2="202996"/>
					<path d="M371,159604L371,159604" tabindex="0">
						<title>26:36.04 on 2025-07-17</title>
					</path>
					<line x1="0" y1="159604" x2="415" y2="159604"/>
					<line x1="371" y1="0" x2="371" y2="202996"/>
					<path d="M373,158779L373,158779" tabindex="0">
						<title>26:27.79 on 2025-07-19</title>
					</path>
					<line x1="0" y1="158779" x2="415" y2="158779"/>
					<line x1="373" y1="0" x2="373" y2="202996"/>
					<path d="M377,158695L377,158695" tabindex="0">
						<title>26:26.95 on 2025-07-23</title>
					</path>
					<line x1="0" y1="158695" x2="415" y2="158695"/>
					<line x1="377" y1="0" x2="377" y2="202996"/>
					<path d="M380,158591L380,158591" tabindex="0">
						<title>26:25.91 on 2025-07-26</title>
					</path>
					<line x1="0" y1="158591" x2="415" y2="158591"/>
					<line x1="380" y1="0" x2="380" y2="202996"/>
					<path d="M381,158480L381,158480" tabindex="0">
						<title>26:24.80 on 2025-07-27</title>
					</path>
					<line x1="0" y1="158480" x2="415" y2="158480"/>
					<line x1="381" y1="0" x2="381" y2="202996"/>
					<path d="M385,158459L385,158459" tabindex="0">
						<title>26:24.59 on 2025-07-31</title>
					</path>
					<line x1="0" y1="158459" x2="415" y2="158459"/>
					<line x1="385" y1="0" x2="385" y2="202996"/>
					<path d="M386,158386L386,158386" tabindex="0">
						<title>26:23.86 on 2025-08-01</title>
					</path>
					<line x1="0" y1="158386" x2="415" y2="158386"/>
					<line x1="386" y1="0" x2="386" y2="202996"/>
					<path d="M389,158322L389,158322" tabindex="0">
						<title>26:23.22 on 2025-08-04</title>
					</path>
					<line x1="0" y1="158322" x2="415" y2="158322"/>
					<line x1="389" y1="0" x2="389" y2="202996"/>
					<path d="M390,158295L390,158295" tabindex="0">
						<title>26:22.95 on 2025-08-05</title>
					</path>
					<line x1="0" y1="158295" x2="415" y2="158295"/>
					<line x1="390" y1="0" x2="390" y2="202996"/>
					<path d="M397,158241L397,158241" tabindex="0">
						<title>26:22.41 on 2025-08-12</title>
					</path>
					<line x1="0" y1="158241" x2="415" y2="158241"/>
					<line x1="397" y1="0" x2="397" y2="202996"/>
					<path d="M398,158237L398,158237" tabindex="0">
						<title>26:22.37 on 2025-08-13</title>
					</path>
					<line x1="0" y1="158237" x2="415" y2="158237"/>
					<line x1="398" y1="0" x2="398" y2="202996"/>
					<path d="M402,158193L402,158193" tabindex="0">
						<title>26:21.93 on 2025-08-17</title>
					</path>
					<line x1="0" y1="158193" x2="415" y2="158193"/>
					<line x1="402" y1="0" x2="402" y2="202996"/>
					<path d="M403,158120L403,158120" tabindex="0">
						<title>26:21.20 on 2025-08-18</title>
					</path>
					<line x1="0" y1="158120" x2="415" y2="158120"/>
					<line x1="403" y1="0" x2="403" y2="202996"/>
					<path d="M404,158051L404,158051" tabindex="0">
						<title>26:20.51 on 2025-08-19</title>
					</path>
					<line x1="0" y1="158051" x2="415" y2="158051"/>
					<line x1="404" y1="0" x2="404" y2="202996"/>
					<path d="M405,158031L405,158031" tabindex="0">
						<title>26:20.31 on 2025-08-20</title>
					</path>
					<line x1="0" y1="158031" x2="415" y2="158031"/>
					<line x1="405" y1="0" x2="405" y2="202996"/>
					<path d="M406,157811L406,157811" tabindex="0">
						<title>26:18.11 on 2025-08-21</title>
					</path>
					<line x1="0" y1="157811" x2="415" y2="157811"/>
					<line x1="406" y1="0" x2="406" y2="202996"/>
					<path d="M409,157777L409,157777" tabindex="0">
						<title>26:17.77 on 2025-08-24</title>
					</path>
					<line x1="0" y1="157777" x2="415" y2="157777"/>
					<line x1="409" y1="0" x2="409" y2="202996"/>
				</g>
				<g style="--index: 1;">
					<path d="M80,187061" tabindex="0">
						<title>0jmw6wex</title>
					</path>
					<rect x="80" y="187061" width="0" height="0"/>
					<path d="M80,187061L80,187061" tabindex="0">
						<title>31:10.61 on 2024-09-29</title>
					</path>
					<line x1="0" y1="187061" x2="415" y2="187061"/>
					<line x1="80" y1="0" x2="80" y2="202996"/>
				</g>
				<g style="--index: 2;">
					<path d="M227,183424" tabindex="0">
						<title>xkon93k8</title>
					</path>
					<rect x="227" y="183424" width="0" height="0"/>
					<path d="M227,183424L227,183424" tabindex="0">
						<title>30:34.24 on 2025-02-23</title>
					</path>
					<line x1="0" y1="183424" x2="415" y2="183424"/>
					<line x1="227" y1="0" x2="227" y2="202996"/>
				</g>
				<g style="--index: 3;">
					<path d="M228,202996L239,202996L239,202714L264,202714L264,202644L265,202644L265,202478L270,202478L270,202162L271,202162L271,201962L272,201962L272,201246L279,201246L279,201150L281,201150L281,200262L285,200262L285,199275L287,199275L287,199192L346,199192L346,197368L348,197368L348,196823L352,196823L352,196608L353,196608L353,196603L355,196603L355,196600L375,196600L375,193698L376,193698L376,190364L377,190364L377,188135L378,188135L378,188064L382,188064L382,187468L399,187468L399,187447L407,187447L407,187221L408,187221L408,187172L412,187172L412,185304L414,185304L414,184431" tabindex="0">
						<title>8w3l21qj</title>
					</path>
					<rect x="228" y="184431" width="186" height="18565"/>
					<path d="M228,202996L228,202996" tabindex="0">
						<title>33:49.96 on 2025-02-24</title>
					</path>
					<line x1="0" y1="202996" x2="415" y2="202996"/>
					<line x1="228" y1="0" x2="228" y2="202996"/>
					<path d="M239,202714L239,202714" tabindex="0">
						<title>33:47.14 on 2025-03-07</title>
					</path>
					<line x1="0" y1="202714" x2="415" y2="202714"/>
					<line x1="239" y1="0" x2="239" y2="202996"/>
					<path d="M264,202644L264,202644" tabindex="0">
						<title>33:46.44 on 2025-04-01</title>
					</path>
					<line x1="0" y1="202644" x2="415" y2="202644"/>
					<line x1="264" y1="0" x2="264" y2="202996"/>
					<path d="M265,202478L265,202478" tabindex="0">
						<title>33:44.78 on 2025-04-02</title>
					</path>
					<line x1="0" y1="202478" x2="415" y2="202478"/>
					<line x1="265" y1="0" x2="265" y2="202996"/>
					<path d="M270,202162L270,202162" tabindex="0">
						<title>33:41.62 on 2025-04-07</title>
					</path>
					<line x1="0" y1="202162" x2="415" y2="202162"/>
					<line x1="270" y1="0" x2="270" y2="202996"/>
					<path d="M271,201962L271,201962" tabindex="0">
						<title>33:39.62 on 2025-04-08</title>
					</path>
					<line x1="0" y1="201962" x2="415" y2="201962"/>
					<line x1="271" y1="0" x2="271" y2="202996"/>
					<path d="M272,201246L272,201246" tabindex="0">
						<title>33:32.46 on 2025-04-09</title>
					</path>
					<line x1="0" y1="201246" x2="415" y2="201246"/>
					<line x1="272" y1="0" x2="272" y2="202996"/>
					<path d="M279,201150L279,201150" tabindex="0">
						<title>33:31.50 on 2025-04-16</title>
					</path>
					<line x1="0" y1="201150" x2="415" y2="201150"/>
					<line x1="279" y1="0" x2="279" y2="202996"/>
					<path d="M281,200262L281,200262" tabindex="0">
						<title>33:22.62 on 2025-04-18</title>
					</path>
					<line x1="0" y1="200262" x2="415" y2="200262"/>
					<line x1="281" y1="0" x2="281" y2="202996"/>
					<path d="M285,199275L285,199275" tabindex="0">
						<title>33:12.75 on 2025-04-22</title>
					</path>
					<line x1="0" y1="199275" x2="415" y2="199275"/>
					<line x1="285" y1="0" x2="285" y2="202996"/>
					<path d="M287,199192L287,199192" tabindex="0">
						<title>33:11.92 on 2025-04-24</title>
					</path>
					<line x1="0" y1="199192" x2="415" y2="199192"/>
					<line x1="287" y1="0" x2="287" y2="202996"/>
					<path d="M346,197368L346,197368" tabindex="0">
						<title>32:53.68 on 2025-06-22</title>
					</path>
					<line x1="0" y1="197368" x2="415" y2="197368"/>
					<line x1="346" y1="0" x2="346" y2="202996"/>
					<path d="M348,196823L348,196823" tabindex="0">
						<title>32:48.23 on 2025-06-24</title>
					</path>
					<line x1="0" y1="196823" x2="415" y2="196823"/>
					<line x1="348" y1="0" x2="348" y2="202996"/>
					<path d="M352,196608L352,196608" tabindex="0">
						<title>32:46.08 on 2025-06-28</title>
					</path>
					<line x1="0" y1="196608" x2="415" y2="196608"/>
					<line x1="352" y1="0" x2="352" y2="202996"/>
					<path d="M353,196603L353,196603" tabindex="0">
						<title>32:46.03 on 2025-06-29</title>
					</path>
					<line x1="0" y1="196603" x2="415" y2="196603"/>
					<line x1="353" y1="0" x2="353" y2="202996"/>
					<path d="M355,196600L355,196600" tabindex="0">
						<title>32:46.00 on 2025-07-01</title>
					</path>
					<line x1="0" y1="196600" x2="415" y2="196600"/>
					<line x1="355" y1="0" x2="355" y2="202996"/>
					<path d="M375,193698L375,193698" tabindex="0">
						<title>32:16.98 on 2025-07-21</title>
					</path>
					<line x1="0" y1="193698" x2="415" y2="193698"/>
					<line x1="375" y1="0" x2="375" y2="202996"/>
					<path d="M376,190364L376,190364" tabindex="0">
						<title>31:43.64 on 2025-07-22</title>
					</path>
					<line x1="0" y1="190364" x2="415" y2="190364"/>
					<line x1="376" y1="0" x2="376" y2="202996"/>
					<path d="M377,188135L377,188135" tabindex="0">
						<title>31:21.35 on 2025-07-23</title>
					</path>
					<line x1="0" y1="188135" x2="415" y2="188135"/>
					<line x1="377" y1="0" x2="377" y2="202996"/>
					<path d="M378,188064L378,188064" tabindex="0">
						<title>31:20.64 on 2025-07-24</title>
					</path>
					<line x1="0" y1="188064" x2="415" y2="188064"/>
					<line x1="378" y1="0" x2="378" y2="202996"/>
					<path d="M382,187468L382,187468" tabindex="0">
						<title>31:14.68 on 2025-07-28</title>
					</path>
					<line x1="0" y1="187468" x2="415" y2="187468"/>
					<line x1="382" y1="0" x2="382" y2="202996"/>
					<path d="M399,187447L399,187447" tabindex="0">
						<title>31:14.47 on 2025-08-14</title>
					</path>
					<line x1="0" y1="187447" x2="415" y2="187447"/>
					<line x1="399" y1="0" x2="399" y2="202996"/>
					<path d="M407,187221L407,187221" tabindex="0">
						<title>31:12.21 on 2025-08-22</title>
					</path>
					<line x1="0" y1="187221" x2="415" y2="187221"/>
					<line x1="407" y1="0" x2="407" y2="202996"/>
					<path d="M408,187172L408,187172" tabindex="0">
						<title>31:11.72 on 2025-08-23</title>
					</path>
					<line x1="0" y1="187172" x2="415" y2="187172"/>
					<line x1="408" y1="0" x2="408" y2="202996"/>
					<path d="M412,185304L412,185304" tabindex="0">
						<title>30:53.04 on 2025-08-27</title>
					</path>
					<line x1="0" y1="185304" x2="415" y2="185304"/>
					<line x1="412" y1="0" x2="412" y2="202996"/>
					<path d="M414,184431L414,184431" tabindex="0">
						<title>30:44.31 on 2025-08-29</title>
					</path>
					<line x1="0" y1="184431" x2="415" y2="184431"/>
					<line x1="414" y1="0" x2="414" y2="202996"/>
				</g>
				<g style="--index: 4;">
					<path d="M354,181739" tabindex="0">
						<title>x356nrej</title>
					</path>
					<rect x="354" y="181739" width="0" height="0"/>
					<path d="M354,181739L354,181739" tabindex="0">
						<title>30:17.39 on 2025-06-30</title>
					</path>
					<line x1="0" y1="181739" x2="415" y2="181739"/>
					<line x1="354" y1="0" x2="354" y2="202996"/>
				</g>
				<g style="--index: 5;">
					<path d="M354,187281L355,187281L355,176860L356,176860L356,173613L359,173613L359,173121L360,173121L360,173089L361,173089L361,171293L363,171293L363,168859L364,168859L364,168845L365,168845L365,168668L366,168668L366,168547L367,168547L367,168492L368,168492L368,168272L369,168272L369,168118L374,168118L374,167879L375,167879L375,167820L376,167820L376,167747L377,167747L377,167698L378,167698L378,167689L379,167689L379,167685L380,167685L380,167658L383,167658L383,167622L384,167622L384,167491L385,167491L385,167295L386,167295L386,167293L387,167293L387,167227L388,167227L388,167156L389,167156L389,166472L390,166472L390,165873L391,165873L391,165859L394,165859L394,165848L395,165848L395,165445L399,165445L399,165392L400,165392L400,165345L402,165345L402,164948L403,164948L403,164046L404,164046L404,163850L405,163850L405,161969L407,161969L407,161728L414,161728L414,161699L415,161699L415,161269" tabindex="0">
						<title>j2p4pel8</title>
					</path>
					<rect x="354" y="161269" width="61" height="26012"/>
					<path d="M354,187281L354,187281" tabindex="0">
						<title>31:12.81 on 2025-06-30</title>
					</path>
					<line x1="0" y1="187281" x2="415" y2="187281"/>
					<line x1="354" y1="0" x2="354" y2="202996"/>
					<path d="M355,176860L355,176860" tabindex="0">
						<title>29:28.60 on 2025-07-01</title>
					</path>
					<line x1="0" y1="176860" x2="415" y2="176860"/>
					<line x1="355" y1="0" x2="355" y2="202996"/>
					<path d="M356,173613L356,173613" tabindex="0">
						<title>28:56.13 on 2025-07-02</title>
					</path>
					<line x1="0" y1="173613" x2="415" y2="173613"/>
					<line x1="356" y1="0" x2="356" y2="202996"/>
					<path d="M359,173121L359,173121" tabindex="0">
						<title>28:51.21 on 2025-07-05</title>
					</path>
					<line x1="0" y1="173121" x2="415" y2="173121"/>
					<line x1="359" y1="0" x2="359" y2="202996"/>
					<path d="M360,173089L360,173089" tabindex="0">
						<title>28:50.89 on 2025-07-06</title>
					</path>
					<line x1="0" y1="173089" x2="415" y2="173089"/>
					<line x1="360" y1="0" x2="360" y2="202996"/>
					<path d="M361,171293L361,171293" tabindex="0">
						<title>28:32.93 on 2025-07-07</title>
					</path>
					<line x1="0" y1="171293" x2="415" y2="171293"/>
					<line x1="361" y1="0" x2="361" y2="202996"/>
					<path d="M363,168859L363,168859" tabindex="0">
						<title>28:08.59 on 2025-07-09</title>
					</path>
					<line x1="0" y1="168859" x2="415" y2="168859"/>
					<line x1="363" y1="0" x2="363" y2="202996"/>
					<path d="M364,168845L364,168845" tabindex="0">
						<title>28:08.45 on 2025-07-10</title>
					</path>
					<line x1="0" y1="168845" x2="415" y2="168845"/>
					<line x1="364" y1="0" x2="364" y2="202996"/>
					<path d="M365,168668L365,168668" tabindex="0">
						<title>28:06.68 on 2025-07-11</title>
					</path>
					<line x1="0" y1="168668" x2="415" y2="168668"/>
					<line x1="365" y1="0" x2="365" y2="202996"/>
					<path d="M366,168547L366,168547" tabindex="0">
						<title>28:05.47 on 2025-07-12</title>
					</path>
					<line x1="0" y1="168547" x2="415" y2="168547"/>
					<line x1="366" y1="0" x2="366" y2="202996"/>
					<path d="M367,168492L367,168492" tabindex="0">
						<title>28:04.92 on 2025-07-13</title>
					</path>
					<line x1="0" y1="168492" x2="415" y2="168492"/>
					<line x1="367" y1="0" x2="367" y2="202996"/>
					<path d="M368,168272L368,168272" tabindex="0">
						<title>28:02.72 on 2025-07-14</title>
					</path>
					<line x1="0" y1="168272" x2="415" y2="168272"/>
					<line x1="368" y1="0" x2="368" y2="202996"/>
					<path d="M369,168118L369,168118" tabindex="0">
						<title>28:01.18 on 2025-07-15</title>
					</path>
					<line x1="0" y1="168118" x2="415" y2="168118"/>
					<line x1="369" y1="0" x2="369" y2="202996"/>
					<path d="M374,167879L374,167879" tabindex="0">
						<title>27:58.79 on 2025-07-20</title>
					</path>
					<line x1="0" y1="167879" x2="415" y2="167879"/>
					<line x1="374" y1="0" x2="374" y2="202996"/>
					<path d="M375,167820L375,167820" tabindex="0">
						<title>27:58.20 on 2025-07-21</title>
					</path>
					<line x1="0" y1="167820" x2="415" y2="167820"/>
					<line x1="375" y1="0" x2="375" y2="202996"/>
					<path d="M376,167747L376,167747" tabindex="0">
						<title>27:57.47 on 2025-07-22</title>
					</path>
					<line x1="0" y1="167747" x2="415" y2="167747"/>
					<line x1="376" y1="0" x2="376" y2="202996"/>
					<path d="M377,167698L377,167698" tabindex="0">
						<title>27:56.98 on 2025-07-23</title>
					</path>
					<line x1="0" y1="167698" x2="415" y2="167698"/>
					<line x1="377" y1="0" x2="377" y2="202996"/>
					<path d="M378,167689L378,167689" tabindex="0">
						<title>27:56.89 on 2025-07-24</title>
					</path>
					<line x1="0" y1="167689" x2="415" y2="167689"/>
					<line x1="378" y1="0" x2="378" y2="202996"/>
					<path d="M379,167685L379,167685" tabindex="0">
						<title>27:56.85 on 2025-07-25</title>
					</path>
					<line x1="0" y1="167685" x2="415" y2="167685"/>
					<line x1="379" y1="0" x2="379" y2="202996"/>
					<path d="M380,167658L380,167658" tabindex="0">
						<title>27:56.58 on 2025-07-26</title>
					</path>
					<line x1="0" y1="167658" x2="415" y2="167658"/>
					<line x1="380" y1="0" x2="380" y2="202996"/>
					<path d="M383,167622L383,167622" tabindex="0">
						<title>27:56.22 on 2025-07-29</title>
					</path>
					<line x1="0" y1="167622" x2="415" y2="167622"/>
					<line x1="383" y1="0" x2="383" y2="202996"/>
					<path d="M384,167491L384,167491" tabindex="0">
						<title>27:54.91 on 2025-07-30</title>
					</path>
					<line x1="0" y1="167491" x2="415" y2="167491"/>
					<line x1="384" y1="0" x2="384" y2="202996"/>
					<path d="M385,167295L385,167295" tabindex="0">
						<title>27:52.95 on 2025-07-31</title>
					</path>
					<line x1="0" y1="167295" x2="415" y2="167295"/>
					<line x1="385" y1="0" x2="385" y2="202996"/>
					<path d="M386,167293L386,167293" tabindex="0">
						<title>27:52.93 on 2025-08-01</title>
					</path>
					<line x1="0" y1="167293" x2="415" y2="167293"/>
					<line x1="386" y1="0" x2="386" y2="202996"/>
					<path d="M387,167227L387,167227" tabindex="0">
						<title>27:52.27 on 2025-08-02</title>
					</path>
					<line x1="0" y1="167227" x2="415" y2="167227"/>
					<line x1="387" y1="0" x2="387" y2="202996"/>
					<path d="M388,167156L388,167156" tabindex="0">
						<title>27:51.56 on 2025-08-03</title>
					</path>
					<line x1="0" y1="167156" x2="415" y2="167156"/>
					<line x1="388" y1="0" x2="388" y2="202996"/>
					<path d="M389,166472L389,166472" tabindex="0">
						<title>27:44.72 on 2025-08-04</title>
					</path>
					<line x1="0" y1="166472" x2="415" y2="166472"/>
					<line x1="389" y1="0" x2="389" y2="202996"/>
					<path d="M390,165873L390,165873" tabindex="0">
						<title>27:38.73 on 2025-08-05</title>
					</path>
					<line x1="0" y1="165873" x2="415" y2="165873"/>
					<line x1="390" y1="0" x2="390" y2="202996"/>
					<path d="M391,165859L391,165859" tabindex="0">
						<title>27:38.59 on 2025-08-06</title>
					</path>
					<line x1="0" y1="165859" x2="415" y2="165859"/>
					<line x1="391" y1="0" x2="391" y2="202996"/>
					<path d="M394,165848L394,165848" tabindex="0">
						<title>27:38.48 on 2025-08-09</title>
					</path>
					<line x1="0" y1="165848" x2="415" y2="165848"/>
					<line x1="394" y1="0" x2="394" y2="202996"/>
					<path d="M395,165445L395,165445" tabindex="0">
						<title>27:34.45 on 2025-08-10</title>
					</path>
					<line x1="0" y1="165445" x2="415" y2="165445"/>
					<line x1="395" y1="0" x2="395" y2="202996"/>
					<path d="M399,165392L399,165392" tabindex="0">
						<title>27:33.92 on 2025-08-14</title>
					</path>
					<line x1="0" y1="165392" x2="415" y2="165392"/>
					<line x1="399" y1="0" x2="399" y2="202996"/>
					<path d="M400,165345L400,165345" tabindex="0">
						<title>27:33.45 on 2025-08-15</title>
					</path>
					<line x1="0" y1="165345" x2="415" y2="165345"/>
					<line x1="400" y1="0" x2="400" y2="202996"/>
					<path d="M402,164948L402,164948" tabindex="0">
						<title>27:29.48 on 2025-08-17</title>
					</path>
					<line x1="0" y1="164948" x2="415" y2="164948"/>
					<line x1="402" y1="0" x2="402" y2="202996"/>
					<path d="M403,164046L403,164046" tabindex="0">
						<title>27:20.46 on 2025-08-18</title>
					</path>
					<line x1="0" y1="164046" x2="415" y2="164046"/>
					<line x1="403" y1="0" x2="403" y2="202996"/>
					<path d="M404,163850L404,163850" tabindex="0">
						<title>27:18.50 on 2025-08-19</title>
					</path>
					<line x1="0" y1="163850" x2="415" y2="163850"/>
					<line x1="404" y1="0" x2="404" y2="202996"/>
					<path d="M405,161969L405,161969" tabindex="0">
						<title>26:59.69 on 2025-08-20</title>
					</path>
					<line x1="0" y1="161969" x2="415" y2="161969"/>
					<line x1="405" y1="0" x2="405" y2="202996"/>
					<path d="M407,161728L407,161728" tabindex="0">
						<title>26:57.28 on 2025-08-22</title>
					</path>
					<line x1="0" y1="161728" x2="415" y2="161728"/>
					<line x1="407" y1="0" x2="407" y2="202996"/>
					<path d="M414,161699L414,161699" tabindex="0">
						<title>26:56.99 on 2025-08-29</title>
					</path>
					<line x1="0" y1="161699" x2="415" y2="161699"/>
					<line x1="414" y1="0" x2="414" y2="202996"/>
					<path d="M415,161269L415,161269" tabindex="0">
						<title>26:52.69 on 2025-08-30</title>
					</path>
					<line x1="0" y1="161269" x2="415" y2="161269"/>
					<line x1="415" y1="0" x2="415" y2="202996"/>
				</g>
			</g>
		</svg>
	</foreignObject>
</svg>
