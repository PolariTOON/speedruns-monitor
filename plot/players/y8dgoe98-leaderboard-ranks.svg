<svg xmlns="http://www.w3.org/2000/svg" lang="en" style="color-scheme: dark light;">
	<title>Rank by leaderboard for player y8dgoe98</title>
	<style>
		*,
		::before,
		::after {
			box-sizing: border-box;
		}
		:root {
			background: var(--canvas-background);
			color: var(--canvas-foreground);
			fill: var(--canvas-background);
			stroke: var(--canvas-foreground);
			stroke-linejoin: round;
			stroke-linecap: round;
		}
		foreignObject {
			pointer-events: none;
		}
		foreignObject &gt; div {
			position: absolute;
			left: 0;
			top: 0;
			margin: 20px;
			border: 1px solid var(--canvas-foreground);
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			transition: opacity 1s;
			pointer-events: auto;
		}
		foreignObject:is(:hover, :focus-within) &gt; div:not(:hover, :focus-within) {
			opacity: 0;
			pointer-events: none;
		}
		foreignObject &gt; div &gt; p {
			margin: 0;
		}
		label {
			display: table;
			border-collapse: separate;
			border-spacing: 10px;
		}
		progress,
		input[type="checkbox"] {
			display: table-cell;
			width: 16px;
			height: 16px;
			margin: 2px;
			accent-color: var(--canvas-foreground);
			vertical-align: top;
		}
		progress + span,
		input[type="checkbox"] + span {
			display: table-cell;
			vertical-align: top;
		}
		input[type="checkbox"]:not(:disabled):is(:hover, :focus-within) + span {
			text-decoration: underline;
		}
		foreignObject &gt; svg {
			width: calc(100% - 40px);
			height: calc(100% - 40px);
			margin: 20px;
			padding: 10px;
			border: 1px dashed var(--canvas-foreground);
			background: var(--canvas-background);
			pointer-events: auto;
		}
		g &gt; path[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: hsl(calc(var(--index) / var(--count) * 360), 50%, 50%);
			cursor: help;
		}
		g:is(:hover, :focus-within) &gt; path[tabindex] {
			stroke: var(--canvas-foreground);
		}
		g &gt; path[tabindex]:is(:hover, :focus-within) {
			outline: 0;
		}
		g &gt; path[tabindex]:first-of-type {
			stroke-width: 2;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) {
			stroke-width: 4;
		}
		g &gt; path[tabindex]:first-of-type:not(:last-of-type) {
			stroke-dasharray: 4 8;
		}
		g &gt; rect {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect {
			fill: var(--highlighted);
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] {
			stroke-width: 8;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) {
			stroke-width: 16;
		}
		g &gt; line {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			stroke-width: 2;
			stroke-dasharray: 4 8;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line + line {
			stroke: var(--faded);
		}
		@media (prefers-color-scheme: dark) {
			:root {
				--canvas-background: #000;
				--canvas-foreground: #ccc;
				--highlighted: #6663;
				--faded: #9993;
			}
		}
		@media (prefers-color-scheme: light) {
			:root {
				--canvas-background: #fff;
				--canvas-foreground: #333;
				--highlighted: #9993;
				--faded: #6663;
			}
		}
	</style>
	<script>
		"use strict";
		{
			const script = document.currentScript;
			const documentUrl = location.href;
			const scope = new URL("../../", documentUrl).pathname;
			const playersKey = `${scope}#players`;
			const leaderboardsKey = `${scope}#leaderboards`;
			const sessionKey = `${scope}#session`;
			const lockKey = `${scope}#lock`;
			async function importDataScript(dataScriptUrl, signal) {
				signal.throwIfAborted();
				if (documentUrl.protocol !== "file:") {
					const response = await fetch(dataScriptUrl, {
						signal,
					});
					if (!response.ok) {
						throw new Error(response.statusText);
					}
					const data = await response.json();
					return data;
				}
				return await new Promise((resolve, reject) =&gt; {
					const name = `callback${Math.random() * 2 ** 53}`;
					let called = false;
					let data = null;
					function callback(value) {
						if (!called) {
							called = true;
							data = value;
						}
					}
					window[name] = callback;
					const dataScript = document.createElementNS("http://www.w3.org/2000/svg", "script");
					dataScript.href = `${dataScriptUrl}&amp;callback=${name}`;
					function handleAbort(event) {
						delete window[name];
						dataScript.removeEventListener("error", handleError);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const reason = signal.reason;
						reject(reason);
					}
					function handleError(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const error = event.error;
						reject(error);
					}
					function handleLoad(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("error", handleError);
						dataScript.remove();
						resolve(data);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					dataScript.addEventListener("error", handleError, {
						once: true,
					});
					dataScript.addEventListener("load", handleLoad, {
						once: true,
					});
					script.after(dataScript);
				});
			}
			async function waitForTimeout(delay, signal) {
				signal.throwIfAborted();
				return await new Promise((resolve, reject) =&gt; {
					let timeout = null;
					function handleAbort() {
						clearTimeout(timeout);
						const reason = signal.reason;
						reject(reason);
					}
					function handleTimeout() {
						signal.removeEventListener("abort", handleAbort);
						resolve(delay);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					timeout = setTimeout(handleTimeout, delay);
				});
			}
			window.addEventListener("pageshow", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully restored page from cache`);
				} else {
					console.log(`Unsuccessfully restored page from cache`);
				}
			});
			window.addEventListener("pagehide", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully saved page to cache`);
				} else {
					console.log(`Unsuccessfully saved page to cache`);
				}
			});
			window.addEventListener("pageshow", async (event) =&gt; {
				const rootTitleElement = document.querySelector("title");
				const rootTitleContent = rootTitleElement.textContent;
				const pathTitleElements = Array.from(document.querySelectorAll("g &gt; path[tabindex]:first-of-type &gt; title"));
				const pathTitleContents = pathTitleElements.map((pathTitleElement) =&gt; {
					const pathTitleContent = pathTitleElement.textContent;
					return pathTitleContent;
				});
				const foreignObject = document.querySelector("foreignObject");
				const div = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
				div.dir = "ltr";
				const p = document.createElementNS("http://www.w3.org/1999/xhtml", "p");
				const label = document.createElementNS("http://www.w3.org/1999/xhtml", "label");
				const progress = document.createElementNS("http://www.w3.org/1999/xhtml", "progress");
				label.append(progress);
				const span = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
				span.textContent = "Loading names";
				label.append(span);
				p.append(label);
				div.append(p);
				foreignObject.prepend(div);
				let lock = false;
				let session = null;
				const broadcastChannel = new BroadcastChannel(sessionKey);
				const abortController = new AbortController();
				const signal = abortController.signal;
				const abort = abortController.abort.bind(abortController);
				const {promise, resolve} = Promise.withResolvers();
				broadcastChannel.addEventListener("message", (event) =&gt; {
					const data = event.data;
					const type = data.type;
					switch (type) {
						case "request": {
							if (lock &amp;&amp; signal.aborted) {
								broadcastChannel.postMessage({
									type: "response",
									session,
								});
							}
							break;
						}
						case "response": {
							if (!signal.aborted) {
								session = data.session;
								if (session != null) {
									const {players, leaderboards} = session;
									try {
										const cachedPlayers = JSON.stringify(players);
										const cachedLeaderboards = JSON.stringify(leaderboards);
										sessionStorage.setItem(playersKey, cachedPlayers);
										sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
									} catch {}
									console.log(`Successfully loaded names from peer`);
									abort();
									resolve();
								} else {
									console.log(`Unsuccessfully loaded names from peer`);
									abort();
									resolve();
								}
							}
							break;
						}
					}
				});
				try {
					const cachedPlayers = sessionStorage.getItem(playersKey);
					const cachedLeaderboards = sessionStorage.getItem(leaderboardsKey);
					if (cachedPlayers == null || cachedLeaderboards == null) {
						throw new Error();
					}
					const players = JSON.parse(cachedPlayers);
					const leaderboards = JSON.parse(cachedLeaderboards);
					session = {players, leaderboards};
				} catch {}
				if (session != null) {
					broadcastChannel.postMessage({
						type: "response",
						session,
					});
					console.log(`Successfully loaded names from local`);
					abort();
					resolve();
				} else {
					broadcastChannel.postMessage({
						type: "request",
					});
					console.log(`Unsuccessfully loaded names from local`);
				}
				(async () =&gt; {
					for (;;) {
						await navigator.locks.request(lockKey, async () =&gt; {
							lock = true;
							console.log(`Acquired lock`);
							if (!signal.aborted) {
								try {
									const players = Object.create(null);
									const leaderboards = Object.create(null);
									const games = ["9d3rrxyd", "w6jl2ned"];
									for (const gameId of games) {
										const {data} = await importDataScript(`https://www.speedrun.com/api/v1/games/${gameId}?embed=categories,levels,variables`, signal);
										const versions = data.variables.data.find((variable) =&gt; {
											return variable.name === "Version";
										});
										const levels = Object.fromEntries(data.levels.data.map((level) =&gt; {
											return [level.id, level];
										}));
										const categories = Object.fromEntries(data.categories.data.map((category) =&gt; {
											return [category.id, category];
										}));
										const variables = Object.fromEntries(data.variables.data.map((variable) =&gt; {
											return [variable.id, variable];
										}));
										console.log(`Got game`);
										await waitForTimeout(800, signal);
										const slice = 200;
										for (let offset = 0;; offset += slice) {
											const {data, pagination} = await importDataScript(`https://www.speedrun.com/api/v1/runs?game=${gameId}&amp;orderby=date&amp;direction=asc&amp;embed=players&amp;offset=${offset}&amp;max=${slice}`, signal);
											const {size} = pagination;
											if (size === 0) {
												break;
											}
											for (const run of data) {
												const status = run.status.status;
												if (status == null || status === "new") {
													continue;
												}
												const player = run.players.data[0].rel === "user" ? run.players.data[0].id : "814p2558";
												const playerName = run.players.data[0].rel === "user" ? run.players.data[0].names.international : "anonymous";
												players[player] ??= playerName;
												const level = run.level;
												const category = run.category;
												const values = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return `-${variable}.${value}`;
												});
												const leaderboard = `${level != null ? `l_${level}-` : ""}${category}${values.join("")}`;
												const levelName = run.level != null ? levels[run.level]?.name ?? null : null;
												const categoryName = categories[run.category]?.name ?? null;
												const valueNames = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return variables[variable]?.values.values[value]?.label ?? null;
												}).filter((valueName) =&gt; {
													return valueName != null;
												});
												const leaderboardName = `${levelName != null ? `${levelName}: ` : ""}${categoryName ?? ""}${values.length !== 0 ? ` - ${valueNames.join(", ")}` : ""}`;
												leaderboards[leaderboard] ??= leaderboardName;
											}
											console.log(`Got runs ${offset}-${offset + size - 1}`);
											await waitForTimeout(800, signal);
										}
									}
									session = {players, leaderboards};
								} catch {}
								if (!signal.aborted) {
									if (session != null) {
										const {players, leaderboards} = session;
										try {
											const cachedPlayers = JSON.stringify(players);
											const cachedLeaderboards = JSON.stringify(leaderboards);
											sessionStorage.setItem(playersKey, cachedPlayers);
											sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
										} catch {}
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Successfully loaded names from remote`);
										abort();
										resolve();
									} else {
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Unsuccessfully loaded names from remote`);
										abort();
										resolve();
									}
								}
							}
							await new Promise((resolve) =&gt; {
								window.addEventListener("beforeunload", () =&gt; {
									resolve();
								}, {
									once: true,
								});
							});
						});
						lock = false;
						console.log(`Released lock`);
						await new Promise((resolve) =&gt; {
							window.addEventListener("pagehide", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
						await new Promise((resolve) =&gt;{
							window.addEventListener("pageshow", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
					}
				})();
				await promise;
				if (session == null) {
					const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
					input.type = "checkbox";
					input.autocomplete = "off";
					input.disabled = true;
					input.indeterminate = true;
					progress.replaceWith(input);
					span.textContent = "Unavailable names";
					return;
				}
				const {players, leaderboards} = session;
				const hasPlayerRoot = rootTitleContent.includes(" for player");
				const hasLeaderboardRoot = rootTitleContent.includes(" for leaderboard");
				const rootTitle = {
					element: rootTitleElement,
					contentWithIds: rootTitleContent,
					contentWithNames: hasPlayerRoot ? rootTitleContent.replace(/ for player ([0-9_a-z]+)/, ($0, $1) =&gt; {
						return ` for player ${players[$1] ?? $1}`;
					}) : hasLeaderboardRoot ? rootTitleContent.replace(/ for leaderboard ((?:l_[0-9_a-z]+-)?[0-9_a-z]+(-[0-9_a-z]+\.[0-9_a-z]+)*)/, ($0, $1) =&gt; {
						return ` for leaderboard ${leaderboards[$1] ?? $1}`;
					}) : rootTitleContent,
				};
				const hasPlayerPaths = rootTitleContent.includes(" by player");
				const hasLeaderboardPaths = rootTitleContent.includes(" by leaderboard");
				const pathTitles = pathTitleElements.map((pathTitleElement, k) =&gt; {
					const pathTitleContent = pathTitleContents[k];
					const pathTitle = {
						element: pathTitleElement,
						contentWithIds: pathTitleContent,
						contentWithNames: hasPlayerPaths ? players[pathTitleContent] ?? pathTitleContent : hasLeaderboardPaths ? leaderboards[pathTitleContent] ?? pathTitleContent : pathTitleContent,
					};
					return pathTitle;
				});
				const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
				input.type = "checkbox";
				input.autocomplete = "off";
				input.addEventListener("change", () =&gt; {
					input.disabled = true;
					if (input.checked) {
						rootTitle.element.textContent = rootTitle.contentWithNames;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithNames;
						}
					} else {
						rootTitle.element.textContent = rootTitle.contentWithIds;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithIds;
						}
					}
					input.disabled = false;
				});
				progress.replaceWith(input);
				span.textContent = "Reveal names";
			}, {
				once: true,
			});
		}
	</script>
	<foreignObject x="0" y="0" width="100%" height="100%">
		<svg viewBox="0 0 2449 20" preserveAspectRatio="none" overflow="visible">
			<g transform="scale(1 -1)" transform-origin="center center" style="--count: 40;">
				<g style="--index: 0;">
					<path d="M0,3L0,3L0,0L6,0L6,0L866,0L866,1L875,1L875,2L960,2L960,3L991,3L991,4L1026,4L1026,5L1049,5L1049,6L1607,6L1607,7L1708,7L1708,8L1785,8L1785,9L1797,9L1797,10L1865,10L1865,11L1894,11L1894,12L1907,12L1907,13L2101,13L2101,14L2139,14L2139,15L2272,15L2272,16L2304,16L2304,17L2440,17L2440,18L2449,18" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.klrpy2jq</title>
					</path>
				</g>
				<g style="--index: 1;">
					<path d="M0,5L0,5L0,0L88,0L88,0L154,0L154,0L335,0L335,1L424,1L424,2L773,2L773,4L858,4L858,0L924,0L924,1L948,1L948,2L953,2L953,3L1019,3L1019,4L1047,4L1047,0L1083,0L1083,1L1188,1L1188,2L1339,2L1339,3L1507,3L1507,4L1586,4L1586,5L1809,5L1809,6L1955,6L1955,7L1989,7L1989,8L2093,8L2093,2L2372,2L2372,3L2400,3L2400,4L2449,4" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.jqzpx3gl</title>
					</path>
				</g>
				<g style="--index: 2;">
					<path d="M0,3L0,3L0,0L745,0L745,0L1274,0L1274,1L1479,1L1479,2L1542,2L1542,3L1794,3L1794,4L1986,4L1986,5L2354,5L2354,6L2449,6" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.21g82pnl</title>
					</path>
				</g>
				<g style="--index: 3;">
					<path d="M0,3L0,3L0,0L6,0L6,0L82,0L82,0L152,0L152,0L866,0L866,1L868,1L868,0L897,0L897,1L983,1L983,2L1002,2L1002,3L1003,3L1003,4L1026,4L1026,5L1061,5L1061,6L1606,6L1606,7L2127,7L2127,8L2304,8L2304,9L2358,9L2358,10L2449,10" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.21dz3e4l</title>
					</path>
				</g>
				<g style="--index: 4;">
					<path d="M0,1L1,1L1,0L763,0L763,1L765,1L765,2L951,2L951,4L981,4L981,5L1046,5L1046,6L1148,6L1148,7L1506,7L1506,8L1667,8L1667,9L2449,9" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.gq7jzvvq</title>
					</path>
				</g>
				<g style="--index: 5;">
					<path d="M0,1L1,1L1,0L153,0L153,0L754,0L754,1L949,1L949,2L977,2L977,3L1100,3L1100,4L1849,4L1849,6L2214,6L2214,7L2303,7L2303,8L2365,8L2365,9L2449,9" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.xqkjmnnl</title>
					</path>
				</g>
				<g style="--index: 6;">
					<path d="M0,2L2,2L2,0L319,0L319,1L660,1L660,2L774,2L774,3L802,3L802,4L867,4L867,5L951,5L951,6L979,6L979,7L1000,7L1000,8L1019,8L1019,9L1041,9L1041,10L1718,10L1718,11L1820,11L1820,12L1908,12L1908,13L2062,13L2062,14L2313,14L2313,15L2406,15L2406,16L2449,16" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.gq7jrxvq</title>
					</path>
				</g>
				<g style="--index: 7;">
					<path d="M0,1L2,1L2,0L82,0L82,1L83,1L83,0L758,0L758,1L766,1L766,2L864,2L864,0L949,0L949,1L953,1L953,2L955,2L955,4L960,4L960,0L979,0L979,1L1055,1L1055,2L1520,2L1520,3L1603,3L1603,4L2321,4L2321,5L2449,5" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.814y7w01</title>
					</path>
				</g>
				<g style="--index: 8;">
					<path d="M0,8L2,8L2,0L544,0L544,1L744,1L744,2L758,2L758,3L795,3L795,4L820,4L820,5L860,5L860,0L956,0L956,0L1012,0L1012,1L1019,1L1019,2L1087,2L1087,3L1795,3L1795,4L2449,4" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.xqkjmxnl</title>
					</path>
				</g>
				<g style="--index: 9;">
					<path d="M0,8L2,8L2,0L317,0L317,1L755,1L755,2L773,2L773,3L868,3L868,0L957,0L957,1L1013,1L1013,2L1015,2L1015,3L1042,3L1042,4L1502,4L1502,5L1794,5L1794,6L2003,6L2003,7L2280,7L2280,8L2302,8L2302,9L2319,9L2319,10L2320,10L2320,11L2361,11L2361,12L2398,12L2398,13L2449,13" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.81ppdgg1</title>
					</path>
				</g>
				<g style="--index: 10;">
					<path d="M0,4L4,4L4,0L8,0L8,0L76,0L76,1L81,1L81,0L82,0L82,0L906,0L906,1L1005,1L1005,2L1016,2L1016,3L1170,3L1170,4L1333,4L1333,5L1474,5L1474,6L1607,6L1607,7L2091,7L2091,8L2449,8" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.p12dx87q</title>
					</path>
				</g>
				<g style="--index: 11;">
					<path d="M0,3L4,3L4,0L741,0L741,1L743,1L743,2L747,2L747,3L761,3L761,4L852,4L852,5L866,5L866,0L928,0L928,1L948,1L948,2L973,2L973,3L1004,3L1004,4L1729,4L1729,5L2302,5L2302,6L2449,6" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.jq60ze3q</title>
					</path>
				</g>
				<g style="--index: 12;">
					<path d="M0,2L5,2L5,0L319,0L319,1L743,1L743,2L769,2L769,3L866,3L866,0L869,0L869,1L871,1L871,0L1005,0L1005,1L1007,1L1007,2L1012,2L1012,3L1059,3L1059,4L1603,4L1603,6L1866,6L1866,7L2449,7" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.9qj0x8el</title>
					</path>
				</g>
				<g style="--index: 13;">
					<path d="M0,5L5,5L5,0L771,0L771,1L866,1L866,0L948,0L948,1L955,1L955,2L1044,2L1044,0L1052,0L1052,1L1074,1L1074,2L1502,2L1502,3L1606,3L1606,4L1812,4L1812,5L2449,5" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.013856dq</title>
					</path>
				</g>
				<g style="--index: 14;">
					<path d="M0,3L7,3L7,0L914,0L914,1L955,1L955,2L988,2L988,3L990,3L990,4L1046,4L1046,5L1381,5L1381,6L1440,6L1440,7L1602,7L1602,8L1681,8L1681,9L1915,9L1915,10L2109,10L2109,11L2244,11L2244,12L2312,12L2312,13L2317,13L2317,14L2339,14L2339,15L2449,15" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.rqvpey7q</title>
					</path>
				</g>
				<g style="--index: 15;">
					<path d="M0,2L7,2L7,0L747,0L747,0L948,0L948,1L974,1L974,3L1049,3L1049,4L1520,4L1520,5L1544,5L1544,6L1692,6L1692,7L1998,7L1998,8L2148,8L2148,9L2312,9L2312,10L2449,10" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.5lermx5q</title>
					</path>
				</g>
				<g style="--index: 16;">
					<path d="M0,2L7,2L7,0L824,0L824,2L864,2L864,0L948,0L948,1L977,1L977,2L999,2L999,3L1509,3L1509,4L1535,4L1535,6L1814,6L1814,7L2307,7L2307,8L2312,8L2312,9L2339,9L2339,10L2445,10L2445,11L2449,11L2449,12L2449,12" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.81wp50oq</title>
					</path>
				</g>
				<g style="--index: 17;">
					<path d="M0,3L83,3L83,0L764,0L764,1L948,1L948,2L956,2L956,3L971,3L971,4L1046,4L1046,5L1664,5L1664,7L2449,7" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.81ppd5g1</title>
					</path>
				</g>
				<g style="--index: 18;">
					<path d="M0,1L84,1L84,0L156,0L156,0L161,0L161,0L290,0L290,0L776,0L776,1L929,1L929,2L948,2L948,3L1000,3L1000,4L1495,4L1495,5L1719,5L1719,6L2313,6L2313,7L2430,7L2430,8L2435,8L2435,9L2449,9" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.p12dx07q</title>
					</path>
				</g>
				<g style="--index: 19;">
					<path d="M0,2L84,2L84,0L754,0L754,1L812,1L812,2L866,2L866,3L924,3L924,4L949,4L949,5L951,5L951,6L955,6L955,7L956,7L956,8L958,8L958,9L1038,9L1038,10L1439,10L1439,11L1442,11L1442,12L1467,12L1467,13L1513,13L1513,14L1548,14L1548,15L1686,15L1686,16L1811,16L1811,17L2019,17L2019,18L2021,18L2021,19L2313,19L2313,20L2449,20" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.21g8ownl</title>
					</path>
				</g>
				<g style="--index: 20;">
					<path d="M0,1L84,1L84,0L920,0L920,1L948,1L948,2L979,2L979,3L980,3L980,5L1499,5L1499,6L1509,6L1509,7L1800,7L1800,8L2213,8L2213,9L2236,9L2236,10L2331,10L2331,11L2406,11L2406,12L2449,12" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.z19m8p0l</title>
					</path>
				</g>
				<g style="--index: 21;">
					<path d="M0,1L84,1L84,0L164,0L164,0L770,0L770,1L1016,1L1016,2L1213,2L1213,3L1522,3L1522,4L1523,4L1523,5L2076,5L2076,6L2449,6" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.4lxpe62q</title>
					</path>
				</g>
				<g style="--index: 22;">
					<path d="M0,0L87,0L87,0L154,0L154,0L776,0L776,1L864,1L864,2L929,2L929,3L955,3L955,4L984,4L984,5L992,5L992,6L1057,6L1057,7L1541,7L1541,8L1544,8L1544,9L2079,9L2079,10L2147,10L2147,11L2215,11L2215,12L2313,12L2313,13L2449,13" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.5lmkgmjq</title>
					</path>
				</g>
				<g style="--index: 23;">
					<path d="M0,2L87,2L87,0L789,0L789,1L948,1L948,2L974,2L974,3L1007,3L1007,4L1017,4L1017,5L1084,5L1084,6L2076,6L2076,7L2449,7" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.810zwdwq</title>
					</path>
				</g>
				<g style="--index: 24;">
					<path d="M0,2L87,2L87,0L955,0L955,1L996,1L996,2L1278,2L1278,3L2449,3" tabindex="0">
						<title>l_r9gn1qpd-xd144xzd-38dz6v1n.814y45w1</title>
					</path>
				</g>
				<g style="--index: 25;">
					<path d="M0,1L88,1L88,0L960,0L960,1L980,1L980,2L1421,2L1421,3L2064,3L2064,4L2449,4" tabindex="0">
						<title>l_r9gn1qpd-xd144xzd-38dz6v1n.z19md2jl</title>
					</path>
				</g>
				<g style="--index: 26;">
					<path d="M0,1L89,1L89,0L931,0L931,1L998,1L998,2L999,2L999,3L1083,3L1083,4L1857,4L1857,5L2449,5" tabindex="0">
						<title>l_o9xo3rp9-xd144xzd-38dz6v1n.814y45w1</title>
					</path>
				</g>
				<g style="--index: 27;">
					<path d="M0,2L149,2L149,0L151,0L151,0L1153,0L1153,2L1206,2L1206,3L1585,3L1585,4L1859,4L1859,5L1863,5L1863,6L2422,6L2422,7L2449,7" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.4qypgj4q</title>
					</path>
				</g>
				<g style="--index: 28;">
					<path d="M0,1L275,1L275,0L365,0L365,1L457,1L457,2L1215,2L1215,3L1217,3L1217,4L2449,4" tabindex="0">
						<title>xd17x94d-9l71pv4l.81wrgm5l</title>
					</path>
				</g>
				<g style="--index: 29;">
					<path d="M0,0L475,0L475,0L772,0L772,1L860,1L860,0L995,0L995,1L1416,1L1416,2L1831,2L1831,3L2449,3" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.klrp6ejq</title>
					</path>
				</g>
				<g style="--index: 30;">
					<path d="M0,0L475,0L475,0L772,0L772,1L962,1L962,2L967,2L967,3L1056,3L1056,4L1416,4L1416,5L1528,5L1528,6L1826,6L1826,7L2449,7" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.21dzoj3l</title>
					</path>
				</g>
				<g style="--index: 31;">
					<path d="M0,0L475,0L475,0L755,0L755,1L832,1L832,2L946,2L946,3L1047,3L1047,4L1509,4L1509,5L1516,5L1516,6L1543,6L1543,7L1841,7L1841,8L2325,8L2325,9L2352,9L2352,10L2392,10L2392,11L2449,11" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.jqzpyr4l</title>
					</path>
				</g>
				<g style="--index: 32;">
					<path d="M0,0L479,0L479,0L776,0L776,1L929,1L929,2L948,2L948,3L1047,3L1047,4L1065,4L1065,5L2108,5L2108,6L2222,6L2222,7L2449,7" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.21g8owxl</title>
					</path>
				</g>
				<g style="--index: 33;">
					<path d="M0,0L747,0L747,0L1005,0L1005,1L1029,1L1029,3L1081,3L1081,4L1191,4L1191,5L1211,5L1211,6L1241,6L1241,7L1474,7L1474,8L1490,8L1490,9L1540,9L1540,10L1808,10L1808,11L2449,11" tabindex="0">
						<title>9kv6l5e2-ql6rezjl.jq6d86v1</title>
					</path>
				</g>
				<g style="--index: 34;">
					<path d="M0,2L862,2L862,0L955,0L955,1L995,1L995,2L1017,2L1017,3L1628,3L1628,4L2162,4L2162,5L2322,5L2322,6L2449,6" tabindex="0">
						<title>l_r9gn1qpd-9kv66g32-onv7r45n.9qj08g7l</title>
					</path>
				</g>
				<g style="--index: 35;">
					<path d="M0,3L864,3L864,0L865,0L865,1L867,1L867,0L898,0L898,1L926,1L926,2L929,2L929,3L959,3L959,0L1004,0L1004,1L1042,1L1042,2L1644,2L1644,3L1657,3L1657,4L2449,4" tabindex="0">
						<title>xd17x94d-9l71pv4l.zqo20y2l</title>
					</path>
				</g>
				<g style="--index: 36;">
					<path d="M0,7L2277,7L2277,0L2449,0" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.lx5xe821</title>
					</path>
				</g>
				<g style="--index: 37;">
					<path d="M0,6L2277,6L2277,0L2449,0" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.qvv4er7q</title>
					</path>
				</g>
				<g style="--index: 38;">
					<path d="M0,5L2277,5L2277,0L2449,0" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.q5vog5ml</title>
					</path>
				</g>
				<g style="--index: 39;">
					<path d="M0,4L2277,4L2277,0L2449,0" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.le2km45l</title>
					</path>
				</g>
			</g>
		</svg>
	</foreignObject>
</svg>
