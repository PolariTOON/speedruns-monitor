<svg xmlns="http://www.w3.org/2000/svg" lang="en">
	<title>Rank by leaderboard for player x356nrej</title>
	<metadata>
		<meta xmlns="http://www.w3.org/1999/xhtml" charset="utf-8" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="viewport" content="width=device-width" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="color-scheme" content="dark light" />
	</metadata>
	<style>
		*,
		::before,
		::after {
			box-sizing: border-box;
		}
		:root {
			background: var(--canvas-background);
			color: var(--canvas-foreground);
			fill: var(--canvas-background);
			stroke: var(--canvas-foreground);
			stroke-linejoin: round;
			stroke-linecap: round;
		}
		foreignObject {
			pointer-events: none;
		}
		foreignObject::before,
		foreignObject::after {
			content: "";
			position: absolute;
			z-index: 1;
			left: 20px;
			bottom: 20px;
			pointer-events: auto;
		}
		foreignObject::before {
			width: calc(100% - 40px);
			height: calc(20px + var(--date-size) * 1px);
		}
		foreignObject::after {
			width: calc(20px + var(--value-size) * 1px);
			height: calc(100% - 40px);
		}
		foreignObject &gt; div {
			position: absolute;
			z-index: 4;
			right: 0;
			top: 0;
			margin: 20px;
			border: 1px solid var(--canvas-foreground);
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			transition: opacity 1s;
			pointer-events: auto;
		}
		foreignObject:is(:hover, :focus-within) &gt; div:not(:hover, :focus-within) {
			opacity: 0;
			pointer-events: none;
		}
		foreignObject &gt; div &gt; p {
			margin: 0;
		}
		label {
			display: table;
			border-collapse: separate;
			border-spacing: 10px;
			direction: rtl;
		}
		progress,
		input[type="checkbox"] {
			display: table-cell;
			width: 16px;
			height: 16px;
			margin: 2px;
			accent-color: var(--canvas-foreground);
			vertical-align: top;
			direction: ltr;
		}
		progress + span,
		input[type="checkbox"] + span {
			display: table-cell;
			vertical-align: top;
			direction: ltr;
		}
		input[type="checkbox"]:not(:disabled):is(:hover, :focus-within) + span {
			text-decoration: underline;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			position: absolute;
			z-index: 2;
			margin: 0;
			padding: 10px;
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			font-weight: bold;
			pointer-events: auto;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg + svg {
			border-top: 1px solid #0000;
			border-bottom: 1px solid var(--canvas-foreground);
		}
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px dashed #0000;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg {
			width: calc(20px + var(--date-size) * 1px);
			height: 42px;
			bottom: 20px;
		}
		foreignObject &gt; svg:first-of-type {
			left: calc(40px + var(--value-size) * 1px);
			transform: rotate(90deg) translate(-100%, 0);
			transform-origin: left bottom;
		}
		foreignObject &gt; svg:first-of-type + svg {
			right: 20px;
			transform: rotate(90deg) translate(0, 100%);
			transform-origin: right bottom;
		}
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			width: calc(20px + var(--value-size) * 1px);
			height: 42px;
			left: 20px;
		}
		foreignObject &gt; svg:first-of-type + svg + svg {
			bottom: calc(40px + var(--date-size) * 1px);
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			top: 20px;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text {
			fill: var(--canvas-foreground);
			stroke: none;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text {
			cursor: vertical-text;
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg + svg {
			position: relative;
			z-index: 3;
			width: calc(100% - 60px - var(--value-size) * 1px);
			height: calc(100% - 60px - var(--date-size) * 1px);
			margin: 20px 20px calc(40px + var(--date-size) * 1px) calc(40px + var(--value-size) * 1px);
			border-left: 1px solid var(--canvas-foreground);
			border-right: 1px dashed var(--canvas-foreground);
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px solid var(--canvas-foreground);
			background: var(--canvas-background);
			pointer-events: auto;
		}
		g &gt; rect {
			vector-effect: non-scaling-stroke;
			fill: var(--highlighted);
			stroke: none;
		}
		g &gt; rect[tabindex] {
			fill: var(--tier, #0000);
			cursor: help;
		}
		g &gt; rect[tabindex][data-tier="diamond"] {
			--tier: var(--diamond);
		}
		g &gt; rect[tabindex][data-tier="gold"] {
			--tier: var(--gold);
		}
		g &gt; rect[tabindex][data-tier="silver"] {
			--tier: var(--silver);
		}
		g &gt; rect[tabindex][data-tier="bronze"] {
			--tier: var(--bronze);
		}
		g &gt; path[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: hsl(calc(var(--index) / var(--count) * 360), 50%, 50%);
			cursor: help;
		}
		g:is(:hover, :focus-within) &gt; path[tabindex] {
			stroke: var(--canvas-foreground);
		}
		g &gt; path[tabindex]:is(:hover, :focus-within) {
			outline: 0;
		}
		g &gt; path[tabindex]:first-of-type {
			stroke-width: 2;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) {
			stroke-width: 4;
		}
		g &gt; path[tabindex]:first-of-type:not(:last-of-type) {
			stroke-dasharray: 4 8;
		}
		g &gt; path[tabindex]:first-of-type + rect {
			fill: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect {
			fill: var(--highlighted);
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] {
			stroke-width: 8;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) {
			stroke-width: 16;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line + line {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			stroke-width: 2;
			stroke-dasharray: 4 8;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line + line {
			stroke: var(--faded);
		}
		@media (prefers-color-scheme: dark) {
			:root {
				--canvas-background: #000;
				--canvas-foreground: #ccc;
				--diamond: #0363;
				--gold: #6303;
				--silver: #3633;
				--bronze: #6363;
				--highlighted: #6663;
				--faded: #9993;
			}
		}
		@media (prefers-color-scheme: light) {
			:root {
				--canvas-background: #fff;
				--canvas-foreground: #333;
				--diamond: #9cf3;
				--gold: #fc93;
				--silver: #9c93;
				--bronze: #c9c3;
				--highlighted: #9993;
				--faded: #6663;
			}
		}
	</style>
	<script>
		"use strict";
		{
			const script = document.currentScript;
			const documentUrl = location.href;
			const scope = new URL("../../", documentUrl).pathname;
			const playersKey = `${scope}#players`;
			const leaderboardsKey = `${scope}#leaderboards`;
			const sessionKey = `${scope}#session`;
			const lockKey = `${scope}#lock`;
			async function importDataScript(dataScriptUrl, signal) {
				signal.throwIfAborted();
				if (documentUrl.protocol !== "file:") {
					const response = await fetch(dataScriptUrl, {
						signal,
					});
					if (!response.ok) {
						throw new Error(response.statusText);
					}
					const data = await response.json();
					return data;
				}
				return await new Promise((resolve, reject) =&gt; {
					const name = `callback${Math.random() * 2 ** 53}`;
					let called = false;
					let data = null;
					function callback(value) {
						if (!called) {
							called = true;
							data = value;
						}
					}
					window[name] = callback;
					const dataScript = document.createElementNS("http://www.w3.org/2000/svg", "script");
					dataScript.href = `${dataScriptUrl}&amp;callback=${name}`;
					function handleAbort(event) {
						delete window[name];
						dataScript.removeEventListener("error", handleError);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const reason = signal.reason;
						reject(reason);
					}
					function handleError(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const error = event.error;
						reject(error);
					}
					function handleLoad(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("error", handleError);
						dataScript.remove();
						resolve(data);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					dataScript.addEventListener("error", handleError, {
						once: true,
					});
					dataScript.addEventListener("load", handleLoad, {
						once: true,
					});
					script.after(dataScript);
				});
			}
			async function waitForTimeout(delay, signal) {
				signal.throwIfAborted();
				return await new Promise((resolve, reject) =&gt; {
					let timeout = null;
					function handleAbort() {
						clearTimeout(timeout);
						const reason = signal.reason;
						reject(reason);
					}
					function handleTimeout() {
						signal.removeEventListener("abort", handleAbort);
						resolve(delay);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					timeout = setTimeout(handleTimeout, delay);
				});
			}
			window.addEventListener("pageshow", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully restored page from cache`);
				} else {
					console.log(`Unsuccessfully restored page from cache`);
				}
			});
			window.addEventListener("pagehide", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully saved page to cache`);
				} else {
					console.log(`Unsuccessfully saved page to cache`);
				}
			});
			window.addEventListener("pageshow", async (event) =&gt; {
				const rootTitleElement = document.querySelector("title");
				const rootTitleContent = rootTitleElement.textContent;
				const pathTitleElements = Array.from(document.querySelectorAll("g &gt; path[tabindex]:first-of-type &gt; title"));
				const pathTitleContents = pathTitleElements.map((pathTitleElement) =&gt; {
					const pathTitleContent = pathTitleElement.textContent;
					return pathTitleContent;
				});
				const foreignObject = document.querySelector("foreignObject");
				const div = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
				div.dir = "ltr";
				const p = document.createElementNS("http://www.w3.org/1999/xhtml", "p");
				const label = document.createElementNS("http://www.w3.org/1999/xhtml", "label");
				const progress = document.createElementNS("http://www.w3.org/1999/xhtml", "progress");
				label.append(progress);
				const span = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
				span.textContent = "Loading names";
				label.append(span);
				p.append(label);
				div.append(p);
				foreignObject.prepend(div);
				let lock = false;
				let session = null;
				const broadcastChannel = new BroadcastChannel(sessionKey);
				const abortController = new AbortController();
				const signal = abortController.signal;
				const abort = abortController.abort.bind(abortController);
				const {promise, resolve} = Promise.withResolvers();
				broadcastChannel.addEventListener("message", (event) =&gt; {
					const data = event.data;
					const type = data.type;
					switch (type) {
						case "request": {
							if (lock &amp;&amp; signal.aborted) {
								broadcastChannel.postMessage({
									type: "response",
									session,
								});
							}
							break;
						}
						case "response": {
							if (!signal.aborted) {
								session = data.session;
								if (session != null) {
									const {players, leaderboards} = session;
									try {
										const cachedPlayers = JSON.stringify(players);
										const cachedLeaderboards = JSON.stringify(leaderboards);
										sessionStorage.setItem(playersKey, cachedPlayers);
										sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
									} catch {}
									console.log(`Successfully loaded names from peer`);
									abort();
									resolve();
								} else {
									console.log(`Unsuccessfully loaded names from peer`);
									abort();
									resolve();
								}
							}
							break;
						}
					}
				});
				try {
					const cachedPlayers = sessionStorage.getItem(playersKey);
					const cachedLeaderboards = sessionStorage.getItem(leaderboardsKey);
					if (cachedPlayers == null || cachedLeaderboards == null) {
						throw new Error();
					}
					const players = JSON.parse(cachedPlayers);
					const leaderboards = JSON.parse(cachedLeaderboards);
					session = {players, leaderboards};
				} catch {}
				if (session != null) {
					broadcastChannel.postMessage({
						type: "response",
						session,
					});
					console.log(`Successfully loaded names from local`);
					abort();
					resolve();
				} else {
					broadcastChannel.postMessage({
						type: "request",
					});
					console.log(`Unsuccessfully loaded names from local`);
				}
				(async () =&gt; {
					for (;;) {
						await navigator.locks.request(lockKey, async () =&gt; {
							lock = true;
							console.log(`Acquired lock`);
							if (!signal.aborted) {
								try {
									const players = Object.create(null);
									const leaderboards = Object.create(null);
									const games = ["9d3rrxyd", "w6jl2ned"];
									for (const gameId of games) {
										const {data} = await importDataScript(`https://www.speedrun.com/api/v1/games/${gameId}?embed=categories,levels,variables`, signal);
										const versions = data.variables.data.find((variable) =&gt; {
											return variable.name === "Version";
										});
										const levels = Object.fromEntries(data.levels.data.map((level) =&gt; {
											return [level.id, level];
										}));
										const categories = Object.fromEntries(data.categories.data.map((category) =&gt; {
											return [category.id, category];
										}));
										const variables = Object.fromEntries(data.variables.data.map((variable) =&gt; {
											return [variable.id, variable];
										}));
										console.log(`Got game`);
										await waitForTimeout(800, signal);
										const slice = 200;
										for (let offset = 0;; offset += slice) {
											const {data, pagination} = await importDataScript(`https://www.speedrun.com/api/v1/runs?game=${gameId}&amp;orderby=date&amp;direction=asc&amp;embed=players&amp;offset=${offset}&amp;max=${slice}`, signal);
											const {size} = pagination;
											if (size === 0) {
												break;
											}
											for (const run of data) {
												const status = run.status.status;
												if (status == null || status === "new") {
													continue;
												}
												const player = run.players.data[0].rel === "user" ? run.players.data[0].id : "814p2558";
												const playerName = run.players.data[0].rel === "user" ? run.players.data[0].names.international : "anonymous";
												players[player] ??= playerName;
												const level = run.level;
												const category = run.category;
												const values = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return `-${variable}.${value}`;
												});
												const leaderboard = `${level != null ? `l_${level}-` : ""}${category}${values.join("")}`;
												const levelName = run.level != null ? levels[run.level]?.name ?? null : null;
												const categoryName = categories[run.category]?.name ?? null;
												const valueNames = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return variables[variable]?.values.values[value]?.label ?? null;
												}).filter((valueName) =&gt; {
													return valueName != null;
												});
												const leaderboardName = `${levelName != null ? `${levelName}: ` : ""}${categoryName ?? ""}${values.length !== 0 ? ` - ${valueNames.join(", ")}` : ""}`;
												leaderboards[leaderboard] ??= leaderboardName;
											}
											console.log(`Got runs ${offset}-${offset + size - 1}`);
											await waitForTimeout(800, signal);
										}
									}
									session = {players, leaderboards};
								} catch {}
								if (!signal.aborted) {
									if (session != null) {
										const {players, leaderboards} = session;
										try {
											const cachedPlayers = JSON.stringify(players);
											const cachedLeaderboards = JSON.stringify(leaderboards);
											sessionStorage.setItem(playersKey, cachedPlayers);
											sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
										} catch {}
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Successfully loaded names from remote`);
										abort();
										resolve();
									} else {
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Unsuccessfully loaded names from remote`);
										abort();
										resolve();
									}
								}
							}
							await new Promise((resolve) =&gt; {
								window.addEventListener("beforeunload", () =&gt; {
									resolve();
								}, {
									once: true,
								});
							});
						});
						lock = false;
						console.log(`Released lock`);
						await new Promise((resolve) =&gt; {
							window.addEventListener("pagehide", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
						await new Promise((resolve) =&gt;{
							window.addEventListener("pageshow", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
					}
				})();
				await promise;
				if (session == null) {
					const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
					input.type = "checkbox";
					input.autocomplete = "off";
					input.disabled = true;
					input.indeterminate = true;
					progress.replaceWith(input);
					span.textContent = "Unavailable names";
					return;
				}
				const {players, leaderboards} = session;
				const hasPlayerRoot = rootTitleContent.includes(" for player");
				const hasLeaderboardRoot = rootTitleContent.includes(" for leaderboard");
				const rootTitle = {
					element: rootTitleElement,
					contentWithIds: rootTitleContent,
					contentWithNames: hasPlayerRoot ? rootTitleContent.replace(/ for player ([0-9_a-z]+)/, ($0, $1) =&gt; {
						return ` for player ${players[$1] ?? $1}`;
					}) : hasLeaderboardRoot ? rootTitleContent.replace(/ for leaderboard ((?:l_[0-9_a-z]+-)?[0-9_a-z]+(-[0-9_a-z]+\.[0-9_a-z]+)*)/, ($0, $1) =&gt; {
						return ` for leaderboard ${leaderboards[$1] ?? $1}`;
					}) : rootTitleContent,
				};
				const hasPlayerPaths = rootTitleContent.includes(" by player");
				const hasLeaderboardPaths = rootTitleContent.includes(" by leaderboard");
				const pathTitles = pathTitleElements.map((pathTitleElement, k) =&gt; {
					const pathTitleContent = pathTitleContents[k];
					const pathTitle = {
						element: pathTitleElement,
						contentWithIds: pathTitleContent,
						contentWithNames: hasPlayerPaths ? players[pathTitleContent] ?? pathTitleContent : hasLeaderboardPaths ? leaderboards[pathTitleContent] ?? pathTitleContent : pathTitleContent,
					};
					return pathTitle;
				});
				const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
				input.type = "checkbox";
				input.autocomplete = "off";
				input.addEventListener("change", () =&gt; {
					input.disabled = true;
					if (input.checked) {
						rootTitle.element.textContent = rootTitle.contentWithNames;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithNames;
						}
					} else {
						rootTitle.element.textContent = rootTitle.contentWithIds;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithIds;
						}
					}
					input.disabled = false;
				});
				progress.replaceWith(input);
				span.textContent = "Reveal names";
			}, {
				once: true,
			});
		}
	</script>
	<script>
		"use strict";
		{
			document.addEventListener("DOMContentLoaded", (event) =&gt; {
				const minDateText = document.querySelector("foreignObject &gt; svg:first-of-type &gt; text");
				const maxDateText = document.querySelector("foreignObject &gt; svg:first-of-type + svg &gt; text");
				const startX = Math.round(Date.parse(minDateText.textContent) / 86400000);
				function xToDate(x) {
					const datetime = new Date((startX + x) * 86400000);
					const year = `${datetime.getUTCFullYear()}`.padStart(4, "0");
					const month = `${datetime.getUTCMonth() + 1}`.padStart(2, "0");
					const day = `${datetime.getUTCDate()}`.padStart(2, "0");
					const date = `${year}-${month}-${day}`;
					const size = date.length * 10;
					return {date, size};
				}
				function setMinDate(x) {
					const {date, size} = xToDate(Math.floor(x));
					minDateText.textLength.baseVal.value = size;
					minDateText.textContent = date;
				}
				function setMaxDate(x) {
					const {date, size} = xToDate(Math.ceil(x));
					maxDateText.textLength.baseVal.value = size;
					maxDateText.textContent = date;
				}
				const minValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg &gt; text");
				const maxValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text");
				const timed = minValueText.textContent.includes(":");
				function yToValue(y) {
					if (timed) {
						const minutes = `${(y - y % 6000) / 6000}`.padStart(2, "0");
						const seconds = `${(y - y % 100) / 100 % 60}`.padStart(2, "0");
						const centiseconds = `${y % 100}`.padStart(2, "0");
						const value = `${minutes}:${seconds}.${centiseconds}`;
						const size = value.length * 10;
						return {value, size};
					} else {
						const value = `${y}`;
						const size = value.length * 10;
						return {value, size};
					}
				}
				function setMinValue(y) {
					const {value, size} = yToValue(Math.floor(y));
					minValueText.textLength.baseVal.value = size;
					minValueText.textContent = value;
				}
				function setMaxValue(y) {
					const {value, size} = yToValue(Math.ceil(y));
					maxValueText.textLength.baseVal.value = size;
					maxValueText.textContent = value;
				}
				const svg = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg + svg");
				svg.tabIndex = -1;
				svg.style.setProperty("outline", "0");
				if (CSS.supports("overflow-clip-margin", "8px")) {
					svg.style.setProperty("overflow", "clip");
					svg.style.setProperty("overflow-clip-margin", "8px");
				}
				svg.style.setProperty("touch-action", "none");
				const {x: baseX, y: baseY, width: baseWidth, height: baseHeight} = svg.viewBox.baseVal;
				let pointerCount = 0;
				const pointers = Object.create(null);
				const xPointerIds = [];
				const yPointerIds = [];
				let x = null;
				let y = null;
				let width = null;
				let height = null;
				svg.addEventListener("pointerdown", (event) =&gt; {
					const {pointerId} = event;
					if (pointerId in pointers) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.setPointerCapture(pointerId);
					++pointerCount;
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId] = {
						offsetX,
						offsetY,
					};
					xPointerIds.splice(xPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetX &lt;= offsetX;
					}) + 1, 0, pointerId);
					yPointerIds.splice(yPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetY &lt;= offsetY;
					}) + 1, 0, pointerId);
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					width = Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth);
					height = Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight);
					x = Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX);
					y = Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY);
				});
				svg.addEventListener("pointerup", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.releasePointerCapture(pointerId);
					--pointerCount;
					delete pointers[pointerId];
					xPointerIds.splice(xPointerIds.lastIndexOf(pointerId), 1);
					yPointerIds.splice(yPointerIds.lastIndexOf(pointerId), 1);
					const minOffsetX = pointerCount !== 0 ? pointers[xPointerIds[0]].offsetX : null;
					const minOffsetY = pointerCount !== 0 ? pointers[yPointerIds[0]].offsetY : null;
					const maxClientWidth = pointerCount !== 0 ? pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX : null;
					const maxClientHeight = pointerCount !== 0 ? pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY : null;
					width = pointerCount !== 0 ? Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth) : null;
					height = pointerCount !== 0 ? Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight) : null;
					x = pointerCount !== 0 ? Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX) : null;
					y = pointerCount !== 0 ? Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY) : null;
				});
				svg.addEventListener("pointermove", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					event.preventDefault();
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId].offsetX = offsetX;
					pointers[pointerId].offsetY = offsetY;
					const oldXIndex = xPointerIds.lastIndexOf(pointerId);
					let newXIndex = oldXIndex;
					while (newXIndex &gt; 0 &amp;&amp; pointers[xPointerIds[newXIndex - 1]].offsetX &gt; offsetX) {
						--newXIndex;
					}
					xPointerIds.copyWithin(newXIndex + 1, newXIndex, oldXIndex);
					xPointerIds[newXIndex] = pointerId;
					while (newXIndex &lt; pointerCount - 1 &amp;&amp; pointers[xPointerIds[newXIndex + 1]].offsetX &lt; offsetX) {
						++newXIndex;
					}
					xPointerIds.copyWithin(oldXIndex, oldXIndex + 1, newXIndex + 1);
					xPointerIds[newXIndex] = pointerId;
					const oldYIndex = yPointerIds.lastIndexOf(pointerId);
					let newYIndex = oldYIndex;
					while (newYIndex &gt; 0 &amp;&amp; pointers[yPointerIds[newYIndex - 1]].offsetY &gt; offsetY) {
						--newYIndex;
					}
					yPointerIds.copyWithin(newYIndex + 1, newYIndex, oldYIndex);
					yPointerIds[newYIndex] = pointerId;
					while (newYIndex &lt; pointerCount - 1 &amp;&amp; pointers[yPointerIds[newYIndex + 1]].offsetY &lt; offsetY) {
						++newYIndex;
					}
					yPointerIds.copyWithin(oldYIndex, oldYIndex + 1, newYIndex + 1);
					yPointerIds[newYIndex] = pointerId;
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					animWidth = width === 0 ? animWidth : maxClientWidth === 0 ? baseWidth : Math.min(svg.clientWidth / maxClientWidth * width, baseWidth);
					animHeight = height === 0 ? animHeight : maxClientHeight === 0 ? baseHeight : Math.min(svg.clientHeight / maxClientHeight * height, baseHeight);
					animX = Math.max(Math.min(x - minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(y - minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
				const zoomIntensity = 1.25;
				svg.addEventListener("wheel", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					if (!ctrlKey) {
						const vectorX = (shiftKey ? event.deltaY : event.deltaX) / svg.clientWidth * animWidth;
						const vectorY = (shiftKey ? 0 : event.deltaY) / svg.clientHeight * animHeight;
						animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
						animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
						svg.viewBox.baseVal.x = animX;
						svg.viewBox.baseVal.y = animY;
						setMinDate(animX);
						setMaxDate(animX + animWidth);
						setMinValue(baseY * 2 + baseHeight - animHeight - animY);
						setMaxValue(baseY * 2 + baseHeight - animY);
						return;
					}
					const ratioX = zoomIntensity ** Math.sign(shiftKey ? event.deltaY : event.deltaX);
					const ratioY = zoomIntensity ** Math.sign(shiftKey ? 0 : event.deltaY);
					const positionX = Math.max(0, Math.min(event.offsetX / svg.clientWidth, 1)) * animWidth;
					const positionY = Math.max(0, Math.min(event.offsetY / svg.clientHeight, 1)) * animHeight;
					animWidth = Math.min(animWidth * ratioX, baseWidth);
					animHeight = Math.min(animHeight * ratioY, baseHeight);
					animX = Math.max(Math.min(animX + positionX * (1 - ratioX), baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(animY + positionY * (1 - ratioY), baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				}, {
					passive: false,
				});
				svg.addEventListener("keydown", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					switch (event.code) {
						case "Space": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "Equal":
						case "NumpadAdd":
						case "Minus":
						case "NumpadSubtract": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.code === "Minus" || event.code === "NumpadSubtract" ? zoomIntensity : 1 / zoomIntensity;
							if (!shiftKey) {
								animHeight = Math.min(animHeight * ratio, baseHeight);
								animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "Digit0":
						case "Numpad0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							if (!shiftKey) {
								animY = baseY;
								animHeight = baseHeight;
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animX = baseX;
							animWidth = baseWidth;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
					}
					switch (event.key) {
						case "ArrowRight": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = 50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowLeft": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = -50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowDown": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = 50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "End": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY + baseHeight - animHeight;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "ArrowUp": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = -50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "Home": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "PageDown":
						case "PageUp":
						case " ": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = event.key === "PageUp" || event.key === " " &amp;&amp; shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "+":
						case "-": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.key === "-" ? 1 / zoomIntensity : zoomIntensity;
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animHeight = Math.min(animHeight * ratio, baseHeight);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animX = baseX;
							animY = baseY;
							animWidth = baseWidth;
							animHeight = baseHeight;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
					}
				});
				svg.addEventListener("focusin", (event) =&gt; {
					if (!event.target.matches(":focus-visible")) {
						return;
					}
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					let {x, y, width, height} = event.target.getBBox();
					width = Math.round(width);
					height = Math.round(height);
					x = Math.round(x);
					y = baseY * 2 + baseHeight - height - Math.round(y);
					if (x + width &lt; animX) {
						animX = x;
						if (width &gt; animWidth) {
							animX += (width - animWidth) / 2;
						}
					} else if (x &gt; animX + animWidth) {
						animX = x + width - animWidth;
						if (width &gt; animWidth) {
							animX -= (width - animWidth) / 2;
						}
					}
					if (y + height &lt; animY) {
						animY = y;
						if (height &gt; animHeight) {
							animY += (height - animHeight) / 2;
						}
					} else if (y &gt; animY + animHeight) {
						animY = y + height - animHeight;
						if (height &gt; animHeight) {
							animY -= (height - animHeight) / 2;
						}
					}
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
			}, {
				once: true,
			});
		}
	</script>
	<foreignObject x="0" y="0" width="100%" height="100%" style="--date-size: 100; --value-size: 20;">
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2020-04-27</text>
		</svg>
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2025-08-31</text>
		</svg>
		<svg viewBox="0 0 20 20">
			<text x="10" y="10" dx="0" dy="2" textLength="10" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">0</text>
		</svg>
		<svg viewBox="0 0 20 20">
			<text x="10" y="10" dx="0" dy="2" textLength="20" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">44</text>
		</svg>
		<svg viewBox="0 0 1952 44" preserveAspectRatio="none" overflow="visible">
			<g transform="translate(0 44) scale(1 -1)" style="--count: 99;">
				<g>
					<rect x="0" y="0" width="1952" height="44"/>
				</g>
				<g style="--index: 0;">
					<path d="M0,6L0,6L0,0L30,0L30,0L125,0L125,1L137,1L137,2L187,2L187,3L207,3L207,4L232,4L232,5L263,5L263,6L988,6L988,7L1333,7L1333,8L1561,8L1561,9L1616,9L1616,10L1704,10L1704,11L1757,11L1757,12L1764,12L1764,13L1779,13L1779,14L1798,14L1798,16L1882,16L1882,10L1885,10L1885,11L1899,11L1899,12L1910,12L1910,13L1914,13L1914,14L1917,14L1917,15L1930,15L1930,16L1952,16" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.jq60ze3q</title>
					</path>
				</g>
				<g style="--index: 1;">
					<path d="M0,2L3,2L3,1L48,1L48,1L50,1L50,0L54,0L54,1L123,1L123,2L124,2L124,0L126,0L126,1L157,1L157,2L185,2L185,3L188,3L188,2L218,2L218,3L220,3L220,3L247,3L247,4L256,4L256,5L269,5L269,6L430,6L430,3L432,3L432,3L903,3L903,4L916,4L916,5L1918,5L1918,6L1952,6" tabindex="0">
						<title>xd17x94d-9l71pv4l.zqo20y2l</title>
					</path>
				</g>
				<g style="--index: 2;">
					<path d="M0,2L10,2L10,1L31,1L31,0L221,0L221,1L226,1L226,2L315,2L315,3L675,3L675,4L787,4L787,5L1085,5L1085,6L1616,6L1616,7L1815,7L1815,8L1884,8L1884,9L1889,9L1889,5L1900,5L1900,6L1937,6L1937,7L1952,7" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.21dzoj3l</title>
					</path>
				</g>
				<g style="--index: 3;">
					<path d="M0,3L13,3L13,0L175,0L175,0L236,0L236,1L251,1L251,2L359,2L359,3L1108,3L1108,5L1616,5L1616,6L1794,6L1794,7L1807,7L1807,8L1811,8L1811,9L1868,9L1868,10L1888,10L1888,4L1904,4L1904,5L1922,5L1922,6L1950,6L1950,7L1952,7" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.xqkjmnnl</title>
					</path>
				</g>
				<g style="--index: 4;">
					<path d="M0,4L13,4L13,0L134,0L134,0L183,0L183,1L215,1L215,3L218,3L218,4L225,4L225,5L240,5L240,6L726,6L726,7L772,7L772,8L807,8L807,9L1070,9L1070,10L1278,10L1278,11L1280,11L1280,12L1572,12L1572,13L1810,13L1810,14L1952,14" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.21g8ownl</title>
					</path>
				</g>
				<g style="--index: 5;">
					<path d="M0,2L14,2L14,0L91,0L91,1L205,1L205,2L306,2L306,3L768,3L768,4L775,4L775,5L802,5L802,6L1100,6L1100,7L1584,7L1584,8L1611,8L1611,9L1616,9L1616,10L1651,10L1651,11L1786,11L1786,12L1832,12L1832,13L1889,13L1889,10L1901,10L1901,11L1912,11L1912,12L1913,12L1913,13L1937,13L1937,14L1952,14" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.jqzpyr4l</title>
					</path>
				</g>
				<g style="--index: 6;">
					<path d="M0,13L14,13L14,0L31,0L31,0L32,0L32,1L127,1L127,2L216,2L216,3L268,3L268,4L272,4L272,5L301,5L301,6L761,6L761,7L1053,7L1053,8L1262,8L1262,9L1539,9L1539,10L1561,10L1561,11L1578,11L1578,12L1579,12L1579,13L1620,13L1620,14L1657,14L1657,15L1787,15L1787,16L1798,16L1798,17L1832,17L1832,18L1881,18L1881,10L1944,10L1944,11L1952,11" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.81ppdgg1</title>
					</path>
				</g>
				<g style="--index: 7;">
					<path d="M0,2L15,2L15,0L197,0L197,1L210,1L210,2L257,2L257,3L346,3L346,4L1068,4L1068,5L1317,5L1317,6L1616,6L1616,7L1801,7L1801,8L1887,8L1887,9L1889,9L1889,7L1898,7L1898,8L1900,8L1900,9L1904,9L1904,10L1912,10L1912,12L1913,12L1913,13L1919,13L1919,14L1921,14L1921,15L1925,15L1925,16L1933,16L1933,17L1934,17L1934,18L1952,18L1952,19L1952,19" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.jqzpyrgl</title>
					</path>
				</g>
				<g style="--index: 8;">
					<path d="M0,1L15,1L15,0L193,0L193,1L207,1L207,2L208,2L208,3L248,3L248,4L315,4L315,5L792,5L792,6L1074,6L1074,7L1471,7L1471,8L1575,8L1575,9L1616,9L1616,10L1773,10L1773,11L1831,11L1831,12L1889,12L1889,5L1890,5L1890,7L1952,7" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.5q86rxr1</title>
					</path>
				</g>
				<g style="--index: 9;">
					<path d="M0,4L17,4L17,0L25,0L25,1L123,1L123,2L208,2L208,3L212,3L212,4L214,4L214,0L219,0L219,1L233,1L233,2L239,2L239,3L314,3L314,4L779,4L779,5L862,5L862,6L1562,6L1562,7L1580,7L1580,8L1788,8L1788,9L1801,9L1801,10L1802,10L1802,11L1808,11L1808,13L1827,13L1827,14L1832,14L1832,15L1835,15L1835,16L1873,16L1873,17L1888,17L1888,12L1896,12L1896,13L1907,13L1907,14L1916,14L1916,15L1918,15L1918,16L1943,16L1943,17L1952,17" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.814y7w01</title>
					</path>
				</g>
				<g style="--index: 10;">
					<path d="M0,13L17,13L17,0L119,0L119,1L271,1L271,2L278,2L278,3L346,3L346,4L1054,4L1054,5L1380,5L1380,6L1513,6L1513,7L1774,7L1774,8L1787,8L1787,9L1808,9L1808,10L1818,10L1818,11L1875,11L1875,12L1881,12L1881,12L1893,12L1893,13L1910,13L1910,14L1913,14L1913,16L1932,16L1932,17L1935,17L1935,18L1952,18" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.xqkjmxnl</title>
					</path>
				</g>
				<g style="--index: 11;">
					<path d="M0,9L22,9L22,1L125,1L125,2L196,2L196,2L218,2L218,3L236,3L236,4L242,4L242,5L261,5L261,2L262,2L262,3L285,3L285,4L320,4L320,5L865,5L865,6L1386,6L1386,7L1563,7L1563,8L1621,8L1621,9L1802,9L1802,10L1861,10L1861,11L1881,11L1881,6L1886,6L1886,7L1894,7L1894,8L1921,8L1921,9L1943,9L1943,10L1946,10L1946,11L1952,11" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.21dz3e4l</title>
					</path>
				</g>
				<g style="--index: 12;">
					<path d="M0,5L23,5L23,0L215,0L215,1L305,1L305,2L923,2L923,4L1612,4L1612,5L1622,5L1622,6L1710,6L1710,7L1712,7L1712,8L1773,8L1773,9L1783,9L1783,10L1888,10L1888,3L1894,3L1894,4L1895,4L1895,5L1904,5L1904,6L1905,6L1905,7L1910,7L1910,8L1914,8L1914,9L1915,9L1915,10L1916,10L1916,11L1918,11L1918,12L1952,12" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.81ppd5g1</title>
					</path>
				</g>
				<g style="--index: 13;">
					<path d="M0,3L24,3L24,1L109,1L109,1L179,1L179,0L207,0L207,1L238,1L238,2L239,2L239,4L758,4L758,5L1059,5L1059,6L1472,6L1472,7L1562,7L1562,8L1590,8L1590,9L1616,9L1616,10L1665,10L1665,11L1779,11L1779,12L1808,12L1808,13L1832,13L1832,14L1877,14L1877,15L1888,15L1888,7L1902,7L1902,8L1916,8L1916,9L1933,9L1933,10L1949,10L1949,11L1952,11" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.z19m8p0l</title>
					</path>
				</g>
				<g style="--index: 14;">
					<path d="M0,6L24,6L24,1L90,1L90,1L533,1L533,2L738,2L738,3L801,3L801,4L1053,4L1053,5L1245,5L1245,6L1613,6L1613,7L1742,7L1742,8L1743,8L1743,9L1808,9L1808,10L1846,10L1846,11L1881,11L1881,7L1891,7L1891,8L1926,8L1926,9L1937,9L1937,10L1952,10" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.21g82pnl</title>
					</path>
				</g>
				<g style="--index: 15;">
					<path d="M0,4L24,4L24,0L210,0L210,1L211,1L211,0L240,0L240,1L305,1L305,2L765,2L765,3L926,3L926,4L1392,4L1392,5L1625,5L1625,6L1782,6L1782,7L1888,7L1888,7L1891,7L1891,8L1899,8L1899,9L1920,9L1920,10L1932,10L1932,11L1952,11" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.gq7jzvvq</title>
					</path>
				</g>
				<g style="--index: 16;">
					<path d="M0,4L25,4L25,1L83,1L83,0L85,0L85,1L119,1L119,1L123,1L123,2L207,2L207,3L236,3L236,4L258,4L258,5L263,5L263,4L768,4L768,5L794,5L794,7L1073,7L1073,8L1547,8L1547,9L1566,9L1566,10L1571,10L1571,11L1598,11L1598,12L1616,12L1616,13L1704,13L1704,14L1708,14L1708,15L1772,15L1772,16L1786,16L1786,17L1810,17L1810,18L1811,18L1811,19L1822,19L1822,20L1882,20L1882,15L1889,15L1889,16L1897,16L1897,17L1899,17L1899,18L1912,18L1912,19L1915,19L1915,20L1917,20L1917,21L1924,21L1924,22L1927,22L1927,24L1935,24L1935,25L1942,25L1942,26L1945,26L1945,27L1952,27" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.81wp50oq</title>
					</path>
				</g>
				<g style="--index: 17;">
					<path d="M0,5L25,5L25,1L71,1L71,2L185,2L185,1L187,1L187,2L207,2L207,3L233,3L233,4L308,4L308,5L779,5L779,6L803,6L803,7L951,7L951,8L1257,8L1257,9L1407,9L1407,10L1571,10L1571,11L1787,11L1787,12L1788,12L1788,13L1789,13L1789,14L1882,14L1882,11L1885,11L1885,12L1889,12L1889,13L1919,13L1919,14L1920,14L1920,15L1925,15L1925,16L1929,16L1929,17L1952,17" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.5lermx5q</title>
					</path>
				</g>
				<g style="--index: 18;">
					<path d="M0,6L27,6L27,1L29,1L29,1L173,1L173,0L214,0L214,1L249,1L249,2L305,2L305,3L640,3L640,4L700,4L700,5L861,5L861,6L940,6L940,7L1174,7L1174,8L1473,8L1473,9L1503,9L1503,10L1571,10L1571,11L1576,11L1576,12L1598,12L1598,13L1616,13L1616,14L1775,14L1775,15L1783,15L1783,16L1787,16L1787,17L1822,17L1822,18L1877,18L1877,19L1881,19L1881,20L1882,20L1882,11L1889,11L1889,12L1917,12L1917,13L1918,13L1918,14L1952,14" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.rqvpey7q</title>
					</path>
				</g>
				<g style="--index: 19;">
					<path d="M0,6L28,6L28,1L125,1L125,2L134,2L134,1L219,1L219,2L250,2L250,3L260,3L260,2L285,2L285,3L309,3L309,4L866,4L866,5L967,5L967,6L1124,6L1124,7L1153,7L1153,8L1398,8L1398,9L1563,9L1563,10L1616,10L1616,11L1699,11L1699,12L1771,12L1771,13L1777,13L1777,14L1778,14L1778,15L1798,15L1798,16L1811,16L1811,17L1845,17L1845,18L1850,18L1850,19L1854,19L1854,20L1861,20L1861,21L1865,21L1865,22L1881,22L1881,21L1893,21L1893,22L1921,22L1921,24L1933,24L1933,25L1952,25" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.klrpy2jq</title>
					</path>
				</g>
				<g style="--index: 20;">
					<path d="M0,10L28,10L28,3L122,3L122,2L165,2L165,0L264,0L264,1L275,1L275,2L429,2L429,3L802,3L802,4L1002,4L1002,5L1163,5L1163,6L1576,6L1576,7L1604,7L1604,8L1654,8L1654,9L1778,9L1778,10L1796,10L1796,11L1802,11L1802,12L1807,12L1807,13L1810,13L1810,14L1812,14L1812,15L1881,15L1881,13L1887,13L1887,14L1952,14" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.p12dx87q</title>
					</path>
				</g>
				<g style="--index: 21;">
					<path d="M0,5L28,5L28,0L125,0L125,1L128,1L128,2L190,2L190,3L207,3L207,4L237,4L237,5L264,5L264,6L318,6L318,7L507,7L507,8L803,8L803,9L862,9L862,10L1125,10L1125,11L1616,11L1616,12L1732,12L1732,13L1807,13L1807,14L1808,14L1808,15L1809,15L1809,16L1820,16L1820,17L1830,17L1830,18L1837,18L1837,19L1882,19L1882,13L1900,13L1900,14L1921,14L1921,15L1942,15L1942,16L1952,16" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.9qj0x8el</title>
					</path>
				</g>
				<g style="--index: 22;">
					<path d="M0,3L29,3L29,0L275,0L275,1L472,1L472,2L781,2L781,3L782,3L782,4L1144,4L1144,5L1244,5L1244,6L1616,6L1616,7L1680,7L1680,8L1723,8L1723,9L1741,9L1741,10L1801,10L1801,11L1851,11L1851,12L1855,12L1855,13L1867,13L1867,14L1882,14L1882,15L1885,15L1885,16L1888,16L1888,7L1937,7L1937,8L1952,8" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.4lxpe62q</title>
					</path>
				</g>
				<g style="--index: 23;">
					<path d="M0,1L29,1L29,0L82,0L82,1L208,1L208,3L293,3L293,4L637,4L637,5L1068,5L1068,6L1616,6L1616,7L1754,7L1754,8L1764,8L1764,9L1778,9L1778,10L1790,10L1790,11L1793,11L1793,12L1794,12L1794,13L1889,13L1889,5L1912,5L1912,6L1937,6L1937,7L1952,7" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.klrp6e0q</title>
					</path>
				</g>
				<g style="--index: 24;">
					<path d="M0,8L30,8L30,0L125,0L125,1L207,1L207,2L214,2L214,3L237,3L237,4L761,4L761,5L862,5L862,6L1009,6L1009,7L1071,7L1071,8L1129,8L1129,9L1407,9L1407,10L1493,10L1493,11L1560,11L1560,12L1593,12L1593,13L1616,13L1616,14L1664,14L1664,15L1665,15L1665,16L1758,16L1758,17L1769,17L1769,18L1785,18L1785,19L1800,19L1800,20L1817,20L1817,21L1821,21L1821,22L1830,22L1830,23L1879,23L1879,25L1882,25L1882,16L1890,16L1890,17L1911,17L1911,18L1912,18L1912,19L1923,19L1923,20L1925,20L1925,21L1934,21L1934,22L1952,22" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.013856dq</title>
					</path>
				</g>
				<g style="--index: 25;">
					<path d="M0,2L31,2L31,0L119,0L119,1L254,1L254,2L270,2L270,3L675,3L675,4L1090,4L1090,5L1594,5L1594,6L1616,6L1616,7L1787,7L1787,8L1810,8L1810,9L1889,9L1889,8L1902,8L1902,9L1903,9L1903,10L1952,10" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.klrp6ejq</title>
					</path>
				</g>
				<g style="--index: 26;">
					<path d="M0,1L31,1L31,0L125,0L125,1L183,1L183,2L196,2L196,0L202,0L202,1L208,1L208,2L263,2L263,3L1074,3L1074,4L1273,4L1273,5L1471,5L1471,6L1564,6L1564,7L1616,7L1616,8L1797,8L1797,9L1813,9L1813,10L1889,10L1889,6L1890,6L1890,7L1906,7L1906,8L1912,8L1912,9L1926,9L1926,10L1937,10L1937,11L1952,11" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.gq7jzvnq</title>
					</path>
				</g>
				<g style="--index: 27;">
					<path d="M0,13L32,13L32,2L117,2L117,3L183,3L183,0L207,0L207,1L212,1L212,2L278,2L278,3L306,3L306,4L342,4L342,5L738,5L738,6L845,6L845,7L1054,7L1054,8L1068,8L1068,9L1070,9L1070,10L1211,10L1211,11L1248,11L1248,12L1380,12L1380,13L1465,13L1465,14L1499,14L1499,15L1523,15L1523,16L1568,16L1568,17L1622,17L1622,18L1637,18L1637,19L1643,19L1643,20L1659,20L1659,21L1672,21L1672,22L1710,22L1710,23L1719,23L1719,24L1771,24L1771,25L1780,25L1780,27L1786,27L1786,28L1845,28L1845,29L1847,29L1847,30L1850,30L1850,31L1859,31L1859,32L1881,32L1881,30L1885,30L1885,31L1890,31L1890,34L1892,34L1892,35L1919,35L1919,36L1924,36L1924,37L1952,37" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.jqzpx3gl</title>
					</path>
				</g>
				<g style="--index: 28;">
					<path d="M0,6L33,6L33,0L56,0L56,1L210,1L210,2L238,2L238,3L278,3L278,4L300,4L300,5L977,5L977,6L1167,6L1167,7L1335,7L1335,8L1572,8L1572,9L1616,9L1616,10L1772,10L1772,11L1782,11L1782,12L1793,12L1793,13L1796,13L1796,14L1819,14L1819,15L1838,15L1838,16L1862,16L1862,17L1881,17L1881,10L1889,10L1889,11L1894,11L1894,12L1949,12L1949,13L1952,13" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.gq7jrxvq</title>
					</path>
				</g>
				<g style="--index: 29;">
					<path d="M0,2L35,2L35,0L188,0L188,1L214,1L214,2L243,2L243,3L316,3L316,4L800,4L800,5L803,5L803,6L1338,6L1338,7L1406,7L1406,8L1572,8L1572,9L1616,9L1616,10L1776,10L1776,11L1787,11L1787,12L1807,12L1807,13L1882,13L1882,11L1891,11L1891,12L1952,12" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.5lmkgmjq</title>
					</path>
				</g>
				<g style="--index: 30;">
					<path d="M0,2L35,2L35,0L188,0L188,1L207,1L207,2L324,2L324,3L1367,3L1367,4L1481,4L1481,5L1616,5L1616,6L1764,6L1764,7L1774,7L1774,8L1800,8L1800,9L1889,9L1889,3L1890,3L1890,4L1952,4" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.21g8owxl</title>
					</path>
				</g>
				<g style="--index: 31;">
					<path d="M0,3L35,3L35,0L188,0L188,1L207,1L207,2L315,2L315,3L754,3L754,4L978,4L978,5L1572,5L1572,6L1616,6L1616,7L1689,7L1689,8L1694,8L1694,9L1702,9L1702,10L1712,10L1712,11L1778,11L1778,12L1799,12L1799,13L1888,13L1888,5L1889,5L1889,6L1924,6L1924,7L1952,7" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.p12dx07q</title>
					</path>
				</g>
				<g style="--index: 32;">
					<path d="M0,6L48,6L48,0L155,0L155,0L207,0L207,1L276,1L276,2L343,2L343,3L1335,3L1335,4L1892,4L1892,6L1896,6L1896,7L1897,7L1897,8L1913,8L1913,9L1917,9L1917,11L1921,11L1921,12L1929,12L1929,13L1931,13L1931,14L1948,14L1948,15L1952,15" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.810zwdwq</title>
					</path>
				</g>
				<g style="--index: 33;">
					<path d="M0,1L154,1L154,0L245,0L245,1L775,1L775,2L1690,2L1690,3L1777,3L1777,4L1880,4L1880,5L1952,5" tabindex="0">
						<title>l_495zlx39-9kv66g32-onv7r45n.9qj08g7l</title>
					</path>
				</g>
				<g style="--index: 34;">
					<path d="M0,2L155,2L155,0L214,0L214,1L255,1L255,2L276,2L276,3L1910,3L1910,4L1920,4L1920,5L1948,5L1948,6L1952,6" tabindex="0">
						<title>l_o9xo3rp9-9kv66g32-onv7r45n.9qj08g7l</title>
					</path>
				</g>
				<g style="--index: 35;">
					<path d="M0,1L158,1L158,0L281,0L281,1L411,1L411,0L422,0L422,1L465,1L465,2L1324,2L1324,3L1327,3L1327,4L1420,4L1420,5L1441,5L1441,6L1447,6L1447,7L1471,7L1471,8L1495,8L1495,9L1536,9L1536,10L1574,10L1574,11L1915,11L1915,12L1938,12L1938,3L1952,3" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.9qj0kxel</title>
					</path>
				</g>
				<g style="--index: 36;">
					<path d="M0,1L183,1L183,0L244,0L244,1L279,1L279,2L741,2L741,3L888,3L888,4L1820,4L1820,5L1930,5L1930,0L1952,0" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.81wpx5oq</title>
					</path>
				</g>
				<g style="--index: 37;">
					<path d="M0,1L184,1L184,0L207,0L207,1L467,1L467,2L1084,2L1084,3L1655,3L1655,4L1765,4L1765,5L1886,5L1886,6L1919,6L1919,7L1930,7L1930,5L1936,5L1936,6L1952,6" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.zqop6rp1</title>
					</path>
				</g>
				<g style="--index: 38;">
					<path d="M0,1L185,1L185,0L207,0L207,1L215,1L215,2L226,2L226,3L924,3L924,4L974,4L974,5L1887,5L1887,6L1909,6L1909,7L1920,7L1920,8L1930,8L1930,6L1952,6" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.0138n5dq</title>
					</path>
				</g>
				<g style="--index: 39;">
					<path d="M0,2L186,2L186,1L206,1L206,2L304,2L304,3L1123,3L1123,4L1305,4L1305,5L1470,5L1470,6L1745,6L1745,7L1891,7L1891,8L1921,8L1921,9L1930,9L1930,8L1933,8L1933,9L1943,9L1943,10L1952,10" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.rqvp5e7q</title>
					</path>
				</g>
				<g style="--index: 40;">
					<path d="M0,1L187,1L187,0L228,0L228,1L890,1L890,2L1559,2L1559,3L1889,3L1889,4L1900,4L1900,6L1931,6L1931,1L1952,1" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.5ler7m5q</title>
					</path>
				</g>
				<g style="--index: 41;">
					<path d="M0,1L188,1L188,0L218,0L218,1L306,1L306,3L1890,3L1890,4L1924,4L1924,5L1925,5L1925,6L1931,6L1931,0L1952,0" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.0q5njgmq</title>
					</path>
				</g>
				<g style="--index: 42;">
					<path d="M0,1L189,1L189,0L200,0L200,1L230,1L230,2L736,2L736,3L1924,3L1924,4L1925,4L1925,5L1931,5L1931,2L1952,2" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.4lxp7e2q</title>
					</path>
				</g>
				<g style="--index: 43;">
					<path d="M0,1L190,1L190,0L207,0L207,1L220,1L220,2L308,2L308,3L869,3L869,4L1083,4L1083,5L1474,5L1474,6L1771,6L1771,7L1793,7L1793,8L1893,8L1893,9L1914,9L1914,11L1926,11L1926,12L1931,12L1931,2L1936,2L1936,4L1952,4" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.814y0701</title>
					</path>
				</g>
				<g style="--index: 44;">
					<path d="M0,1L191,1L191,0L201,0L201,1L207,1L207,2L252,2L252,3L346,3L346,4L1952,4" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.jq606z3q</title>
					</path>
				</g>
				<g style="--index: 45;">
					<path d="M0,1L192,1L192,0L282,0L282,1L419,1L419,2L771,2L771,3L915,3L915,4L1932,4L1932,0L1952,0" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.z19mo80l</title>
					</path>
				</g>
				<g style="--index: 46;">
					<path d="M0,3L196,3L196,1L214,1L214,2L254,2L254,3L276,3L276,4L867,4L867,5L1421,5L1421,6L1581,6L1581,7L1728,7L1728,8L1803,8L1803,9L1804,9L1804,10L1878,10L1878,11L1879,11L1879,12L1909,12L1909,13L1910,13L1910,14L1945,14L1945,15L1952,15" tabindex="0">
						<title>l_r9gn1qpd-9kv66g32-onv7r45n.9qj08g7l</title>
					</path>
				</g>
				<g style="--index: 47;">
					<path d="M0,2L196,2L196,0L240,0L240,1L1779,1L1779,2L1909,2L1909,3L1922,3L1922,4L1952,4" tabindex="0">
						<title>l_rdqo542w-9kv66g32-onv7r45n.9qj08g7l</title>
					</path>
				</g>
				<g style="--index: 48;">
					<path d="M0,1L198,1L198,0L246,0L246,1L354,1L354,0L433,0L433,0L1952,0" tabindex="0">
						<title>7dg65oxk-r8r1zm0n.gq7dw7vq</title>
					</path>
				</g>
				<g style="--index: 49;">
					<path d="M0,6L255,6L255,0L258,0L258,1L537,1L537,2L1818,2L1818,3L1952,3" tabindex="0">
						<title>l_r9gn1qpd-xd144xzd-38dz6v1n.814y45w1</title>
					</path>
				</g>
				<g style="--index: 50;">
					<path d="M0,2L257,2L257,0L258,0L258,1L775,1L775,2L1952,2" tabindex="0">
						<title>l_rdqo542w-xd144xzd-ylpk6768.qvv3eeyq</title>
					</path>
				</g>
				<g style="--index: 51;">
					<path d="M0,5L257,5L257,0L258,0L258,2L1116,2L1116,3L1817,3L1817,4L1952,4" tabindex="0">
						<title>l_o9xo3rp9-xd144xzd-ql69e17l.ln8rzznl</title>
					</path>
				</g>
				<g style="--index: 52;">
					<path d="M0,3L257,3L257,0L258,0L258,1L333,1L333,2L777,2L777,3L1741,3L1741,4L1952,4" tabindex="0">
						<title>l_495zlx39-xd144xzd-onvyv77n.lmozgg01</title>
					</path>
				</g>
				<g style="--index: 53;">
					<path d="M0,4L259,4L259,3L412,3L412,0L445,0L445,1L465,1L465,2L1118,2L1118,3L1122,3L1122,4L1345,4L1345,5L1346,5L1346,6L1349,6L1349,7L1445,7L1445,8L1469,8L1469,9L1536,9L1536,10L1681,10L1681,11L1756,11L1756,12L1761,12L1761,13L1778,13L1778,14L1911,14L1911,15L1917,15L1917,16L1937,16L1937,2L1952,2" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.4qypgj4q</title>
					</path>
				</g>
				<g style="--index: 54;">
					<path d="M0,2L259,2L259,0L281,0L281,1L411,1L411,0L430,0L430,1L446,1L446,2L1124,2L1124,3L1440,3L1440,4L1470,4L1470,5L1471,5L1471,6L1536,6L1536,7L1679,7L1679,8L1915,8L1915,9L1938,9L1938,3L1952,3" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.mlnwjz0l</title>
					</path>
				</g>
				<g style="--index: 55;">
					<path d="M0,3L259,3L259,0L281,0L281,1L434,1L434,0L446,0L446,1L863,1L863,2L1467,2L1467,4L1536,4L1536,5L1845,5L1845,6L1915,6L1915,7L1917,7L1917,8L1938,8L1938,7L1952,7" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.810zkwwq</title>
					</path>
				</g>
				<g style="--index: 56;">
					<path d="M0,3L278,3L278,1L279,1L279,2L751,2L751,3L1906,3L1906,4L1930,4L1930,0L1939,0L1939,1L1952,1" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.5lmk0gjq</title>
					</path>
				</g>
				<g style="--index: 57;">
					<path d="M0,1L283,1L283,0L1764,0L1764,1L1780,1L1780,2L1952,2" tabindex="0">
						<title>l_rdqo542w-9kv66g32-onv7r45n.810zdxoq</title>
					</path>
				</g>
				<g style="--index: 58;">
					<path d="M0,1L283,1L283,0L291,0L291,1L304,1L304,2L1053,2L1053,3L1385,3L1385,4L1776,4L1776,5L1952,5" tabindex="0">
						<title>l_r9gn1qpd-9kv66g32-onv7r45n.810zdxoq</title>
					</path>
				</g>
				<g style="--index: 59;">
					<path d="M0,1L283,1L283,0L1590,0L1590,1L1690,1L1690,2L1778,2L1778,3L1919,3L1919,4L1952,4" tabindex="0">
						<title>l_o9xo3rp9-9kv66g32-onv7r45n.810zdxoq</title>
					</path>
				</g>
				<g style="--index: 60;">
					<path d="M0,1L283,1L283,0L755,0L755,1L1747,1L1747,2L1930,2L1930,3L1937,3L1937,4L1952,4" tabindex="0">
						<title>l_495zlx39-9kv66g32-onv7r45n.810zdxoq</title>
					</path>
				</g>
				<g style="--index: 61;">
					<path d="M0,4L288,4L288,1L753,1L753,2L770,2L770,3L869,3L869,4L1067,4L1067,5L1935,5L1935,6L1952,6" tabindex="0">
						<title>9kv6l5e2-ql6rezjl.jq6d86v1</title>
					</path>
				</g>
				<g style="--index: 62;">
					<path d="M0,6L350,6L350,0L1140,0L1140,1L1776,1L1776,2L1949,2L1949,3L1952,3" tabindex="0">
						<title>l_r9gn1qpd-xd144xwd</title>
					</path>
				</g>
				<g style="--index: 63;">
					<path d="M0,5L351,5L351,0L1777,0L1777,1L1879,1L1879,2L1952,2" tabindex="0">
						<title>l_o9xo3rp9-xd144xwd</title>
					</path>
				</g>
				<g style="--index: 64;">
					<path d="M0,2L354,2L354,0L1777,0L1777,1L1871,1L1871,2L1931,2L1931,3L1937,3L1937,4L1952,4" tabindex="0">
						<title>l_495zlx39-xd144xwd</title>
					</path>
				</g>
				<g style="--index: 65;">
					<path d="M0,2L357,2L357,0L1779,0L1779,1L1873,1L1873,2L1952,2" tabindex="0">
						<title>l_rdqo542w-xd144xwd</title>
					</path>
				</g>
				<g style="--index: 66;">
					<path d="M0,3L430,3L430,0L438,0L438,0L1952,0" tabindex="0">
						<title>xd1v018d-68k7x44l.zqo74r41</title>
					</path>
				</g>
				<g style="--index: 67;">
					<path d="M0,7L470,7L470,1L1942,1L1942,2L1952,2" tabindex="0">
						<title>rkl9qwrk-6njkg4el.z19p2o8l</title>
					</path>
				</g>
				<g style="--index: 68;">
					<path d="M0,6L476,6L476,0L1782,0L1782,1L1860,1L1860,2L1952,2" tabindex="0">
						<title>xd17x94d-9l71pv4l.81wrgm5l</title>
					</path>
				</g>
				<g style="--index: 69;">
					<path d="M0,2L594,2L594,0L1831,0L1831,1L1952,1" tabindex="0">
						<title>7dg65oxk-r8r1zm0n.xqk0drn1</title>
					</path>
				</g>
				<g style="--index: 70;">
					<path d="M0,1L596,1L596,0L889,0L889,1L1732,1L1732,2L1739,2L1739,3L1952,3" tabindex="0">
						<title>9kv6l5e2-ql6rezjl.9qj3pk7l</title>
					</path>
				</g>
				<g style="--index: 71;">
					<path d="M0,6L680,6L680,0L1140,0L1140,1L1776,1L1776,2L1952,2" tabindex="0">
						<title>l_r9gn1qpd-xd144xzd-38dz6v1n.z19md2jl</title>
					</path>
				</g>
				<g style="--index: 72;">
					<path d="M0,3L683,3L683,0L1740,0L1740,1L1776,1L1776,2L1937,2L1937,3L1952,3" tabindex="0">
						<title>l_495zlx39-xd144xzd-onvyv77n.1w43556q</title>
					</path>
				</g>
				<g style="--index: 73;">
					<path d="M0,1L757,1L757,0L832,0L832,0L857,0L857,1L1952,1" tabindex="0">
						<title>mke75px2-yn2mz5d8.4lx6574l</title>
					</path>
				</g>
				<g style="--index: 74;">
					<path d="M0,3L846,3L846,0L1730,0L1730,1L1778,1L1778,2L1952,2" tabindex="0">
						<title>l_o9xo3rp9-xd144xzd-ql69e17l.10v3wwpl</title>
					</path>
				</g>
				<g style="--index: 75;">
					<path d="M0,3L853,3L853,0L1779,0L1779,1L1913,1L1913,2L1952,2" tabindex="0">
						<title>l_rdqo542w-xd144xzd-ylpk6768.le2dmv6l</title>
					</path>
				</g>
				<g style="--index: 76;">
					<path d="M0,1L929,1L929,0L931,0L931,1L954,1L954,2L1002,2L1002,3L1007,3L1007,4L1044,4L1044,5L1064,5L1064,6L1091,6L1091,7L1286,7L1286,8L1314,8L1314,9L1444,9L1444,10L1476,10L1476,11L1488,11L1488,12L1546,12L1546,13L1553,13L1553,14L1580,14L1580,15L1603,15L1603,16L1615,16L1615,18L1716,18L1716,19L1737,19L1737,20L1761,20L1761,21L1773,21L1773,22L1777,22L1777,23L1829,23L1829,24L1847,24L1847,25L1865,25L1865,26L1867,26L1867,27L1887,27L1887,28L1904,28L1904,29L1910,29L1910,30L1917,30L1917,31L1918,31L1918,32L1920,32L1920,33L1924,33L1924,34L1925,34L1925,35L1928,35L1928,36L1930,36L1930,37L1945,37L1945,38L1951,38L1951,39L1952,39" tabindex="0">
						<title>xd17x94d-9l71pv4l.21gpn081</title>
					</path>
				</g>
				<g style="--index: 77;">
					<path d="M0,1L968,1L968,0L1048,0L1048,1L1327,1L1327,2L1394,2L1394,3L1800,3L1800,4L1952,4" tabindex="0">
						<title>7dg65oxk-r8r1zm0n.5q89kv31</title>
					</path>
				</g>
				<g style="--index: 78;">
					<path d="M0,1L1019,1L1019,0L1735,0L1735,1L1952,1" tabindex="0">
						<title>rkl9qwrk-6njkg4el.81p5ym8l</title>
					</path>
				</g>
				<g style="--index: 79;">
					<path d="M0,2L1213,2L1213,0L1597,0L1597,1L1866,1L1866,2L1947,2L1947,3L1952,3" tabindex="0">
						<title>xd1v018d-68k7x44l.mlno8vjq</title>
					</path>
				</g>
				<g style="--index: 80;">
					<path d="M0,9L1251,9L1251,0L1776,0L1776,1L1923,1L1923,2L1952,2" tabindex="0">
						<title>l_r9gn1qpd-xd144xzd-38dz6v1n.5leogx5q</title>
					</path>
				</g>
				<g style="--index: 81;">
					<path d="M0,6L1282,6L1282,0L1730,0L1730,1L1777,1L1777,2L1884,2L1884,3L1903,3L1903,4L1936,4L1936,5L1952,5" tabindex="0">
						<title>l_495zlx39-xd144xzd-onvyv77n.qoxdrr4q</title>
					</path>
				</g>
				<g style="--index: 82;">
					<path d="M0,3L1309,3L1309,0L1891,0L1891,1L1913,1L1913,2L1914,2L1914,3L1937,3L1937,4L1951,4L1951,5L1952,5" tabindex="0">
						<title>l_rdqo542w-xd144xzd-ylpk6768.q5vkg7vl</title>
					</path>
				</g>
				<g style="--index: 83;">
					<path d="M0,1L1569,1L1569,0L1571,0L1571,0L1952,0" tabindex="0">
						<title>zdn9m472-2lge53e8.q5v59jml</title>
					</path>
				</g>
				<g style="--index: 84;">
					<path d="M0,1L1594,1L1594,0L1595,0L1595,1L1952,1" tabindex="0">
						<title>l_gdr5onk9-rkl3znrk-rn1g06dn.1gn42k6l</title>
					</path>
				</g>
				<g style="--index: 85;">
					<path d="M0,1L1795,1L1795,0L1797,0L1797,0L1952,0" tabindex="0">
						<title>q2560qwk-wleg9w4n.q8k5zerq</title>
					</path>
				</g>
				<g style="--index: 86;">
					<path d="M0,11L1810,11L1810,0L1912,0L1912,1L1942,1L1942,2L1945,2L1945,3L1952,3" tabindex="0">
						<title>l_o9xo3rp9-xd144xzd-ql69e17l.qj7jxxoq</title>
					</path>
				</g>
				<g style="--index: 87;">
					<path d="M0,3L1817,3L1817,0L1818,0L1818,1L1952,1" tabindex="0">
						<title>l_gdr5onk9-rkl3znrk-rn1g06dn.q655wjnl</title>
					</path>
				</g>
				<g style="--index: 88;">
					<path d="M0,4L1860,4L1860,0L1865,0L1865,1L1939,1L1939,2L1952,2" tabindex="0">
						<title>l_gdr5onk9-rkl3znrk-rn1g06dn.lmooe9y1</title>
					</path>
				</g>
				<g style="--index: 89;">
					<path d="M0,44L1867,44L1867,0L1897,0L1897,1L1921,1L1921,2L1923,2L1923,3L1933,3L1933,4L1937,4L1937,6L1952,6" tabindex="0">
						<title>9kv6l5e2-ql6rezjl.1dk62o3l</title>
					</path>
				</g>
				<g style="--index: 90;">
					<path d="M0,23L1867,23L1867,0L1917,0L1917,1L1918,1L1918,3L1934,3L1934,4L1952,4" tabindex="0">
						<title>rkl9qwrk-6njkg4el.lr3x560l</title>
					</path>
				</g>
				<g style="--index: 91;">
					<path d="M0,10L1869,10L1869,3L1881,3L1881,4L1951,4L1951,5L1952,5" tabindex="0">
						<title>l_xd0mnpjw-rkl3znrk-wley4prn.192xe54q</title>
					</path>
				</g>
				<g style="--index: 92;">
					<path d="M0,3L1875,3L1875,0L1876,0L1876,1L1881,1L1881,2L1918,2L1918,3L1952,3" tabindex="0">
						<title>zd39lqyd-yn26k2jl.qoxwn4pq</title>
					</path>
				</g>
				<g style="--index: 93;">
					<path d="M0,22L1888,22L1888,9L1917,9L1917,10L1952,10" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.qj7zdm3q</title>
					</path>
				</g>
				<g style="--index: 94;">
					<path d="M0,24L1890,24L1890,4L1939,4L1939,5L1952,5" tabindex="0">
						<title>l_gdr5onk9-rkl3znrk-rn1g06dn.qj77o50q</title>
					</path>
				</g>
				<g style="--index: 95;">
					<path d="M0,2L1916,2L1916,0L1917,0L1917,1L1941,1L1941,2L1952,2" tabindex="0">
						<title>l_dy1gjkkd-rkl3znrk-wle345e8.lmojn041</title>
					</path>
				</g>
				<g style="--index: 96;">
					<path d="M0,2L1918,2L1918,0L1952,0" tabindex="0">
						<title>zd39lqyd-yn26k2jl.1w4w8yoq</title>
					</path>
				</g>
				<g style="--index: 97;">
					<path d="M0,2L1918,2L1918,0L1952,0" tabindex="0">
						<title>l_drpxgo6w-rkl3znrk-68kwx3z8.qoxwn62q</title>
					</path>
				</g>
				<g style="--index: 98;">
					<path d="M0,7L1930,7L1930,4L1952,4" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.1dkg795l</title>
					</path>
				</g>
			</g>
		</svg>
	</foreignObject>
</svg>
