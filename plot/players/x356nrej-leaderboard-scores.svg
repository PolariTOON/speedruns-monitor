<svg xmlns="http://www.w3.org/2000/svg" lang="en">
	<title>Score by leaderboard for player x356nrej</title>
	<metadata>
		<meta xmlns="http://www.w3.org/1999/xhtml" charset="utf-8" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="viewport" content="width=device-width" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="color-scheme" content="dark light" />
	</metadata>
	<style>
		*,
		::before,
		::after {
			box-sizing: border-box;
		}
		:root {
			background: var(--canvas-background);
			color: var(--canvas-foreground);
			fill: var(--canvas-background);
			stroke: var(--canvas-foreground);
			stroke-linejoin: round;
			stroke-linecap: round;
		}
		foreignObject {
			pointer-events: none;
		}
		foreignObject::before,
		foreignObject::after {
			content: "";
			position: absolute;
			z-index: 1;
			left: 20px;
			bottom: 20px;
			pointer-events: auto;
		}
		foreignObject::before {
			width: calc(100% - 40px);
			height: calc(20px + var(--date-size) * 1px);
		}
		foreignObject::after {
			width: calc(20px + var(--value-size) * 1px);
			height: calc(100% - 40px);
		}
		foreignObject &gt; div {
			position: absolute;
			z-index: 4;
			right: 0;
			top: 0;
			margin: 20px;
			border: 1px solid var(--canvas-foreground);
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			transition: opacity 1s;
			pointer-events: auto;
		}
		foreignObject:is(:hover, :focus-within) &gt; div:not(:hover, :focus-within) {
			opacity: 0;
			pointer-events: none;
		}
		foreignObject &gt; div &gt; p {
			margin: 0;
		}
		label {
			display: table;
			border-collapse: separate;
			border-spacing: 10px;
			direction: rtl;
		}
		progress,
		input[type="checkbox"] {
			display: table-cell;
			width: 16px;
			height: 16px;
			margin: 2px;
			accent-color: var(--canvas-foreground);
			vertical-align: top;
			direction: ltr;
		}
		progress + span,
		input[type="checkbox"] + span {
			display: table-cell;
			vertical-align: top;
			direction: ltr;
		}
		input[type="checkbox"]:not(:disabled):is(:hover, :focus-within) + span {
			text-decoration: underline;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			position: absolute;
			z-index: 2;
			margin: 0;
			padding: 10px;
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			font-weight: bold;
			pointer-events: auto;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg + svg {
			border-top: 1px solid #0000;
			border-bottom: 1px solid var(--canvas-foreground);
		}
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px dashed #0000;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg {
			width: calc(20px + var(--date-size) * 1px);
			height: 42px;
			bottom: 20px;
		}
		foreignObject &gt; svg:first-of-type {
			left: calc(40px + var(--value-size) * 1px);
			transform: rotate(90deg) translate(-100%, 0);
			transform-origin: left bottom;
		}
		foreignObject &gt; svg:first-of-type + svg {
			right: 20px;
			transform: rotate(90deg) translate(0, 100%);
			transform-origin: right bottom;
		}
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			width: calc(20px + var(--value-size) * 1px);
			height: 42px;
			left: 20px;
		}
		foreignObject &gt; svg:first-of-type + svg + svg {
			bottom: calc(40px + var(--date-size) * 1px);
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			top: 20px;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text {
			fill: var(--canvas-foreground);
			stroke: none;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text {
			cursor: vertical-text;
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg + svg {
			position: relative;
			z-index: 3;
			width: calc(100% - 60px - var(--value-size) * 1px);
			height: calc(100% - 60px - var(--date-size) * 1px);
			margin: 20px 20px calc(40px + var(--date-size) * 1px) calc(40px + var(--value-size) * 1px);
			border-left: 1px solid var(--canvas-foreground);
			border-right: 1px dashed var(--canvas-foreground);
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px solid var(--canvas-foreground);
			background: var(--canvas-background);
			pointer-events: auto;
		}
		g &gt; rect {
			vector-effect: non-scaling-stroke;
			fill: var(--highlighted);
			stroke: none;
		}
		g &gt; rect[tabindex] {
			fill: var(--tier, #0000);
			cursor: help;
		}
		g &gt; rect[tabindex][data-tier="diamond"] {
			--tier: var(--diamond);
		}
		g &gt; rect[tabindex][data-tier="gold"] {
			--tier: var(--gold);
		}
		g &gt; rect[tabindex][data-tier="silver"] {
			--tier: var(--silver);
		}
		g &gt; rect[tabindex][data-tier="bronze"] {
			--tier: var(--bronze);
		}
		g &gt; path[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: hsl(calc(var(--index) / var(--count) * 360), 50%, 50%);
			cursor: help;
		}
		g:is(:hover, :focus-within) &gt; path[tabindex] {
			stroke: var(--canvas-foreground);
		}
		g &gt; path[tabindex]:is(:hover, :focus-within) {
			outline: 0;
		}
		g &gt; path[tabindex]:first-of-type {
			stroke-width: 2;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) {
			stroke-width: 4;
		}
		g &gt; path[tabindex]:first-of-type:not(:last-of-type) {
			stroke-dasharray: 4 8;
		}
		g &gt; path[tabindex]:first-of-type + rect {
			fill: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect {
			fill: var(--highlighted);
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] {
			stroke-width: 8;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) {
			stroke-width: 16;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line + line {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			stroke-width: 2;
			stroke-dasharray: 4 8;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line + line {
			stroke: var(--faded);
		}
		@media (prefers-color-scheme: dark) {
			:root {
				--canvas-background: #000;
				--canvas-foreground: #ccc;
				--diamond: #0363;
				--gold: #6303;
				--silver: #3633;
				--bronze: #6363;
				--highlighted: #6663;
				--faded: #9993;
			}
		}
		@media (prefers-color-scheme: light) {
			:root {
				--canvas-background: #fff;
				--canvas-foreground: #333;
				--diamond: #9cf3;
				--gold: #fc93;
				--silver: #9c93;
				--bronze: #c9c3;
				--highlighted: #9993;
				--faded: #6663;
			}
		}
	</style>
	<script>
		"use strict";
		{
			const script = document.currentScript;
			const documentUrl = location.href;
			const scope = new URL("../../", documentUrl).pathname;
			const playersKey = `${scope}#players`;
			const leaderboardsKey = `${scope}#leaderboards`;
			const sessionKey = `${scope}#session`;
			const lockKey = `${scope}#lock`;
			async function importDataScript(dataScriptUrl, signal) {
				signal.throwIfAborted();
				if (documentUrl.protocol !== "file:") {
					const response = await fetch(dataScriptUrl, {
						signal,
					});
					if (!response.ok) {
						throw new Error(response.statusText);
					}
					const data = await response.json();
					return data;
				}
				return await new Promise((resolve, reject) =&gt; {
					const name = `callback${Math.random() * 2 ** 53}`;
					let called = false;
					let data = null;
					function callback(value) {
						if (!called) {
							called = true;
							data = value;
						}
					}
					window[name] = callback;
					const dataScript = document.createElementNS("http://www.w3.org/2000/svg", "script");
					dataScript.href = `${dataScriptUrl}&amp;callback=${name}`;
					function handleAbort(event) {
						delete window[name];
						dataScript.removeEventListener("error", handleError);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const reason = signal.reason;
						reject(reason);
					}
					function handleError(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const error = event.error;
						reject(error);
					}
					function handleLoad(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("error", handleError);
						dataScript.remove();
						resolve(data);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					dataScript.addEventListener("error", handleError, {
						once: true,
					});
					dataScript.addEventListener("load", handleLoad, {
						once: true,
					});
					script.after(dataScript);
				});
			}
			async function waitForTimeout(delay, signal) {
				signal.throwIfAborted();
				return await new Promise((resolve, reject) =&gt; {
					let timeout = null;
					function handleAbort() {
						clearTimeout(timeout);
						const reason = signal.reason;
						reject(reason);
					}
					function handleTimeout() {
						signal.removeEventListener("abort", handleAbort);
						resolve(delay);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					timeout = setTimeout(handleTimeout, delay);
				});
			}
			window.addEventListener("pageshow", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully restored page from cache`);
				} else {
					console.log(`Unsuccessfully restored page from cache`);
				}
			});
			window.addEventListener("pagehide", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully saved page to cache`);
				} else {
					console.log(`Unsuccessfully saved page to cache`);
				}
			});
			window.addEventListener("pageshow", async (event) =&gt; {
				const rootTitleElement = document.querySelector("title");
				const rootTitleContent = rootTitleElement.textContent;
				const pathTitleElements = Array.from(document.querySelectorAll("g &gt; path[tabindex]:first-of-type &gt; title"));
				const pathTitleContents = pathTitleElements.map((pathTitleElement) =&gt; {
					const pathTitleContent = pathTitleElement.textContent;
					return pathTitleContent;
				});
				const foreignObject = document.querySelector("foreignObject");
				const div = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
				div.dir = "ltr";
				const p = document.createElementNS("http://www.w3.org/1999/xhtml", "p");
				const label = document.createElementNS("http://www.w3.org/1999/xhtml", "label");
				const progress = document.createElementNS("http://www.w3.org/1999/xhtml", "progress");
				label.append(progress);
				const span = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
				span.textContent = "Loading names";
				label.append(span);
				p.append(label);
				div.append(p);
				foreignObject.prepend(div);
				let lock = false;
				let session = null;
				const broadcastChannel = new BroadcastChannel(sessionKey);
				const abortController = new AbortController();
				const signal = abortController.signal;
				const abort = abortController.abort.bind(abortController);
				const {promise, resolve} = Promise.withResolvers();
				broadcastChannel.addEventListener("message", (event) =&gt; {
					const data = event.data;
					const type = data.type;
					switch (type) {
						case "request": {
							if (lock &amp;&amp; signal.aborted) {
								broadcastChannel.postMessage({
									type: "response",
									session,
								});
							}
							break;
						}
						case "response": {
							if (!signal.aborted) {
								session = data.session;
								if (session != null) {
									const {players, leaderboards} = session;
									try {
										const cachedPlayers = JSON.stringify(players);
										const cachedLeaderboards = JSON.stringify(leaderboards);
										sessionStorage.setItem(playersKey, cachedPlayers);
										sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
									} catch {}
									console.log(`Successfully loaded names from peer`);
									abort();
									resolve();
								} else {
									console.log(`Unsuccessfully loaded names from peer`);
									abort();
									resolve();
								}
							}
							break;
						}
					}
				});
				try {
					const cachedPlayers = sessionStorage.getItem(playersKey);
					const cachedLeaderboards = sessionStorage.getItem(leaderboardsKey);
					if (cachedPlayers == null || cachedLeaderboards == null) {
						throw new Error();
					}
					const players = JSON.parse(cachedPlayers);
					const leaderboards = JSON.parse(cachedLeaderboards);
					session = {players, leaderboards};
				} catch {}
				if (session != null) {
					broadcastChannel.postMessage({
						type: "response",
						session,
					});
					console.log(`Successfully loaded names from local`);
					abort();
					resolve();
				} else {
					broadcastChannel.postMessage({
						type: "request",
					});
					console.log(`Unsuccessfully loaded names from local`);
				}
				(async () =&gt; {
					for (;;) {
						await navigator.locks.request(lockKey, async () =&gt; {
							lock = true;
							console.log(`Acquired lock`);
							if (!signal.aborted) {
								try {
									const players = Object.create(null);
									const leaderboards = Object.create(null);
									const games = ["9d3rrxyd", "w6jl2ned"];
									for (const gameId of games) {
										const {data} = await importDataScript(`https://www.speedrun.com/api/v1/games/${gameId}?embed=categories,levels,variables`, signal);
										const versions = data.variables.data.find((variable) =&gt; {
											return variable.name === "Version";
										});
										const levels = Object.fromEntries(data.levels.data.map((level) =&gt; {
											return [level.id, level];
										}));
										const categories = Object.fromEntries(data.categories.data.map((category) =&gt; {
											return [category.id, category];
										}));
										const variables = Object.fromEntries(data.variables.data.map((variable) =&gt; {
											return [variable.id, variable];
										}));
										console.log(`Got game`);
										await waitForTimeout(800, signal);
										const slice = 200;
										for (let offset = 0;; offset += slice) {
											const {data, pagination} = await importDataScript(`https://www.speedrun.com/api/v1/runs?game=${gameId}&amp;orderby=date&amp;direction=asc&amp;embed=players&amp;offset=${offset}&amp;max=${slice}`, signal);
											const {size} = pagination;
											if (size === 0) {
												break;
											}
											for (const run of data) {
												const status = run.status.status;
												if (status == null || status === "new") {
													continue;
												}
												const player = run.players.data[0].rel === "user" ? run.players.data[0].id : "814p2558";
												const playerName = run.players.data[0].rel === "user" ? run.players.data[0].names.international : "anonymous";
												players[player] ??= playerName;
												const level = run.level;
												const category = run.category;
												const values = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return `-${variable}.${value}`;
												});
												const leaderboard = `${level != null ? `l_${level}-` : ""}${category}${values.join("")}`;
												const levelName = run.level != null ? levels[run.level]?.name ?? null : null;
												const categoryName = categories[run.category]?.name ?? null;
												const valueNames = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return variables[variable]?.values.values[value]?.label ?? null;
												}).filter((valueName) =&gt; {
													return valueName != null;
												});
												const leaderboardName = `${levelName != null ? `${levelName}: ` : ""}${categoryName ?? ""}${values.length !== 0 ? ` - ${valueNames.join(", ")}` : ""}`;
												leaderboards[leaderboard] ??= leaderboardName;
											}
											console.log(`Got runs ${offset}-${offset + size - 1}`);
											await waitForTimeout(800, signal);
										}
									}
									session = {players, leaderboards};
								} catch {}
								if (!signal.aborted) {
									if (session != null) {
										const {players, leaderboards} = session;
										try {
											const cachedPlayers = JSON.stringify(players);
											const cachedLeaderboards = JSON.stringify(leaderboards);
											sessionStorage.setItem(playersKey, cachedPlayers);
											sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
										} catch {}
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Successfully loaded names from remote`);
										abort();
										resolve();
									} else {
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Unsuccessfully loaded names from remote`);
										abort();
										resolve();
									}
								}
							}
							await new Promise((resolve) =&gt; {
								window.addEventListener("beforeunload", () =&gt; {
									resolve();
								}, {
									once: true,
								});
							});
						});
						lock = false;
						console.log(`Released lock`);
						await new Promise((resolve) =&gt; {
							window.addEventListener("pagehide", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
						await new Promise((resolve) =&gt;{
							window.addEventListener("pageshow", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
					}
				})();
				await promise;
				if (session == null) {
					const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
					input.type = "checkbox";
					input.autocomplete = "off";
					input.disabled = true;
					input.indeterminate = true;
					progress.replaceWith(input);
					span.textContent = "Unavailable names";
					return;
				}
				const {players, leaderboards} = session;
				const hasPlayerRoot = rootTitleContent.includes(" for player");
				const hasLeaderboardRoot = rootTitleContent.includes(" for leaderboard");
				const rootTitle = {
					element: rootTitleElement,
					contentWithIds: rootTitleContent,
					contentWithNames: hasPlayerRoot ? rootTitleContent.replace(/ for player ([0-9_a-z]+)/, ($0, $1) =&gt; {
						return ` for player ${players[$1] ?? $1}`;
					}) : hasLeaderboardRoot ? rootTitleContent.replace(/ for leaderboard ((?:l_[0-9_a-z]+-)?[0-9_a-z]+(-[0-9_a-z]+\.[0-9_a-z]+)*)/, ($0, $1) =&gt; {
						return ` for leaderboard ${leaderboards[$1] ?? $1}`;
					}) : rootTitleContent,
				};
				const hasPlayerPaths = rootTitleContent.includes(" by player");
				const hasLeaderboardPaths = rootTitleContent.includes(" by leaderboard");
				const pathTitles = pathTitleElements.map((pathTitleElement, k) =&gt; {
					const pathTitleContent = pathTitleContents[k];
					const pathTitle = {
						element: pathTitleElement,
						contentWithIds: pathTitleContent,
						contentWithNames: hasPlayerPaths ? players[pathTitleContent] ?? pathTitleContent : hasLeaderboardPaths ? leaderboards[pathTitleContent] ?? pathTitleContent : pathTitleContent,
					};
					return pathTitle;
				});
				const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
				input.type = "checkbox";
				input.autocomplete = "off";
				input.addEventListener("change", () =&gt; {
					input.disabled = true;
					if (input.checked) {
						rootTitle.element.textContent = rootTitle.contentWithNames;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithNames;
						}
					} else {
						rootTitle.element.textContent = rootTitle.contentWithIds;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithIds;
						}
					}
					input.disabled = false;
				});
				progress.replaceWith(input);
				span.textContent = "Reveal names";
			}, {
				once: true,
			});
		}
	</script>
	<script>
		"use strict";
		{
			document.addEventListener("DOMContentLoaded", (event) =&gt; {
				const minDateText = document.querySelector("foreignObject &gt; svg:first-of-type &gt; text");
				const maxDateText = document.querySelector("foreignObject &gt; svg:first-of-type + svg &gt; text");
				const startX = Math.round(Date.parse(minDateText.textContent) / 86400000);
				function xToDate(x) {
					const datetime = new Date((startX + x) * 86400000);
					const year = `${datetime.getUTCFullYear()}`.padStart(4, "0");
					const month = `${datetime.getUTCMonth() + 1}`.padStart(2, "0");
					const day = `${datetime.getUTCDate()}`.padStart(2, "0");
					const date = `${year}-${month}-${day}`;
					const size = date.length * 10;
					return {date, size};
				}
				function setMinDate(x) {
					const {date, size} = xToDate(Math.floor(x));
					minDateText.textLength.baseVal.value = size;
					minDateText.textContent = date;
				}
				function setMaxDate(x) {
					const {date, size} = xToDate(Math.ceil(x));
					maxDateText.textLength.baseVal.value = size;
					maxDateText.textContent = date;
				}
				const minValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg &gt; text");
				const maxValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text");
				const timed = minValueText.textContent.includes(":");
				function yToValue(y) {
					if (timed) {
						const minutes = `${(y - y % 6000) / 6000}`.padStart(2, "0");
						const seconds = `${(y - y % 100) / 100 % 60}`.padStart(2, "0");
						const centiseconds = `${y % 100}`.padStart(2, "0");
						const value = `${minutes}:${seconds}.${centiseconds}`;
						const size = value.length * 10;
						return {value, size};
					} else {
						const value = `${y}`;
						const size = value.length * 10;
						return {value, size};
					}
				}
				function setMinValue(y) {
					const {value, size} = yToValue(Math.floor(y));
					minValueText.textLength.baseVal.value = size;
					minValueText.textContent = value;
				}
				function setMaxValue(y) {
					const {value, size} = yToValue(Math.ceil(y));
					maxValueText.textLength.baseVal.value = size;
					maxValueText.textContent = value;
				}
				const svg = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg + svg");
				svg.tabIndex = -1;
				svg.style.setProperty("outline", "0");
				if (CSS.supports("overflow-clip-margin", "8px")) {
					svg.style.setProperty("overflow", "clip");
					svg.style.setProperty("overflow-clip-margin", "8px");
				}
				svg.style.setProperty("touch-action", "none");
				const {x: baseX, y: baseY, width: baseWidth, height: baseHeight} = svg.viewBox.baseVal;
				let pointerCount = 0;
				const pointers = Object.create(null);
				const xPointerIds = [];
				const yPointerIds = [];
				let x = null;
				let y = null;
				let width = null;
				let height = null;
				svg.addEventListener("pointerdown", (event) =&gt; {
					const {pointerId} = event;
					if (pointerId in pointers) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.setPointerCapture(pointerId);
					++pointerCount;
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId] = {
						offsetX,
						offsetY,
					};
					xPointerIds.splice(xPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetX &lt;= offsetX;
					}) + 1, 0, pointerId);
					yPointerIds.splice(yPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetY &lt;= offsetY;
					}) + 1, 0, pointerId);
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					width = Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth);
					height = Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight);
					x = Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX);
					y = Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY);
				});
				svg.addEventListener("pointerup", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.releasePointerCapture(pointerId);
					--pointerCount;
					delete pointers[pointerId];
					xPointerIds.splice(xPointerIds.lastIndexOf(pointerId), 1);
					yPointerIds.splice(yPointerIds.lastIndexOf(pointerId), 1);
					const minOffsetX = pointerCount !== 0 ? pointers[xPointerIds[0]].offsetX : null;
					const minOffsetY = pointerCount !== 0 ? pointers[yPointerIds[0]].offsetY : null;
					const maxClientWidth = pointerCount !== 0 ? pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX : null;
					const maxClientHeight = pointerCount !== 0 ? pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY : null;
					width = pointerCount !== 0 ? Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth) : null;
					height = pointerCount !== 0 ? Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight) : null;
					x = pointerCount !== 0 ? Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX) : null;
					y = pointerCount !== 0 ? Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY) : null;
				});
				svg.addEventListener("pointermove", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					event.preventDefault();
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId].offsetX = offsetX;
					pointers[pointerId].offsetY = offsetY;
					const oldXIndex = xPointerIds.lastIndexOf(pointerId);
					let newXIndex = oldXIndex;
					while (newXIndex &gt; 0 &amp;&amp; pointers[xPointerIds[newXIndex - 1]].offsetX &gt; offsetX) {
						--newXIndex;
					}
					xPointerIds.copyWithin(newXIndex + 1, newXIndex, oldXIndex);
					xPointerIds[newXIndex] = pointerId;
					while (newXIndex &lt; pointerCount - 1 &amp;&amp; pointers[xPointerIds[newXIndex + 1]].offsetX &lt; offsetX) {
						++newXIndex;
					}
					xPointerIds.copyWithin(oldXIndex, oldXIndex + 1, newXIndex + 1);
					xPointerIds[newXIndex] = pointerId;
					const oldYIndex = yPointerIds.lastIndexOf(pointerId);
					let newYIndex = oldYIndex;
					while (newYIndex &gt; 0 &amp;&amp; pointers[yPointerIds[newYIndex - 1]].offsetY &gt; offsetY) {
						--newYIndex;
					}
					yPointerIds.copyWithin(newYIndex + 1, newYIndex, oldYIndex);
					yPointerIds[newYIndex] = pointerId;
					while (newYIndex &lt; pointerCount - 1 &amp;&amp; pointers[yPointerIds[newYIndex + 1]].offsetY &lt; offsetY) {
						++newYIndex;
					}
					yPointerIds.copyWithin(oldYIndex, oldYIndex + 1, newYIndex + 1);
					yPointerIds[newYIndex] = pointerId;
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					animWidth = width === 0 ? animWidth : maxClientWidth === 0 ? baseWidth : Math.min(svg.clientWidth / maxClientWidth * width, baseWidth);
					animHeight = height === 0 ? animHeight : maxClientHeight === 0 ? baseHeight : Math.min(svg.clientHeight / maxClientHeight * height, baseHeight);
					animX = Math.max(Math.min(x - minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(y - minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
				const zoomIntensity = 1.25;
				svg.addEventListener("wheel", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					if (!ctrlKey) {
						const vectorX = (shiftKey ? event.deltaY : event.deltaX) / svg.clientWidth * animWidth;
						const vectorY = (shiftKey ? 0 : event.deltaY) / svg.clientHeight * animHeight;
						animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
						animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
						svg.viewBox.baseVal.x = animX;
						svg.viewBox.baseVal.y = animY;
						setMinDate(animX);
						setMaxDate(animX + animWidth);
						setMinValue(baseY * 2 + baseHeight - animHeight - animY);
						setMaxValue(baseY * 2 + baseHeight - animY);
						return;
					}
					const ratioX = zoomIntensity ** Math.sign(shiftKey ? event.deltaY : event.deltaX);
					const ratioY = zoomIntensity ** Math.sign(shiftKey ? 0 : event.deltaY);
					const positionX = Math.max(0, Math.min(event.offsetX / svg.clientWidth, 1)) * animWidth;
					const positionY = Math.max(0, Math.min(event.offsetY / svg.clientHeight, 1)) * animHeight;
					animWidth = Math.min(animWidth * ratioX, baseWidth);
					animHeight = Math.min(animHeight * ratioY, baseHeight);
					animX = Math.max(Math.min(animX + positionX * (1 - ratioX), baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(animY + positionY * (1 - ratioY), baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				}, {
					passive: false,
				});
				svg.addEventListener("keydown", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					switch (event.code) {
						case "Space": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "Equal":
						case "NumpadAdd":
						case "Minus":
						case "NumpadSubtract": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.code === "Minus" || event.code === "NumpadSubtract" ? zoomIntensity : 1 / zoomIntensity;
							if (!shiftKey) {
								animHeight = Math.min(animHeight * ratio, baseHeight);
								animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "Digit0":
						case "Numpad0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							if (!shiftKey) {
								animY = baseY;
								animHeight = baseHeight;
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animX = baseX;
							animWidth = baseWidth;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
					}
					switch (event.key) {
						case "ArrowRight": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = 50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowLeft": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = -50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowDown": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = 50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "End": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY + baseHeight - animHeight;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "ArrowUp": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = -50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "Home": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "PageDown":
						case "PageUp":
						case " ": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = event.key === "PageUp" || event.key === " " &amp;&amp; shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "+":
						case "-": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.key === "-" ? 1 / zoomIntensity : zoomIntensity;
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animHeight = Math.min(animHeight * ratio, baseHeight);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animX = baseX;
							animY = baseY;
							animWidth = baseWidth;
							animHeight = baseHeight;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
					}
				});
				svg.addEventListener("focusin", (event) =&gt; {
					if (!event.target.matches(":focus-visible")) {
						return;
					}
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					let {x, y, width, height} = event.target.getBBox();
					width = Math.round(width);
					height = Math.round(height);
					x = Math.round(x);
					y = baseY * 2 + baseHeight - height - Math.round(y);
					if (x + width &lt; animX) {
						animX = x;
						if (width &gt; animWidth) {
							animX += (width - animWidth) / 2;
						}
					} else if (x &gt; animX + animWidth) {
						animX = x + width - animWidth;
						if (width &gt; animWidth) {
							animX -= (width - animWidth) / 2;
						}
					}
					if (y + height &lt; animY) {
						animY = y;
						if (height &gt; animHeight) {
							animY += (height - animHeight) / 2;
						}
					} else if (y &gt; animY + animHeight) {
						animY = y + height - animHeight;
						if (height &gt; animHeight) {
							animY -= (height - animHeight) / 2;
						}
					}
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
			}, {
				once: true,
			});
		}
	</script>
	<foreignObject x="0" y="0" width="100%" height="100%" style="--date-size: 100; --value-size: 30;">
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2020-04-27</text>
		</svg>
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2025-09-30</text>
		</svg>
		<svg viewBox="0 0 30 20">
			<text x="15" y="10" dx="0" dy="2" textLength="10" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">0</text>
		</svg>
		<svg viewBox="0 0 30 20">
			<text x="15" y="10" dx="0" dy="2" textLength="30" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">252</text>
		</svg>
		<svg viewBox="0 0 1982 252" preserveAspectRatio="none" overflow="visible">
			<g transform="translate(0 252) scale(1 -1)" style="--count: 99;">
				<g>
					<rect x="0" y="0" width="1982" height="252"/>
				</g>
				<g style="--index: 0;">
					<path d="M0,0L0,0L0,6L2,6L2,7L6,7L6,8L20,8L20,9L30,9L30,9L111,9L111,10L125,10L125,9L137,9L137,9L187,9L187,9L205,9L205,10L207,10L207,10L212,10L212,11L214,11L214,12L232,12L232,11L263,11L263,11L310,11L310,12L554,12L554,13L612,13L612,14L797,14L797,15L803,15L803,16L823,16L823,17L853,17L853,18L875,18L875,19L877,19L877,20L891,20L891,21L957,21L957,22L988,22L988,22L990,22L990,23L1074,23L1074,24L1099,24L1099,25L1219,25L1219,26L1236,26L1236,27L1279,27L1279,28L1333,28L1333,28L1407,28L1407,29L1467,29L1467,30L1476,30L1476,31L1507,31L1507,32L1560,32L1560,33L1561,33L1561,33L1570,33L1570,34L1616,34L1616,34L1629,34L1629,35L1692,35L1692,36L1704,36L1704,35L1741,35L1741,36L1753,36L1753,37L1754,37L1754,38L1757,38L1757,39L1764,39L1764,39L1769,39L1769,40L1779,40L1779,40L1798,40L1798,40L1820,40L1820,41L1844,41L1844,42L1869,42L1869,43L1879,43L1879,44L1882,44L1882,50L1885,50L1885,50L1899,50L1899,50L1909,50L1909,51L1910,51L1910,51L1911,51L1911,52L1913,52L1913,54L1914,54L1914,54L1917,54L1917,54L1918,54L1918,55L1930,55L1930,56L1937,56L1937,57L1938,57L1938,58L1973,58L1973,59L1982,59" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.jq60ze3q</title>
					</path>
				</g>
				<g style="--index: 1;">
					<path d="M0,0L3,0L3,1L48,1L48,1L50,1L50,3L54,3L54,2L123,2L123,2L124,2L124,4L126,4L126,3L157,3L157,2L185,2L185,2L188,2L188,3L218,3L218,2L220,2L220,2L226,2L226,3L230,3L230,4L238,4L238,5L244,5L244,6L247,6L247,6L251,6L251,7L256,7L256,6L261,6L261,7L264,7L264,8L269,8L269,7L273,7L273,8L307,8L307,9L384,9L384,10L418,10L418,11L420,11L420,12L430,12L430,15L432,15L432,15L527,15L527,16L608,16L608,18L637,18L637,19L640,19L640,20L702,20L702,21L739,21L739,22L771,22L771,23L795,23L795,24L807,24L807,25L814,25L814,26L824,26L824,27L847,27L847,28L853,28L853,29L855,29L855,30L903,30L903,29L916,29L916,28L1918,28L1918,28L1960,28L1960,28L1965,28L1965,29L1966,29L1966,30L1982,30" tabindex="0">
						<title>xd17x94d-9l71pv4l.zqo20y2l</title>
					</path>
				</g>
				<g style="--index: 2;">
					<path d="M0,0L10,0L10,1L31,1L31,2L208,2L208,3L212,3L212,4L221,4L221,4L226,4L226,3L315,3L315,3L675,3L675,3L787,3L787,3L1085,3L1085,3L1496,3L1496,4L1616,4L1616,4L1734,4L1734,5L1745,5L1745,6L1772,6L1772,7L1815,7L1815,7L1884,7L1884,7L1889,7L1889,12L1900,12L1900,13L1937,13L1937,12L1982,12" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.21dzoj3l</title>
					</path>
				</g>
				<g style="--index: 3;">
					<path d="M0,0L13,0L13,3L121,3L121,4L175,4L175,4L208,4L208,5L236,5L236,5L251,5L251,4L259,4L259,5L359,5L359,5L957,5L957,6L958,6L958,7L1037,7L1037,8L1108,8L1108,8L1375,8L1375,9L1473,9L1473,10L1562,10L1562,11L1616,11L1616,11L1624,11L1624,12L1794,12L1794,12L1807,12L1807,11L1811,11L1811,11L1868,11L1868,11L1888,11L1888,17L1889,17L1889,18L1904,18L1904,17L1905,17L1905,18L1922,18L1922,18L1950,18L1950,17L1967,17L1967,18L1982,18" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.xqkjmnnl</title>
					</path>
				</g>
				<g style="--index: 4;">
					<path d="M0,0L13,0L13,4L71,4L71,5L125,5L125,6L134,6L134,6L183,6L183,6L208,6L208,7L210,7L210,8L214,8L214,9L215,9L215,8L217,8L217,9L218,9L218,8L225,8L225,7L240,7L240,6L297,6L297,7L359,7L359,8L660,8L660,9L688,9L688,10L698,10L698,11L701,11L701,12L726,12L726,12L772,12L772,12L807,12L807,12L945,12L945,13L958,13L958,14L1019,14L1019,15L1070,15L1070,15L1211,15L1211,16L1278,16L1278,16L1280,16L1280,15L1572,15L1572,15L1810,15L1810,15L1982,15" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.21g8ownl</title>
					</path>
				</g>
				<g style="--index: 5;">
					<path d="M0,0L14,0L14,2L85,2L85,3L91,3L91,2L205,2L205,2L306,2L306,2L768,2L768,2L775,2L775,2L802,2L802,2L1100,2L1100,2L1273,2L1273,3L1584,3L1584,3L1611,3L1611,3L1616,3L1616,3L1651,3L1651,3L1742,3L1742,4L1786,4L1786,4L1832,4L1832,4L1889,4L1889,8L1901,8L1901,8L1912,8L1912,7L1913,7L1913,7L1937,7L1937,7L1967,7L1967,8L1982,8" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.jqzpyr4l</title>
					</path>
				</g>
				<g style="--index: 6;">
					<path dtabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.81ppdgg1</title>
					</path>
				</g>
				<g style="--index: 7;">
					<path d="M0,0L15,0L15,2L197,2L197,2L210,2L210,2L257,2L257,2L346,2L346,2L415,2L415,3L802,3L802,4L839,4L839,5L973,5L973,6L1021,6L1021,7L1029,7L1029,8L1037,8L1037,9L1067,9L1067,10L1068,10L1068,9L1317,9L1317,9L1474,9L1474,10L1581,10L1581,11L1616,11L1616,11L1723,11L1723,13L1764,13L1764,14L1792,14L1792,15L1801,15L1801,15L1887,15L1887,15L1889,15L1889,18L1898,18L1898,18L1900,18L1900,18L1904,18L1904,18L1912,18L1912,18L1913,18L1913,17L1919,17L1919,17L1921,17L1921,17L1925,17L1925,16L1933,16L1933,15L1934,15L1934,15L1952,15L1952,15L1967,15L1967,15L1982,15" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.jqzpyrgl</title>
					</path>
				</g>
				<g style="--index: 8;">
					<path d="M0,0L15,0L15,1L193,1L193,2L207,2L207,2L208,2L208,2L212,2L212,3L248,3L248,3L315,3L315,3L792,3L792,3L1074,3L1074,3L1122,3L1122,4L1471,4L1471,4L1477,4L1477,5L1563,5L1563,6L1575,6L1575,6L1616,6L1616,6L1700,6L1700,7L1715,7L1715,8L1745,8L1745,9L1773,9L1773,9L1831,9L1831,9L1832,9L1832,10L1889,10L1889,19L1890,19L1890,19L1962,19L1962,19L1963,19L1963,19L1967,19L1967,20L1982,20" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.5q86rxr1</title>
					</path>
				</g>
				<g style="--index: 9;">
					<path d="M0,0L17,0L17,4L25,4L25,4L123,4L123,3L208,3L208,4L211,4L211,5L212,5L212,5L214,5L214,10L219,10L219,9L233,9L233,9L239,9L239,8L314,8L314,7L416,7L416,8L687,8L687,9L779,9L779,9L862,9L862,9L957,9L957,10L958,10L958,11L1002,11L1002,12L1073,12L1073,13L1374,13L1374,14L1465,14L1465,15L1466,15L1466,16L1475,16L1475,17L1513,17L1513,18L1524,18L1524,19L1562,19L1562,18L1570,18L1570,19L1580,19L1580,19L1624,19L1624,20L1700,20L1700,21L1701,21L1701,22L1727,22L1727,23L1731,23L1731,24L1733,24L1733,25L1734,25L1734,26L1736,26L1736,27L1742,27L1742,28L1749,28L1749,29L1753,29L1753,30L1768,30L1768,31L1777,31L1777,32L1783,32L1783,33L1786,33L1786,34L1788,34L1788,34L1801,34L1801,34L1802,34L1802,34L1808,34L1808,33L1827,33L1827,33L1832,33L1832,33L1835,33L1835,33L1845,33L1845,34L1873,34L1873,34L1888,34L1888,39L1894,39L1894,40L1896,40L1896,40L1897,40L1897,41L1900,41L1900,42L1901,42L1901,43L1902,43L1902,44L1907,44L1907,44L1910,44L1910,45L1913,45L1913,47L1914,47L1914,48L1915,48L1915,49L1916,49L1916,49L1918,49L1918,48L1929,48L1929,49L1932,49L1932,50L1934,50L1934,51L1937,51L1937,52L1938,52L1938,53L1939,53L1939,54L1943,54L1943,53L1945,53L1945,54L1948,54L1948,55L1950,55L1950,56L1951,56L1951,57L1967,57L1967,58L1974,58L1974,59L1979,59L1979,59L1980,59L1980,58L1982,58" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.814y7w01</title>
					</path>
				</g>
				<g style="--index: 10;">
					<path d="M0,0L17,0L17,13L79,13L79,14L119,14L119,13L194,13L194,14L210,14L210,15L211,15L211,16L271,16L271,16L278,16L278,16L285,16L285,17L286,17L286,18L290,18L290,19L300,19L300,20L309,20L309,21L326,21L326,22L346,22L346,22L354,22L354,23L357,23L357,24L367,24L367,25L369,25L369,26L523,26L523,27L555,27L555,28L626,28L626,29L631,29L631,30L641,30L641,31L642,31L642,32L662,32L662,33L678,33L678,35L682,35L682,36L684,36L684,37L733,37L733,38L764,38L764,39L792,39L792,40L799,40L799,41L803,41L803,42L804,42L804,43L822,43L822,44L835,44L835,45L847,45L847,46L851,46L851,47L862,47L862,48L863,48L863,49L897,49L897,50L916,50L916,51L919,51L919,52L965,52L965,53L1006,53L1006,54L1054,54L1054,54L1058,54L1058,55L1069,55L1069,56L1098,56L1098,58L1105,58L1105,59L1112,59L1112,60L1147,60L1147,61L1159,61L1159,62L1204,62L1204,63L1210,63L1210,64L1215,64L1215,65L1321,65L1321,66L1328,66L1328,67L1358,67L1358,68L1380,68L1380,67L1467,67L1467,68L1478,68L1478,69L1483,69L1483,70L1498,70L1498,71L1511,71L1511,72L1513,72L1513,72L1524,72L1524,73L1530,73L1530,74L1532,74L1532,76L1586,76L1586,77L1616,77L1616,78L1630,78L1630,79L1659,79L1659,80L1675,80L1675,81L1684,81L1684,82L1697,82L1697,83L1700,83L1700,85L1718,85L1718,87L1723,87L1723,88L1738,88L1738,89L1746,89L1746,90L1753,90L1753,91L1754,91L1754,93L1756,93L1756,94L1759,94L1759,95L1762,95L1762,96L1763,96L1763,97L1768,97L1768,98L1774,98L1774,99L1784,99L1784,100L1787,100L1787,99L1804,99L1804,100L1808,100L1808,100L1814,100L1814,101L1818,101L1818,102L1819,102L1819,103L1830,103L1830,104L1832,104L1832,105L1849,105L1849,106L1875,106L1875,105L1881,105L1881,105L1893,105L1893,105L1910,105L1910,106L1913,106L1913,106L1932,106L1932,106L1935,106L1935,106L1939,106L1939,107L1942,107L1942,108L1947,108L1947,109L1955,109L1955,110L1960,110L1960,110L1961,110L1961,110L1966,110L1966,111L1969,111L1969,112L1971,112L1971,113L1973,113L1973,113L1975,113L1975,113L1982,113" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.xqkjmxnl</title>
					</path>
				</g>
				<g style="--index: 11;">
					<path d="M0,0L22,0L22,8L125,8L125,8L196,8L196,8L210,8L210,9L218,9L218,8L236,8L236,8L242,8L242,8L259,8L259,9L261,9L261,12L262,12L262,11L285,11L285,11L320,11L320,10L354,10L354,11L360,11L360,13L523,13L523,14L589,14L589,15L621,15L621,16L685,16L685,17L713,17L713,18L741,18L741,19L803,19L803,20L813,20L813,21L822,21L822,22L835,22L835,23L838,23L838,24L848,24L848,25L850,25L850,26L865,26L865,26L874,26L874,27L922,27L922,28L923,28L923,29L929,29L929,30L934,30L934,31L996,31L996,32L1003,32L1003,33L1017,33L1017,34L1029,34L1029,35L1056,35L1056,37L1070,37L1070,38L1093,38L1093,39L1138,39L1138,40L1145,40L1145,41L1154,41L1154,43L1170,43L1170,44L1203,44L1203,45L1218,45L1218,46L1280,46L1280,47L1321,47L1321,48L1323,48L1323,49L1356,49L1356,50L1378,50L1378,51L1386,51L1386,51L1465,51L1465,52L1469,52L1469,53L1532,53L1532,54L1563,54L1563,54L1602,54L1602,55L1616,55L1616,56L1621,56L1621,55L1677,55L1677,56L1678,56L1678,57L1713,57L1713,58L1724,58L1724,59L1733,59L1733,60L1738,60L1738,61L1742,61L1742,62L1768,62L1768,63L1769,63L1769,64L1770,64L1770,65L1773,65L1773,66L1774,66L1774,67L1802,67L1802,67L1819,67L1819,68L1830,68L1830,69L1832,69L1832,70L1861,70L1861,70L1869,70L1869,71L1881,71L1881,76L1882,76L1882,77L1886,77L1886,77L1894,77L1894,77L1896,77L1896,78L1921,78L1921,78L1924,78L1924,79L1927,79L1927,80L1932,80L1932,81L1938,81L1938,82L1943,82L1943,81L1944,81L1944,82L1946,82L1946,82L1956,82L1956,83L1969,83L1969,84L1972,84L1972,84L1973,84L1973,83L1977,83L1977,83L1981,83L1981,84L1982,84" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.21dz3e4l</title>
					</path>
				</g>
				<g style="--index: 12;">
					<path d="M0,0L23,0L23,5L207,5L207,6L215,6L215,6L230,6L230,7L305,7L305,7L923,7L923,7L1011,7L1011,8L1085,8L1085,9L1086,9L1086,10L1117,10L1117,11L1280,11L1280,12L1432,12L1432,13L1442,13L1442,14L1475,14L1475,15L1612,15L1612,15L1622,15L1622,15L1624,15L1624,16L1710,16L1710,16L1712,16L1712,16L1772,16L1772,17L1773,17L1773,16L1783,16L1783,16L1885,16L1885,17L1888,17L1888,24L1894,24L1894,24L1895,24L1895,23L1904,23L1904,23L1905,23L1905,23L1910,23L1910,23L1913,23L1913,24L1914,24L1914,24L1915,24L1915,24L1916,24L1916,23L1918,23L1918,22L1929,22L1929,23L1943,23L1943,24L1951,24L1951,25L1953,25L1953,27L1967,27L1967,28L1975,28L1975,29L1982,29" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.81ppd5g1</title>
					</path>
				</g>
				<g style="--index: 13;">
					<path d="M0,0L24,0L24,2L109,2L109,2L179,2L179,3L207,3L207,3L210,3L210,4L230,4L230,5L234,5L234,6L238,6L238,5L239,5L239,4L687,4L687,5L758,5L758,5L767,5L767,6L832,6L832,7L957,7L957,8L958,8L958,9L961,9L961,10L965,10L965,11L1052,11L1052,12L1059,12L1059,12L1205,12L1205,13L1322,13L1322,14L1467,14L1467,15L1472,15L1472,15L1474,15L1474,16L1495,16L1495,17L1562,17L1562,16L1590,16L1590,16L1598,16L1598,17L1616,17L1616,17L1624,17L1624,18L1663,18L1663,19L1665,19L1665,19L1684,19L1684,20L1689,20L1689,21L1779,21L1779,21L1783,21L1783,22L1791,22L1791,23L1793,23L1793,24L1808,24L1808,23L1832,23L1832,23L1877,23L1877,23L1888,23L1888,31L1893,31L1893,32L1899,32L1899,33L1902,33L1902,33L1913,33L1913,34L1915,34L1915,35L1916,35L1916,35L1923,35L1923,36L1932,36L1932,37L1933,37L1933,36L1937,36L1937,38L1938,38L1938,39L1945,39L1945,41L1949,41L1949,41L1951,41L1951,43L1967,43L1967,44L1973,44L1973,45L1974,45L1974,45L1982,45" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.z19m8p0l</title>
					</path>
				</g>
				<g style="--index: 14;">
					<path d="M0,0L24,0L24,5L90,5L90,5L187,5L187,6L210,6L210,7L533,7L533,7L683,7L683,8L711,8L711,9L726,9L726,10L738,10L738,9L781,9L781,10L801,10L801,10L822,10L822,11L834,11L834,12L848,12L848,13L876,13L876,14L954,14L954,15L1003,15L1003,16L1053,16L1053,16L1058,16L1058,17L1112,17L1112,18L1170,18L1170,19L1204,19L1204,20L1210,20L1210,21L1245,21L1245,22L1321,22L1321,23L1327,23L1327,24L1422,24L1422,25L1495,25L1495,26L1539,26L1539,27L1567,27L1567,28L1589,28L1589,29L1613,29L1613,28L1659,28L1659,29L1709,29L1709,30L1742,30L1742,31L1743,31L1743,31L1808,31L1808,31L1814,31L1814,32L1819,32L1819,33L1830,33L1830,34L1845,34L1845,35L1846,35L1846,34L1862,34L1862,35L1878,35L1878,36L1881,36L1881,40L1891,40L1891,39L1894,39L1894,40L1902,40L1902,41L1911,41L1911,42L1913,42L1913,43L1915,43L1915,44L1920,44L1920,45L1921,45L1921,46L1926,46L1926,45L1927,45L1927,46L1937,46L1937,45L1939,45L1939,46L1955,46L1955,48L1969,48L1969,49L1974,49L1974,50L1980,50L1980,51L1982,51" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.21g82pnl</title>
					</path>
				</g>
				<g style="--index: 15;">
					<path d="M0,0L24,0L24,4L210,4L210,5L211,5L211,6L240,6L240,6L305,6L305,6L407,6L407,7L688,7L688,8L698,8L698,9L765,9L765,9L863,9L863,10L926,10L926,10L959,10L959,11L1002,11L1002,12L1012,12L1012,13L1030,13L1030,14L1038,14L1038,15L1215,15L1215,16L1238,16L1238,17L1284,17L1284,18L1348,18L1348,19L1373,19L1373,20L1391,20L1391,21L1392,21L1392,20L1466,20L1466,21L1477,21L1477,22L1512,22L1512,23L1598,23L1598,24L1600,24L1600,25L1616,25L1616,26L1624,26L1624,27L1625,27L1625,27L1746,27L1746,28L1782,28L1782,28L1844,28L1844,29L1854,29L1854,30L1888,30L1888,30L1891,30L1891,29L1899,29L1899,29L1901,29L1901,30L1902,30L1902,31L1913,31L1913,32L1914,32L1914,33L1920,33L1920,32L1928,32L1928,33L1932,33L1932,33L1967,33L1967,35L1973,35L1973,36L1975,36L1975,37L1981,37L1981,37L1982,37" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.gq7jzvvq</title>
					</path>
				</g>
				<g style="--index: 16;">
					<path d="M0,0L25,0L25,3L83,3L83,5L85,5L85,4L119,4L119,4L123,4L123,3L200,3L200,4L207,4L207,4L210,4L210,5L232,5L232,6L236,6L236,6L258,6L258,5L263,5L263,6L309,6L309,7L420,7L420,8L702,8L702,9L766,9L766,10L767,10L767,11L768,11L768,10L794,10L794,10L803,10L803,11L808,11L808,12L899,12L899,13L904,13L904,14L958,14L958,15L960,15L960,16L965,16L965,17L1073,17L1073,17L1099,17L1099,18L1104,18L1104,19L1136,19L1136,20L1273,20L1273,21L1294,21L1294,22L1345,22L1345,23L1407,23L1407,24L1495,24L1495,25L1547,25L1547,25L1566,25L1566,25L1571,25L1571,24L1580,24L1580,25L1598,25L1598,25L1616,25L1616,25L1704,25L1704,24L1708,24L1708,25L1710,25L1710,26L1744,26L1744,27L1772,27L1772,27L1786,27L1786,26L1810,26L1810,26L1811,26L1811,26L1820,26L1820,27L1822,27L1822,27L1882,27L1882,32L1889,32L1889,32L1897,32L1897,32L1899,32L1899,32L1909,32L1909,33L1912,33L1912,33L1914,33L1914,34L1915,34L1915,34L1917,34L1917,34L1924,34L1924,34L1927,34L1927,33L1935,33L1935,33L1942,33L1942,33L1945,33L1945,33L1963,33L1963,33L1966,33L1966,33L1980,33L1980,34L1982,34" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.81wp50oq</title>
					</path>
				</g>
				<g style="--index: 17;">
					<path d="M0,0L25,0L25,4L71,4L71,4L185,4L185,5L187,5L187,5L205,5L205,6L207,6L207,6L214,6L214,7L233,7L233,7L308,7L308,7L779,7L779,7L803,7L803,7L845,7L845,8L951,8L951,8L958,8L958,9L1017,9L1017,10L1075,10L1075,11L1099,11L1099,12L1210,12L1210,13L1257,13L1257,13L1279,13L1279,14L1407,14L1407,14L1571,14L1571,14L1768,14L1768,15L1787,15L1787,15L1788,15L1788,15L1789,15L1789,15L1820,15L1820,16L1882,16L1882,19L1885,19L1885,19L1889,19L1889,19L1914,19L1914,21L1919,21L1919,21L1920,21L1920,21L1925,21L1925,21L1929,21L1929,21L1946,21L1946,22L1982,22" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.5lermx5q</title>
					</path>
				</g>
				<g style="--index: 18;">
					<path d="M0,0L27,0L27,5L29,5L29,5L173,5L173,6L200,6L200,7L214,7L214,8L247,8L247,9L249,9L249,8L305,8L305,8L308,8L308,9L640,9L640,8L645,8L645,9L699,9L699,10L700,10L700,9L767,9L767,10L785,10L785,11L803,11L803,12L804,12L804,13L825,13L825,14L831,14L831,15L861,15L861,15L866,15L866,16L934,16L934,17L940,17L940,17L1047,17L1047,18L1099,18L1099,19L1174,19L1174,19L1368,19L1368,20L1407,20L1407,21L1464,21L1464,22L1467,22L1467,23L1473,23L1473,22L1503,22L1503,22L1571,22L1571,22L1575,22L1575,23L1576,23L1576,22L1598,22L1598,22L1616,22L1616,22L1775,22L1775,21L1783,21L1783,21L1787,21L1787,21L1820,21L1820,22L1822,22L1822,22L1877,22L1877,22L1881,22L1881,22L1882,22L1882,31L1889,31L1889,31L1917,31L1917,31L1918,31L1918,32L1937,32L1937,34L1945,34L1945,35L1952,35L1952,36L1966,36L1966,37L1979,37L1979,37L1982,37" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.rqvpey7q</title>
					</path>
				</g>
				<g style="--index: 19;">
					<path d="M0,0L28,0L28,5L125,5L125,5L134,5L134,6L210,6L210,7L219,7L219,6L250,6L250,6L259,6L259,7L260,7L260,8L285,8L285,8L309,8L309,7L359,7L359,8L799,8L799,9L803,9L803,10L822,10L822,11L834,11L834,12L848,12L848,13L852,13L852,14L863,14L863,15L866,15L866,15L928,15L928,16L955,16L955,17L967,17L967,17L1003,17L1003,18L1020,18L1020,19L1044,19L1044,20L1056,20L1056,22L1070,22L1070,23L1124,23L1124,23L1153,23L1153,23L1166,23L1166,24L1171,24L1171,25L1314,25L1314,26L1321,26L1321,27L1324,27L1324,28L1346,28L1346,29L1385,29L1385,30L1388,30L1388,31L1398,31L1398,30L1454,30L1454,31L1465,31L1465,32L1469,32L1469,33L1531,33L1531,34L1541,34L1541,36L1563,36L1563,36L1564,36L1564,37L1567,37L1567,38L1586,38L1586,39L1595,39L1595,40L1616,40L1616,41L1646,41L1646,42L1666,42L1666,43L1699,43L1699,43L1703,43L1703,44L1709,44L1709,45L1711,45L1711,46L1733,46L1733,47L1749,47L1749,48L1753,48L1753,49L1757,49L1757,50L1758,50L1758,51L1762,51L1762,52L1769,52L1769,53L1770,53L1770,54L1771,54L1771,54L1777,54L1777,54L1778,54L1778,54L1796,54L1796,55L1798,55L1798,55L1811,55L1811,54L1814,54L1814,55L1819,55L1819,56L1830,56L1830,57L1832,57L1832,58L1845,58L1845,58L1850,58L1850,58L1853,58L1853,59L1854,59L1854,59L1861,59L1861,58L1864,58L1864,59L1865,59L1865,59L1881,59L1881,61L1892,61L1892,62L1893,62L1893,62L1896,62L1896,63L1907,63L1907,64L1915,64L1915,65L1921,65L1921,65L1932,65L1932,66L1933,66L1933,65L1938,65L1938,66L1939,66L1939,67L1944,67L1944,68L1956,68L1956,69L1969,69L1969,70L1972,70L1972,70L1980,70L1980,70L1982,70" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.klrpy2jq</title>
					</path>
				</g>
				<g style="--index: 20;">
					<path d="M0,0L28,0L28,7L53,7L53,8L122,8L122,9L136,9L136,10L165,10L165,12L193,12L193,13L194,13L194,14L195,14L195,15L209,15L209,16L212,16L212,17L214,17L214,18L215,18L215,19L216,19L216,20L229,20L229,21L231,21L231,22L234,22L234,23L264,23L264,22L275,22L275,22L289,22L289,23L306,23L306,24L309,24L309,25L344,25L344,26L348,26L348,27L352,27L352,28L366,28L366,29L372,29L372,30L378,30L378,31L402,31L402,32L416,32L416,33L421,33L421,34L429,34L429,34L450,34L450,35L529,35L529,36L538,36L538,37L549,37L549,38L552,38L552,40L573,40L573,41L585,41L585,42L588,42L588,43L604,43L604,44L623,44L623,45L627,45L627,46L628,46L628,47L639,47L639,48L642,48L642,49L654,49L654,50L657,50L657,51L662,51L662,52L669,52L669,53L671,53L671,54L678,54L678,55L680,55L680,56L685,56L685,57L687,57L687,58L688,58L688,59L692,59L692,60L695,60L695,61L710,61L710,62L725,62L725,63L733,63L733,65L764,65L764,66L765,66L765,67L766,67L766,68L769,68L769,69L771,69L771,70L799,70L799,71L801,71L801,72L802,72L802,71L803,71L803,72L807,72L807,74L810,74L810,75L811,75L811,76L812,76L812,77L822,77L822,79L840,79L840,80L842,80L842,81L845,81L845,82L847,82L847,84L849,84L849,85L852,85L852,87L854,87L854,88L859,88L859,90L867,90L867,91L868,91L868,92L872,92L872,93L875,93L875,94L878,94L878,95L883,95L883,96L893,96L893,97L895,97L895,98L897,98L897,99L898,99L898,100L900,100L900,101L901,101L901,102L923,102L923,103L930,103L930,104L947,104L947,105L951,105L951,106L955,106L955,107L959,107L959,108L965,108L965,109L978,109L978,110L983,110L983,111L988,111L988,112L996,112L996,113L997,113L997,114L1002,114L1002,114L1015,114L1015,115L1020,115L1020,116L1022,116L1022,118L1026,118L1026,120L1027,120L1027,121L1036,121L1036,122L1044,122L1044,123L1049,123L1049,124L1054,124L1054,125L1058,125L1058,126L1069,126L1069,127L1070,127L1070,128L1074,128L1074,129L1078,129L1078,130L1080,130L1080,131L1083,131L1083,132L1084,132L1084,133L1104,133L1104,134L1105,134L1105,135L1112,135L1112,136L1114,136L1114,137L1119,137L1119,138L1126,138L1126,139L1127,139L1127,140L1129,140L1129,141L1139,141L1139,142L1153,142L1153,143L1160,143L1160,144L1163,144L1163,144L1183,144L1183,145L1194,145L1194,146L1235,146L1235,147L1247,147L1247,148L1268,148L1268,149L1274,149L1274,150L1280,150L1280,152L1286,152L1286,153L1294,153L1294,154L1321,154L1321,155L1350,155L1350,156L1375,156L1375,157L1417,157L1417,158L1418,158L1418,159L1438,159L1438,160L1441,160L1441,161L1448,161L1448,162L1473,162L1473,163L1483,163L1483,164L1485,164L1485,165L1491,165L1491,166L1521,166L1521,167L1547,167L1547,169L1554,169L1554,170L1562,170L1562,171L1575,171L1575,172L1576,172L1576,172L1583,172L1583,173L1588,173L1588,174L1592,174L1592,175L1594,175L1594,176L1604,176L1604,176L1616,176L1616,177L1624,177L1624,178L1644,178L1644,179L1649,179L1649,180L1650,180L1650,182L1654,182L1654,181L1665,181L1665,182L1677,182L1677,183L1683,183L1683,184L1686,184L1686,185L1692,185L1692,186L1695,186L1695,187L1723,187L1723,188L1729,188L1729,189L1731,189L1731,190L1741,190L1741,191L1742,191L1742,192L1746,192L1746,193L1752,193L1752,195L1754,195L1754,196L1757,196L1757,197L1762,197L1762,198L1771,198L1771,199L1778,199L1778,198L1780,198L1780,200L1785,200L1785,201L1786,201L1786,203L1789,203L1789,204L1792,204L1792,205L1796,205L1796,205L1802,205L1802,204L1807,204L1807,203L1809,203L1809,204L1810,204L1810,205L1812,205L1812,205L1813,205L1813,206L1814,206L1814,207L1818,207L1818,208L1819,208L1819,209L1821,209L1821,210L1826,210L1826,211L1830,211L1830,212L1866,212L1866,213L1881,213L1881,215L1887,215L1887,215L1893,215L1893,216L1898,216L1898,218L1905,218L1905,219L1910,219L1910,220L1914,220L1914,221L1918,221L1918,222L1920,222L1920,224L1922,224L1922,225L1935,225L1935,226L1943,226L1943,227L1945,227L1945,228L1954,228L1954,229L1965,229L1965,230L1969,230L1969,231L1972,231L1972,232L1982,232" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.p12dx87q</title>
					</path>
				</g>
				<g style="--index: 21;">
					<path d="M0,0L28,0L28,5L125,5L125,4L128,4L128,3L190,3L190,3L207,3L207,3L212,3L212,4L237,4L237,4L264,4L264,4L318,4L318,4L498,4L498,5L507,5L507,4L803,4L803,4L862,4L862,4L889,4L889,5L958,5L958,6L1069,6L1069,7L1125,7L1125,7L1143,7L1143,8L1210,8L1210,9L1249,9L1249,10L1407,10L1407,11L1469,11L1469,12L1563,12L1563,13L1616,13L1616,13L1709,13L1709,14L1732,14L1732,13L1742,13L1742,14L1807,14L1807,14L1808,14L1808,14L1809,14L1809,14L1820,14L1820,14L1830,14L1830,14L1837,14L1837,14L1882,14L1882,20L1900,20L1900,20L1921,20L1921,20L1923,20L1923,21L1942,21L1942,21L1966,21L1966,22L1982,22" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.9qj0x8el</title>
					</path>
				</g>
				<g style="--index: 22;">
					<path d="M0,0L29,0L29,3L208,3L208,4L259,4L259,5L275,5L275,5L472,5L472,5L555,5L555,6L708,6L708,7L781,7L781,7L782,7L782,7L1026,7L1026,8L1029,8L1029,9L1123,9L1123,10L1134,10L1134,11L1144,11L1144,11L1174,11L1174,12L1244,12L1244,12L1616,12L1616,12L1680,12L1680,12L1692,12L1692,13L1723,13L1723,13L1741,13L1741,13L1780,13L1780,14L1801,14L1801,13L1851,13L1851,13L1855,13L1855,13L1867,13L1867,13L1882,13L1882,12L1885,12L1885,12L1888,12L1888,21L1890,21L1890,22L1914,22L1914,23L1937,23L1937,23L1948,23L1948,24L1962,24L1962,25L1963,25L1963,24L1967,24L1967,25L1982,25" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.4lxpe62q</title>
					</path>
				</g>
				<g style="--index: 23;">
					<path d="M0,0L29,0L29,1L82,1L82,1L208,1L208,1L293,1L293,1L637,1L637,1L1068,1L1068,1L1616,1L1616,1L1742,1L1742,2L1754,2L1754,2L1764,2L1764,2L1778,2L1778,2L1790,2L1790,2L1793,2L1793,2L1794,2L1794,2L1889,2L1889,11L1912,11L1912,11L1937,11L1937,11L1967,11L1967,12L1982,12" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.klrp6e0q</title>
					</path>
				</g>
				<g style="--index: 24;">
					<path d="M0,0L30,0L30,8L125,8L125,7L189,7L189,8L207,8L207,9L214,9L214,9L237,9L237,8L300,8L300,9L676,9L676,10L708,10L708,11L734,11L734,12L761,12L761,12L803,12L803,13L821,13L821,14L823,14L823,15L827,15L827,16L829,16L829,17L861,17L861,18L862,18L862,17L891,17L891,18L938,18L938,19L945,19L945,20L957,20L957,21L1009,21L1009,21L1021,21L1021,22L1062,22L1062,23L1068,23L1068,24L1071,24L1071,24L1078,24L1078,25L1087,25L1087,26L1100,26L1100,27L1129,27L1129,27L1141,27L1141,28L1210,28L1210,29L1234,29L1234,30L1243,30L1243,31L1279,31L1279,32L1282,32L1282,33L1284,33L1284,34L1325,34L1325,35L1407,35L1407,35L1434,35L1434,36L1436,36L1436,37L1450,37L1450,38L1466,38L1466,39L1467,39L1467,40L1484,40L1484,41L1489,41L1489,42L1493,42L1493,42L1541,42L1541,43L1560,43L1560,43L1570,43L1570,44L1593,44L1593,44L1598,44L1598,45L1616,45L1616,45L1664,45L1664,45L1665,45L1665,45L1701,45L1701,46L1731,46L1731,48L1739,48L1739,49L1741,49L1741,50L1752,50L1752,51L1758,51L1758,52L1760,52L1760,53L1762,53L1762,54L1769,54L1769,54L1771,54L1771,55L1781,55L1781,56L1785,56L1785,58L1786,58L1786,59L1790,59L1790,60L1800,60L1800,60L1808,60L1808,61L1817,61L1817,61L1820,61L1820,62L1821,62L1821,61L1830,61L1830,61L1835,61L1835,62L1874,62L1874,63L1878,63L1878,64L1879,64L1879,64L1882,64L1882,73L1883,73L1883,74L1884,74L1884,75L1890,75L1890,75L1897,75L1897,77L1903,77L1903,78L1911,78L1911,78L1912,78L1912,77L1923,77L1923,77L1925,77L1925,77L1929,77L1929,79L1933,79L1933,82L1934,82L1934,82L1937,82L1937,83L1945,83L1945,85L1952,85L1952,86L1957,86L1957,87L1967,87L1967,88L1972,88L1972,89L1978,89L1978,90L1982,90" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.013856dq</title>
					</path>
				</g>
				<g style="--index: 25;">
					<path d="M0,0L31,0L31,2L119,2L119,1L208,1L208,2L254,2L254,2L270,2L270,1L301,1L301,2L675,2L675,2L1090,2L1090,2L1594,2L1594,2L1616,2L1616,2L1745,2L1745,3L1774,3L1774,4L1787,4L1787,4L1810,4L1810,4L1889,4L1889,6L1902,6L1902,6L1903,6L1903,6L1982,6" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.klrp6ejq</title>
					</path>
				</g>
				<g style="--index: 26;">
					<path d="M0,0L31,0L31,1L125,1L125,1L183,1L183,1L196,1L196,3L202,3L202,2L207,2L207,3L208,3L208,2L263,2L263,1L293,1L293,2L957,2L957,3L1074,3L1074,3L1273,3L1273,3L1471,3L1471,3L1564,3L1564,3L1616,3L1616,3L1745,3L1745,4L1797,4L1797,4L1813,4L1813,4L1889,4L1889,8L1890,8L1890,8L1906,8L1906,8L1912,8L1912,8L1937,8L1937,8L1967,8L1967,9L1982,9" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.gq7jzvnq</title>
					</path>
				</g>
				<g style="--index: 27;">
					<path dtabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.jqzpx3gl</title>
					</path>
				</g>
				<g style="--index: 28;">
					<path d="M0,0L33,0L33,6L56,6L56,5L126,5L126,6L210,6L210,6L238,6L238,6L259,6L259,7L278,7L278,7L300,7L300,7L977,7L977,7L1079,7L1079,8L1167,8L1167,8L1321,8L1321,9L1335,9L1335,8L1572,8L1572,8L1616,8L1616,8L1665,8L1665,9L1766,9L1766,10L1772,10L1772,10L1782,10L1782,10L1793,10L1793,10L1796,10L1796,10L1799,10L1799,11L1819,11L1819,11L1830,11L1830,12L1838,12L1838,12L1862,12L1862,12L1881,12L1881,19L1889,19L1889,19L1894,19L1894,19L1902,19L1902,20L1926,20L1926,21L1938,21L1938,22L1949,22L1949,21L1955,21L1955,22L1965,22L1965,23L1969,23L1969,24L1976,24L1976,25L1982,25" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.gq7jrxvq</title>
					</path>
				</g>
				<g style="--index: 29;">
					<path d="M0,0L35,0L35,2L123,2L123,3L188,3L188,3L214,3L214,3L243,3L243,3L251,3L251,4L316,4L316,4L800,4L800,4L803,4L803,4L1338,4L1338,4L1406,4L1406,4L1474,4L1474,5L1572,5L1572,5L1589,5L1589,6L1616,6L1616,6L1776,6L1776,6L1787,6L1787,6L1807,6L1807,6L1882,6L1882,8L1891,8L1891,7L1959,7L1959,7L1966,7L1966,8L1982,8" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.5lmkgmjq</title>
					</path>
				</g>
				<g style="--index: 30;">
					<path d="M0,0L35,0L35,2L188,2L188,2L207,2L207,2L253,2L253,3L324,3L324,3L1367,3L1367,3L1481,3L1481,3L1616,3L1616,3L1764,3L1764,3L1774,3L1774,3L1800,3L1800,3L1889,3L1889,9L1890,9L1890,9L1967,9L1967,10L1972,10L1972,10L1982,10" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.21g8owxl</title>
					</path>
				</g>
				<g style="--index: 31;">
					<path d="M0,0L35,0L35,3L188,3L188,3L207,3L207,3L259,3L259,4L315,4L315,3L754,3L754,3L978,3L978,3L1572,3L1572,3L1616,3L1616,3L1689,3L1689,3L1694,3L1694,3L1702,3L1702,3L1712,3L1712,3L1778,3L1778,3L1799,3L1799,3L1888,3L1888,11L1889,11L1889,11L1924,11L1924,11L1967,11L1967,12L1982,12" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.p12dx07q</title>
					</path>
				</g>
				<g style="--index: 32;">
					<path d="M0,0L48,0L48,6L155,6L155,6L194,6L194,7L207,7L207,7L219,7L219,8L233,8L233,9L276,9L276,9L310,9L310,10L343,10L343,10L416,10L416,11L536,11L536,12L551,12L551,13L681,13L681,14L683,14L683,15L743,15L743,16L797,16L797,17L841,17L841,18L876,18L876,19L931,19L931,20L967,20L967,21L974,21L974,22L1029,22L1029,23L1034,23L1034,24L1035,24L1035,25L1036,25L1036,26L1038,26L1038,27L1058,27L1058,28L1064,28L1064,29L1074,29L1074,30L1075,30L1075,31L1099,31L1099,32L1100,32L1100,33L1124,33L1124,34L1133,34L1133,35L1147,35L1147,36L1175,36L1175,37L1209,37L1209,38L1254,38L1254,39L1322,39L1322,40L1335,40L1335,39L1406,39L1406,40L1419,40L1419,41L1451,41L1451,42L1501,42L1501,43L1502,43L1502,44L1504,44L1504,45L1513,45L1513,46L1548,46L1548,47L1559,47L1559,48L1585,48L1585,49L1586,49L1586,51L1616,51L1616,52L1639,52L1639,53L1652,53L1652,54L1688,54L1688,55L1691,55L1691,56L1717,56L1717,57L1723,57L1723,58L1733,58L1733,59L1735,59L1735,60L1736,60L1736,61L1760,61L1760,62L1762,62L1762,63L1763,63L1763,64L1764,64L1764,65L1781,65L1781,66L1782,66L1782,67L1783,67L1783,68L1786,68L1786,69L1820,69L1820,70L1889,70L1889,71L1892,71L1892,70L1895,70L1895,71L1896,71L1896,71L1897,71L1897,71L1902,71L1902,72L1903,72L1903,73L1908,73L1908,74L1912,74L1912,75L1913,75L1913,75L1917,75L1917,75L1918,75L1918,76L1921,76L1921,76L1923,76L1923,77L1929,77L1929,77L1931,77L1931,77L1941,77L1941,78L1942,78L1942,79L1944,79L1944,80L1948,80L1948,79L1956,79L1956,79L1966,79L1966,81L1972,81L1972,82L1982,82" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.810zwdwq</title>
					</path>
				</g>
				<g style="--index: 33;">
					<path d="M0,0L154,0L154,1L245,1L245,1L256,1L256,2L775,2L775,2L1690,2L1690,2L1695,2L1695,3L1777,3L1777,3L1880,3L1880,3L1974,3L1974,3L1982,3" tabindex="0">
						<title>l_495zlx39-9kv66g32-onv7r45n.9qj08g7l</title>
					</path>
				</g>
				<g style="--index: 34;">
					<path d="M0,0L155,0L155,2L214,2L214,2L254,2L254,3L255,3L255,3L276,3L276,3L1529,3L1529,4L1835,4L1835,5L1910,5L1910,5L1920,5L1920,5L1948,5L1948,5L1964,5L1964,5L1982,5" tabindex="0">
						<title>l_o9xo3rp9-9kv66g32-onv7r45n.9qj08g7l</title>
					</path>
				</g>
				<g style="--index: 35;">
					<path d="M0,0L158,0L158,1L281,1L281,2L411,2L411,3L422,3L422,3L465,3L465,3L1282,3L1282,4L1324,4L1324,4L1327,4L1327,3L1420,3L1420,3L1441,3L1441,3L1447,3L1447,3L1471,3L1471,3L1495,3L1495,3L1536,3L1536,3L1574,3L1574,3L1761,3L1761,4L1915,4L1915,4L1938,4L1938,13L1970,13L1970,14L1982,14" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.9qj0kxel</title>
					</path>
				</g>
				<g style="--index: 36;">
					<path d="M0,0L183,0L183,1L234,1L234,2L244,2L244,2L268,2L268,3L279,3L279,3L741,3L741,3L888,3L888,3L1820,3L1820,3L1930,3L1930,9L1951,9L1951,10L1963,10L1963,11L1982,11" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.81wpx5oq</title>
					</path>
				</g>
				<g style="--index: 37;">
					<path d="M0,0L184,0L184,1L207,1L207,1L270,1L270,2L467,2L467,2L500,2L500,3L1084,3L1084,3L1321,3L1321,4L1655,4L1655,4L1765,4L1765,4L1886,4L1886,4L1919,4L1919,4L1930,4L1930,6L1936,6L1936,6L1964,6L1964,6L1982,6" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.zqop6rp1</title>
					</path>
				</g>
				<g style="--index: 38;">
					<path d="M0,0L185,0L185,1L207,1L207,1L215,1L215,1L226,1L226,1L250,1L250,2L924,2L924,2L974,2L974,1L1321,1L1321,2L1887,2L1887,2L1909,2L1909,2L1920,2L1920,2L1930,2L1930,4L1963,4L1963,4L1982,4" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.0138n5dq</title>
					</path>
				</g>
				<g style="--index: 39;">
					<path d="M0,0L186,0L186,1L194,1L194,2L206,2L206,2L227,2L227,3L304,3L304,3L965,3L965,4L1123,4L1123,4L1270,4L1270,5L1305,5L1305,5L1470,5L1470,5L1745,5L1745,5L1891,5L1891,5L1921,5L1921,6L1930,6L1930,7L1933,7L1933,7L1943,7L1943,7L1982,7" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.rqvp5e7q</title>
					</path>
				</g>
				<g style="--index: 40;">
					<path d="M0,0L187,0L187,1L228,1L228,1L268,1L268,2L525,2L525,3L890,3L890,3L1559,3L1559,4L1889,4L1889,5L1900,5L1900,5L1931,5L1931,10L1982,10" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.5ler7m5q</title>
					</path>
				</g>
				<g style="--index: 41;">
					<path d="M0,0L188,0L188,1L194,1L194,2L218,2L218,2L306,2L306,1L1890,1L1890,1L1924,1L1924,1L1925,1L1925,1L1931,1L1931,7L1945,7L1945,8L1982,8" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.0q5njgmq</title>
					</path>
				</g>
				<g style="--index: 42;">
					<path d="M0,0L189,0L189,1L194,1L194,2L200,2L200,1L230,1L230,1L736,1L736,1L1924,1L1924,1L1925,1L1925,1L1931,1L1931,4L1982,4" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.4lxp7e2q</title>
					</path>
				</g>
				<g style="--index: 43;">
					<path d="M0,0L190,0L190,1L207,1L207,1L220,1L220,1L250,1L250,2L308,2L308,2L869,2L869,2L957,2L957,3L1056,3L1056,4L1083,4L1083,4L1474,4L1474,4L1771,4L1771,4L1793,4L1793,4L1892,4L1892,5L1893,5L1893,5L1914,5L1914,4L1925,4L1925,5L1926,5L1926,5L1931,5L1931,15L1936,15L1936,14L1963,14L1963,14L1982,14" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.814y0701</title>
					</path>
				</g>
				<g style="--index: 44;">
					<path d="M0,0L191,0L191,1L194,1L194,2L201,2L201,2L207,2L207,2L252,2L252,2L310,2L310,3L346,3L346,2L1959,2L1959,2L1982,2" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.jq606z3q</title>
					</path>
				</g>
				<g style="--index: 45;">
					<path d="M0,0L192,0L192,1L195,1L195,2L282,2L282,2L309,2L309,3L419,3L419,3L771,3L771,3L915,3L915,3L1323,3L1323,4L1932,4L1932,8L1937,8L1937,9L1938,9L1938,10L1982,10" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.z19mo80l</title>
					</path>
				</g>
				<g style="--index: 46;">
					<path d="M0,0L196,0L196,2L214,2L214,2L254,2L254,2L260,2L260,3L276,3L276,3L867,3L867,3L1323,3L1323,4L1421,4L1421,3L1530,3L1530,4L1581,4L1581,4L1590,4L1590,5L1728,5L1728,5L1803,5L1803,5L1804,5L1804,5L1878,5L1878,5L1879,5L1879,5L1909,5L1909,5L1910,5L1910,5L1933,5L1933,6L1945,6L1945,6L1972,6L1972,6L1975,6L1975,6L1982,6" tabindex="0">
						<title>l_r9gn1qpd-9kv66g32-onv7r45n.9qj08g7l</title>
					</path>
				</g>
				<g style="--index: 47;">
					<path d="M0,0L196,0L196,2L240,2L240,2L1775,2L1775,3L1779,3L1779,3L1909,3L1909,3L1922,3L1922,3L1982,3" tabindex="0">
						<title>l_rdqo542w-9kv66g32-onv7r45n.9qj08g7l</title>
					</path>
				</g>
				<g style="--index: 48;">
					<path d="M0,0L198,0L198,1L246,1L246,1L354,1L354,2L433,2L433,2L1982,2" tabindex="0">
						<title>7dg65oxk-r8r1zm0n.gq7dw7vq</title>
					</path>
				</g>
				<g style="--index: 49;">
					<path d="M0,0L255,0L255,7L258,7L258,6L375,6L375,7L387,7L387,8L537,8L537,8L557,8L557,9L852,9L852,10L1818,10L1818,10L1959,10L1959,10L1966,10L1966,10L1982,10" tabindex="0">
						<title>l_r9gn1qpd-xd144xzd-38dz6v1n.814y45w1</title>
					</path>
				</g>
				<g style="--index: 50;">
					<path d="M0,0L257,0L257,2L258,2L258,1L260,1L260,2L775,2L775,2L1958,2L1958,2L1965,2L1965,2L1982,2" tabindex="0">
						<title>l_rdqo542w-xd144xzd-ylpk6768.qvv3eeyq</title>
					</path>
				</g>
				<g style="--index: 51;">
					<path d="M0,0L257,0L257,5L258,5L258,4L1116,4L1116,4L1817,4L1817,4L1959,4L1959,4L1982,4" tabindex="0">
						<title>l_o9xo3rp9-xd144xzd-ql69e17l.ln8rzznl</title>
					</path>
				</g>
				<g style="--index: 52;">
					<path d="M0,0L257,0L257,3L258,3L258,2L333,2L333,2L777,2L777,2L810,2L810,3L1741,3L1741,3L1964,3L1964,3L1966,3L1966,3L1982,3" tabindex="0">
						<title>l_495zlx39-xd144xzd-onvyv77n.lmozgg01</title>
					</path>
				</g>
				<g style="--index: 53;">
					<path d="M0,0L259,0L259,1L276,1L276,2L375,2L375,3L390,3L390,4L412,4L412,8L445,8L445,7L465,7L465,7L515,7L515,8L844,8L844,9L1118,9L1118,9L1122,9L1122,9L1162,9L1162,10L1214,10L1214,11L1273,11L1273,12L1345,12L1345,12L1346,12L1346,12L1349,12L1349,11L1445,11L1445,11L1469,11L1469,11L1536,11L1536,10L1681,10L1681,10L1756,10L1756,10L1761,10L1761,10L1771,10L1771,11L1778,11L1778,11L1911,11L1911,11L1917,11L1917,11L1937,11L1937,25L1982,25" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.4qypgj4q</title>
					</path>
				</g>
				<g style="--index: 54;">
					<path d="M0,0L259,0L259,2L281,2L281,3L411,3L411,5L430,5L430,4L446,4L446,4L1124,4L1124,4L1214,4L1214,5L1273,5L1273,6L1440,6L1440,6L1470,6L1470,6L1471,6L1471,6L1536,6L1536,6L1679,6L1679,6L1808,6L1808,7L1915,7L1915,7L1938,7L1938,13L1982,13" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.mlnwjz0l</title>
					</path>
				</g>
				<g style="--index: 55;">
					<path d="M0,0L259,0L259,3L276,3L276,4L281,4L281,4L434,4L434,5L446,5L446,5L863,5L863,5L1279,5L1279,6L1418,6L1418,7L1466,7L1466,8L1467,8L1467,8L1536,8L1536,8L1845,8L1845,8L1915,8L1915,8L1917,8L1917,8L1938,8L1938,9L1982,9" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.810zkwwq</title>
					</path>
				</g>
				<g style="--index: 56;">
					<path d="M0,0L278,0L278,4L279,4L279,3L751,3L751,3L1906,3L1906,3L1930,3L1930,8L1939,8L1939,8L1982,8" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.5lmk0gjq</title>
					</path>
				</g>
				<g style="--index: 57;">
					<path d="M0,0L283,0L283,1L1764,1L1764,1L1780,1L1780,1L1982,1" tabindex="0">
						<title>l_rdqo542w-9kv66g32-onv7r45n.810zdxoq</title>
					</path>
				</g>
				<g style="--index: 58;">
					<path d="M0,0L283,0L283,1L291,1L291,1L304,1L304,1L1053,1L1053,1L1321,1L1321,2L1385,2L1385,1L1776,1L1776,1L1965,1L1965,1L1973,1L1973,2L1975,2L1975,3L1982,3" tabindex="0">
						<title>l_r9gn1qpd-9kv66g32-onv7r45n.810zdxoq</title>
					</path>
				</g>
				<g style="--index: 59;">
					<path d="M0,0L283,0L283,1L1123,1L1123,2L1529,2L1529,3L1590,3L1590,3L1690,3L1690,3L1778,3L1778,3L1919,3L1919,3L1973,3L1973,4L1982,4" tabindex="0">
						<title>l_o9xo3rp9-9kv66g32-onv7r45n.810zdxoq</title>
					</path>
				</g>
				<g style="--index: 60;">
					<path d="M0,0L283,0L283,1L755,1L755,1L1694,1L1694,2L1747,2L1747,2L1930,2L1930,2L1937,2L1937,2L1982,2" tabindex="0">
						<title>l_495zlx39-9kv66g32-onv7r45n.810zdxoq</title>
					</path>
				</g>
				<g style="--index: 61;">
					<path d="M0,0L288,0L288,3L289,3L289,5L340,5L340,6L367,6L367,7L371,7L371,8L449,8L449,9L470,9L470,10L500,10L500,11L559,11L559,12L696,12L696,13L733,13L733,14L749,14L749,15L753,15L753,14L770,14L770,13L799,13L799,14L854,14L854,15L869,15L869,14L957,14L957,15L1067,15L1067,15L1183,15L1183,16L1191,16L1191,17L1935,17L1935,17L1958,17L1958,17L1982,17" tabindex="0">
						<title>9kv6l5e2-ql6rezjl.jq6d86v1</title>
					</path>
				</g>
				<g style="--index: 62;">
					<path d="M0,0L350,0L350,6L1091,6L1091,7L1140,7L1140,6L1232,6L1232,7L1277,7L1277,8L1323,8L1323,9L1431,9L1431,10L1621,10L1621,11L1728,11L1728,12L1770,12L1770,13L1776,13L1776,13L1843,13L1843,14L1913,14L1913,15L1945,15L1945,16L1949,16L1949,16L1960,16L1960,16L1982,16" tabindex="0">
						<title>l_r9gn1qpd-xd144xwd</title>
					</path>
				</g>
				<g style="--index: 63;">
					<path d="M0,0L351,0L351,5L1521,5L1521,6L1777,6L1777,6L1879,6L1879,6L1982,6" tabindex="0">
						<title>l_o9xo3rp9-xd144xwd</title>
					</path>
				</g>
				<g style="--index: 64;">
					<path d="M0,0L354,0L354,2L1694,2L1694,3L1777,3L1777,3L1871,3L1871,2L1931,2L1931,2L1937,2L1937,2L1982,2" tabindex="0">
						<title>l_495zlx39-xd144xwd</title>
					</path>
				</g>
				<g style="--index: 65;">
					<path d="M0,0L357,0L357,2L1297,2L1297,3L1773,3L1773,4L1779,4L1779,4L1873,4L1873,3L1982,3" tabindex="0">
						<title>l_rdqo542w-xd144xwd</title>
					</path>
				</g>
				<g style="--index: 66;">
					<path d="M0,0L430,0L430,3L438,3L438,3L1982,3" tabindex="0">
						<title>xd1v018d-68k7x44l.zqo74r41</title>
					</path>
				</g>
				<g style="--index: 67;">
					<path d="M0,0L470,0L470,6L923,6L923,8L1056,8L1056,9L1211,9L1211,10L1935,10L1935,11L1942,11L1942,10L1958,10L1958,10L1982,10" tabindex="0">
						<title>rkl9qwrk-6njkg4el.z19p2o8l</title>
					</path>
				</g>
				<g style="--index: 68;">
					<path d="M0,0L476,0L476,6L1782,6L1782,6L1860,6L1860,6L1982,6" tabindex="0">
						<title>xd17x94d-9l71pv4l.81wrgm5l</title>
					</path>
				</g>
				<g style="--index: 69;">
					<path d="M0,0L594,0L594,2L1831,2L1831,2L1982,2" tabindex="0">
						<title>7dg65oxk-r8r1zm0n.xqk0drn1</title>
					</path>
				</g>
				<g style="--index: 70;">
					<path d="M0,0L596,0L596,1L889,1L889,1L1732,1L1732,1L1739,1L1739,1L1892,1L1892,2L1945,2L1945,3L1958,3L1958,3L1982,3" tabindex="0">
						<title>9kv6l5e2-ql6rezjl.9qj3pk7l</title>
					</path>
				</g>
				<g style="--index: 71;">
					<path d="M0,0L680,0L680,6L1140,6L1140,5L1323,5L1323,6L1776,6L1776,6L1982,6" tabindex="0">
						<title>l_r9gn1qpd-xd144xzd-38dz6v1n.z19md2jl</title>
					</path>
				</g>
				<g style="--index: 72;">
					<path d="M0,0L683,0L683,3L784,3L784,4L1694,4L1694,5L1740,5L1740,5L1776,5L1776,5L1937,5L1937,5L1982,5" tabindex="0">
						<title>l_495zlx39-xd144xzd-onvyv77n.1w43556q</title>
					</path>
				</g>
				<g style="--index: 73;">
					<path d="M0,0L757,0L757,1L832,1L832,1L857,1L857,1L1982,1" tabindex="0">
						<title>mke75px2-yn2mz5d8.4lx6574l</title>
					</path>
				</g>
				<g style="--index: 74;">
					<path d="M0,0L846,0L846,3L851,3L851,4L1566,4L1566,5L1730,5L1730,5L1778,5L1778,5L1965,5L1965,5L1982,5" tabindex="0">
						<title>l_o9xo3rp9-xd144xzd-ql69e17l.10v3wwpl</title>
					</path>
				</g>
				<g style="--index: 75;">
					<path d="M0,0L853,0L853,3L1766,3L1766,4L1779,4L1779,4L1913,4L1913,3L1982,3" tabindex="0">
						<title>l_rdqo542w-xd144xzd-ylpk6768.le2dmv6l</title>
					</path>
				</g>
				<g style="--index: 76;">
					<path d="M0,0L929,0L929,1L930,1L930,2L931,2L931,2L944,2L944,3L949,3L949,4L950,4L950,5L954,5L954,5L956,5L956,6L957,6L957,7L958,7L958,8L961,8L961,9L966,9L966,10L967,10L967,11L997,11L997,12L999,12L999,13L1001,13L1001,14L1002,14L1002,14L1007,14L1007,14L1044,14L1044,13L1050,13L1050,14L1051,14L1051,15L1054,15L1054,16L1060,16L1060,17L1064,17L1064,17L1068,17L1068,18L1078,18L1078,19L1080,19L1080,20L1087,20L1087,21L1091,21L1091,21L1098,21L1098,22L1104,22L1104,23L1127,23L1127,24L1133,24L1133,25L1137,25L1137,26L1145,26L1145,27L1147,27L1147,28L1151,28L1151,29L1154,29L1154,30L1160,30L1160,31L1165,31L1165,33L1178,33L1178,34L1184,34L1184,35L1185,35L1185,36L1190,36L1190,37L1194,37L1194,38L1196,38L1196,39L1198,39L1198,40L1205,40L1205,41L1212,41L1212,42L1248,42L1248,43L1252,43L1252,45L1257,45L1257,46L1259,46L1259,47L1266,47L1266,48L1272,48L1272,49L1278,49L1278,50L1286,50L1286,49L1294,49L1294,50L1299,50L1299,51L1307,51L1307,52L1314,52L1314,52L1320,52L1320,53L1363,53L1363,54L1408,54L1408,55L1425,55L1425,56L1426,56L1426,58L1430,58L1430,59L1443,59L1443,60L1444,60L1444,60L1467,60L1467,61L1468,61L1468,62L1473,62L1473,64L1475,64L1475,65L1476,65L1476,64L1488,64L1488,63L1490,63L1490,64L1494,64L1494,65L1512,65L1512,66L1520,66L1520,67L1539,67L1539,68L1540,68L1540,69L1546,69L1546,69L1553,69L1553,69L1555,69L1555,70L1579,70L1579,71L1580,71L1580,71L1586,71L1586,72L1587,72L1587,73L1588,73L1588,75L1596,75L1596,76L1598,76L1598,77L1603,77L1603,77L1613,77L1613,78L1615,78L1615,76L1619,76L1619,78L1637,78L1637,79L1664,79L1664,80L1667,80L1667,82L1671,82L1671,83L1675,83L1675,84L1677,84L1677,85L1678,85L1678,86L1681,86L1681,87L1709,87L1709,88L1713,88L1713,89L1716,89L1716,89L1718,89L1718,90L1725,90L1725,91L1727,91L1727,92L1733,92L1733,93L1737,93L1737,93L1738,93L1738,94L1742,94L1742,95L1743,95L1743,97L1747,97L1747,98L1751,98L1751,99L1752,99L1752,100L1756,100L1756,101L1757,101L1757,102L1758,102L1758,103L1759,103L1759,104L1761,104L1761,103L1762,103L1762,104L1769,104L1769,105L1771,105L1771,106L1773,106L1773,105L1775,105L1775,107L1777,107L1777,108L1789,108L1789,109L1790,109L1790,110L1798,110L1798,111L1813,111L1813,112L1820,112L1820,113L1829,113L1829,113L1832,113L1832,114L1840,114L1840,115L1841,115L1841,116L1845,116L1845,117L1847,117L1847,117L1853,117L1853,118L1855,118L1855,119L1857,119L1857,120L1859,120L1859,121L1865,121L1865,122L1867,122L1867,121L1869,121L1869,122L1875,122L1875,123L1876,123L1876,124L1883,124L1883,125L1884,125L1884,126L1887,126L1887,125L1897,125L1897,126L1898,126L1898,127L1902,127L1902,128L1904,128L1904,128L1905,128L1905,129L1910,129L1910,129L1913,129L1913,130L1917,130L1917,130L1918,130L1918,132L1920,132L1920,132L1924,132L1924,132L1925,132L1925,132L1926,132L1926,133L1928,133L1928,134L1929,134L1929,135L1930,135L1930,135L1932,135L1932,136L1940,136L1940,137L1945,137L1945,138L1949,138L1949,140L1951,140L1951,139L1955,139L1955,139L1958,139L1958,140L1961,140L1961,141L1965,141L1965,142L1973,142L1973,143L1974,143L1974,144L1975,144L1975,145L1980,145L1980,146L1982,146" tabindex="0">
						<title>xd17x94d-9l71pv4l.21gpn081</title>
					</path>
				</g>
				<g style="--index: 77;">
					<path d="M0,0L968,0L968,1L997,1L997,2L1048,2L1048,1L1189,1L1189,2L1327,2L1327,2L1394,2L1394,1L1800,1L1800,1L1982,1" tabindex="0">
						<title>7dg65oxk-r8r1zm0n.5q89kv31</title>
					</path>
				</g>
				<g style="--index: 78;">
					<path d="M0,0L1019,0L1019,1L1709,1L1709,2L1714,2L1714,3L1735,3L1735,3L1958,3L1958,3L1982,3" tabindex="0">
						<title>rkl9qwrk-6njkg4el.81p5ym8l</title>
					</path>
				</g>
				<g style="--index: 79;">
					<path d="M0,0L1213,0L1213,2L1218,2L1218,3L1597,3L1597,3L1866,3L1866,3L1947,3L1947,3L1976,3L1976,2L1982,2" tabindex="0">
						<title>xd1v018d-68k7x44l.mlno8vjq</title>
					</path>
				</g>
				<g style="--index: 80;">
					<path d="M0,0L1251,0L1251,9L1323,9L1323,10L1355,10L1355,11L1429,11L1429,12L1588,12L1588,13L1750,13L1750,14L1753,14L1753,15L1773,15L1773,16L1776,16L1776,15L1794,15L1794,16L1882,16L1882,17L1923,17L1923,17L1939,17L1939,18L1968,18L1968,19L1982,19" tabindex="0">
						<title>l_r9gn1qpd-xd144xzd-38dz6v1n.5leogx5q</title>
					</path>
				</g>
				<g style="--index: 81;">
					<path d="M0,0L1282,0L1282,6L1695,6L1695,7L1718,7L1718,8L1730,8L1730,7L1777,7L1777,7L1884,7L1884,6L1888,6L1888,7L1903,7L1903,7L1936,7L1936,7L1982,7" tabindex="0">
						<title>l_495zlx39-xd144xzd-onvyv77n.qoxdrr4q</title>
					</path>
				</g>
				<g style="--index: 82;">
					<path d="M0,0L1309,0L1309,3L1742,3L1742,4L1774,4L1774,5L1775,5L1775,6L1891,6L1891,5L1913,5L1913,4L1914,4L1914,4L1937,4L1937,4L1949,4L1949,4L1951,4L1951,3L1982,3" tabindex="0">
						<title>l_rdqo542w-xd144xzd-ylpk6768.q5vkg7vl</title>
					</path>
				</g>
				<g style="--index: 83;">
					<path d="M0,0L1569,0L1569,1L1571,1L1571,1L1982,1" tabindex="0">
						<title>zdn9m472-2lge53e8.q5v59jml</title>
					</path>
				</g>
				<g style="--index: 84;">
					<path d="M0,0L1594,0L1594,1L1595,1L1595,1L1959,1L1959,2L1982,2" tabindex="0">
						<title>l_gdr5onk9-rkl3znrk-rn1g06dn.1gn42k6l</title>
					</path>
				</g>
				<g style="--index: 85;">
					<path d="M0,0L1795,0L1795,1L1797,1L1797,1L1982,1" tabindex="0">
						<title>q2560qwk-wleg9w4n.q8k5zerq</title>
					</path>
				</g>
				<g style="--index: 86;">
					<path d="M0,0L1810,0L1810,11L1912,11L1912,11L1942,11L1942,11L1945,11L1945,11L1961,11L1961,12L1969,12L1969,13L1982,13" tabindex="0">
						<title>l_o9xo3rp9-xd144xzd-ql69e17l.qj7jxxoq</title>
					</path>
				</g>
				<g style="--index: 87;">
					<path d="M0,0L1817,0L1817,3L1818,3L1818,2L1982,2" tabindex="0">
						<title>l_gdr5onk9-rkl3znrk-rn1g06dn.q655wjnl</title>
					</path>
				</g>
				<g style="--index: 88;">
					<path d="M0,0L1860,0L1860,4L1865,4L1865,3L1917,3L1917,4L1939,4L1939,4L1982,4" tabindex="0">
						<title>l_gdr5onk9-rkl3znrk-rn1g06dn.lmooe9y1</title>
					</path>
				</g>
				<g style="--index: 89;">
					<path d="M0,0L1867,0L1867,44L1878,44L1878,46L1882,46L1882,47L1888,47L1888,48L1896,48L1896,49L1897,49L1897,48L1903,48L1903,49L1910,49L1910,50L1912,50L1912,51L1917,51L1917,53L1919,53L1919,55L1921,55L1921,55L1923,55L1923,54L1926,54L1926,55L1933,55L1933,54L1934,54L1934,55L1937,55L1937,53L1941,53L1941,54L1944,54L1944,55L1951,55L1951,56L1954,56L1954,57L1982,57" tabindex="0">
						<title>9kv6l5e2-ql6rezjl.1dk62o3l</title>
					</path>
				</g>
				<g style="--index: 90;">
					<path d="M0,0L1867,0L1867,23L1888,23L1888,24L1892,24L1892,25L1897,25L1897,26L1899,26L1899,27L1911,27L1911,28L1917,28L1917,28L1918,28L1918,26L1922,26L1922,27L1934,27L1934,27L1941,27L1941,28L1945,28L1945,29L1972,29L1972,29L1982,29" tabindex="0">
						<title>rkl9qwrk-6njkg4el.lr3x560l</title>
					</path>
				</g>
				<g style="--index: 91;">
					<path d="M0,0L1869,0L1869,7L1881,7L1881,7L1951,7L1951,7L1982,7" tabindex="0">
						<title>l_xd0mnpjw-rkl3znrk-wley4prn.192xe54q</title>
					</path>
				</g>
				<g style="--index: 92;">
					<path d="M0,0L1875,0L1875,3L1876,3L1876,3L1878,3L1878,4L1879,4L1879,5L1881,5L1881,5L1888,5L1888,6L1918,6L1918,5L1921,5L1921,6L1934,6L1934,7L1982,7" tabindex="0">
						<title>zd39lqyd-yn26k2jl.qoxwn4pq</title>
					</path>
				</g>
				<g style="--index: 93;">
					<path d="M0,0L1888,0L1888,13L1914,13L1914,14L1915,14L1915,15L1917,15L1917,15L1951,15L1951,17L1965,17L1965,18L1974,18L1974,19L1982,19" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.qj7zdm3q</title>
					</path>
				</g>
				<g style="--index: 94;">
					<path d="M0,0L1890,0L1890,20L1914,20L1914,21L1919,21L1919,22L1922,22L1922,23L1923,23L1923,24L1929,24L1929,25L1939,25L1939,25L1955,25L1955,26L1965,26L1965,27L1966,27L1966,28L1968,28L1968,29L1973,29L1973,29L1982,29" tabindex="0">
						<title>l_gdr5onk9-rkl3znrk-rn1g06dn.qj77o50q</title>
					</path>
				</g>
				<g style="--index: 95;">
					<path d="M0,0L1916,0L1916,2L1917,2L1917,1L1941,1L1941,1L1982,1" tabindex="0">
						<title>l_dy1gjkkd-rkl3znrk-wle345e8.lmojn041</title>
					</path>
				</g>
				<g style="--index: 96;">
					<path d="M0,0L1918,0L1918,2L1958,2L1958,2L1982,2" tabindex="0">
						<title>zd39lqyd-yn26k2jl.1w4w8yoq</title>
					</path>
				</g>
				<g style="--index: 97;">
					<path d="M0,0L1918,0L1918,2L1982,2" tabindex="0">
						<title>l_drpxgo6w-rkl3znrk-68kwx3z8.qoxwn62q</title>
					</path>
				</g>
				<g style="--index: 98;">
					<path d="M0,0L1930,0L1930,4L1949,4L1949,5L1963,5L1963,5L1982,5L1982,7L1982,7" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.1dkg795l</title>
					</path>
				</g>
			</g>
		</svg>
	</foreignObject>
</svg>
