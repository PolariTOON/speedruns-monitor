<svg xmlns="http://www.w3.org/2000/svg" lang="en" style="color-scheme: dark light;">
	<title>Time by leaderboard for player 8v0mryvx</title>
	<style>
		*,
		::before,
		::after {
			box-sizing: border-box;
		}
		:root {
			background: var(--canvas-background);
			color: var(--canvas-foreground);
			fill: var(--canvas-background);
			stroke: var(--canvas-foreground);
			stroke-linejoin: round;
			stroke-linecap: round;
		}
		foreignObject {
			pointer-events: none;
		}
		foreignObject &gt; div {
			position: absolute;
			left: 0;
			top: 0;
			margin: 20px;
			border: 1px solid var(--canvas-foreground);
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			transition: opacity 1s;
			pointer-events: auto;
		}
		foreignObject:is(:hover, :focus-within) &gt; div:not(:hover, :focus-within) {
			opacity: 0;
			pointer-events: none;
		}
		foreignObject &gt; div &gt; p {
			margin: 0;
		}
		label {
			display: table;
			border-collapse: separate;
			border-spacing: 10px;
		}
		progress,
		input[type="checkbox"] {
			display: table-cell;
			width: 16px;
			height: 16px;
			margin: 2px;
			accent-color: var(--canvas-foreground);
			vertical-align: top;
		}
		progress + span,
		input[type="checkbox"] + span {
			display: table-cell;
			vertical-align: top;
		}
		input[type="checkbox"]:not(:disabled):is(:hover, :focus-within) + span {
			text-decoration: underline;
		}
		foreignObject &gt; svg {
			width: calc(100% - 40px);
			height: calc(100% - 40px);
			margin: 20px;
			padding: 10px;
			border: 1px dashed var(--canvas-foreground);
			background: var(--canvas-background);
			pointer-events: auto;
		}
		g &gt; path[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: hsl(calc(var(--index) / var(--count) * 360), 50%, 50%);
			cursor: help;
		}
		g:is(:hover, :focus-within) &gt; path[tabindex] {
			stroke: var(--canvas-foreground);
		}
		g &gt; path[tabindex]:is(:hover, :focus-within) {
			outline: 0;
		}
		g &gt; path[tabindex]:first-of-type {
			stroke-width: 2;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) {
			stroke-width: 4;
		}
		g &gt; path[tabindex]:first-of-type:not(:last-of-type) {
			stroke-dasharray: 4 8;
		}
		g &gt; rect {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect {
			fill: var(--highlighted);
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] {
			stroke-width: 8;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) {
			stroke-width: 16;
		}
		g &gt; line {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			stroke-width: 2;
			stroke-dasharray: 4 8;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line + line {
			stroke: var(--faded);
		}
		@media (prefers-color-scheme: dark) {
			:root {
				--canvas-background: #000;
				--canvas-foreground: #ccc;
				--highlighted: #6663;
				--faded: #9993;
			}
		}
		@media (prefers-color-scheme: light) {
			:root {
				--canvas-background: #fff;
				--canvas-foreground: #333;
				--highlighted: #9993;
				--faded: #6663;
			}
		}
	</style>
	<script>
		"use strict";
		{
			const script = document.currentScript;
			const documentUrl = location.href;
			const scope = new URL("../../", documentUrl).pathname;
			const playersKey = `${scope}#players`;
			const leaderboardsKey = `${scope}#leaderboards`;
			const sessionKey = `${scope}#session`;
			const lockKey = `${scope}#lock`;
			async function importDataScript(dataScriptUrl, signal) {
				signal.throwIfAborted();
				if (documentUrl.protocol !== "file:") {
					const response = await fetch(dataScriptUrl, {
						signal,
					});
					if (!response.ok) {
						throw new Error(response.statusText);
					}
					const data = await response.json();
					return data;
				}
				return await new Promise((resolve, reject) =&gt; {
					const name = `callback${Math.random() * 2 ** 53}`;
					let called = false;
					let data = null;
					function callback(value) {
						if (!called) {
							called = true;
							data = value;
						}
					}
					window[name] = callback;
					const dataScript = document.createElementNS("http://www.w3.org/2000/svg", "script");
					dataScript.href = `${dataScriptUrl}&amp;callback=${name}`;
					function handleAbort(event) {
						delete window[name];
						dataScript.removeEventListener("error", handleError);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const reason = signal.reason;
						reject(reason);
					}
					function handleError(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const error = event.error;
						reject(error);
					}
					function handleLoad(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("error", handleError);
						dataScript.remove();
						resolve(data);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					dataScript.addEventListener("error", handleError, {
						once: true,
					});
					dataScript.addEventListener("load", handleLoad, {
						once: true,
					});
					script.after(dataScript);
				});
			}
			async function waitForTimeout(delay, signal) {
				signal.throwIfAborted();
				return await new Promise((resolve, reject) =&gt; {
					let timeout = null;
					function handleAbort() {
						clearTimeout(timeout);
						const reason = signal.reason;
						reject(reason);
					}
					function handleTimeout() {
						signal.removeEventListener("abort", handleAbort);
						resolve(delay);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					timeout = setTimeout(handleTimeout, delay);
				});
			}
			window.addEventListener("pageshow", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully restored page from cache`);
				} else {
					console.log(`Unsuccessfully restored page from cache`);
				}
			});
			window.addEventListener("pagehide", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully saved page to cache`);
				} else {
					console.log(`Unsuccessfully saved page to cache`);
				}
			});
			window.addEventListener("pageshow", async (event) =&gt; {
				const rootTitleElement = document.querySelector("title");
				const rootTitleContent = rootTitleElement.textContent;
				const pathTitleElements = Array.from(document.querySelectorAll("g &gt; path[tabindex]:first-of-type &gt; title"));
				const pathTitleContents = pathTitleElements.map((pathTitleElement) =&gt; {
					const pathTitleContent = pathTitleElement.textContent;
					return pathTitleContent;
				});
				const foreignObject = document.querySelector("foreignObject");
				const div = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
				div.dir = "ltr";
				const p = document.createElementNS("http://www.w3.org/1999/xhtml", "p");
				const label = document.createElementNS("http://www.w3.org/1999/xhtml", "label");
				const progress = document.createElementNS("http://www.w3.org/1999/xhtml", "progress");
				label.append(progress);
				const span = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
				span.textContent = "Loading names";
				label.append(span);
				p.append(label);
				div.append(p);
				foreignObject.prepend(div);
				let lock = false;
				let session = null;
				const broadcastChannel = new BroadcastChannel(sessionKey);
				const abortController = new AbortController();
				const signal = abortController.signal;
				const abort = abortController.abort.bind(abortController);
				const {promise, resolve} = Promise.withResolvers();
				broadcastChannel.addEventListener("message", (event) =&gt; {
					const data = event.data;
					const type = data.type;
					switch (type) {
						case "request": {
							if (lock &amp;&amp; signal.aborted) {
								broadcastChannel.postMessage({
									type: "response",
									session,
								});
							}
							break;
						}
						case "response": {
							if (!signal.aborted) {
								session = data.session;
								if (session != null) {
									const {players, leaderboards} = session;
									try {
										const cachedPlayers = JSON.stringify(players);
										const cachedLeaderboards = JSON.stringify(leaderboards);
										sessionStorage.setItem(playersKey, cachedPlayers);
										sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
									} catch {}
									console.log(`Successfully loaded names from peer`);
									abort();
									resolve();
								} else {
									console.log(`Unsuccessfully loaded names from peer`);
									abort();
									resolve();
								}
							}
							break;
						}
					}
				});
				try {
					const cachedPlayers = sessionStorage.getItem(playersKey);
					const cachedLeaderboards = sessionStorage.getItem(leaderboardsKey);
					if (cachedPlayers == null || cachedLeaderboards == null) {
						throw new Error();
					}
					const players = JSON.parse(cachedPlayers);
					const leaderboards = JSON.parse(cachedLeaderboards);
					session = {players, leaderboards};
				} catch {}
				if (session != null) {
					broadcastChannel.postMessage({
						type: "response",
						session,
					});
					console.log(`Successfully loaded names from local`);
					abort();
					resolve();
				} else {
					broadcastChannel.postMessage({
						type: "request",
					});
					console.log(`Unsuccessfully loaded names from local`);
				}
				(async () =&gt; {
					for (;;) {
						await navigator.locks.request(lockKey, async () =&gt; {
							lock = true;
							console.log(`Acquired lock`);
							if (!signal.aborted) {
								try {
									const players = Object.create(null);
									const leaderboards = Object.create(null);
									const games = ["9d3rrxyd", "w6jl2ned"];
									for (const gameId of games) {
										const data = await importDataScript(`https://www.speedrun.com/api/v2/GetGameData?gameId=${gameId}`, signal);
										const levels = Object.fromEntries(data.levels.map((level) =&gt; {
											return [
												level.id,
												{
													id: level.id,
													name: level.name,
												},
											];
										}));
										const categories = Object.fromEntries(data.categories.map((category) =&gt; {
											return [
												category.id,
												{
													id: category.id,
													name: category.name,
												},
											];
										}));
										const variables = Object.fromEntries(data.variables.map((variable) =&gt; {
											return [
												variable.id,
												{
													id: variable.id,
													name: variable.name,
													values: {
														values: Object.fromEntries(data.values.filter((value) =&gt; {
															return value.variableId === variable.id;
														}).map((value) =&gt; {
															return [
																value.id,
																{
																	id: value.id,
																	label: value.name,
																},
															];
														})),
													},
													"is-subcategory": variable.isSubcategory,
												},
											];
										}));
										console.log(`Got game`);
										await waitForTimeout(800, signal);
										const slice = 200;
										for (let offset = 0;; offset += slice) {
											const {data, pagination} = await importDataScript(`https://www.speedrun.com/api/v1/runs?game=${gameId}&amp;orderby=date&amp;direction=asc&amp;embed=players&amp;offset=${offset}&amp;max=${slice}`, signal);
											const {size} = pagination;
											if (size === 0) {
												break;
											}
											for (const run of data) {
												const status = run.status.status;
												if (status == null || status === "new") {
													continue;
												}
												const player = run.players.data[0].rel === "user" ? run.players.data[0].id : "814p2558";
												const playerName = run.players.data[0].rel === "user" ? run.players.data[0].names.international : "anonymous";
												players[player] ??= playerName;
												const level = run.level;
												const category = run.category;
												const values = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return `-${variable}.${value}`;
												});
												const leaderboard = `${level != null ? `l_${level}-` : ""}${category}${values.join("")}`;
												const levelName = run.level != null ? levels[run.level]?.name ?? null : null;
												const categoryName = categories[run.category]?.name ?? null;
												const valueNames = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return variables[variable]?.values.values[value]?.label ?? null;
												}).filter((valueName) =&gt; {
													return valueName != null;
												});
												const leaderboardName = `${levelName != null ? `${levelName}: ` : ""}${categoryName ?? ""}${values.length !== 0 ? ` - ${valueNames.join(", ")}` : ""}`;
												leaderboards[leaderboard] ??= leaderboardName;
											}
											console.log(`Got runs ${offset}-${offset + size - 1}`);
											await waitForTimeout(800, signal);
										}
									}
									session = {players, leaderboards};
								} catch {}
								if (!signal.aborted) {
									if (session != null) {
										const {players, leaderboards} = session;
										try {
											const cachedPlayers = JSON.stringify(players);
											const cachedLeaderboards = JSON.stringify(leaderboards);
											sessionStorage.setItem(playersKey, cachedPlayers);
											sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
										} catch {}
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Successfully loaded names from remote`);
										abort();
										resolve();
									} else {
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Unsuccessfully loaded names from remote`);
										abort();
										resolve();
									}
								}
							}
							await new Promise((resolve) =&gt; {
								window.addEventListener("beforeunload", () =&gt; {
									resolve();
								}, {
									once: true,
								});
							});
						});
						lock = false;
						console.log(`Released lock`);
						await new Promise((resolve) =&gt; {
							window.addEventListener("pagehide", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
						await new Promise((resolve) =&gt;{
							window.addEventListener("pageshow", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
					}
				})();
				await promise;
				if (session == null) {
					const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
					input.type = "checkbox";
					input.autocomplete = "off";
					input.disabled = true;
					input.indeterminate = true;
					progress.replaceWith(input);
					span.textContent = "Unavailable names";
					return;
				}
				const {players, leaderboards} = session;
				const hasPlayerRoot = rootTitleContent.includes(" for player");
				const hasLeaderboardRoot = rootTitleContent.includes(" for leaderboard");
				const rootTitle = {
					element: rootTitleElement,
					contentWithIds: rootTitleContent,
					contentWithNames: hasPlayerRoot ? rootTitleContent.replace(/ for player ([0-9_a-z]+)/, ($0, $1) =&gt; {
						return ` for player ${players[$1] ?? $1}`;
					}) : hasLeaderboardRoot ? rootTitleContent.replace(/ for leaderboard ((?:l_[0-9_a-z]+-)?[0-9_a-z]+(-[0-9_a-z]+\.[0-9_a-z]+)*)/, ($0, $1) =&gt; {
						return ` for leaderboard ${leaderboards[$1] ?? $1}`;
					}) : rootTitleContent,
				};
				const hasPlayerPaths = rootTitleContent.includes(" by player");
				const hasLeaderboardPaths = rootTitleContent.includes(" by leaderboard");
				const pathTitles = pathTitleElements.map((pathTitleElement, k) =&gt; {
					const pathTitleContent = pathTitleContents[k];
					const pathTitle = {
						element: pathTitleElement,
						contentWithIds: pathTitleContent,
						contentWithNames: hasPlayerPaths ? players[pathTitleContent] ?? pathTitleContent : hasLeaderboardPaths ? leaderboards[pathTitleContent] ?? pathTitleContent : pathTitleContent,
					};
					return pathTitle;
				});
				const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
				input.type = "checkbox";
				input.autocomplete = "off";
				input.addEventListener("change", () =&gt; {
					input.disabled = true;
					if (input.checked) {
						rootTitle.element.textContent = rootTitle.contentWithNames;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithNames;
						}
					} else {
						rootTitle.element.textContent = rootTitle.contentWithIds;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithIds;
						}
					}
					input.disabled = false;
				});
				progress.replaceWith(input);
				span.textContent = "Reveal names";
			}, {
				once: true,
			});
		}
	</script>
	<foreignObject x="0" y="0" width="100%" height="100%">
		<svg viewBox="0 0 336 166896" preserveAspectRatio="none" overflow="visible">
			<g transform="scale(1 -1)" transform-origin="center center" style="--count: 19;">
				<g style="--index: 0;">
					<path d="M0,166896L4,166896L4,104257L96,104257L96,92365L168,92365L168,80930L213,80930L213,76835L238,76835L238,71221L244,71221L244,70194L245,70194L245,67842" tabindex="0">
						<title>xd17x94d-9l71pv4l.21gpn081</title>
					</path>
					<rect x="0" y="67842" width="245" height="99054"/>
					<path d="M0,166896L0,166896" tabindex="0">
						<title>27:48.96 on 2023-12-08</title>
					</path>
					<line x1="0" y1="166896" x2="336" y2="166896"/>
					<line x1="0" y1="0" x2="0" y2="166896"/>
					<path d="M4,104257L4,104257" tabindex="0">
						<title>17:22.57 on 2023-12-12</title>
					</path>
					<line x1="0" y1="104257" x2="336" y2="104257"/>
					<line x1="4" y1="0" x2="4" y2="166896"/>
					<path d="M96,92365L96,92365" tabindex="0">
						<title>15:23.65 on 2024-03-13</title>
					</path>
					<line x1="0" y1="92365" x2="336" y2="92365"/>
					<line x1="96" y1="0" x2="96" y2="166896"/>
					<path d="M168,80930L168,80930" tabindex="0">
						<title>13:29.30 on 2024-05-24</title>
					</path>
					<line x1="0" y1="80930" x2="336" y2="80930"/>
					<line x1="168" y1="0" x2="168" y2="166896"/>
					<path d="M213,76835L213,76835" tabindex="0">
						<title>12:48.35 on 2024-07-08</title>
					</path>
					<line x1="0" y1="76835" x2="336" y2="76835"/>
					<line x1="213" y1="0" x2="213" y2="166896"/>
					<path d="M238,71221L238,71221" tabindex="0">
						<title>11:52.21 on 2024-08-02</title>
					</path>
					<line x1="0" y1="71221" x2="336" y2="71221"/>
					<line x1="238" y1="0" x2="238" y2="166896"/>
					<path d="M244,70194L244,70194" tabindex="0">
						<title>11:41.94 on 2024-08-08</title>
					</path>
					<line x1="0" y1="70194" x2="336" y2="70194"/>
					<line x1="244" y1="0" x2="244" y2="166896"/>
					<path d="M245,67842L245,67842" tabindex="0">
						<title>11:18.42 on 2024-08-09</title>
					</path>
					<line x1="0" y1="67842" x2="336" y2="67842"/>
					<line x1="245" y1="0" x2="245" y2="166896"/>
				</g>
				<g style="--index: 1;">
					<path d="M175,1489L251,1489L251,1284" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.81wp50oq</title>
					</path>
					<rect x="175" y="1284" width="76" height="205"/>
					<path d="M175,1489L175,1489" tabindex="0">
						<title>00:14.89 on 2024-05-31</title>
					</path>
					<line x1="0" y1="1489" x2="336" y2="1489"/>
					<line x1="175" y1="0" x2="175" y2="166896"/>
					<path d="M251,1284L251,1284" tabindex="0">
						<title>00:12.84 on 2024-08-15</title>
					</path>
					<line x1="0" y1="1284" x2="336" y2="1284"/>
					<line x1="251" y1="0" x2="251" y2="166896"/>
				</g>
				<g style="--index: 2;">
					<path d="M175,1451L242,1451L242,1298L336,1298L336,1251" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.z19m8p0l</title>
					</path>
					<rect x="175" y="1251" width="161" height="200"/>
					<path d="M175,1451L175,1451" tabindex="0">
						<title>00:14.51 on 2024-05-31</title>
					</path>
					<line x1="0" y1="1451" x2="336" y2="1451"/>
					<line x1="175" y1="0" x2="175" y2="166896"/>
					<path d="M242,1298L242,1298" tabindex="0">
						<title>00:12.98 on 2024-08-06</title>
					</path>
					<line x1="0" y1="1298" x2="336" y2="1298"/>
					<line x1="242" y1="0" x2="242" y2="166896"/>
					<path d="M336,1251L336,1251" tabindex="0">
						<title>00:12.51 on 2024-11-08</title>
					</path>
					<line x1="0" y1="1251" x2="336" y2="1251"/>
					<line x1="336" y1="0" x2="336" y2="166896"/>
				</g>
				<g style="--index: 3;">
					<path d="M175,1179L293,1179L293,1062" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.21g82pnl</title>
					</path>
					<rect x="175" y="1062" width="118" height="117"/>
					<path d="M175,1179L175,1179" tabindex="0">
						<title>00:11.79 on 2024-05-31</title>
					</path>
					<line x1="0" y1="1179" x2="336" y2="1179"/>
					<line x1="175" y1="0" x2="175" y2="166896"/>
					<path d="M293,1062L293,1062" tabindex="0">
						<title>00:10.62 on 2024-09-26</title>
					</path>
					<line x1="0" y1="1062" x2="336" y2="1062"/>
					<line x1="293" y1="0" x2="293" y2="166896"/>
				</g>
				<g style="--index: 4;">
					<path d="M183,1395" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.rqvpey7q</title>
					</path>
					<rect x="183" y="1395" width="0" height="0"/>
					<path d="M183,1395L183,1395" tabindex="0">
						<title>00:13.95 on 2024-06-08</title>
					</path>
					<line x1="0" y1="1395" x2="336" y2="1395"/>
					<line x1="183" y1="0" x2="183" y2="166896"/>
				</g>
				<g style="--index: 5;">
					<path d="M193,1386" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.xqkjmxnl</title>
					</path>
					<rect x="193" y="1386" width="0" height="0"/>
					<path d="M193,1386L193,1386" tabindex="0">
						<title>00:13.86 on 2024-06-18</title>
					</path>
					<line x1="0" y1="1386" x2="336" y2="1386"/>
					<line x1="193" y1="0" x2="193" y2="166896"/>
				</g>
				<g style="--index: 6;">
					<path d="M193,1506L242,1506L242,1390" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.814y7w01</title>
					</path>
					<rect x="193" y="1390" width="49" height="116"/>
					<path d="M193,1506L193,1506" tabindex="0">
						<title>00:15.06 on 2024-06-18</title>
					</path>
					<line x1="0" y1="1506" x2="336" y2="1506"/>
					<line x1="193" y1="0" x2="193" y2="166896"/>
					<path d="M242,1390L242,1390" tabindex="0">
						<title>00:13.90 on 2024-08-06</title>
					</path>
					<line x1="0" y1="1390" x2="336" y2="1390"/>
					<line x1="242" y1="0" x2="242" y2="166896"/>
				</g>
				<g style="--index: 7;">
					<path d="M193,3494L194,3494L194,3327" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.qj7zdm3q</title>
					</path>
					<rect x="193" y="3327" width="1" height="167"/>
					<path d="M193,3494L193,3494" tabindex="0">
						<title>00:34.94 on 2024-06-18</title>
					</path>
					<line x1="0" y1="3494" x2="336" y2="3494"/>
					<line x1="193" y1="0" x2="193" y2="166896"/>
					<path d="M194,3327L194,3327" tabindex="0">
						<title>00:33.27 on 2024-06-19</title>
					</path>
					<line x1="0" y1="3327" x2="336" y2="3327"/>
					<line x1="194" y1="0" x2="194" y2="166896"/>
				</g>
				<g style="--index: 8;">
					<path d="M193,10993L265,10993L265,10879" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.4qywn341</title>
					</path>
					<rect x="193" y="10879" width="72" height="114"/>
					<path d="M193,10993L193,10993" tabindex="0">
						<title>01:49.93 on 2024-06-18</title>
					</path>
					<line x1="0" y1="10993" x2="336" y2="10993"/>
					<line x1="193" y1="0" x2="193" y2="166896"/>
					<path d="M265,10879L265,10879" tabindex="0">
						<title>01:48.79 on 2024-08-29</title>
					</path>
					<line x1="0" y1="10879" x2="336" y2="10879"/>
					<line x1="265" y1="0" x2="265" y2="166896"/>
				</g>
				<g style="--index: 9;">
					<path d="M203,896L292,896L292,850L311,850L311,825" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.jqzpx3gl</title>
					</path>
					<rect x="203" y="825" width="108" height="71"/>
					<path d="M203,896L203,896" tabindex="0">
						<title>00:08.96 on 2024-06-28</title>
					</path>
					<line x1="0" y1="896" x2="336" y2="896"/>
					<line x1="203" y1="0" x2="203" y2="166896"/>
					<path d="M292,850L292,850" tabindex="0">
						<title>00:08.50 on 2024-09-25</title>
					</path>
					<line x1="0" y1="850" x2="336" y2="850"/>
					<line x1="292" y1="0" x2="292" y2="166896"/>
					<path d="M311,825L311,825" tabindex="0">
						<title>00:08.25 on 2024-10-14</title>
					</path>
					<line x1="0" y1="825" x2="336" y2="825"/>
					<line x1="311" y1="0" x2="311" y2="166896"/>
				</g>
				<g style="--index: 10;">
					<path d="M211,14897L280,14897L280,14725L285,14725L285,14649" tabindex="0">
						<title>l_o9xo3rp9-xd144xzd-38dz6v1n.q755eky1</title>
					</path>
					<rect x="211" y="14649" width="74" height="248"/>
					<path d="M211,14897L211,14897" tabindex="0">
						<title>02:28.97 on 2024-07-06</title>
					</path>
					<line x1="0" y1="14897" x2="336" y2="14897"/>
					<line x1="211" y1="0" x2="211" y2="166896"/>
					<path d="M280,14725L280,14725" tabindex="0">
						<title>02:27.25 on 2024-09-13</title>
					</path>
					<line x1="0" y1="14725" x2="336" y2="14725"/>
					<line x1="280" y1="0" x2="280" y2="166896"/>
					<path d="M285,14649L285,14649" tabindex="0">
						<title>02:26.49 on 2024-09-18</title>
					</path>
					<line x1="0" y1="14649" x2="336" y2="14649"/>
					<line x1="285" y1="0" x2="285" y2="166896"/>
				</g>
				<g style="--index: 11;">
					<path d="M240,817L241,817L241,799" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.013856dq</title>
					</path>
					<rect x="240" y="799" width="1" height="18"/>
					<path d="M240,817L240,817" tabindex="0">
						<title>00:08.17 on 2024-08-04</title>
					</path>
					<line x1="0" y1="817" x2="336" y2="817"/>
					<line x1="240" y1="0" x2="240" y2="166896"/>
					<path d="M241,799L241,799" tabindex="0">
						<title>00:07.99 on 2024-08-05</title>
					</path>
					<line x1="0" y1="799" x2="336" y2="799"/>
					<line x1="241" y1="0" x2="241" y2="166896"/>
				</g>
				<g style="--index: 12;">
					<path d="M241,884" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.jq60ze3q</title>
					</path>
					<rect x="241" y="884" width="0" height="0"/>
					<path d="M241,884L241,884" tabindex="0">
						<title>00:08.84 on 2024-08-05</title>
					</path>
					<line x1="0" y1="884" x2="336" y2="884"/>
					<line x1="241" y1="0" x2="241" y2="166896"/>
				</g>
				<g style="--index: 13;">
					<path d="M241,894" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.81ppdgg1</title>
					</path>
					<rect x="241" y="894" width="0" height="0"/>
					<path d="M241,894L241,894" tabindex="0">
						<title>00:08.94 on 2024-08-05</title>
					</path>
					<line x1="0" y1="894" x2="336" y2="894"/>
					<line x1="241" y1="0" x2="241" y2="166896"/>
				</g>
				<g style="--index: 14;">
					<path d="M243,1461L276,1461L276,1426" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.klrpy2jq</title>
					</path>
					<rect x="243" y="1426" width="33" height="35"/>
					<path d="M243,1461L243,1461" tabindex="0">
						<title>00:14.61 on 2024-08-07</title>
					</path>
					<line x1="0" y1="1461" x2="336" y2="1461"/>
					<line x1="243" y1="0" x2="243" y2="166896"/>
					<path d="M276,1426L276,1426" tabindex="0">
						<title>00:14.26 on 2024-09-09</title>
					</path>
					<line x1="0" y1="1426" x2="336" y2="1426"/>
					<line x1="276" y1="0" x2="276" y2="166896"/>
				</g>
				<g style="--index: 15;">
					<path d="M243,1486" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.21dz3e4l</title>
					</path>
					<rect x="243" y="1486" width="0" height="0"/>
					<path d="M243,1486L243,1486" tabindex="0">
						<title>00:14.86 on 2024-08-07</title>
					</path>
					<line x1="0" y1="1486" x2="336" y2="1486"/>
					<line x1="243" y1="0" x2="243" y2="166896"/>
				</g>
				<g style="--index: 16;">
					<path d="M251,1644" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.5lermx5q</title>
					</path>
					<rect x="251" y="1644" width="0" height="0"/>
					<path d="M251,1644L251,1644" tabindex="0">
						<title>00:16.44 on 2024-08-15</title>
					</path>
					<line x1="0" y1="1644" x2="336" y2="1644"/>
					<line x1="251" y1="0" x2="251" y2="166896"/>
				</g>
				<g style="--index: 17;">
					<path d="M270,18287" tabindex="0">
						<title>l_o9xo3rp9-9kv66g32-onv7r45n.810zdxoq</title>
					</path>
					<rect x="270" y="18287" width="0" height="0"/>
					<path d="M270,18287L270,18287" tabindex="0">
						<title>03:02.87 on 2024-09-03</title>
					</path>
					<line x1="0" y1="18287" x2="336" y2="18287"/>
					<line x1="270" y1="0" x2="270" y2="166896"/>
				</g>
				<g style="--index: 18;">
					<path d="M305,1494" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.jqz35pg1</title>
					</path>
					<rect x="305" y="1494" width="0" height="0"/>
					<path d="M305,1494L305,1494" tabindex="0">
						<title>00:14.94 on 2024-10-08</title>
					</path>
					<line x1="0" y1="1494" x2="336" y2="1494"/>
					<line x1="305" y1="0" x2="305" y2="166896"/>
				</g>
			</g>
		</svg>
	</foreignObject>
</svg>
