<svg xmlns="http://www.w3.org/2000/svg" lang="en" style="color-scheme: dark light;">
	<title>Time by leaderboard for player x3wdlvkj</title>
	<style>
		*,
		::before,
		::after {
			box-sizing: border-box;
		}
		:root {
			background: var(--canvas-background);
			color: var(--canvas-foreground);
			fill: var(--canvas-background);
			stroke: var(--canvas-foreground);
			stroke-linejoin: round;
			stroke-linecap: round;
		}
		foreignObject {
			pointer-events: none;
		}
		foreignObject &gt; div {
			position: absolute;
			left: 0;
			top: 0;
			margin: 20px;
			border: 1px solid var(--canvas-foreground);
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			transition: opacity 1s;
			pointer-events: auto;
		}
		foreignObject:is(:hover, :focus-within) &gt; div:not(:hover, :focus-within) {
			opacity: 0;
			pointer-events: none;
		}
		foreignObject &gt; div &gt; p {
			margin: 0;
		}
		label {
			display: table;
			border-collapse: separate;
			border-spacing: 10px;
		}
		progress,
		input[type="checkbox"] {
			display: table-cell;
			width: 16px;
			height: 16px;
			margin: 2px;
			accent-color: var(--canvas-foreground);
			vertical-align: top;
		}
		progress + span,
		input[type="checkbox"] + span {
			display: table-cell;
			vertical-align: top;
		}
		input[type="checkbox"]:not(:disabled):is(:hover, :focus-within) + span {
			text-decoration: underline;
		}
		foreignObject &gt; svg {
			width: calc(100% - 40px);
			height: calc(100% - 40px);
			margin: 20px;
			padding: 10px;
			border: 1px dashed var(--canvas-foreground);
			background: var(--canvas-background);
			pointer-events: auto;
		}
		g &gt; rect[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: var(--tier, #0000);
			stroke: none;
			cursor: help;
		}
		g &gt; rect[tabindex][data-tier="diamond"] {
			--tier: var(--diamond);
		}
		g &gt; rect[tabindex][data-tier="gold"] {
			--tier: var(--gold);
		}
		g &gt; rect[tabindex][data-tier="silver"] {
			--tier: var(--silver);
		}
		g &gt; rect[tabindex][data-tier="bronze"] {
			--tier: var(--bronze);
		}
		g &gt; path[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: hsl(calc(var(--index) / var(--count) * 360), 50%, 50%);
			cursor: help;
		}
		g:is(:hover, :focus-within) &gt; path[tabindex] {
			stroke: var(--canvas-foreground);
		}
		g &gt; path[tabindex]:is(:hover, :focus-within) {
			outline: 0;
		}
		g &gt; path[tabindex]:first-of-type {
			stroke-width: 2;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) {
			stroke-width: 4;
		}
		g &gt; path[tabindex]:first-of-type:not(:last-of-type) {
			stroke-dasharray: 4 8;
		}
		g &gt; path[tabindex]:first-of-type + rect {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect {
			fill: var(--highlighted);
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] {
			stroke-width: 8;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) {
			stroke-width: 16;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line + line {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			stroke-width: 2;
			stroke-dasharray: 4 8;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line + line {
			stroke: var(--faded);
		}
		@media (prefers-color-scheme: dark) {
			:root {
				--canvas-background: #000;
				--canvas-foreground: #ccc;
				--diamond: #0363;
				--gold: #6303;
				--silver: #3633;
				--bronze: #6363;
				--highlighted: #6663;
				--faded: #9993;
			}
		}
		@media (prefers-color-scheme: light) {
			:root {
				--canvas-background: #fff;
				--canvas-foreground: #333;
				--diamond: #9cf3;
				--gold: #fc93;
				--silver: #9c93;
				--bronze: #c9c3;
				--highlighted: #9993;
				--faded: #6663;
			}
		}
	</style>
	<script>
		"use strict";
		{
			const script = document.currentScript;
			const documentUrl = location.href;
			const scope = new URL("../../", documentUrl).pathname;
			const playersKey = `${scope}#players`;
			const leaderboardsKey = `${scope}#leaderboards`;
			const sessionKey = `${scope}#session`;
			const lockKey = `${scope}#lock`;
			async function importDataScript(dataScriptUrl, signal) {
				signal.throwIfAborted();
				if (documentUrl.protocol !== "file:") {
					const response = await fetch(dataScriptUrl, {
						signal,
					});
					if (!response.ok) {
						throw new Error(response.statusText);
					}
					const data = await response.json();
					return data;
				}
				return await new Promise((resolve, reject) =&gt; {
					const name = `callback${Math.random() * 2 ** 53}`;
					let called = false;
					let data = null;
					function callback(value) {
						if (!called) {
							called = true;
							data = value;
						}
					}
					window[name] = callback;
					const dataScript = document.createElementNS("http://www.w3.org/2000/svg", "script");
					dataScript.href = `${dataScriptUrl}&amp;callback=${name}`;
					function handleAbort(event) {
						delete window[name];
						dataScript.removeEventListener("error", handleError);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const reason = signal.reason;
						reject(reason);
					}
					function handleError(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const error = event.error;
						reject(error);
					}
					function handleLoad(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("error", handleError);
						dataScript.remove();
						resolve(data);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					dataScript.addEventListener("error", handleError, {
						once: true,
					});
					dataScript.addEventListener("load", handleLoad, {
						once: true,
					});
					script.after(dataScript);
				});
			}
			async function waitForTimeout(delay, signal) {
				signal.throwIfAborted();
				return await new Promise((resolve, reject) =&gt; {
					let timeout = null;
					function handleAbort() {
						clearTimeout(timeout);
						const reason = signal.reason;
						reject(reason);
					}
					function handleTimeout() {
						signal.removeEventListener("abort", handleAbort);
						resolve(delay);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					timeout = setTimeout(handleTimeout, delay);
				});
			}
			window.addEventListener("pageshow", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully restored page from cache`);
				} else {
					console.log(`Unsuccessfully restored page from cache`);
				}
			});
			window.addEventListener("pagehide", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully saved page to cache`);
				} else {
					console.log(`Unsuccessfully saved page to cache`);
				}
			});
			window.addEventListener("pageshow", async (event) =&gt; {
				const rootTitleElement = document.querySelector("title");
				const rootTitleContent = rootTitleElement.textContent;
				const pathTitleElements = Array.from(document.querySelectorAll("g &gt; path[tabindex]:first-of-type &gt; title"));
				const pathTitleContents = pathTitleElements.map((pathTitleElement) =&gt; {
					const pathTitleContent = pathTitleElement.textContent;
					return pathTitleContent;
				});
				const foreignObject = document.querySelector("foreignObject");
				const div = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
				div.dir = "ltr";
				const p = document.createElementNS("http://www.w3.org/1999/xhtml", "p");
				const label = document.createElementNS("http://www.w3.org/1999/xhtml", "label");
				const progress = document.createElementNS("http://www.w3.org/1999/xhtml", "progress");
				label.append(progress);
				const span = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
				span.textContent = "Loading names";
				label.append(span);
				p.append(label);
				div.append(p);
				foreignObject.prepend(div);
				let lock = false;
				let session = null;
				const broadcastChannel = new BroadcastChannel(sessionKey);
				const abortController = new AbortController();
				const signal = abortController.signal;
				const abort = abortController.abort.bind(abortController);
				const {promise, resolve} = Promise.withResolvers();
				broadcastChannel.addEventListener("message", (event) =&gt; {
					const data = event.data;
					const type = data.type;
					switch (type) {
						case "request": {
							if (lock &amp;&amp; signal.aborted) {
								broadcastChannel.postMessage({
									type: "response",
									session,
								});
							}
							break;
						}
						case "response": {
							if (!signal.aborted) {
								session = data.session;
								if (session != null) {
									const {players, leaderboards} = session;
									try {
										const cachedPlayers = JSON.stringify(players);
										const cachedLeaderboards = JSON.stringify(leaderboards);
										sessionStorage.setItem(playersKey, cachedPlayers);
										sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
									} catch {}
									console.log(`Successfully loaded names from peer`);
									abort();
									resolve();
								} else {
									console.log(`Unsuccessfully loaded names from peer`);
									abort();
									resolve();
								}
							}
							break;
						}
					}
				});
				try {
					const cachedPlayers = sessionStorage.getItem(playersKey);
					const cachedLeaderboards = sessionStorage.getItem(leaderboardsKey);
					if (cachedPlayers == null || cachedLeaderboards == null) {
						throw new Error();
					}
					const players = JSON.parse(cachedPlayers);
					const leaderboards = JSON.parse(cachedLeaderboards);
					session = {players, leaderboards};
				} catch {}
				if (session != null) {
					broadcastChannel.postMessage({
						type: "response",
						session,
					});
					console.log(`Successfully loaded names from local`);
					abort();
					resolve();
				} else {
					broadcastChannel.postMessage({
						type: "request",
					});
					console.log(`Unsuccessfully loaded names from local`);
				}
				(async () =&gt; {
					for (;;) {
						await navigator.locks.request(lockKey, async () =&gt; {
							lock = true;
							console.log(`Acquired lock`);
							if (!signal.aborted) {
								try {
									const players = Object.create(null);
									const leaderboards = Object.create(null);
									const games = ["9d3rrxyd", "w6jl2ned"];
									for (const gameId of games) {
										const {data} = await importDataScript(`https://www.speedrun.com/api/v1/games/${gameId}?embed=categories,levels,variables`, signal);
										const versions = data.variables.data.find((variable) =&gt; {
											return variable.name === "Version";
										});
										const levels = Object.fromEntries(data.levels.data.map((level) =&gt; {
											return [level.id, level];
										}));
										const categories = Object.fromEntries(data.categories.data.map((category) =&gt; {
											return [category.id, category];
										}));
										const variables = Object.fromEntries(data.variables.data.map((variable) =&gt; {
											return [variable.id, variable];
										}));
										console.log(`Got game`);
										await waitForTimeout(800, signal);
										const slice = 200;
										for (let offset = 0;; offset += slice) {
											const {data, pagination} = await importDataScript(`https://www.speedrun.com/api/v1/runs?game=${gameId}&amp;orderby=date&amp;direction=asc&amp;embed=players&amp;offset=${offset}&amp;max=${slice}`, signal);
											const {size} = pagination;
											if (size === 0) {
												break;
											}
											for (const run of data) {
												const status = run.status.status;
												if (status == null || status === "new") {
													continue;
												}
												const player = run.players.data[0].rel === "user" ? run.players.data[0].id : "814p2558";
												const playerName = run.players.data[0].rel === "user" ? run.players.data[0].names.international : "anonymous";
												players[player] ??= playerName;
												const level = run.level;
												const category = run.category;
												const values = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return `-${variable}.${value}`;
												});
												const leaderboard = `${level != null ? `l_${level}-` : ""}${category}${values.join("")}`;
												const levelName = run.level != null ? levels[run.level]?.name ?? null : null;
												const categoryName = categories[run.category]?.name ?? null;
												const valueNames = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return variables[variable]?.values.values[value]?.label ?? null;
												}).filter((valueName) =&gt; {
													return valueName != null;
												});
												const leaderboardName = `${levelName != null ? `${levelName}: ` : ""}${categoryName ?? ""}${values.length !== 0 ? ` - ${valueNames.join(", ")}` : ""}`;
												leaderboards[leaderboard] ??= leaderboardName;
											}
											console.log(`Got runs ${offset}-${offset + size - 1}`);
											await waitForTimeout(800, signal);
										}
									}
									session = {players, leaderboards};
								} catch {}
								if (!signal.aborted) {
									if (session != null) {
										const {players, leaderboards} = session;
										try {
											const cachedPlayers = JSON.stringify(players);
											const cachedLeaderboards = JSON.stringify(leaderboards);
											sessionStorage.setItem(playersKey, cachedPlayers);
											sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
										} catch {}
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Successfully loaded names from remote`);
										abort();
										resolve();
									} else {
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Unsuccessfully loaded names from remote`);
										abort();
										resolve();
									}
								}
							}
							await new Promise((resolve) =&gt; {
								window.addEventListener("beforeunload", () =&gt; {
									resolve();
								}, {
									once: true,
								});
							});
						});
						lock = false;
						console.log(`Released lock`);
						await new Promise((resolve) =&gt; {
							window.addEventListener("pagehide", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
						await new Promise((resolve) =&gt;{
							window.addEventListener("pageshow", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
					}
				})();
				await promise;
				if (session == null) {
					const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
					input.type = "checkbox";
					input.autocomplete = "off";
					input.disabled = true;
					input.indeterminate = true;
					progress.replaceWith(input);
					span.textContent = "Unavailable names";
					return;
				}
				const {players, leaderboards} = session;
				const hasPlayerRoot = rootTitleContent.includes(" for player");
				const hasLeaderboardRoot = rootTitleContent.includes(" for leaderboard");
				const rootTitle = {
					element: rootTitleElement,
					contentWithIds: rootTitleContent,
					contentWithNames: hasPlayerRoot ? rootTitleContent.replace(/ for player ([0-9_a-z]+)/, ($0, $1) =&gt; {
						return ` for player ${players[$1] ?? $1}`;
					}) : hasLeaderboardRoot ? rootTitleContent.replace(/ for leaderboard ((?:l_[0-9_a-z]+-)?[0-9_a-z]+(-[0-9_a-z]+\.[0-9_a-z]+)*)/, ($0, $1) =&gt; {
						return ` for leaderboard ${leaderboards[$1] ?? $1}`;
					}) : rootTitleContent,
				};
				const hasPlayerPaths = rootTitleContent.includes(" by player");
				const hasLeaderboardPaths = rootTitleContent.includes(" by leaderboard");
				const pathTitles = pathTitleElements.map((pathTitleElement, k) =&gt; {
					const pathTitleContent = pathTitleContents[k];
					const pathTitle = {
						element: pathTitleElement,
						contentWithIds: pathTitleContent,
						contentWithNames: hasPlayerPaths ? players[pathTitleContent] ?? pathTitleContent : hasLeaderboardPaths ? leaderboards[pathTitleContent] ?? pathTitleContent : pathTitleContent,
					};
					return pathTitle;
				});
				const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
				input.type = "checkbox";
				input.autocomplete = "off";
				input.addEventListener("change", () =&gt; {
					input.disabled = true;
					if (input.checked) {
						rootTitle.element.textContent = rootTitle.contentWithNames;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithNames;
						}
					} else {
						rootTitle.element.textContent = rootTitle.contentWithIds;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithIds;
						}
					}
					input.disabled = false;
				});
				progress.replaceWith(input);
				span.textContent = "Reveal names";
			}, {
				once: true,
			});
		}
	</script>
	<foreignObject x="0" y="0" width="100%" height="100%">
		<svg viewBox="0 0 648 80779" preserveAspectRatio="none" overflow="visible">
			<g transform="scale(1 -1)" transform-origin="center center" style="--count: 27;">
				<g style="--index: 0;">
					<path d="M0,80779L184,80779L184,77349L185,77349L185,70340L552,70340L552,70120" tabindex="0">
						<title>xd17x94d-9l71pv4l.21gpn081</title>
					</path>
					<rect x="0" y="70120" width="552" height="10659"/>
					<path d="M0,80779L0,80779" tabindex="0">
						<title>13:27.79 on 2023-01-29</title>
					</path>
					<line x1="0" y1="80779" x2="648" y2="80779"/>
					<line x1="0" y1="0" x2="0" y2="80779"/>
					<path d="M184,77349L184,77349" tabindex="0">
						<title>12:53.49 on 2023-08-01</title>
					</path>
					<line x1="0" y1="77349" x2="648" y2="77349"/>
					<line x1="184" y1="0" x2="184" y2="80779"/>
					<path d="M185,70340L185,70340" tabindex="0">
						<title>11:43.40 on 2023-08-02</title>
					</path>
					<line x1="0" y1="70340" x2="648" y2="70340"/>
					<line x1="185" y1="0" x2="185" y2="80779"/>
					<path d="M552,70120L552,70120" tabindex="0">
						<title>11:41.20 on 2024-08-03</title>
					</path>
					<line x1="0" y1="70120" x2="648" y2="70120"/>
					<line x1="552" y1="0" x2="552" y2="80779"/>
				</g>
				<g style="--index: 1;">
					<path d="M31,1737L618,1737L618,1556" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.gq7jzvvq</title>
					</path>
					<rect x="31" y="1556" width="587" height="181"/>
					<path d="M31,1737L31,1737" tabindex="0">
						<title>00:17.37 on 2023-03-01</title>
					</path>
					<line x1="0" y1="1737" x2="648" y2="1737"/>
					<line x1="31" y1="0" x2="31" y2="80779"/>
					<path d="M618,1556L618,1556" tabindex="0">
						<title>00:15.56 on 2024-10-08</title>
					</path>
					<line x1="0" y1="1556" x2="648" y2="1556"/>
					<line x1="618" y1="0" x2="618" y2="80779"/>
				</g>
				<g style="--index: 2;">
					<path d="M37,5033L96,5033L96,4874" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.klr25nj1</title>
					</path>
					<rect x="37" y="4874" width="59" height="159"/>
					<path d="M37,5033L37,5033" tabindex="0">
						<title>00:50.33 on 2023-03-07</title>
					</path>
					<line x1="0" y1="5033" x2="648" y2="5033"/>
					<line x1="37" y1="0" x2="37" y2="80779"/>
					<path d="M96,4874L96,4874" tabindex="0">
						<title>00:48.74 on 2023-05-05</title>
					</path>
					<line x1="0" y1="4874" x2="648" y2="4874"/>
					<line x1="96" y1="0" x2="96" y2="80779"/>
				</g>
				<g style="--index: 3;">
					<path d="M101,2228" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.xqkjmnnl</title>
					</path>
					<rect x="101" y="2228" width="0" height="0"/>
					<path d="M101,2228L101,2228" tabindex="0">
						<title>00:22.28 on 2023-05-10</title>
					</path>
					<line x1="0" y1="2228" x2="648" y2="2228"/>
					<line x1="101" y1="0" x2="101" y2="80779"/>
				</g>
				<g style="--index: 4;">
					<path d="M110,2597" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.81ppd5g1</title>
					</path>
					<rect x="110" y="2597" width="0" height="0"/>
					<path d="M110,2597L110,2597" tabindex="0">
						<title>00:25.97 on 2023-05-19</title>
					</path>
					<line x1="0" y1="2597" x2="648" y2="2597"/>
					<line x1="110" y1="0" x2="110" y2="80779"/>
				</g>
				<g style="--index: 5;">
					<path d="M117,1468" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.klrpy2jq</title>
					</path>
					<rect x="117" y="1468" width="0" height="0"/>
					<path d="M117,1468L117,1468" tabindex="0">
						<title>00:14.68 on 2023-05-26</title>
					</path>
					<line x1="0" y1="1468" x2="648" y2="1468"/>
					<line x1="117" y1="0" x2="117" y2="80779"/>
				</g>
				<g style="--index: 6;">
					<path d="M118,1366" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.9qj0x8el</title>
					</path>
					<rect x="118" y="1366" width="0" height="0"/>
					<path d="M118,1366L118,1366" tabindex="0">
						<title>00:13.66 on 2023-05-27</title>
					</path>
					<line x1="0" y1="1366" x2="648" y2="1366"/>
					<line x1="118" y1="0" x2="118" y2="80779"/>
				</g>
				<g style="--index: 7;">
					<path d="M132,25650" tabindex="0">
						<title>l_gdr5onk9-rkl3znrk-rn1g06dn.qj77o50q</title>
					</path>
					<rect x="132" y="25650" width="0" height="0"/>
					<path d="M132,25650L132,25650" tabindex="0">
						<title>04:16.50 on 2023-06-10</title>
					</path>
					<line x1="0" y1="25650" x2="648" y2="25650"/>
					<line x1="132" y1="0" x2="132" y2="80779"/>
				</g>
				<g style="--index: 8;">
					<path d="M167,7148" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.mlno5r0q</title>
					</path>
					<rect x="167" y="7148" width="0" height="0"/>
					<path d="M167,7148L167,7148" tabindex="0">
						<title>01:11.48 on 2023-07-15</title>
					</path>
					<line x1="0" y1="7148" x2="648" y2="7148"/>
					<line x1="167" y1="0" x2="167" y2="80779"/>
				</g>
				<g style="--index: 9;">
					<path d="M167,15279L199,15279L199,14944" tabindex="0">
						<title>l_o9xo3rp9-xd144xzd-38dz6v1n.q755eky1</title>
					</path>
					<rect x="167" y="14944" width="32" height="335"/>
					<path d="M167,15279L167,15279" tabindex="0">
						<title>02:32.79 on 2023-07-15</title>
					</path>
					<line x1="0" y1="15279" x2="648" y2="15279"/>
					<line x1="167" y1="0" x2="167" y2="80779"/>
					<path d="M199,14944L199,14944" tabindex="0">
						<title>02:29.44 on 2023-08-16</title>
					</path>
					<line x1="0" y1="14944" x2="648" y2="14944"/>
					<line x1="199" y1="0" x2="199" y2="80779"/>
				</g>
				<g style="--index: 10;">
					<path d="M167,1330" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.rqvpey7q</title>
					</path>
					<rect x="167" y="1330" width="0" height="0"/>
					<path d="M167,1330L167,1330" tabindex="0">
						<title>00:13.30 on 2023-07-15</title>
					</path>
					<line x1="0" y1="1330" x2="648" y2="1330"/>
					<line x1="167" y1="0" x2="167" y2="80779"/>
				</g>
				<g style="--index: 11;">
					<path d="M168,1474L183,1474L183,752" tabindex="0">
						<title>9kv6l5e2-ql6rezjl.1dk62o3l</title>
					</path>
					<rect x="168" y="752" width="15" height="722"/>
					<path d="M168,1474L168,1474" tabindex="0">
						<title>00:14.74 on 2023-07-16</title>
					</path>
					<line x1="0" y1="1474" x2="648" y2="1474"/>
					<line x1="168" y1="0" x2="168" y2="80779"/>
					<path d="M183,752L183,752" tabindex="0">
						<title>00:07.52 on 2023-07-31</title>
					</path>
					<line x1="0" y1="752" x2="648" y2="752"/>
					<line x1="183" y1="0" x2="183" y2="80779"/>
				</g>
				<g style="--index: 12;">
					<path d="M174,3728L183,3728L183,2991" tabindex="0">
						<title>rkl9qwrk-6njkg4el.lr3x560l</title>
					</path>
					<rect x="174" y="2991" width="9" height="737"/>
					<path d="M174,3728L174,3728" tabindex="0">
						<title>00:37.28 on 2023-07-22</title>
					</path>
					<line x1="0" y1="3728" x2="648" y2="3728"/>
					<line x1="174" y1="0" x2="174" y2="80779"/>
					<path d="M183,2991L183,2991" tabindex="0">
						<title>00:29.91 on 2023-07-31</title>
					</path>
					<line x1="0" y1="2991" x2="648" y2="2991"/>
					<line x1="183" y1="0" x2="183" y2="80779"/>
				</g>
				<g style="--index: 13;">
					<path d="M215,15103" tabindex="0">
						<title>l_xd0mnpjw-rkl3znrk-wley4prn.192xe54q</title>
					</path>
					<rect x="215" y="15103" width="0" height="0"/>
					<path d="M215,15103L215,15103" tabindex="0">
						<title>02:31.03 on 2023-09-01</title>
					</path>
					<line x1="0" y1="15103" x2="648" y2="15103"/>
					<line x1="215" y1="0" x2="215" y2="80779"/>
				</g>
				<g style="--index: 14;">
					<path d="M221,14851L283,14851L283,13540" tabindex="0">
						<title>l_495zlx39-xd144xzd-38dz6v1n.q755eky1</title>
					</path>
					<rect x="221" y="13540" width="62" height="1311"/>
					<path d="M221,14851L221,14851" tabindex="0">
						<title>02:28.51 on 2023-09-07</title>
					</path>
					<line x1="0" y1="14851" x2="648" y2="14851"/>
					<line x1="221" y1="0" x2="221" y2="80779"/>
					<path d="M283,13540L283,13540" tabindex="0">
						<title>02:15.40 on 2023-11-08</title>
					</path>
					<line x1="0" y1="13540" x2="648" y2="13540"/>
					<line x1="283" y1="0" x2="283" y2="80779"/>
				</g>
				<g style="--index: 15;">
					<path d="M230,23827" tabindex="0">
						<title>l_rdqo542w-xd144xzd-38dz6v1n.q755eky1</title>
					</path>
					<rect x="230" y="23827" width="0" height="0"/>
					<path d="M230,23827L230,23827" tabindex="0">
						<title>03:58.27 on 2023-09-16</title>
					</path>
					<line x1="0" y1="23827" x2="648" y2="23827"/>
					<line x1="230" y1="0" x2="230" y2="80779"/>
				</g>
				<g style="--index: 16;">
					<path d="M250,1593" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.5lermx5q</title>
					</path>
					<rect x="250" y="1593" width="0" height="0"/>
					<path d="M250,1593L250,1593" tabindex="0">
						<title>00:15.93 on 2023-10-06</title>
					</path>
					<line x1="0" y1="1593" x2="648" y2="1593"/>
					<line x1="250" y1="0" x2="250" y2="80779"/>
				</g>
				<g style="--index: 17;">
					<path d="M266,2205" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.gq7jzvnq</title>
					</path>
					<rect x="266" y="2205" width="0" height="0"/>
					<path d="M266,2205L266,2205" tabindex="0">
						<title>00:22.05 on 2023-10-22</title>
					</path>
					<line x1="0" y1="2205" x2="648" y2="2205"/>
					<line x1="266" y1="0" x2="266" y2="80779"/>
				</g>
				<g style="--index: 18;">
					<path d="M298,1150" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.rqvp5e7q</title>
					</path>
					<rect x="298" y="1150" width="0" height="0"/>
					<path d="M298,1150L298,1150" tabindex="0">
						<title>00:11.50 on 2023-11-23</title>
					</path>
					<line x1="0" y1="1150" x2="648" y2="1150"/>
					<line x1="298" y1="0" x2="298" y2="80779"/>
				</g>
				<g style="--index: 19;">
					<path d="M317,3349L344,3349L344,3315" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.lx5xe821</title>
					</path>
					<rect x="317" y="3315" width="27" height="34"/>
					<path d="M317,3349L317,3349" tabindex="0">
						<title>00:33.49 on 2023-12-12</title>
					</path>
					<line x1="0" y1="3349" x2="648" y2="3349"/>
					<line x1="317" y1="0" x2="317" y2="80779"/>
					<path d="M344,3315L344,3315" tabindex="0">
						<title>00:33.15 on 2024-01-08</title>
					</path>
					<line x1="0" y1="3315" x2="648" y2="3315"/>
					<line x1="344" y1="0" x2="344" y2="80779"/>
				</g>
				<g style="--index: 20;">
					<path d="M338,2333" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.qvv4er7q</title>
					</path>
					<rect x="338" y="2333" width="0" height="0"/>
					<path d="M338,2333L338,2333" tabindex="0">
						<title>00:23.33 on 2024-01-02</title>
					</path>
					<line x1="0" y1="2333" x2="648" y2="2333"/>
					<line x1="338" y1="0" x2="338" y2="80779"/>
				</g>
				<g style="--index: 21;">
					<path d="M463,3575L507,3575L507,3450" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.qj7zdm3q</title>
					</path>
					<rect x="463" y="3450" width="44" height="125"/>
					<path d="M463,3575L463,3575" tabindex="0">
						<title>00:35.75 on 2024-05-06</title>
					</path>
					<line x1="0" y1="3575" x2="648" y2="3575"/>
					<line x1="463" y1="0" x2="463" y2="80779"/>
					<path d="M507,3450L507,3450" tabindex="0">
						<title>00:34.50 on 2024-06-19</title>
					</path>
					<line x1="0" y1="3450" x2="648" y2="3450"/>
					<line x1="507" y1="0" x2="507" y2="80779"/>
				</g>
				<g style="--index: 22;">
					<path d="M573,1371" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.814y7w01</title>
					</path>
					<rect x="573" y="1371" width="0" height="0"/>
					<path d="M573,1371L573,1371" tabindex="0">
						<title>00:13.71 on 2024-08-24</title>
					</path>
					<line x1="0" y1="1371" x2="648" y2="1371"/>
					<line x1="573" y1="0" x2="573" y2="80779"/>
				</g>
				<g style="--index: 23;">
					<path d="M579,1586" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.jq606z3q</title>
					</path>
					<rect x="579" y="1586" width="0" height="0"/>
					<path d="M579,1586L579,1586" tabindex="0">
						<title>00:15.86 on 2024-08-30</title>
					</path>
					<line x1="0" y1="1586" x2="648" y2="1586"/>
					<line x1="579" y1="0" x2="579" y2="80779"/>
				</g>
				<g style="--index: 24;">
					<path d="M587,6235" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.klrp6ejq</title>
					</path>
					<rect x="587" y="6235" width="0" height="0"/>
					<path d="M587,6235L587,6235" tabindex="0">
						<title>01:02.35 on 2024-09-07</title>
					</path>
					<line x1="0" y1="6235" x2="648" y2="6235"/>
					<line x1="587" y1="0" x2="587" y2="80779"/>
				</g>
				<g style="--index: 25;">
					<path d="M604,2059" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.jqzpyr4l</title>
					</path>
					<rect x="604" y="2059" width="0" height="0"/>
					<path d="M604,2059L604,2059" tabindex="0">
						<title>00:20.59 on 2024-09-24</title>
					</path>
					<line x1="0" y1="2059" x2="648" y2="2059"/>
					<line x1="604" y1="0" x2="604" y2="80779"/>
				</g>
				<g style="--index: 26;">
					<path d="M648,3252" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.zqop6rp1</title>
					</path>
					<rect x="648" y="3252" width="0" height="0"/>
					<path d="M648,3252L648,3252" tabindex="0">
						<title>00:32.52 on 2024-11-07</title>
					</path>
					<line x1="0" y1="3252" x2="648" y2="3252"/>
					<line x1="648" y1="0" x2="648" y2="80779"/>
				</g>
			</g>
		</svg>
	</foreignObject>
</svg>
