<svg xmlns="http://www.w3.org/2000/svg" lang="en" style="color-scheme: dark light;">
	<title>Rank by leaderboard for player 18qg9ndx</title>
	<style>
		*,
		::before,
		::after {
			box-sizing: border-box;
		}
		:root {
			background: var(--canvas-background);
			color: var(--canvas-foreground);
			fill: var(--canvas-background);
			stroke: var(--canvas-foreground);
			stroke-linejoin: round;
			stroke-linecap: round;
		}
		foreignObject {
			pointer-events: none;
		}
		foreignObject &gt; div {
			position: absolute;
			left: 0;
			top: 0;
			margin: 20px;
			border: 1px solid var(--canvas-foreground);
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			transition: opacity 1s;
			pointer-events: auto;
		}
		foreignObject:is(:hover, :focus-within) &gt; div:not(:hover, :focus-within) {
			opacity: 0;
			pointer-events: none;
		}
		foreignObject &gt; div &gt; p {
			margin: 0;
		}
		label {
			display: table;
			border-collapse: separate;
			border-spacing: 10px;
		}
		progress,
		input[type="checkbox"] {
			display: table-cell;
			width: 16px;
			height: 16px;
			margin: 2px;
			accent-color: var(--canvas-foreground);
			vertical-align: top;
		}
		progress + span,
		input[type="checkbox"] + span {
			display: table-cell;
			vertical-align: top;
		}
		input[type="checkbox"]:not(:disabled):is(:hover, :focus-within) + span {
			text-decoration: underline;
		}
		foreignObject &gt; svg {
			width: calc(100% - 40px);
			height: calc(100% - 40px);
			margin: 20px;
			padding: 10px;
			border: 1px dashed var(--canvas-foreground);
			background: var(--canvas-background);
			pointer-events: auto;
		}
		g &gt; path[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: hsl(calc(var(--index) / var(--count) * 360), 50%, 50%);
			cursor: help;
		}
		g:is(:hover, :focus-within) &gt; path[tabindex] {
			stroke: var(--canvas-foreground);
		}
		g &gt; path[tabindex]:is(:hover, :focus-within) {
			outline: 0;
		}
		g &gt; path[tabindex]:first-of-type {
			stroke-width: 2;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) {
			stroke-width: 4;
		}
		g &gt; path[tabindex]:first-of-type:not(:last-of-type) {
			stroke-dasharray: 4 8;
		}
		g &gt; rect {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect {
			fill: var(--highlighted);
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] {
			stroke-width: 8;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) {
			stroke-width: 16;
		}
		g &gt; line {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			stroke-width: 2;
			stroke-dasharray: 4 8;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line + line {
			stroke: var(--faded);
		}
		@media (prefers-color-scheme: dark) {
			:root {
				--canvas-background: #000;
				--canvas-foreground: #ccc;
				--highlighted: #6663;
				--faded: #9993;
			}
		}
		@media (prefers-color-scheme: light) {
			:root {
				--canvas-background: #fff;
				--canvas-foreground: #333;
				--highlighted: #9993;
				--faded: #6663;
			}
		}
	</style>
	<script>
		"use strict";
		{
			const script = document.currentScript;
			const documentUrl = location.href;
			const scope = new URL("../../", documentUrl).pathname;
			const playersKey = `${scope}#players`;
			const leaderboardsKey = `${scope}#leaderboards`;
			const sessionKey = `${scope}#session`;
			const lockKey = `${scope}#lock`;
			async function importDataScript(dataScriptUrl, signal) {
				signal.throwIfAborted();
				if (documentUrl.protocol !== "file:") {
					const response = await fetch(dataScriptUrl, {
						signal,
					});
					if (!response.ok) {
						throw new Error(response.statusText);
					}
					const data = await response.json();
					return data;
				}
				return await new Promise((resolve, reject) =&gt; {
					const name = `callback${Math.random() * 2 ** 53}`;
					let called = false;
					let data = null;
					function callback(value) {
						if (!called) {
							called = true;
							data = value;
						}
					}
					window[name] = callback;
					const dataScript = document.createElementNS("http://www.w3.org/2000/svg", "script");
					dataScript.href = `${dataScriptUrl}&amp;callback=${name}`;
					function handleAbort(event) {
						delete window[name];
						dataScript.removeEventListener("error", handleError);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const reason = signal.reason;
						reject(reason);
					}
					function handleError(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const error = event.error;
						reject(error);
					}
					function handleLoad(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("error", handleError);
						dataScript.remove();
						resolve(data);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					dataScript.addEventListener("error", handleError, {
						once: true,
					});
					dataScript.addEventListener("load", handleLoad, {
						once: true,
					});
					script.after(dataScript);
				});
			}
			async function waitForTimeout(delay, signal) {
				signal.throwIfAborted();
				return await new Promise((resolve, reject) =&gt; {
					let timeout = null;
					function handleAbort() {
						clearTimeout(timeout);
						const reason = signal.reason;
						reject(reason);
					}
					function handleTimeout() {
						signal.removeEventListener("abort", handleAbort);
						resolve(delay);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					timeout = setTimeout(handleTimeout, delay);
				});
			}
			window.addEventListener("pageshow", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully restored page from cache`);
				} else {
					console.log(`Unsuccessfully restored page from cache`);
				}
			});
			window.addEventListener("pagehide", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully saved page to cache`);
				} else {
					console.log(`Unsuccessfully saved page to cache`);
				}
			});
			window.addEventListener("pageshow", async (event) =&gt; {
				const rootTitleElement = document.querySelector("title");
				const rootTitleContent = rootTitleElement.textContent;
				const pathTitleElements = Array.from(document.querySelectorAll("g &gt; path[tabindex]:first-of-type &gt; title"));
				const pathTitleContents = pathTitleElements.map((pathTitleElement) =&gt; {
					const pathTitleContent = pathTitleElement.textContent;
					return pathTitleContent;
				});
				const foreignObject = document.querySelector("foreignObject");
				const div = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
				div.dir = "ltr";
				const p = document.createElementNS("http://www.w3.org/1999/xhtml", "p");
				const label = document.createElementNS("http://www.w3.org/1999/xhtml", "label");
				const progress = document.createElementNS("http://www.w3.org/1999/xhtml", "progress");
				label.append(progress);
				const span = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
				span.textContent = "Loading names";
				label.append(span);
				p.append(label);
				div.append(p);
				foreignObject.prepend(div);
				let lock = false;
				let session = null;
				const broadcastChannel = new BroadcastChannel(sessionKey);
				const abortController = new AbortController();
				const signal = abortController.signal;
				const abort = abortController.abort.bind(abortController);
				const {promise, resolve} = Promise.withResolvers();
				broadcastChannel.addEventListener("message", (event) =&gt; {
					const data = event.data;
					const type = data.type;
					switch (type) {
						case "request": {
							if (lock &amp;&amp; signal.aborted) {
								broadcastChannel.postMessage({
									type: "response",
									session,
								});
							}
							break;
						}
						case "response": {
							if (!signal.aborted) {
								session = data.session;
								if (session != null) {
									const {players, leaderboards} = session;
									try {
										const cachedPlayers = JSON.stringify(players);
										const cachedLeaderboards = JSON.stringify(leaderboards);
										sessionStorage.setItem(playersKey, cachedPlayers);
										sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
									} catch {}
									console.log(`Successfully loaded names from peer`);
									abort();
									resolve();
								} else {
									console.log(`Unsuccessfully loaded names from peer`);
									abort();
									resolve();
								}
							}
							break;
						}
					}
				});
				try {
					const cachedPlayers = sessionStorage.getItem(playersKey);
					const cachedLeaderboards = sessionStorage.getItem(leaderboardsKey);
					if (cachedPlayers == null || cachedLeaderboards == null) {
						throw new Error();
					}
					const players = JSON.parse(cachedPlayers);
					const leaderboards = JSON.parse(cachedLeaderboards);
					session = {players, leaderboards};
				} catch {}
				if (session != null) {
					broadcastChannel.postMessage({
						type: "response",
						session,
					});
					console.log(`Successfully loaded names from local`);
					abort();
					resolve();
				} else {
					broadcastChannel.postMessage({
						type: "request",
					});
					console.log(`Unsuccessfully loaded names from local`);
				}
				(async () =&gt; {
					for (;;) {
						await navigator.locks.request(lockKey, async () =&gt; {
							lock = true;
							console.log(`Acquired lock`);
							if (!signal.aborted) {
								try {
									const players = Object.create(null);
									const leaderboards = Object.create(null);
									const games = ["9d3rrxyd", "w6jl2ned"];
									for (const gameId of games) {
										const {data} = await importDataScript(`https://www.speedrun.com/api/v1/games/${gameId}?embed=categories,levels,variables`, signal);
										const versions = data.variables.data.find((variable) =&gt; {
											return variable.name === "Version";
										});
										const levels = Object.fromEntries(data.levels.data.map((level) =&gt; {
											return [level.id, level];
										}));
										const categories = Object.fromEntries(data.categories.data.map((category) =&gt; {
											return [category.id, category];
										}));
										const variables = Object.fromEntries(data.variables.data.map((variable) =&gt; {
											return [variable.id, variable];
										}));
										console.log(`Got game`);
										await waitForTimeout(800, signal);
										const slice = 200;
										for (let offset = 0;; offset += slice) {
											const {data, pagination} = await importDataScript(`https://www.speedrun.com/api/v1/runs?game=${gameId}&amp;orderby=date&amp;direction=asc&amp;embed=players&amp;offset=${offset}&amp;max=${slice}`, signal);
											const {size} = pagination;
											if (size === 0) {
												break;
											}
											for (const run of data) {
												const status = run.status.status;
												if (status == null || status === "new") {
													continue;
												}
												const player = run.players.data[0].rel === "user" ? run.players.data[0].id : "814p2558";
												const playerName = run.players.data[0].rel === "user" ? run.players.data[0].names.international : "anonymous";
												players[player] ??= playerName;
												const level = run.level;
												const category = run.category;
												const values = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return `-${variable}.${value}`;
												});
												const leaderboard = `${level != null ? `l_${level}-` : ""}${category}${values.join("")}`;
												const levelName = run.level != null ? levels[run.level]?.name ?? null : null;
												const categoryName = categories[run.category]?.name ?? null;
												const valueNames = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return variables[variable]?.values.values[value]?.label ?? null;
												}).filter((valueName) =&gt; {
													return valueName != null;
												});
												const leaderboardName = `${levelName != null ? `${levelName}: ` : ""}${categoryName ?? ""}${values.length !== 0 ? ` - ${valueNames.join(", ")}` : ""}`;
												leaderboards[leaderboard] ??= leaderboardName;
											}
											console.log(`Got runs ${offset}-${offset + size - 1}`);
											await waitForTimeout(800, signal);
										}
									}
									session = {players, leaderboards};
								} catch {}
								if (!signal.aborted) {
									if (session != null) {
										const {players, leaderboards} = session;
										try {
											const cachedPlayers = JSON.stringify(players);
											const cachedLeaderboards = JSON.stringify(leaderboards);
											sessionStorage.setItem(playersKey, cachedPlayers);
											sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
										} catch {}
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Successfully loaded names from remote`);
										abort();
										resolve();
									} else {
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Unsuccessfully loaded names from remote`);
										abort();
										resolve();
									}
								}
							}
							await new Promise((resolve) =&gt; {
								window.addEventListener("beforeunload", () =&gt; {
									resolve();
								}, {
									once: true,
								});
							});
						});
						lock = false;
						console.log(`Released lock`);
						await new Promise((resolve) =&gt; {
							window.addEventListener("pagehide", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
						await new Promise((resolve) =&gt;{
							window.addEventListener("pageshow", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
					}
				})();
				await promise;
				if (session == null) {
					const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
					input.type = "checkbox";
					input.autocomplete = "off";
					input.disabled = true;
					input.indeterminate = true;
					progress.replaceWith(input);
					span.textContent = "Unavailable names";
					return;
				}
				const {players, leaderboards} = session;
				const hasPlayerRoot = rootTitleContent.includes(" for player");
				const hasLeaderboardRoot = rootTitleContent.includes(" for leaderboard");
				const rootTitle = {
					element: rootTitleElement,
					contentWithIds: rootTitleContent,
					contentWithNames: hasPlayerRoot ? rootTitleContent.replace(/ for player ([0-9_a-z]+)/, ($0, $1) =&gt; {
						return ` for player ${players[$1] ?? $1}`;
					}) : hasLeaderboardRoot ? rootTitleContent.replace(/ for leaderboard ((?:l_[0-9_a-z]+-)?[0-9_a-z]+(-[0-9_a-z]+\.[0-9_a-z]+)*)/, ($0, $1) =&gt; {
						return ` for leaderboard ${leaderboards[$1] ?? $1}`;
					}) : rootTitleContent,
				};
				const hasPlayerPaths = rootTitleContent.includes(" by player");
				const hasLeaderboardPaths = rootTitleContent.includes(" by leaderboard");
				const pathTitles = pathTitleElements.map((pathTitleElement, k) =&gt; {
					const pathTitleContent = pathTitleContents[k];
					const pathTitle = {
						element: pathTitleElement,
						contentWithIds: pathTitleContent,
						contentWithNames: hasPlayerPaths ? players[pathTitleContent] ?? pathTitleContent : hasLeaderboardPaths ? leaderboards[pathTitleContent] ?? pathTitleContent : pathTitleContent,
					};
					return pathTitle;
				});
				const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
				input.type = "checkbox";
				input.autocomplete = "off";
				input.addEventListener("change", () =&gt; {
					input.disabled = true;
					if (input.checked) {
						rootTitle.element.textContent = rootTitle.contentWithNames;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithNames;
						}
					} else {
						rootTitle.element.textContent = rootTitle.contentWithIds;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithIds;
						}
					}
					input.disabled = false;
				});
				progress.replaceWith(input);
				span.textContent = "Reveal names";
			}, {
				once: true,
			});
		}
	</script>
	<foreignObject x="0" y="0" width="100%" height="100%">
		<svg viewBox="0 0 2357 129" preserveAspectRatio="none" overflow="visible">
			<g transform="scale(1 -1)" transform-origin="center center" style="--count: 24;">
				<g style="--index: 0;">
					<path d="M0,2L0,2L0,1L30,1L30,2L799,2L799,3L896,3L896,4L981,4L981,5L1021,5L1021,6L1030,6L1030,7L1056,7L1056,8L1130,8L1130,9L1570,9L1570,10L1574,10L1574,11L1637,11L1637,12L1699,12L1699,13L1738,13L1738,14L1815,14L1815,15L1827,15L1827,16L1841,16L1841,17L1895,17L1895,18L1924,18L1924,19L1937,19L1937,20L2085,20L2085,21L2092,21L2092,22L2117,22L2117,23L2159,23L2159,24L2236,24L2236,25L2302,25L2302,26L2312,26L2312,27L2334,27L2334,28L2338,28L2338,29L2357,29" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.klrpy2jq</title>
					</path>
				</g>
				<g style="--index: 1;">
					<path d="M0,4L0,4L0,0L30,0L30,1L365,1L365,2L454,2L454,3L455,3L455,4L704,4L704,5L785,5L785,6L803,6L803,8L958,8L958,9L962,9L962,10L966,10L966,11L978,11L978,12L981,12L981,13L982,13L982,14L985,14L985,15L1001,15L1001,16L1022,16L1022,17L1049,17L1049,18L1098,18L1098,19L1101,19L1101,20L1113,20L1113,21L1161,21L1161,22L1226,22L1226,23L1389,23L1389,24L1396,24L1396,25L1409,25L1409,26L1449,26L1449,27L1455,27L1455,28L1497,28L1497,29L1505,29L1505,30L1510,30L1510,32L1513,32L1513,33L1539,33L1539,34L1561,34L1561,35L1566,35L1566,36L1571,36L1571,37L1574,37L1574,38L1581,38L1581,39L1589,39L1589,40L1593,40L1593,41L1605,41L1605,42L1612,42L1612,43L1615,43L1615,44L1616,44L1616,45L1618,45L1618,46L1620,46L1620,47L1679,47L1679,48L1683,48L1683,49L1695,49L1695,50L1699,50L1699,51L1721,51L1721,52L1729,52L1729,53L1755,53L1755,54L1759,54L1759,55L1761,55L1761,56L1774,56L1774,57L1776,57L1776,58L1820,58L1820,59L1825,59L1825,60L1826,60L1826,61L1833,61L1833,62L1841,62L1841,63L1845,63L1845,64L1853,64L1853,65L1856,65L1856,66L1863,66L1863,67L1866,67L1866,68L1882,68L1882,69L1883,69L1883,71L1889,71L1889,73L1894,73L1894,74L1918,74L1918,75L1944,75L1944,76L1946,76L1946,77L1948,77L1948,78L1972,78L1972,79L1982,79L1982,81L1990,81L1990,82L2019,82L2019,83L2030,83L2030,84L2037,84L2037,85L2039,85L2039,86L2056,86L2056,87L2070,87L2070,88L2085,88L2085,90L2149,90L2149,91L2150,91L2150,92L2174,92L2174,93L2193,93L2193,94L2207,94L2207,95L2216,95L2216,96L2219,96L2219,97L2233,97L2233,98L2236,98L2236,99L2253,99L2253,100L2254,100L2254,102L2262,102L2262,103L2271,103L2271,105L2284,105L2284,106L2289,106L2289,107L2291,107L2291,108L2292,108L2292,109L2293,109L2293,110L2294,110L2294,111L2297,111L2297,112L2301,112L2301,113L2304,113L2304,114L2305,114L2305,115L2308,115L2308,117L2311,117L2311,118L2316,118L2316,119L2320,119L2320,120L2322,120L2322,121L2326,121L2326,122L2332,122L2332,124L2334,124L2334,125L2337,125L2337,126L2342,126L2342,127L2345,127L2345,128L2356,128L2356,129L2357,129" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.jqzpx3gl</title>
					</path>
				</g>
				<g style="--index: 2;">
					<path d="M0,5L1,5L1,0L14,0L14,1L25,1L25,0L26,0L26,1L32,1L32,2L346,2L346,3L785,3L785,4L803,4L803,5L978,5L978,6L987,6L987,7L1038,7L1038,8L1043,8L1043,9L1072,9L1072,10L1117,10L1117,11L1386,11L1386,12L1470,12L1470,13L1512,13L1512,14L1532,14L1532,15L1824,15L1824,16L1936,16L1936,17L2016,17L2016,18L2033,18L2033,19L2308,19L2308,20L2310,20L2310,21L2332,21L2332,22L2349,22L2349,23L2350,23L2350,24L2357,24" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.81ppdgg1</title>
					</path>
				</g>
				<g style="--index: 3;">
					<path d="M0,4L2,4L2,3L35,3L35,4L801,4L801,5L960,5L960,6L978,6L978,8L985,8L985,9L1075,9L1075,10L1505,10L1505,11L1532,11L1532,12L1574,12L1574,13L1592,13L1592,14L1662,14L1662,15L1709,15L1709,16L1780,16L1780,17L1842,17L1842,18L1849,18L1849,19L1900,19L1900,20L2053,20L2053,21L2055,21L2055,22L2178,22L2178,23L2205,23L2205,24L2238,24L2238,25L2264,25L2264,26L2331,26L2331,27L2357,27" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.013856dq</title>
					</path>
				</g>
				<g style="--index: 4;">
					<path d="M0,1L2,1L2,0L24,0L24,1L26,1L26,0L37,0L37,1L795,1L795,2L796,2L796,3L842,3L842,4L958,4L958,5L976,5L976,6L978,6L978,7L985,7L985,8L1004,8L1004,9L1079,9L1079,10L1550,10L1550,11L1574,11L1574,12L1616,12L1616,13L1722,13L1722,14L1729,14L1729,15L1788,15L1788,16L1846,16L1846,17L1870,17L1870,18L1981,18L1981,19L2028,19L2028,20L2178,20L2178,21L2342,21L2342,22L2357,22" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.5lermx5q</title>
					</path>
				</g>
				<g style="--index: 5;">
					<path d="M0,2L4,2L4,2L34,2L34,3L771,3L771,4L773,4L773,5L777,5L777,6L791,6L791,7L882,7L882,8L908,8L908,9L958,9L958,10L976,10L976,11L978,11L978,12L983,12L983,13L985,13L985,14L1034,14L1034,15L1081,15L1081,16L1325,16L1325,17L1383,17L1383,18L1568,18L1568,19L1574,19L1574,20L1594,20L1594,21L1624,21L1624,22L1646,22L1646,23L1648,23L1648,24L1662,24L1662,25L1728,25L1728,26L1759,26L1759,27L1761,27L1761,28L1845,28L1845,29L1870,29L1870,30L1990,30L1990,31L2007,31L2007,32L2050,32L2050,33L2104,33L2104,34L2178,34L2178,35L2247,35L2247,36L2278,36L2278,37L2331,37L2331,38L2332,38L2332,39L2341,39L2341,40L2357,40" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.jq60ze3q</title>
					</path>
				</g>
				<g style="--index: 6;">
					<path d="M0,2L4,2L4,2L37,2L37,3L672,3L672,4L798,4L798,5L971,5L971,6L985,6L985,8L1018,8L1018,9L1076,9L1076,10L1079,10L1079,11L1416,11L1416,12L1470,12L1470,13L1538,13L1538,14L1556,14L1556,15L1574,15L1574,16L1575,16L1575,17L1596,17L1596,18L1602,18L1602,19L1632,19L1632,20L1637,20L1637,21L1705,21L1705,22L1711,22L1711,23L1818,23L1818,24L1870,24L1870,25L1945,25L1945,26L2139,26L2139,27L2178,27L2178,28L2235,28L2235,29L2238,29L2238,30L2274,30L2274,31L2342,31L2342,32L2346,32L2346,33L2357,33" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.rqvpey7q</title>
					</path>
				</g>
				<g style="--index: 7;">
					<path d="M0,2L4,2L4,2L30,2L30,3L795,3L795,4L958,4L958,5L981,5L981,6L1304,6L1304,7L1454,7L1454,8L1497,8L1497,9L1543,9L1543,10L1552,10L1552,11L1572,11L1572,12L1593,12L1593,13L1619,13L1619,14L1647,14L1647,15L1725,15L1725,16L1824,16L1824,17L1829,17L1829,18L1883,18L1883,19L1941,19L1941,20L2016,20L2016,22L2092,22L2092,23L2104,23L2104,24L2266,24L2266,25L2310,25L2310,26L2338,26L2338,27L2357,27" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.21g82pnl</title>
					</path>
				</g>
				<g style="--index: 8;">
					<path d="M0,2L4,2L4,2L30,2L30,3L112,3L112,5L303,5L303,6L793,6L793,7L896,7L896,8L981,8L981,9L1007,9L1007,10L1013,10L1013,11L1030,11L1030,12L1056,12L1056,13L1125,13L1125,14L1131,14L1131,16L1456,16L1456,17L1512,17L1512,18L1574,18L1574,19L1606,19L1606,20L1619,20L1619,21L1636,21L1636,22L1645,22L1645,23L1695,23L1695,24L1705,24L1705,25L1767,25L1767,26L1788,26L1788,27L1827,27L1827,28L1841,28L1841,29L1864,29L1864,30L1916,30L1916,31L1925,31L1925,32L1989,32L1989,33L2002,33L2002,34L2051,34L2051,35L2092,35L2092,36L2153,36L2153,37L2157,37L2157,38L2236,38L2236,39L2303,39L2303,40L2334,40L2334,41L2357,41" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.21dz3e4l</title>
					</path>
				</g>
				<g style="--index: 9;">
					<path d="M0,2L4,2L4,2L25,2L25,0L26,0L26,1L28,1L28,0L34,0L34,1L106,1L106,2L893,2L893,3L1005,3L1005,4L1006,4L1006,5L1046,5L1046,6L1200,6L1200,7L1299,7L1299,8L1362,8L1362,9L1394,9L1394,10L1451,10L1451,11L1504,11L1504,12L1620,12L1620,13L1630,13L1630,14L1648,14L1648,15L1649,15L1649,16L2121,16L2121,17L2357,17" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.p12dx87q</title>
					</path>
				</g>
				<g style="--index: 10;">
					<path d="M0,1L4,1L4,1L117,1L117,2L689,2L689,3L819,3L819,4L965,4L965,5L978,5L978,6L990,6L990,7L1004,7L1004,8L1047,8L1047,9L1081,9L1081,10L1114,10L1114,11L2106,11L2106,12L2357,12" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.810zwdwq</title>
					</path>
				</g>
				<g style="--index: 11;">
					<path d="M0,6L4,6L4,5L25,5L25,6L32,6L32,7L514,7L514,8L574,8L574,9L774,9L774,10L788,10L788,11L825,11L825,12L850,12L850,13L965,13L965,14L981,14L981,15L982,15L982,16L1042,16L1042,17L1049,17L1049,18L1057,18L1057,19L1061,19L1061,20L1071,20L1071,21L1097,21L1097,22L1117,22L1117,23L1125,23L1125,24L1138,24L1138,25L1140,25L1140,26L1294,26L1294,27L1326,27L1326,28L1397,28L1397,29L1402,29L1402,30L1412,30L1412,31L1449,31L1449,33L1453,33L1453,34L1504,34L1504,35L1535,35L1535,36L1570,36L1570,37L1574,37L1574,38L1575,38L1575,39L1593,39L1593,40L1606,40L1606,41L1618,41L1618,42L1622,42L1622,43L1633,43L1633,44L1634,44L1634,45L1690,45L1690,46L1736,46L1736,47L1825,47L1825,48L1829,48L1829,49L1840,49L1840,50L1869,50L1869,52L1876,52L1876,53L1883,53L1883,54L1918,54L1918,55L1930,55L1930,56L1981,56L1981,57L2092,57L2092,58L2099,58L2099,59L2129,59L2129,60L2254,60L2254,61L2269,61L2269,62L2282,62L2282,63L2284,63L2284,64L2295,64L2295,65L2303,65L2303,67L2357,67L2357,68L2357,68" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.xqkjmxnl</title>
					</path>
				</g>
				<g style="--index: 12;">
					<path d="M0,1L4,1L4,1L35,1L35,2L773,2L773,3L799,3L799,4L961,4L961,5L978,5L978,6L983,6L983,7L1008,7L1008,8L1035,8L1035,9L1089,9L1089,10L1269,10L1269,11L1574,11L1574,12L1633,12L1633,13L1660,13L1660,14L1729,14L1729,15L1840,15L1840,16L1896,16L1896,17L1981,17L1981,18L2020,18L2020,19L2178,19L2178,20L2334,20L2334,21L2357,21" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.9qj0x8el</title>
					</path>
				</g>
				<g style="--index: 13;">
					<path d="M0,0L22,0L22,0L31,0L31,1L793,1L793,2L795,2L795,3L981,3L981,5L1011,5L1011,6L1076,6L1076,7L1178,7L1178,8L1536,8L1536,9L1697,9L1697,10L2357,10" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.gq7jzvvq</title>
					</path>
				</g>
				<g style="--index: 14;">
					<path d="M0,0L22,0L22,0L114,0L114,1L795,1L795,2L978,2L978,3L981,3L981,4L1001,4L1001,5L1005,5L1005,6L1010,6L1010,7L1458,7L1458,8L1529,8L1529,9L1538,9L1538,10L1603,10L1603,11L1728,11L1728,12L1729,12L1729,13L1732,13L1732,14L1736,14L1736,15L1823,15L1823,16L1830,16L1830,17L1976,17L1976,18L2093,18L2093,19L2238,19L2238,20L2243,20L2243,21L2245,21L2245,22L2266,22L2266,23L2357,23" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.z19m8p0l</title>
					</path>
				</g>
				<g style="--index: 15;">
					<path d="M0,0L23,0L23,0L109,0L109,1L114,1L114,2L784,2L784,3L842,3L842,4L896,4L896,5L954,5L954,6L979,6L979,7L981,7L981,8L985,8L985,9L986,9L986,10L988,10L988,11L1068,11L1068,12L1431,12L1431,13L1469,13L1469,14L1472,14L1472,15L1497,15L1497,16L1543,16L1543,17L1578,17L1578,18L1716,18L1716,19L1729,19L1729,20L1841,20L1841,21L1982,21L1982,22L2049,22L2049,23L2343,23L2343,24L2357,24" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.21g8ownl</title>
					</path>
				</g>
				<g style="--index: 16;">
					<path d="M0,0L24,0L24,0L32,0L32,1L112,1L112,2L788,2L788,3L796,3L796,4L979,4L979,6L982,6L982,7L983,7L983,8L985,8L985,9L1004,9L1004,10L1187,10L1187,11L1550,11L1550,12L1633,12L1633,13L1728,13L1728,14L1729,14L1729,15L1844,15L1844,16L2145,16L2145,17L2236,17L2236,18L2237,18L2237,19L2246,19L2246,20L2284,20L2284,21L2295,21L2295,22L2351,22L2351,23L2357,23" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.814y7w01</title>
					</path>
				</g>
				<g style="--index: 17;">
					<path d="M0,0L24,0L24,0L31,0L31,1L784,1L784,2L892,2L892,3L979,3L979,4L1007,4L1007,5L1030,5L1030,6L1130,6L1130,7L1728,7L1728,8L1729,8L1729,9L1879,9L1879,11L2244,11L2244,12L2333,12L2333,13L2357,13" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.xqkjmnnl</title>
					</path>
				</g>
				<g style="--index: 18;">
					<path d="M0,1L24,1L24,1L25,1L25,0L26,0L26,1L112,1L112,2L113,2L113,3L794,3L794,4L978,4L978,5L986,5L986,6L1001,6L1001,7L1076,7L1076,8L1694,8L1694,10L2357,10" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.81ppd5g1</title>
					</path>
				</g>
				<g style="--index: 19;">
					<path d="M0,0L25,0L25,0L114,0L114,1L800,1L800,2L979,2L979,3L1030,3L1030,4L1046,4L1046,5L1243,5L1243,6L1326,6L1326,7L1479,7L1479,8L1552,8L1552,9L1553,9L1553,10L2106,10L2106,11L2357,11" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.4lxpe62q</title>
					</path>
				</g>
				<g style="--index: 20;">
					<path d="M0,0L25,0L25,0L114,0L114,1L806,1L806,2L959,2L959,3L978,3L978,4L1030,4L1030,5L1525,5L1525,6L1749,6L1749,7L2343,7L2343,8L2357,8" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.p12dx07q</title>
					</path>
				</g>
				<g style="--index: 21;">
					<path d="M0,1L26,1L26,1L37,1L37,2L796,2L796,3L854,3L854,4L971,4L971,5L978,5L978,6L981,6L981,7L1003,7L1003,8L1007,8L1007,9L1080,9L1080,10L1191,10L1191,11L1473,11L1473,12L1537,12L1537,13L1538,13L1538,14L1565,14L1565,16L1574,16L1574,17L1579,17L1579,18L1670,18L1670,19L1675,19L1675,20L1729,20L1729,21L1731,21L1731,22L1736,22L1736,23L1844,23L1844,24L1870,24L1870,25L1875,25L1875,26L1907,26L1907,27L2044,27L2044,28L2065,28L2065,29L2116,29L2116,30L2178,30L2178,31L2266,31L2266,32L2318,32L2318,33L2337,33L2337,34L2351,34L2351,35L2357,35" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.81wp50oq</title>
					</path>
				</g>
				<g style="--index: 22;">
					<path d="M0,1L166,1L166,0L169,0L169,1L179,1L179,2L1183,2L1183,4L1236,4L1236,5L1615,5L1615,6L1889,6L1889,7L1893,7L1893,8L2357,8" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.4qypgj4q</title>
					</path>
				</g>
				<g style="--index: 23;">
					<path d="M0,0L196,0L196,0L305,0L305,1L395,1L395,2L458,2L458,3L1245,3L1245,4L1247,4L1247,5L2357,5" tabindex="0">
						<title>xd17x94d-9l71pv4l.81wrgm5l</title>
					</path>
				</g>
			</g>
		</svg>
	</foreignObject>
</svg>
