<svg xmlns="http://www.w3.org/2000/svg" lang="en" style="color-scheme: dark light;">
	<title>Record count by player</title>
	<style>
		*,
		::before,
		::after {
			box-sizing: border-box;
		}
		:root {
			background: var(--canvas-background);
			color: var(--canvas-foreground);
			fill: var(--canvas-background);
			stroke: var(--canvas-foreground);
			stroke-linejoin: round;
			stroke-linecap: round;
		}
		foreignObject {
			pointer-events: none;
		}
		foreignObject &gt; div {
			position: absolute;
			left: 0;
			top: 0;
			margin: 20px;
			border: 1px solid var(--canvas-foreground);
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			transition: opacity 1s;
			pointer-events: auto;
		}
		foreignObject:is(:hover, :focus-within) &gt; div:not(:hover, :focus-within) {
			opacity: 0;
			pointer-events: none;
		}
		foreignObject &gt; div &gt; p {
			margin: 0;
		}
		label {
			display: table;
			border-collapse: separate;
			border-spacing: 10px;
		}
		progress,
		input[type="checkbox"] {
			display: table-cell;
			width: 16px;
			height: 16px;
			margin: 2px;
			accent-color: var(--canvas-foreground);
			vertical-align: top;
		}
		progress + span,
		input[type="checkbox"] + span {
			display: table-cell;
			vertical-align: top;
		}
		input[type="checkbox"]:not(:disabled):is(:hover, :focus-within) + span {
			text-decoration: underline;
		}
		foreignObject &gt; svg {
			width: calc(100% - 40px);
			height: calc(100% - 40px);
			margin: 20px;
			padding: 10px;
			border: 1px dashed var(--canvas-foreground);
			background: var(--canvas-background);
			pointer-events: auto;
		}
		g &gt; path[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: hsl(calc(var(--index) / var(--count) * 360), 50%, 50%);
			cursor: help;
		}
		g:is(:hover, :focus-within) &gt; path[tabindex] {
			stroke: var(--canvas-foreground);
		}
		g &gt; path[tabindex]:is(:hover, :focus-within) {
			outline: 0;
		}
		g &gt; path[tabindex]:first-of-type {
			stroke-width: 2;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) {
			stroke-width: 4;
		}
		g &gt; path[tabindex]:first-of-type:not(:last-of-type) {
			stroke-dasharray: 4 8;
		}
		g &gt; rect {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect {
			fill: var(--highlighted);
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] {
			stroke-width: 8;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) {
			stroke-width: 16;
		}
		g &gt; line {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			stroke-width: 2;
			stroke-dasharray: 4 8;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line + line {
			stroke: var(--faded);
		}
		@media (prefers-color-scheme: dark) {
			:root {
				--canvas-background: #000;
				--canvas-foreground: #ccc;
				--highlighted: #6663;
				--faded: #9993;
			}
		}
		@media (prefers-color-scheme: light) {
			:root {
				--canvas-background: #fff;
				--canvas-foreground: #333;
				--highlighted: #9993;
				--faded: #6663;
			}
		}
	</style>
	<script>
		"use strict";
		{
			const script = document.currentScript;
			const documentUrl = location.href;
			const scope = new URL("../", documentUrl).pathname;
			const playersKey = `${scope}#players`;
			const leaderboardsKey = `${scope}#leaderboards`;
			const sessionKey = `${scope}#session`;
			const lockKey = `${scope}#lock`;
			async function importDataScript(dataScriptUrl, signal) {
				signal.throwIfAborted();
				if (documentUrl.protocol !== "file:") {
					const response = await fetch(dataScriptUrl, {
						signal,
					});
					if (!response.ok) {
						throw new Error(response.statusText);
					}
					const data = await response.json();
					return data;
				}
				return await new Promise((resolve, reject) =&gt; {
					const name = `callback${Math.random() * 2 ** 53}`;
					let called = false;
					let data = null;
					function callback(value) {
						if (!called) {
							called = true;
							data = value;
						}
					}
					window[name] = callback;
					const dataScript = document.createElementNS("http://www.w3.org/2000/svg", "script");
					dataScript.href = `${dataScriptUrl}&amp;callback=${name}`;
					function handleAbort(event) {
						delete window[name];
						dataScript.removeEventListener("error", handleError);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const reason = signal.reason;
						reject(reason);
					}
					function handleError(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const error = event.error;
						reject(error);
					}
					function handleLoad(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("error", handleError);
						dataScript.remove();
						resolve(data);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					dataScript.addEventListener("error", handleError, {
						once: true,
					});
					dataScript.addEventListener("load", handleLoad, {
						once: true,
					});
					script.after(dataScript);
				});
			}
			async function waitForTimeout(delay, signal) {
				signal.throwIfAborted();
				return await new Promise((resolve, reject) =&gt; {
					let timeout = null;
					function handleAbort() {
						clearTimeout(timeout);
						const reason = signal.reason;
						reject(reason);
					}
					function handleTimeout() {
						signal.removeEventListener("abort", handleAbort);
						resolve(delay);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					timeout = setTimeout(handleTimeout, delay);
				});
			}
			window.addEventListener("pageshow", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully restored page from cache`);
				} else {
					console.log(`Unsuccessfully restored page from cache`);
				}
			});
			window.addEventListener("pagehide", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully saved page to cache`);
				} else {
					console.log(`Unsuccessfully saved page to cache`);
				}
			});
			window.addEventListener("pageshow", async (event) =&gt; {
				const rootTitleElement = document.querySelector("title");
				const rootTitleContent = rootTitleElement.textContent;
				const pathTitleElements = Array.from(document.querySelectorAll("g &gt; path[tabindex]:first-of-type &gt; title"));
				const pathTitleContents = pathTitleElements.map((pathTitleElement) =&gt; {
					const pathTitleContent = pathTitleElement.textContent;
					return pathTitleContent;
				});
				const foreignObject = document.querySelector("foreignObject");
				const div = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
				div.dir = "ltr";
				const p = document.createElementNS("http://www.w3.org/1999/xhtml", "p");
				const label = document.createElementNS("http://www.w3.org/1999/xhtml", "label");
				const progress = document.createElementNS("http://www.w3.org/1999/xhtml", "progress");
				label.append(progress);
				const span = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
				span.textContent = "Loading names";
				label.append(span);
				p.append(label);
				div.append(p);
				foreignObject.prepend(div);
				let lock = false;
				let session = null;
				const broadcastChannel = new BroadcastChannel(sessionKey);
				const abortController = new AbortController();
				const signal = abortController.signal;
				const abort = abortController.abort.bind(abortController);
				const {promise, resolve} = Promise.withResolvers();
				broadcastChannel.addEventListener("message", (event) =&gt; {
					const data = event.data;
					const type = data.type;
					switch (type) {
						case "request": {
							if (lock &amp;&amp; signal.aborted) {
								broadcastChannel.postMessage({
									type: "response",
									session,
								});
							}
							break;
						}
						case "response": {
							if (!signal.aborted) {
								session = data.session;
								if (session != null) {
									const {players, leaderboards} = session;
									try {
										const cachedPlayers = JSON.stringify(players);
										const cachedLeaderboards = JSON.stringify(leaderboards);
										sessionStorage.setItem(playersKey, cachedPlayers);
										sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
									} catch {}
									console.log(`Successfully loaded names from peer`);
									abort();
									resolve();
								} else {
									console.log(`Unsuccessfully loaded names from peer`);
									abort();
									resolve();
								}
							}
							break;
						}
					}
				});
				try {
					const cachedPlayers = sessionStorage.getItem(playersKey);
					const cachedLeaderboards = sessionStorage.getItem(leaderboardsKey);
					if (cachedPlayers == null || cachedLeaderboards == null) {
						throw new Error();
					}
					const players = JSON.parse(cachedPlayers);
					const leaderboards = JSON.parse(cachedLeaderboards);
					session = {players, leaderboards};
				} catch {}
				if (session != null) {
					broadcastChannel.postMessage({
						type: "response",
						session,
					});
					console.log(`Successfully loaded names from local`);
					abort();
					resolve();
				} else {
					broadcastChannel.postMessage({
						type: "request",
					});
					console.log(`Unsuccessfully loaded names from local`);
				}
				(async () =&gt; {
					for (;;) {
						await navigator.locks.request(lockKey, async () =&gt; {
							lock = true;
							console.log(`Acquired lock`);
							if (!signal.aborted) {
								try {
									const players = Object.create(null);
									const leaderboards = Object.create(null);
									const games = ["9d3rrxyd", "w6jl2ned"];
									for (const gameId of games) {
										const data = await importDataScript(`https://www.speedrun.com/api/v2/GetGameData?gameId=${gameId}`, signal);
										const levels = Object.fromEntries(data.levels.map((level) =&gt; {
											return [
												level.id,
												{
													id: level.id,
													name: level.name,
												},
											];
										}));
										const categories = Object.fromEntries(data.categories.map((category) =&gt; {
											return [
												category.id,
												{
													id: category.id,
													name: category.name,
												},
											];
										}));
										const variables = Object.fromEntries(data.variables.map((variable) =&gt; {
											return [
												variable.id,
												{
													id: variable.id,
													name: variable.name,
													values: {
														values: Object.fromEntries(data.values.filter((value) =&gt; {
															return value.variableId === variable.id;
														}).map((value) =&gt; {
															return [
																value.id,
																{
																	id: value.id,
																	label: value.name,
																},
															];
														})),
													},
													"is-subcategory": variable.isSubcategory,
												},
											];
										}));
										console.log(`Got game`);
										await waitForTimeout(800, signal);
										const slice = 200;
										for (let offset = 0;; offset += slice) {
											const {data, pagination} = await importDataScript(`https://www.speedrun.com/api/v1/runs?game=${gameId}&amp;orderby=date&amp;direction=asc&amp;embed=players&amp;offset=${offset}&amp;max=${slice}`, signal);
											const {size} = pagination;
											if (size === 0) {
												break;
											}
											for (const run of data) {
												const status = run.status.status;
												if (status == null || status === "new") {
													continue;
												}
												const player = run.players.data[0].rel === "user" ? run.players.data[0].id : "814p2558";
												const playerName = run.players.data[0].rel === "user" ? run.players.data[0].names.international : "anonymous";
												players[player] ??= playerName;
												const level = run.level;
												const category = run.category;
												const values = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return `-${variable}.${value}`;
												});
												const leaderboard = `${level != null ? `l_${level}-` : ""}${category}${values.join("")}`;
												const levelName = run.level != null ? levels[run.level]?.name ?? null : null;
												const categoryName = categories[run.category]?.name ?? null;
												const valueNames = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return variables[variable]?.values.values[value]?.label ?? null;
												}).filter((valueName) =&gt; {
													return valueName != null;
												});
												const leaderboardName = `${levelName != null ? `${levelName}: ` : ""}${categoryName ?? ""}${values.length !== 0 ? ` - ${valueNames.join(", ")}` : ""}`;
												leaderboards[leaderboard] ??= leaderboardName;
											}
											console.log(`Got runs ${offset}-${offset + size - 1}`);
											await waitForTimeout(800, signal);
										}
									}
									session = {players, leaderboards};
								} catch {}
								if (!signal.aborted) {
									if (session != null) {
										const {players, leaderboards} = session;
										try {
											const cachedPlayers = JSON.stringify(players);
											const cachedLeaderboards = JSON.stringify(leaderboards);
											sessionStorage.setItem(playersKey, cachedPlayers);
											sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
										} catch {}
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Successfully loaded names from remote`);
										abort();
										resolve();
									} else {
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Unsuccessfully loaded names from remote`);
										abort();
										resolve();
									}
								}
							}
							await new Promise((resolve) =&gt; {
								window.addEventListener("beforeunload", () =&gt; {
									resolve();
								}, {
									once: true,
								});
							});
						});
						lock = false;
						console.log(`Released lock`);
						await new Promise((resolve) =&gt; {
							window.addEventListener("pagehide", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
						await new Promise((resolve) =&gt;{
							window.addEventListener("pageshow", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
					}
				})();
				await promise;
				if (session == null) {
					const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
					input.type = "checkbox";
					input.autocomplete = "off";
					input.disabled = true;
					input.indeterminate = true;
					progress.replaceWith(input);
					span.textContent = "Unavailable names";
					return;
				}
				const {players, leaderboards} = session;
				const hasPlayerRoot = rootTitleContent.includes(" for player");
				const hasLeaderboardRoot = rootTitleContent.includes(" for leaderboard");
				const rootTitle = {
					element: rootTitleElement,
					contentWithIds: rootTitleContent,
					contentWithNames: hasPlayerRoot ? rootTitleContent.replace(/ for player ([0-9_a-z]+)/, ($0, $1) =&gt; {
						return ` for player ${players[$1] ?? $1}`;
					}) : hasLeaderboardRoot ? rootTitleContent.replace(/ for leaderboard ((?:l_[0-9_a-z]+-)?[0-9_a-z]+(-[0-9_a-z]+\.[0-9_a-z]+)*)/, ($0, $1) =&gt; {
						return ` for leaderboard ${leaderboards[$1] ?? $1}`;
					}) : rootTitleContent,
				};
				const hasPlayerPaths = rootTitleContent.includes(" by player");
				const hasLeaderboardPaths = rootTitleContent.includes(" by leaderboard");
				const pathTitles = pathTitleElements.map((pathTitleElement, k) =&gt; {
					const pathTitleContent = pathTitleContents[k];
					const pathTitle = {
						element: pathTitleElement,
						contentWithIds: pathTitleContent,
						contentWithNames: hasPlayerPaths ? players[pathTitleContent] ?? pathTitleContent : hasLeaderboardPaths ? leaderboards[pathTitleContent] ?? pathTitleContent : pathTitleContent,
					};
					return pathTitle;
				});
				const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
				input.type = "checkbox";
				input.autocomplete = "off";
				input.addEventListener("change", () =&gt; {
					input.disabled = true;
					if (input.checked) {
						rootTitle.element.textContent = rootTitle.contentWithNames;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithNames;
						}
					} else {
						rootTitle.element.textContent = rootTitle.contentWithIds;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithIds;
						}
					}
					input.disabled = false;
				});
				progress.replaceWith(input);
				span.textContent = "Reveal names";
			}, {
				once: true,
			});
		}
	</script>
	<foreignObject x="0" y="0" width="100%" height="100%">
		<svg viewBox="0 0 2423 52" preserveAspectRatio="none" overflow="visible">
			<g transform="scale(1 -1)" transform-origin="center center" style="--count: 73;">
				<g style="--index: 0;">
					<path d="M0,0L0,0L0,1L1,1L1,4L5,4L5,1L7,1L7,3L9,3L9,8L10,8L10,5L11,5L11,6L14,6L14,5L16,5L16,6L17,6L17,6L18,6L18,6L19,6L19,6L23,6L23,6L24,6L24,5L25,5L25,5L26,5L26,4L28,4L28,3L30,3L30,5L31,5L31,7L32,7L32,8L57,8L57,10L59,10L59,11L60,11L60,13L66,13L66,12L69,12L69,11L70,11L70,10L71,10L71,9L93,9L93,10L94,10L94,9L95,9L95,8L99,8L99,7L101,7L101,6L103,6L103,5L104,5L104,4L178,4L178,5L181,5L181,7L182,7L182,5L183,5L183,4L186,4L186,2L187,2L187,1L188,1L188,0L416,0L416,1L417,1L417,1L418,1L418,4L464,4L464,5L556,5L556,4L759,4L759,3L842,3L842,2L895,2L895,1L995,1L995,0L2423,0" tabindex="0">
						<title>qj2pq1p8</title>
					</path>
				</g>
				<g style="--index: 1;">
					<path d="M0,0L1,0L1,1L5,1L5,0L83,0L83,1L94,1L94,1L95,1L95,3L97,3L97,2L101,2L101,0L175,0L175,1L180,1L180,0L2423,0" tabindex="0">
						<title>e8e935oj</title>
					</path>
				</g>
				<g style="--index: 2;">
					<path d="M0,0L1,0L1,1L106,1L106,0L2423,0" tabindex="0">
						<title>7j47r25j</title>
					</path>
				</g>
				<g style="--index: 3;">
					<path d="M0,0L5,0L5,5L6,5L6,5L7,5L7,5L9,5L9,4L11,4L11,3L14,3L14,4L16,4L16,3L31,3L31,2L104,2L104,1L106,1L106,0L2423,0" tabindex="0">
						<title>5j5gggn8</title>
					</path>
				</g>
				<g style="--index: 4;">
					<path d="M0,0L7,0L7,1L8,1L8,1L16,1L16,1L18,1L18,2L27,2L27,1L57,1L57,0L66,0L66,1L91,1L91,2L93,2L93,2L94,2L94,0L95,0L95,1L181,1L181,0L235,0L235,0L238,0L238,1L248,1L248,0L2423,0" tabindex="0">
						<title>48grel1x</title>
					</path>
				</g>
				<g style="--index: 5;">
					<path d="M0,0L10,0L10,3L11,3L11,3L18,3L18,2L25,2L25,1L59,1L59,0L2423,0" tabindex="0">
						<title>0jm3onz8</title>
					</path>
				</g>
				<g style="--index: 6;">
					<path d="M0,0L24,0L24,1L25,1L25,2L26,2L26,3L27,3L27,4L28,4L28,6L30,6L30,4L31,4L31,3L60,3L60,2L99,2L99,0L2423,0" tabindex="0">
						<title>kj9kz6r8</title>
					</path>
				</g>
				<g style="--index: 7;">
					<path d="M0,0L69,0L69,1L70,1L70,2L71,2L71,3L83,3L83,2L91,2L91,4L92,4L92,5L93,5L93,6L94,6L94,11L95,11L95,9L97,9L97,10L99,10L99,9L100,9L100,7L101,7L101,6L103,6L103,5L106,5L106,4L178,4L178,3L183,3L183,0L235,0L235,1L238,1L238,0L265,0L265,1L374,1L374,0L2423,0" tabindex="0">
						<title>18qg9ndx</title>
					</path>
				</g>
				<g style="--index: 8;">
					<path d="M0,0L99,0L99,4L100,4L100,6L101,6L101,10L103,10L103,12L104,12L104,14L105,14L105,14L106,14L106,17L107,17L107,17L175,17L175,16L180,16L180,17L181,17L181,16L182,16L182,18L183,18L183,22L186,22L186,25L187,25L187,26L188,26L188,27L248,27L248,28L250,28L250,28L251,28L251,28L252,28L252,28L253,28L253,28L255,28L255,28L260,28L260,28L263,28L263,28L374,28L374,29L389,29L389,29L416,29L416,28L418,28L418,26L434,26L434,25L464,25L464,24L574,24L574,27L578,27L578,28L643,28L643,27L840,27L840,26L844,26L844,26L846,26L846,27L853,27L853,25L854,25L854,24L857,24L857,23L862,23L862,22L863,22L863,21L869,21L869,20L870,20L870,19L871,19L871,17L875,17L875,14L888,14L888,13L923,13L923,12L957,12L957,13L959,13L959,15L961,15L961,16L963,16L963,19L964,19L964,18L965,18L965,19L966,19L966,20L967,20L967,22L968,22L968,21L970,21L970,22L996,22L996,21L997,21L997,20L1005,20L1005,19L1013,19L1013,18L1019,18L1019,17L1023,17L1023,16L1027,16L1027,15L1030,15L1030,14L1047,14L1047,11L1048,11L1048,10L1054,10L1054,8L1055,8L1055,8L1056,8L1056,7L1058,7L1058,8L1059,8L1059,8L1078,8L1078,7L1094,7L1094,6L1103,6L1103,5L1104,5L1104,3L1111,3L1111,2L1143,2L1143,3L1146,3L1146,4L1151,4L1151,3L1182,3L1182,2L1252,2L1252,1L1373,1L1373,0L2376,0L2376,4L2423,4" tabindex="0">
						<title>y8dgoe98</title>
					</path>
				</g>
				<g style="--index: 9;">
					<path d="M0,0L416,0L416,1L854,1L854,0L2423,0" tabindex="0">
						<title>1xye35n8</title>
					</path>
				</g>
				<g style="--index: 10;">
					<path d="M0,0L434,0L434,1L435,1L435,1L524,1L524,0L2423,0" tabindex="0">
						<title>dx3k6eej</title>
					</path>
				</g>
				<g style="--index: 11;">
					<path d="M0,0L524,0L524,1L556,1L556,2L558,2L558,2L742,2L742,3L839,3L839,3L872,3L872,2L877,2L877,2L888,2L888,2L890,2L890,1L997,1L997,2L1024,2L1024,2L1041,2L1041,3L1052,3L1052,2L1053,2L1053,3L1054,3L1054,6L1055,6L1055,7L1056,7L1056,8L1073,8L1073,9L1074,9L1074,9L1078,9L1078,9L1085,9L1085,8L1094,8L1094,7L1095,7L1095,6L1103,6L1103,7L1106,7L1106,6L1112,6L1112,5L1141,5L1141,4L1142,4L1142,5L1143,5L1143,4L1145,4L1145,3L1154,3L1154,2L1176,2L1176,3L1177,3L1177,4L1178,4L1178,3L1180,3L1180,2L1276,2L1276,3L1316,3L1316,2L1434,2L1434,1L1771,1L1771,2L1904,2L1904,1L1922,1L1922,0L1950,0L1950,1L1953,1L1953,1L1956,1L1956,2L1989,2L1989,1L2085,1L2085,2L2099,2L2099,1L2167,1L2167,2L2423,2" tabindex="0">
						<title>0jmw6wex</title>
					</path>
				</g>
				<g style="--index: 12;">
					<path d="M0,0L643,0L643,1L714,1L714,1L857,1L857,0L2423,0" tabindex="0">
						<title>7j4y0zmj</title>
					</path>
				</g>
				<g style="--index: 13;">
					<path d="M0,0L758,0L758,1L759,1L759,2L766,2L766,2L769,2L769,2L777,2L777,2L823,2L823,2L842,2L842,3L855,3L855,2L862,2L862,3L864,3L864,2L868,2L868,1L870,1L870,2L873,2L873,1L892,1L892,2L894,2L894,3L895,3L895,4L896,4L896,5L897,5L897,5L901,5L901,3L906,3L906,3L963,3L963,2L968,2L968,3L970,3L970,2L1036,2L1036,1L1091,1L1091,0L2423,0" tabindex="0">
						<title>8146r4r8</title>
					</path>
				</g>
				<g style="--index: 14;">
					<path d="M0,0L840,0L840,1L853,1L853,3L854,3L854,5L855,5L855,7L857,7L857,9L863,9L863,10L864,10L864,11L865,11L865,10L868,10L868,11L869,11L869,13L870,13L870,14L871,14L871,17L872,17L872,16L873,16L873,17L875,17L875,20L888,20L888,21L890,21L890,22L894,22L894,20L896,20L896,19L922,19L922,18L923,18L923,19L925,19L925,18L931,18L931,17L959,17L959,16L964,16L964,17L965,17L965,13L966,13L966,12L974,12L974,12L994,12L994,13L995,13L995,14L998,14L998,15L1005,15L1005,16L1013,16L1013,17L1015,17L1015,17L1019,17L1019,18L1023,18L1023,19L1024,19L1024,20L1025,20L1025,21L1027,21L1027,22L1028,22L1028,20L1029,20L1029,21L1030,21L1030,22L1031,22L1031,23L1032,23L1032,24L1033,24L1033,23L1036,23L1036,25L1037,25L1037,24L1038,24L1038,25L1040,25L1040,24L1041,24L1041,23L1042,23L1042,22L1047,22L1047,16L1050,16L1050,15L1051,15L1051,16L1054,16L1054,15L1055,15L1055,14L1058,14L1058,13L1059,13L1059,12L1061,12L1061,11L1068,11L1068,10L1076,10L1076,9L1080,9L1080,7L1084,7L1084,6L1085,6L1085,5L1086,5L1086,4L1095,4L1095,5L1097,5L1097,8L1098,8L1098,4L1099,4L1099,6L1104,6L1104,5L1115,5L1115,4L1118,4L1118,4L1121,4L1121,1L1122,1L1122,0L1123,0L1123,4L1131,4L1131,3L1190,3L1190,4L1191,4L1191,5L1194,5L1194,7L1197,7L1197,8L1251,8L1251,10L1252,10L1252,11L1262,11L1262,10L1270,10L1270,10L1273,10L1273,10L1274,10L1274,11L1278,11L1278,11L1285,11L1285,10L1286,10L1286,9L1316,9L1316,10L1434,10L1434,11L1436,11L1436,12L1520,12L1520,13L1523,13L1523,14L1595,14L1595,13L1597,13L1597,14L1672,14L1672,14L1686,14L1686,15L1693,15L1693,16L1697,16L1697,15L1729,15L1729,14L1769,14L1769,15L1771,15L1771,14L1808,14L1808,15L1859,15L1859,16L1888,16L1888,15L1980,15L1980,13L2053,13L2053,14L2091,14L2091,15L2122,15L2122,16L2149,16L2149,17L2409,17L2409,18L2411,18L2411,18L2423,18" tabindex="0">
						<title>x356nrej</title>
					</path>
				</g>
				<g style="--index: 15;">
					<path d="M0,0L865,0L865,1L963,1L963,0L2423,0" tabindex="0">
						<title>8rp1o2qj</title>
					</path>
				</g>
				<g style="--index: 16;">
					<path d="M0,0L872,0L872,2L957,2L957,1L967,1L967,0L2423,0" tabindex="0">
						<title>xz9mo9n8</title>
					</path>
				</g>
				<g style="--index: 17;">
					<path d="M0,0L894,0L894,1L895,1L895,2L901,2L901,4L959,4L959,3L961,3L961,2L1054,2L1054,1L1099,1L1099,0L2423,0" tabindex="0">
						<title>qjo6dp0j</title>
					</path>
				</g>
				<g style="--index: 18;">
					<path d="M0,0L922,0L922,2L925,2L925,3L963,3L963,2L966,2L966,2L1032,2L1032,1L1048,1L1048,0L2423,0" tabindex="0">
						<title>18vm2258</title>
					</path>
				</g>
				<g style="--index: 19;">
					<path d="M0,0L931,0L931,1L971,1L971,1L987,1L987,1L1009,1L1009,2L1010,2L1010,3L1023,3L1023,5L1027,5L1027,6L1028,6L1028,9L1030,9L1030,11L1031,11L1031,12L1036,12L1036,11L1037,11L1037,12L1041,12L1041,13L1042,13L1042,14L1045,14L1045,13L1046,13L1046,14L1047,14L1047,11L1048,11L1048,13L1049,13L1049,15L1052,15L1052,16L1054,16L1054,19L1055,19L1055,20L1056,20L1056,21L1058,21L1058,20L1059,20L1059,21L1060,21L1060,21L1061,21L1061,22L1063,22L1063,22L1066,22L1066,21L1070,21L1070,20L1071,20L1071,23L1074,23L1074,23L1076,23L1076,25L1077,25L1077,25L1078,25L1078,26L1079,26L1079,27L1080,27L1080,29L1082,29L1082,30L1083,30L1083,30L1085,30L1085,30L1086,30L1086,32L1087,32L1087,33L1088,33L1088,35L1089,35L1089,35L1090,35L1090,34L1091,34L1091,34L1092,34L1092,35L1094,35L1094,36L1095,36L1095,34L1096,34L1096,33L1097,33L1097,32L1098,32L1098,35L1103,35L1103,34L1104,34L1104,34L1105,34L1105,33L1111,33L1111,37L1112,37L1112,41L1114,41L1114,40L1115,40L1115,42L1116,42L1116,47L1117,47L1117,48L1118,48L1118,48L1119,48L1119,49L1125,49L1125,46L1130,46L1130,47L1131,47L1131,51L1132,51L1132,49L1133,49L1133,50L1134,50L1134,51L1138,51L1138,50L1140,50L1140,48L1141,48L1141,49L1142,49L1142,48L1143,48L1143,47L1144,47L1144,46L1145,46L1145,43L1146,43L1146,42L1150,42L1150,41L1151,41L1151,40L1156,40L1156,39L1164,39L1164,38L1173,38L1173,37L1174,37L1174,38L1176,38L1176,37L1178,37L1178,37L1180,37L1180,38L1182,38L1182,37L1183,37L1183,35L1186,35L1186,33L1190,33L1190,32L1191,32L1191,31L1194,31L1194,29L1197,29L1197,28L1199,28L1199,26L1270,26L1270,25L1276,25L1276,24L1287,24L1287,27L1288,27L1288,28L1306,28L1306,27L1312,27L1312,26L1369,26L1369,25L1371,25L1371,24L1377,24L1377,23L1412,23L1412,22L1438,22L1438,21L1477,21L1477,20L1514,20L1514,19L1515,19L1515,17L1516,17L1516,16L1520,16L1520,15L1523,15L1523,14L1594,14L1594,13L1600,13L1600,12L1608,12L1608,10L1609,10L1609,11L1615,11L1615,9L1629,9L1629,8L1686,8L1686,7L1693,7L1693,6L1728,6L1728,5L1763,5L1763,4L1953,4L1953,4L1979,4L1979,7L1980,7L1980,14L1981,14L1981,13L1984,13L1984,12L1987,12L1987,10L1993,10L1993,9L2031,9L2031,11L2055,11L2055,12L2061,12L2061,11L2098,11L2098,10L2157,10L2157,9L2177,9L2177,10L2180,10L2180,9L2423,9" tabindex="0">
						<title>xkon93k8</title>
					</path>
				</g>
				<g style="--index: 20;">
					<path d="M0,0L965,0L965,3L967,3L967,2L996,2L996,3L1023,3L1023,2L1047,2L1047,13L1048,13L1048,15L1049,15L1049,14L1052,14L1052,14L1053,14L1053,13L1054,13L1054,11L1055,11L1055,10L1061,10L1061,10L1071,10L1071,9L1073,9L1073,8L1076,8L1076,7L1078,7L1078,6L1082,6L1082,5L1088,5L1088,4L1090,4L1090,3L1092,3L1092,2L1140,2L1140,3L1141,3L1141,4L1143,4L1143,5L1144,5L1144,7L1145,7L1145,11L1146,11L1146,12L1147,12L1147,11L1151,11L1151,13L1154,13L1154,14L1156,14L1156,15L1158,15L1158,16L1164,16L1164,17L1166,17L1166,16L1168,16L1168,17L1173,17L1173,17L1174,17L1174,16L1178,16L1178,17L1182,17L1182,18L1186,18L1186,20L1199,20L1199,22L1211,22L1211,23L1213,23L1213,24L1223,24L1223,25L1233,25L1233,26L1238,26L1238,27L1286,27L1286,28L1288,28L1288,27L1305,27L1305,29L1312,29L1312,30L1347,30L1347,29L1369,29L1369,30L1384,30L1384,29L1438,29L1438,30L1476,30L1476,30L1477,30L1477,31L1514,31L1514,32L1515,32L1515,35L1516,35L1516,36L1591,36L1591,37L1594,37L1594,36L1599,36L1599,35L1600,35L1600,38L1601,38L1601,37L1602,37L1602,37L1608,37L1608,40L1609,40L1609,39L1611,39L1611,40L1619,40L1619,39L1620,39L1620,40L1622,40L1622,39L1623,39L1623,39L1628,39L1628,40L1629,40L1629,40L1631,40L1631,41L1632,41L1632,42L1634,42L1634,42L1636,42L1636,40L1637,40L1637,41L1640,41L1640,40L1641,40L1641,42L1647,42L1647,40L1691,40L1691,42L1703,42L1703,41L1705,41L1705,41L1755,41L1755,40L1756,40L1756,41L1757,41L1757,40L1764,40L1764,39L1766,39L1766,38L1775,38L1775,37L1787,37L1787,36L1791,36L1791,34L1807,34L1807,33L1817,33L1817,32L1828,32L1828,31L1893,31L1893,27L1894,27L1894,26L1899,26L1899,25L1908,25L1908,24L1911,24L1911,23L1913,23L1913,22L1914,22L1914,20L1923,20L1923,19L1924,19L1924,18L1925,18L1925,17L1930,17L1930,16L1940,16L1940,15L1948,15L1948,14L1959,14L1959,13L1963,13L1963,12L1964,12L1964,11L2054,11L2054,10L2118,10L2118,9L2149,9L2149,8L2175,8L2175,7L2176,7L2176,6L2207,6L2207,5L2423,5" tabindex="0">
						<title>j2yr9lp8</title>
					</path>
				</g>
				<g style="--index: 21;">
					<path d="M0,0L1026,0L1026,1L1032,1L1032,3L1033,3L1033,4L1046,4L1046,3L1047,3L1047,2L1048,2L1048,3L1061,3L1061,3L1077,3L1077,3L1086,3L1086,3L1099,3L1099,1L1110,1L1110,2L1111,2L1111,1L1112,1L1112,2L1118,2L1118,1L1144,1L1144,0L2423,0" tabindex="0">
						<title>8e94kq6j</title>
					</path>
				</g>
				<g style="--index: 22;">
					<path d="M0,0L1040,0L1040,1L1050,1L1050,2L1051,2L1051,1L1070,1L1070,1L1071,1L1071,0L1085,0L1085,1L1086,1L1086,0L1096,0L1096,1L1097,1L1097,0L1125,0L1125,1L1131,1L1131,0L1186,0L1186,1L1286,1L1286,2L1287,2L1287,1L1591,1L1591,0L2423,0" tabindex="0">
						<title>j0np7or8</title>
					</path>
				</g>
				<g style="--index: 23;">
					<path d="M0,0L1045,0L1045,1L1046,1L1046,1L1047,1L1047,3L1048,3L1048,2L1058,2L1058,3L1061,3L1061,3L1066,3L1066,4L1068,4L1068,5L1070,5L1070,6L1071,6L1071,5L1078,5L1078,6L1079,6L1079,5L1084,5L1084,6L1085,6L1085,7L1086,7L1086,7L1087,7L1087,6L1088,6L1088,5L1090,5L1090,6L1091,6L1091,6L1092,6L1092,6L1095,6L1095,7L1097,7L1097,6L1101,6L1101,7L1102,7L1102,6L1106,6L1106,7L1108,7L1108,6L1116,6L1116,5L1117,5L1117,4L1118,4L1118,5L1119,5L1119,5L1130,5L1130,4L1146,4L1146,3L1147,3L1147,4L1166,4L1166,5L1168,5L1168,4L1173,4L1173,5L1183,5L1183,6L1186,6L1186,5L1238,5L1238,4L1312,4L1312,4L1347,4L1347,5L1576,5L1576,4L1608,4L1608,3L1617,3L1617,2L1632,2L1632,1L1697,1L1697,2L1730,2L1730,1L2423,1" tabindex="0">
						<title>x7q00668</title>
					</path>
				</g>
				<g style="--index: 24;">
					<path d="M0,0L1055,0L1055,1L1056,1L1056,0L1412,0L1412,1L1512,1L1512,1L1515,1L1515,0L1594,0L1594,1L1599,1L1599,1L1600,1L1600,0L1602,0L1602,1L1628,1L1628,0L2423,0" tabindex="0">
						<title>8e9kl5dj</title>
					</path>
				</g>
				<g style="--index: 25;">
					<path d="M0,0L1090,0L1090,1L1091,1L1091,2L1094,2L1094,3L1095,3L1095,4L1098,4L1098,5L1099,5L1099,6L1101,6L1101,5L1102,5L1102,6L1103,6L1103,7L1104,7L1104,10L1105,10L1105,11L1106,11L1106,11L1108,11L1108,12L1111,12L1111,10L1112,10L1112,6L1115,6L1115,5L1116,5L1116,1L1118,1L1118,0L1138,0L1138,1L1140,1L1140,2L1150,2L1150,3L1158,3L1158,2L1182,2L1182,3L1183,3L1183,4L1253,4L1253,4L1287,4L1287,2L1306,2L1306,3L1371,3L1371,4L1373,4L1373,5L1377,5L1377,6L1384,6L1384,7L1593,7L1593,6L1642,6L1642,5L1956,5L1956,4L1979,4L1979,3L2091,3L2091,2L2175,2L2175,1L2423,1" tabindex="0">
						<title>814zn7l8</title>
					</path>
				</g>
				<g style="--index: 26;">
					<path d="M0,0L1114,0L1114,1L1118,1L1118,2L1119,2L1119,1L1125,1L1125,3L1131,3L1131,1L1132,1L1132,3L1133,3L1133,2L1134,2L1134,1L1141,1L1141,0L2423,0" tabindex="0">
						<title>jnzg27dj</title>
					</path>
				</g>
				<g style="--index: 27;">
					<path d="M0,0L1121,0L1121,3L1122,3L1122,4L1251,4L1251,2L1259,2L1259,1L1274,1L1274,0L2423,0" tabindex="0">
						<title>jnz1zy2j</title>
					</path>
				</g>
				<g style="--index: 28;">
					<path d="M0,0L1177,0L1177,0L2423,0" tabindex="0">
						<title>j42m66lx</title>
					</path>
				</g>
				<g style="--index: 29;">
					<path d="M0,0L1251,0L1251,0L1259,0L1259,1L1262,1L1262,2L1270,2L1270,3L1285,3L1285,4L1286,4L1286,3L1305,3L1305,1L1608,1L1608,1L1611,1L1611,0L1647,0L1647,2L1691,2L1691,0L1703,0L1703,1L1729,1L1729,2L1958,2L1958,1L1960,1L1960,2L1962,2L1962,1L2423,1" tabindex="0">
						<title>jnzen32j</title>
					</path>
				</g>
				<g style="--index: 30;">
					<path d="M0,0L1528,0L1528,1L1801,1L1801,0L2423,0" tabindex="0">
						<title>jpo31408</title>
					</path>
				</g>
				<g style="--index: 31;">
					<path d="M0,0L1576,0L1576,1L1587,1L1587,1L1588,1L1588,1L1719,1L1719,1L1829,1L1829,1L1831,1L1831,1L1837,1L1837,2L1842,2L1842,2L1870,2L1870,1L2423,1" tabindex="0">
						<title>x3m3kle8</title>
					</path>
				</g>
				<g style="--index: 32;">
					<path d="M0,0L1593,0L1593,1L1594,1L1594,2L1595,2L1595,3L1599,3L1599,4L1600,4L1600,3L1601,3L1601,4L1602,4L1602,3L1615,3L1615,5L1617,5L1617,6L1619,6L1619,7L1620,7L1620,6L1622,6L1622,7L1623,7L1623,7L1629,7L1629,8L1631,8L1631,7L1634,7L1634,7L1636,7L1636,9L1637,9L1637,8L1640,8L1640,9L1641,9L1641,7L1642,7L1642,8L1818,8L1818,7L2009,7L2009,6L2122,6L2122,5L2190,5L2190,4L2423,4" tabindex="0">
						<title>xk3m6d68</title>
					</path>
				</g>
				<g style="--index: 33;">
					<path d="M0,0L1728,0L1728,1L1730,1L1730,2L1735,2L1735,2L1755,2L1755,3L1756,3L1756,2L1757,2L1757,3L1763,3L1763,4L1764,4L1764,5L1766,5L1766,6L1775,6L1775,7L1787,7L1787,8L1791,8L1791,10L1794,10L1794,9L1800,9L1800,10L1807,10L1807,12L1817,12L1817,13L1818,13L1818,14L1826,14L1826,14L1828,14L1828,15L1842,15L1842,16L1854,16L1854,16L1878,16L1878,17L1893,17L1893,21L1894,21L1894,22L1899,22L1899,23L1900,23L1900,23L1902,23L1902,23L1904,23L1904,24L1907,24L1907,24L1908,24L1908,25L1909,25L1909,25L1911,25L1911,26L1913,26L1913,27L1914,27L1914,29L1918,29L1918,29L1922,29L1922,30L1923,30L1923,31L1924,31L1924,32L1925,32L1925,33L1930,33L1930,34L1931,34L1931,34L1933,34L1933,33L1934,33L1934,34L1940,34L1940,35L1948,35L1948,36L1949,36L1949,36L1950,36L1950,35L1951,35L1951,35L1953,35L1953,35L1963,35L1963,36L1980,36L1980,34L1981,34L1981,35L1982,35L1982,35L1984,35L1984,35L1987,35L1987,38L1989,38L1989,39L2007,39L2007,38L2013,38L2013,38L2054,38L2054,39L2061,39L2061,40L2062,40L2062,40L2077,40L2077,40L2080,40L2080,40L2084,40L2084,41L2085,41L2085,40L2098,40L2098,41L2099,41L2099,42L2118,42L2118,43L2157,43L2157,44L2175,44L2175,46L2176,46L2176,47L2177,47L2177,46L2178,46L2178,47L2180,47L2180,48L2184,48L2184,49L2190,49L2190,50L2207,50L2207,51L2214,51L2214,50L2227,50L2227,50L2229,50L2229,51L2230,51L2230,51L2307,51L2307,52L2311,52L2311,51L2313,51L2313,51L2376,51L2376,52L2380,52L2380,52L2411,52L2411,52L2412,52L2412,51L2413,51L2413,51L2417,51L2417,52L2423,52L2423,52L2423,52" tabindex="0">
						<title>jn2m23wj</title>
					</path>
				</g>
				<g style="--index: 34;">
					<path d="M0,0L1770,0L1770,1L1787,1L1787,0L2423,0" tabindex="0">
						<title>jmzygrox</title>
					</path>
				</g>
				<g style="--index: 35;">
					<path d="M0,0L1787,0L1787,1L1791,1L1791,0L2423,0" tabindex="0">
						<title>jp6k1558</title>
					</path>
				</g>
				<g style="--index: 36;">
					<path d="M0,0L1791,0L1791,1L1805,1L1805,0L2423,0" tabindex="0">
						<title>x76omlvj</title>
					</path>
				</g>
				<g style="--index: 37;">
					<path d="M0,0L1794,0L1794,1L1800,1L1800,0L1805,0L1805,1L1823,1L1823,0L1904,0L1904,1L1964,1L1964,0L2007,0L2007,1L2009,1L2009,2L2017,2L2017,3L2046,3L2046,2L2178,2L2178,1L2184,1L2184,0L2423,0" tabindex="0">
						<title>j4235d5x</title>
					</path>
				</g>
				<g style="--index: 38;">
					<path d="M0,0L1801,0L1801,1L1842,1L1842,0L2423,0" tabindex="0">
						<title>8w02m0vj</title>
					</path>
				</g>
				<g style="--index: 39;">
					<path d="M0,0L1807,0L1807,1L1869,1L1869,0L2423,0" tabindex="0">
						<title>8qoz5eoj</title>
					</path>
				</g>
				<g style="--index: 40;">
					<path d="M0,0L1813,0L1813,1L1861,1L1861,0L2423,0" tabindex="0">
						<title>jm3y0go8</title>
					</path>
				</g>
				<g style="--index: 41;">
					<path d="M0,0L1823,0L1823,1L1837,1L1837,0L2423,0" tabindex="0">
						<title>jmzpr4yx</title>
					</path>
				</g>
				<g style="--index: 42;">
					<path d="M0,0L1832,0L1832,1L1838,1L1838,1L1888,1L1888,2L1929,2L1929,2L1932,2L1932,2L2053,2L2053,1L2167,1L2167,0L2423,0" tabindex="0">
						<title>810y31qx</title>
					</path>
				</g>
				<g style="--index: 43;">
					<path d="M0,0L1847,0L1847,1L1980,1L1980,0L2423,0" tabindex="0">
						<title>j5vg1ez8</title>
					</path>
				</g>
				<g style="--index: 44;">
					<path d="M0,0L1861,0L1861,1L1877,1L1877,0L1891,0L1891,1L1907,1L1907,0L2423,0" tabindex="0">
						<title>joovynnj</title>
					</path>
				</g>
				<g style="--index: 45;">
					<path d="M0,0L1869,0L1869,1L1876,1L1876,0L1877,0L1877,1L1878,1L1878,0L1964,0L1964,1L1980,1L1980,0L2423,0" tabindex="0">
						<title>8640og3j</title>
					</path>
				</g>
				<g style="--index: 46;">
					<path d="M0,0L1870,0L1870,1L1878,1L1878,0L2423,0" tabindex="0">
						<title>jongn6l8</title>
					</path>
				</g>
				<g style="--index: 47;">
					<path d="M0,0L1876,0L1876,1L1877,1L1877,0L2423,0" tabindex="0">
						<title>j9p3ykox</title>
					</path>
				</g>
				<g style="--index: 48;">
					<path d="M0,0L1877,0L1877,1L1878,1L1878,2L1891,2L1891,1L1904,1L1904,0L2423,0" tabindex="0">
						<title>8q6k30oj</title>
					</path>
				</g>
				<g style="--index: 49;">
					<path d="M0,0L1896,0L1896,1L1979,1L1979,0L2423,0" tabindex="0">
						<title>x7w44nr8</title>
					</path>
				</g>
				<g style="--index: 50;">
					<path d="M0,0L1907,0L1907,1L1908,1L1908,1L1980,1L1980,0L2423,0" tabindex="0">
						<title>8wlq9g3j</title>
					</path>
				</g>
				<g style="--index: 51;">
					<path d="M0,0L1921,0L1921,1L2014,1L2014,0L2423,0" tabindex="0">
						<title>8g0d51rx</title>
					</path>
				</g>
				<g style="--index: 52;">
					<path d="M0,0L1933,0L1933,1L1934,1L1934,0L2423,0" tabindex="0">
						<title>8ek6z678</title>
					</path>
				</g>
				<g style="--index: 53;">
					<path d="M0,0L1958,0L1958,1L1959,1L1959,2L1960,2L1960,1L1962,1L1962,2L1963,2L1963,2L1964,2L1964,3L2423,3" tabindex="0">
						<title>jmz3rlox</title>
					</path>
				</g>
				<g style="--index: 54;">
					<path d="M0,0L1984,0L1984,1L1987,1L1987,0L1993,0L1993,1L2084,1L2084,0L2423,0" tabindex="0">
						<title>8g0ppzrx</title>
					</path>
				</g>
				<g style="--index: 55;">
					<path d="M0,0L2004,0L2004,1L2015,1L2015,0L2018,0L2018,1L2021,1L2021,0L2423,0" tabindex="0">
						<title>xz1nv0ej</title>
					</path>
				</g>
				<g style="--index: 56;">
					<path d="M0,0L2014,0L2014,1L2015,1L2015,2L2016,2L2016,1L2017,1L2017,0L2021,0L2021,1L2025,1L2025,0L2030,0L2030,2L2031,2L2031,0L2046,0L2046,1L2068,1L2068,2L2077,2L2077,3L2130,3L2130,3L2164,3L2164,4L2185,4L2185,5L2189,5L2189,4L2191,4L2191,5L2216,5L2216,4L2260,4L2260,3L2310,3L2310,4L2353,4L2353,3L2371,3L2371,2L2423,2" tabindex="0">
						<title>x3wdlvkj</title>
					</path>
				</g>
				<g style="--index: 57;">
					<path d="M0,0L2016,0L2016,1L2017,1L2017,0L2423,0" tabindex="0">
						<title>j9k252w8</title>
					</path>
				</g>
				<g style="--index: 58;">
					<path d="M0,0L2017,0L2017,1L2025,1L2025,2L2030,2L2030,0L2423,0" tabindex="0">
						<title>8v23g7yj</title>
					</path>
				</g>
				<g style="--index: 59;">
					<path d="M0,0L2068,0L2068,0L2423,0" tabindex="0">
						<title>j40p60d8</title>
					</path>
				</g>
				<g style="--index: 60;">
					<path d="M0,0L2101,0L2101,2L2164,2L2164,2L2165,2L2165,2L2166,2L2166,3L2167,3L2167,5L2168,5L2168,5L2185,5L2185,4L2189,4L2189,5L2191,5L2191,4L2258,4L2258,3L2278,3L2278,2L2344,2L2344,2L2423,2" tabindex="0">
						<title>8w3l21qj</title>
					</path>
				</g>
				<g style="--index: 61;">
					<path d="M0,0L2214,0L2214,1L2229,1L2229,0L2423,0" tabindex="0">
						<title>jokvnml8</title>
					</path>
				</g>
				<g style="--index: 62;">
					<path d="M0,0L2216,0L2216,1L2285,1L2285,0L2423,0" tabindex="0">
						<title>8lpv0drj</title>
					</path>
				</g>
				<g style="--index: 63;">
					<path d="M0,0L2258,0L2258,1L2260,1L2260,2L2280,2L2280,3L2285,3L2285,4L2286,4L2286,4L2306,4L2306,3L2309,3L2309,2L2310,2L2310,1L2311,1L2311,0L2423,0" tabindex="0">
						<title>8rme6wwj</title>
					</path>
				</g>
				<g style="--index: 64;">
					<path d="M0,0L2278,0L2278,1L2280,1L2280,0L2423,0" tabindex="0">
						<title>x3q6432j</title>
					</path>
				</g>
				<g style="--index: 65;">
					<path d="M0,0L2306,0L2306,1L2307,1L2307,0L2335,0L2335,1L2376,1L2376,0L2423,0" tabindex="0">
						<title>8l0n2l78</title>
					</path>
				</g>
				<g style="--index: 66;">
					<path d="M0,0L2307,0L2307,0L2309,0L2309,1L2310,1L2310,2L2311,2L2311,4L2312,4L2312,4L2328,4L2328,4L2335,4L2335,3L2376,3L2376,0L2423,0" tabindex="0">
						<title>jokwe3l8</title>
					</path>
				</g>
				<g style="--index: 67;">
					<path d="M0,0L2307,0L2307,1L2309,1L2309,1L2423,1" tabindex="0">
						<title>xkpw7g6j</title>
					</path>
				</g>
				<g style="--index: 68;">
					<path d="M0,0L2308,0L2308,1L2309,1L2309,0L2423,0" tabindex="0">
						<title>j465mqd8</title>
					</path>
				</g>
				<g style="--index: 69;">
					<path d="M0,0L2309,0L2309,0L2423,0" tabindex="0">
						<title>j5959zwx</title>
					</path>
				</g>
				<g style="--index: 70;">
					<path d="M0,0L2309,0L2309,1L2310,1L2310,0L2423,0" tabindex="0">
						<title>jmz5yyex</title>
					</path>
				</g>
				<g style="--index: 71;">
					<path d="M0,0L2353,0L2353,1L2354,1L2354,1L2371,1L2371,2L2376,2L2376,1L2423,1" tabindex="0">
						<title>8v0mryvx</title>
					</path>
				</g>
				<g style="--index: 72;">
					<path d="M0,0L2412,0L2412,1L2413,1L2413,1L2414,1L2414,1L2417,1L2417,0L2423,0" tabindex="0">
						<title>86rpw3p8</title>
					</path>
				</g>
			</g>
		</svg>
	</foreignObject>
</svg>
