<svg xmlns="http://www.w3.org/2000/svg" lang="en">
	<title>Player count by leaderboard</title>
	<metadata>
		<meta xmlns="http://www.w3.org/1999/xhtml" charset="utf-8" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="viewport" content="width=device-width" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="color-scheme" content="dark light" />
	</metadata>
	<style>
		*,
		::before,
		::after {
			box-sizing: border-box;
		}
		:root {
			background: var(--canvas-background);
			color: var(--canvas-foreground);
			fill: var(--canvas-background);
			stroke: var(--canvas-foreground);
			stroke-linejoin: round;
			stroke-linecap: round;
		}
		foreignObject {
			pointer-events: none;
		}
		foreignObject::before,
		foreignObject::after {
			content: "";
			position: absolute;
			z-index: 1;
			left: 20px;
			bottom: 20px;
			pointer-events: auto;
		}
		foreignObject::before {
			width: calc(100% - 40px);
			height: calc(20px + var(--date-size) * 1px);
		}
		foreignObject::after {
			width: calc(20px + var(--value-size) * 1px);
			height: calc(100% - 40px);
		}
		foreignObject &gt; div {
			position: absolute;
			z-index: 4;
			right: 0;
			top: 0;
			margin: 20px;
			border: 1px solid var(--canvas-foreground);
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			transition: opacity 1s;
			pointer-events: auto;
		}
		foreignObject:is(:hover, :focus-within) &gt; div:not(:hover, :focus-within) {
			opacity: 0;
			pointer-events: none;
		}
		foreignObject &gt; div &gt; p {
			margin: 0;
		}
		label {
			display: table;
			border-collapse: separate;
			border-spacing: 10px;
			direction: rtl;
		}
		progress,
		input[type="checkbox"] {
			display: table-cell;
			width: 16px;
			height: 16px;
			margin: 2px;
			accent-color: var(--canvas-foreground);
			vertical-align: top;
			direction: ltr;
		}
		progress + span,
		input[type="checkbox"] + span {
			display: table-cell;
			vertical-align: top;
			direction: ltr;
		}
		input[type="checkbox"]:not(:disabled):is(:hover, :focus-within) + span {
			text-decoration: underline;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			position: absolute;
			z-index: 2;
			margin: 0;
			padding: 10px;
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			font-weight: bold;
			pointer-events: auto;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg + svg {
			border-top: 1px solid #0000;
			border-bottom: 1px solid var(--canvas-foreground);
		}
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px dashed #0000;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg {
			width: calc(20px + var(--date-size) * 1px);
			height: 42px;
			bottom: 20px;
		}
		foreignObject &gt; svg:first-of-type {
			left: calc(40px + var(--value-size) * 1px);
			transform: rotate(90deg) translate(-100%, 0);
			transform-origin: left bottom;
		}
		foreignObject &gt; svg:first-of-type + svg {
			right: 20px;
			transform: rotate(90deg) translate(0, 100%);
			transform-origin: right bottom;
		}
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			width: calc(20px + var(--value-size) * 1px);
			height: 42px;
			left: 20px;
		}
		foreignObject &gt; svg:first-of-type + svg + svg {
			bottom: calc(40px + var(--date-size) * 1px);
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			top: 20px;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text {
			fill: var(--canvas-foreground);
			stroke: none;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text {
			cursor: vertical-text;
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg + svg {
			position: relative;
			z-index: 3;
			width: calc(100% - 60px - var(--value-size) * 1px);
			height: calc(100% - 60px - var(--date-size) * 1px);
			margin: 20px 20px calc(40px + var(--date-size) * 1px) calc(40px + var(--value-size) * 1px);
			border-left: 1px solid var(--canvas-foreground);
			border-right: 1px dashed var(--canvas-foreground);
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px solid var(--canvas-foreground);
			background: var(--canvas-background);
			pointer-events: auto;
		}
		g &gt; rect {
			vector-effect: non-scaling-stroke;
			fill: var(--highlighted);
			stroke: none;
		}
		g &gt; rect[tabindex] {
			fill: var(--tier, #0000);
			cursor: help;
		}
		g &gt; rect[tabindex][data-tier="diamond"] {
			--tier: var(--diamond);
		}
		g &gt; rect[tabindex][data-tier="gold"] {
			--tier: var(--gold);
		}
		g &gt; rect[tabindex][data-tier="silver"] {
			--tier: var(--silver);
		}
		g &gt; rect[tabindex][data-tier="bronze"] {
			--tier: var(--bronze);
		}
		g &gt; path[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: hsl(calc(var(--index) / var(--count) * 360), 50%, 50%);
			cursor: help;
		}
		g:is(:hover, :focus-within) &gt; path[tabindex] {
			stroke: var(--canvas-foreground);
		}
		g &gt; path[tabindex]:is(:hover, :focus-within) {
			outline: 0;
		}
		g &gt; path[tabindex]:first-of-type {
			stroke-width: 2;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) {
			stroke-width: 4;
		}
		g &gt; path[tabindex]:first-of-type:not(:last-of-type) {
			stroke-dasharray: 4 8;
		}
		g &gt; path[tabindex]:first-of-type + rect {
			fill: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect {
			fill: var(--highlighted);
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] {
			stroke-width: 8;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) {
			stroke-width: 16;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line + line {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			stroke-width: 2;
			stroke-dasharray: 4 8;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line + line {
			stroke: var(--faded);
		}
		@media (prefers-color-scheme: dark) {
			:root {
				--canvas-background: #000;
				--canvas-foreground: #ccc;
				--diamond: #0363;
				--gold: #6303;
				--silver: #3633;
				--bronze: #6363;
				--highlighted: #6663;
				--faded: #9993;
			}
		}
		@media (prefers-color-scheme: light) {
			:root {
				--canvas-background: #fff;
				--canvas-foreground: #333;
				--diamond: #9cf3;
				--gold: #fc93;
				--silver: #9c93;
				--bronze: #c9c3;
				--highlighted: #9993;
				--faded: #6663;
			}
		}
	</style>
	<script>
		"use strict";
		{
			const script = document.currentScript;
			const documentUrl = location.href;
			const scope = new URL("../", documentUrl).pathname;
			const playersKey = `${scope}#players`;
			const leaderboardsKey = `${scope}#leaderboards`;
			const sessionKey = `${scope}#session`;
			const lockKey = `${scope}#lock`;
			async function importDataScript(dataScriptUrl, signal) {
				signal.throwIfAborted();
				if (documentUrl.protocol !== "file:") {
					const response = await fetch(dataScriptUrl, {
						signal,
					});
					if (!response.ok) {
						throw new Error(response.statusText);
					}
					const data = await response.json();
					return data;
				}
				return await new Promise((resolve, reject) =&gt; {
					const name = `callback${Math.random() * 2 ** 53}`;
					let called = false;
					let data = null;
					function callback(value) {
						if (!called) {
							called = true;
							data = value;
						}
					}
					window[name] = callback;
					const dataScript = document.createElementNS("http://www.w3.org/2000/svg", "script");
					dataScript.href = `${dataScriptUrl}&amp;callback=${name}`;
					function handleAbort(event) {
						delete window[name];
						dataScript.removeEventListener("error", handleError);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const reason = signal.reason;
						reject(reason);
					}
					function handleError(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const error = event.error;
						reject(error);
					}
					function handleLoad(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("error", handleError);
						dataScript.remove();
						resolve(data);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					dataScript.addEventListener("error", handleError, {
						once: true,
					});
					dataScript.addEventListener("load", handleLoad, {
						once: true,
					});
					script.after(dataScript);
				});
			}
			async function waitForTimeout(delay, signal) {
				signal.throwIfAborted();
				return await new Promise((resolve, reject) =&gt; {
					let timeout = null;
					function handleAbort() {
						clearTimeout(timeout);
						const reason = signal.reason;
						reject(reason);
					}
					function handleTimeout() {
						signal.removeEventListener("abort", handleAbort);
						resolve(delay);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					timeout = setTimeout(handleTimeout, delay);
				});
			}
			window.addEventListener("pageshow", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully restored page from cache`);
				} else {
					console.log(`Unsuccessfully restored page from cache`);
				}
			});
			window.addEventListener("pagehide", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully saved page to cache`);
				} else {
					console.log(`Unsuccessfully saved page to cache`);
				}
			});
			window.addEventListener("pageshow", async (event) =&gt; {
				const rootTitleElement = document.querySelector("title");
				const rootTitleContent = rootTitleElement.textContent;
				const pathTitleElements = Array.from(document.querySelectorAll("g &gt; path[tabindex]:first-of-type &gt; title"));
				const pathTitleContents = pathTitleElements.map((pathTitleElement) =&gt; {
					const pathTitleContent = pathTitleElement.textContent;
					return pathTitleContent;
				});
				const foreignObject = document.querySelector("foreignObject");
				const div = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
				div.dir = "ltr";
				const p = document.createElementNS("http://www.w3.org/1999/xhtml", "p");
				const label = document.createElementNS("http://www.w3.org/1999/xhtml", "label");
				const progress = document.createElementNS("http://www.w3.org/1999/xhtml", "progress");
				label.append(progress);
				const span = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
				span.textContent = "Loading names";
				label.append(span);
				p.append(label);
				div.append(p);
				foreignObject.prepend(div);
				let lock = false;
				let session = null;
				const broadcastChannel = new BroadcastChannel(sessionKey);
				const abortController = new AbortController();
				const signal = abortController.signal;
				const abort = abortController.abort.bind(abortController);
				const {promise, resolve} = Promise.withResolvers();
				broadcastChannel.addEventListener("message", (event) =&gt; {
					const data = event.data;
					const type = data.type;
					switch (type) {
						case "request": {
							if (lock &amp;&amp; signal.aborted) {
								broadcastChannel.postMessage({
									type: "response",
									session,
								});
							}
							break;
						}
						case "response": {
							if (!signal.aborted) {
								session = data.session;
								if (session != null) {
									const {players, leaderboards} = session;
									try {
										const cachedPlayers = JSON.stringify(players);
										const cachedLeaderboards = JSON.stringify(leaderboards);
										sessionStorage.setItem(playersKey, cachedPlayers);
										sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
									} catch {}
									console.log(`Successfully loaded names from peer`);
									abort();
									resolve();
								} else {
									console.log(`Unsuccessfully loaded names from peer`);
									abort();
									resolve();
								}
							}
							break;
						}
					}
				});
				try {
					const cachedPlayers = sessionStorage.getItem(playersKey);
					const cachedLeaderboards = sessionStorage.getItem(leaderboardsKey);
					if (cachedPlayers == null || cachedLeaderboards == null) {
						throw new Error();
					}
					const players = JSON.parse(cachedPlayers);
					const leaderboards = JSON.parse(cachedLeaderboards);
					session = {players, leaderboards};
				} catch {}
				if (session != null) {
					broadcastChannel.postMessage({
						type: "response",
						session,
					});
					console.log(`Successfully loaded names from local`);
					abort();
					resolve();
				} else {
					broadcastChannel.postMessage({
						type: "request",
					});
					console.log(`Unsuccessfully loaded names from local`);
				}
				(async () =&gt; {
					for (;;) {
						await navigator.locks.request(lockKey, async () =&gt; {
							lock = true;
							console.log(`Acquired lock`);
							if (!signal.aborted) {
								try {
									const players = Object.create(null);
									const leaderboards = Object.create(null);
									const games = ["9d3rrxyd", "w6jl2ned"];
									for (const gameId of games) {
										const {data} = await importDataScript(`https://www.speedrun.com/api/v1/games/${gameId}?embed=categories,levels,variables`, signal);
										const versions = data.variables.data.find((variable) =&gt; {
											return variable.name === "Version";
										});
										const levels = Object.fromEntries(data.levels.data.map((level) =&gt; {
											return [level.id, level];
										}));
										const categories = Object.fromEntries(data.categories.data.map((category) =&gt; {
											return [category.id, category];
										}));
										const variables = Object.fromEntries(data.variables.data.map((variable) =&gt; {
											return [variable.id, variable];
										}));
										console.log(`Got game`);
										await waitForTimeout(800, signal);
										const slice = 200;
										for (let offset = 0;; offset += slice) {
											const {data, pagination} = await importDataScript(`https://www.speedrun.com/api/v1/runs?game=${gameId}&amp;orderby=date&amp;direction=asc&amp;embed=players&amp;offset=${offset}&amp;max=${slice}`, signal);
											const {size} = pagination;
											if (size === 0) {
												break;
											}
											for (const run of data) {
												const status = run.status.status;
												if (status == null || status === "new") {
													continue;
												}
												const player = run.players.data[0].rel === "user" ? run.players.data[0].id : "814p2558";
												const playerName = run.players.data[0].rel === "user" ? run.players.data[0].names.international : "anonymous";
												players[player] ??= playerName;
												const level = run.level;
												const category = run.category;
												const values = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return `-${variable}.${value}`;
												});
												const leaderboard = `${level != null ? `l_${level}-` : ""}${category}${values.join("")}`;
												const levelName = run.level != null ? levels[run.level]?.name ?? null : null;
												const categoryName = categories[run.category]?.name ?? null;
												const valueNames = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return variables[variable]?.values.values[value]?.label ?? null;
												}).filter((valueName) =&gt; {
													return valueName != null;
												});
												const leaderboardName = `${levelName != null ? `${levelName}: ` : ""}${categoryName ?? ""}${values.length !== 0 ? ` - ${valueNames.join(", ")}` : ""}`;
												leaderboards[leaderboard] ??= leaderboardName;
											}
											console.log(`Got runs ${offset}-${offset + size - 1}`);
											await waitForTimeout(800, signal);
										}
									}
									session = {players, leaderboards};
								} catch {}
								if (!signal.aborted) {
									if (session != null) {
										const {players, leaderboards} = session;
										try {
											const cachedPlayers = JSON.stringify(players);
											const cachedLeaderboards = JSON.stringify(leaderboards);
											sessionStorage.setItem(playersKey, cachedPlayers);
											sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
										} catch {}
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Successfully loaded names from remote`);
										abort();
										resolve();
									} else {
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Unsuccessfully loaded names from remote`);
										abort();
										resolve();
									}
								}
							}
							await new Promise((resolve) =&gt; {
								window.addEventListener("beforeunload", () =&gt; {
									resolve();
								}, {
									once: true,
								});
							});
						});
						lock = false;
						console.log(`Released lock`);
						await new Promise((resolve) =&gt; {
							window.addEventListener("pagehide", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
						await new Promise((resolve) =&gt;{
							window.addEventListener("pageshow", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
					}
				})();
				await promise;
				if (session == null) {
					const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
					input.type = "checkbox";
					input.autocomplete = "off";
					input.disabled = true;
					input.indeterminate = true;
					progress.replaceWith(input);
					span.textContent = "Unavailable names";
					return;
				}
				const {players, leaderboards} = session;
				const hasPlayerRoot = rootTitleContent.includes(" for player");
				const hasLeaderboardRoot = rootTitleContent.includes(" for leaderboard");
				const rootTitle = {
					element: rootTitleElement,
					contentWithIds: rootTitleContent,
					contentWithNames: hasPlayerRoot ? rootTitleContent.replace(/ for player ([0-9_a-z]+)/, ($0, $1) =&gt; {
						return ` for player ${players[$1] ?? $1}`;
					}) : hasLeaderboardRoot ? rootTitleContent.replace(/ for leaderboard ((?:l_[0-9_a-z]+-)?[0-9_a-z]+(-[0-9_a-z]+\.[0-9_a-z]+)*)/, ($0, $1) =&gt; {
						return ` for leaderboard ${leaderboards[$1] ?? $1}`;
					}) : rootTitleContent,
				};
				const hasPlayerPaths = rootTitleContent.includes(" by player");
				const hasLeaderboardPaths = rootTitleContent.includes(" by leaderboard");
				const pathTitles = pathTitleElements.map((pathTitleElement, k) =&gt; {
					const pathTitleContent = pathTitleContents[k];
					const pathTitle = {
						element: pathTitleElement,
						contentWithIds: pathTitleContent,
						contentWithNames: hasPlayerPaths ? players[pathTitleContent] ?? pathTitleContent : hasLeaderboardPaths ? leaderboards[pathTitleContent] ?? pathTitleContent : pathTitleContent,
					};
					return pathTitle;
				});
				const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
				input.type = "checkbox";
				input.autocomplete = "off";
				input.addEventListener("change", () =&gt; {
					input.disabled = true;
					if (input.checked) {
						rootTitle.element.textContent = rootTitle.contentWithNames;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithNames;
						}
					} else {
						rootTitle.element.textContent = rootTitle.contentWithIds;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithIds;
						}
					}
					input.disabled = false;
				});
				progress.replaceWith(input);
				span.textContent = "Reveal names";
			}, {
				once: true,
			});
		}
	</script>
	<script>
		"use strict";
		{
			document.addEventListener("DOMContentLoaded", (event) =&gt; {
				const minDateText = document.querySelector("foreignObject &gt; svg:first-of-type &gt; text");
				const maxDateText = document.querySelector("foreignObject &gt; svg:first-of-type + svg &gt; text");
				const startX = Math.round(Date.parse(minDateText.textContent) / 86400000);
				function xToDate(x) {
					const datetime = new Date((startX + x) * 86400000);
					const year = `${datetime.getUTCFullYear()}`.padStart(4, "0");
					const month = `${datetime.getUTCMonth() + 1}`.padStart(2, "0");
					const day = `${datetime.getUTCDate()}`.padStart(2, "0");
					const date = `${year}-${month}-${day}`;
					const size = date.length * 10;
					return {date, size};
				}
				function setMinDate(x) {
					const {date, size} = xToDate(Math.floor(x));
					minDateText.textLength.baseVal.value = size;
					minDateText.textContent = date;
				}
				function setMaxDate(x) {
					const {date, size} = xToDate(Math.ceil(x));
					maxDateText.textLength.baseVal.value = size;
					maxDateText.textContent = date;
				}
				const minValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg &gt; text");
				const maxValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text");
				const timed = minValueText.textContent.includes(":");
				function yToValue(y) {
					if (timed) {
						const minutes = `${(y - y % 6000) / 6000}`.padStart(2, "0");
						const seconds = `${(y - y % 100) / 100 % 60}`.padStart(2, "0");
						const centiseconds = `${y % 100}`.padStart(2, "0");
						const value = `${minutes}:${seconds}.${centiseconds}`;
						const size = value.length * 10;
						return {value, size};
					} else {
						const value = `${y}`;
						const size = value.length * 10;
						return {value, size};
					}
				}
				function setMinValue(y) {
					const {value, size} = yToValue(Math.floor(y));
					minValueText.textLength.baseVal.value = size;
					minValueText.textContent = value;
				}
				function setMaxValue(y) {
					const {value, size} = yToValue(Math.ceil(y));
					maxValueText.textLength.baseVal.value = size;
					maxValueText.textContent = value;
				}
				const svg = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg + svg");
				svg.tabIndex = -1;
				svg.style.setProperty("outline", "0");
				if (CSS.supports("overflow-clip-margin", "8px")) {
					svg.style.setProperty("overflow", "clip");
					svg.style.setProperty("overflow-clip-margin", "8px");
				}
				svg.style.setProperty("touch-action", "none");
				const {x: baseX, y: baseY, width: baseWidth, height: baseHeight} = svg.viewBox.baseVal;
				let pointerCount = 0;
				const pointers = Object.create(null);
				const xPointerIds = [];
				const yPointerIds = [];
				let x = null;
				let y = null;
				let width = null;
				let height = null;
				svg.addEventListener("pointerdown", (event) =&gt; {
					const {pointerId} = event;
					if (pointerId in pointers) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.setPointerCapture(pointerId);
					++pointerCount;
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId] = {
						offsetX,
						offsetY,
					};
					xPointerIds.splice(xPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetX &lt;= offsetX;
					}) + 1, 0, pointerId);
					yPointerIds.splice(yPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetY &lt;= offsetY;
					}) + 1, 0, pointerId);
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					width = Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth);
					height = Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight);
					x = Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX);
					y = Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY);
				});
				svg.addEventListener("pointerup", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.releasePointerCapture(pointerId);
					--pointerCount;
					delete pointers[pointerId];
					xPointerIds.splice(xPointerIds.lastIndexOf(pointerId), 1);
					yPointerIds.splice(yPointerIds.lastIndexOf(pointerId), 1);
					const minOffsetX = pointerCount !== 0 ? pointers[xPointerIds[0]].offsetX : null;
					const minOffsetY = pointerCount !== 0 ? pointers[yPointerIds[0]].offsetY : null;
					const maxClientWidth = pointerCount !== 0 ? pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX : null;
					const maxClientHeight = pointerCount !== 0 ? pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY : null;
					width = pointerCount !== 0 ? Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth) : null;
					height = pointerCount !== 0 ? Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight) : null;
					x = pointerCount !== 0 ? Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX) : null;
					y = pointerCount !== 0 ? Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY) : null;
				});
				svg.addEventListener("pointermove", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					event.preventDefault();
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId].offsetX = offsetX;
					pointers[pointerId].offsetY = offsetY;
					const oldXIndex = xPointerIds.lastIndexOf(pointerId);
					let newXIndex = oldXIndex;
					while (newXIndex &gt; 0 &amp;&amp; pointers[xPointerIds[newXIndex - 1]].offsetX &gt; offsetX) {
						--newXIndex;
					}
					xPointerIds.copyWithin(newXIndex + 1, newXIndex, oldXIndex);
					xPointerIds[newXIndex] = pointerId;
					while (newXIndex &lt; pointerCount - 1 &amp;&amp; pointers[xPointerIds[newXIndex + 1]].offsetX &lt; offsetX) {
						++newXIndex;
					}
					xPointerIds.copyWithin(oldXIndex, oldXIndex + 1, newXIndex + 1);
					xPointerIds[newXIndex] = pointerId;
					const oldYIndex = yPointerIds.lastIndexOf(pointerId);
					let newYIndex = oldYIndex;
					while (newYIndex &gt; 0 &amp;&amp; pointers[yPointerIds[newYIndex - 1]].offsetY &gt; offsetY) {
						--newYIndex;
					}
					yPointerIds.copyWithin(newYIndex + 1, newYIndex, oldYIndex);
					yPointerIds[newYIndex] = pointerId;
					while (newYIndex &lt; pointerCount - 1 &amp;&amp; pointers[yPointerIds[newYIndex + 1]].offsetY &lt; offsetY) {
						++newYIndex;
					}
					yPointerIds.copyWithin(oldYIndex, oldYIndex + 1, newYIndex + 1);
					yPointerIds[newYIndex] = pointerId;
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					animWidth = width === 0 ? animWidth : maxClientWidth === 0 ? baseWidth : Math.min(svg.clientWidth / maxClientWidth * width, baseWidth);
					animHeight = height === 0 ? animHeight : maxClientHeight === 0 ? baseHeight : Math.min(svg.clientHeight / maxClientHeight * height, baseHeight);
					animX = Math.max(Math.min(x - minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(y - minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
				const zoomIntensity = 1.25;
				svg.addEventListener("wheel", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					if (!ctrlKey) {
						const vectorX = (shiftKey ? event.deltaY : event.deltaX) / svg.clientWidth * animWidth;
						const vectorY = (shiftKey ? 0 : event.deltaY) / svg.clientHeight * animHeight;
						animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
						animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
						svg.viewBox.baseVal.x = animX;
						svg.viewBox.baseVal.y = animY;
						setMinDate(animX);
						setMaxDate(animX + animWidth);
						setMinValue(baseY * 2 + baseHeight - animHeight - animY);
						setMaxValue(baseY * 2 + baseHeight - animY);
						return;
					}
					const ratioX = zoomIntensity ** Math.sign(shiftKey ? event.deltaY : event.deltaX);
					const ratioY = zoomIntensity ** Math.sign(shiftKey ? 0 : event.deltaY);
					const positionX = Math.max(0, Math.min(event.offsetX / svg.clientWidth, 1)) * animWidth;
					const positionY = Math.max(0, Math.min(event.offsetY / svg.clientHeight, 1)) * animHeight;
					animWidth = Math.min(animWidth * ratioX, baseWidth);
					animHeight = Math.min(animHeight * ratioY, baseHeight);
					animX = Math.max(Math.min(animX + positionX * (1 - ratioX), baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(animY + positionY * (1 - ratioY), baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				}, {
					passive: false,
				});
				svg.addEventListener("keydown", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					switch (event.code) {
						case "Space": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "Equal":
						case "NumpadAdd":
						case "Minus":
						case "NumpadSubtract": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.code === "Minus" || event.code === "NumpadSubtract" ? zoomIntensity : 1 / zoomIntensity;
							if (!shiftKey) {
								animHeight = Math.min(animHeight * ratio, baseHeight);
								animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "Digit0":
						case "Numpad0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							if (!shiftKey) {
								animY = baseY;
								animHeight = baseHeight;
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animX = baseX;
							animWidth = baseWidth;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
					}
					switch (event.key) {
						case "ArrowRight": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = 50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowLeft": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = -50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowDown": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = 50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "End": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY + baseHeight - animHeight;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "ArrowUp": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = -50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "Home": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "PageDown":
						case "PageUp":
						case " ": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = event.key === "PageUp" || event.key === " " &amp;&amp; shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "+":
						case "-": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.key === "-" ? 1 / zoomIntensity : zoomIntensity;
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animHeight = Math.min(animHeight * ratio, baseHeight);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animX = baseX;
							animY = baseY;
							animWidth = baseWidth;
							animHeight = baseHeight;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
					}
				});
				svg.addEventListener("focusin", (event) =&gt; {
					if (!event.target.matches(":focus-visible")) {
						return;
					}
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					let {x, y, width, height} = event.target.getBBox();
					width = Math.round(width);
					height = Math.round(height);
					x = Math.round(x);
					y = baseY * 2 + baseHeight - height - Math.round(y);
					if (x + width &lt; animX) {
						animX = x;
						if (width &gt; animWidth) {
							animX += (width - animWidth) / 2;
						}
					} else if (x &gt; animX + animWidth) {
						animX = x + width - animWidth;
						if (width &gt; animWidth) {
							animX -= (width - animWidth) / 2;
						}
					}
					if (y + height &lt; animY) {
						animY = y;
						if (height &gt; animHeight) {
							animY += (height - animHeight) / 2;
						}
					} else if (y &gt; animY + animHeight) {
						animY = y + height - animHeight;
						if (height &gt; animHeight) {
							animY -= (height - animHeight) / 2;
						}
					}
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
			}, {
				once: true,
			});
		}
	</script>
	<foreignObject x="0" y="0" width="100%" height="100%" style="--date-size: 100; --value-size: 30;">
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2017-12-25</text>
		</svg>
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2025-09-30</text>
		</svg>
		<svg viewBox="0 0 30 20">
			<text x="15" y="10" dx="0" dy="2" textLength="10" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">0</text>
		</svg>
		<svg viewBox="0 0 30 20">
			<text x="15" y="10" dx="0" dy="2" textLength="30" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">292</text>
		</svg>
		<svg viewBox="0 0 2836 292" preserveAspectRatio="none" overflow="visible">
			<g transform="translate(0 292) scale(1 -1)" style="--count: 109;">
				<g>
					<rect x="0" y="0" width="2836" height="292"/>
				</g>
				<g style="--index: 0;">
					<path d="M0,0L0,0L0,1L6,1L6,1L9,1L9,2L10,2L10,2L11,2L11,2L13,2L13,2L14,2L14,2L2629,2L2629,3L2642,3L2642,3L2657,3L2657,3L2705,3L2705,3L2799,3L2799,4L2836,4" tabindex="0">
						<title>l_r9gn1qpd-xd144xzd-38dz6v1n.ln8kgdol</title>
					</path>
				</g>
				<g style="--index: 1;">
					<path d="M0,0L4,0L4,1L5,1L5,2L6,2L6,3L8,3L8,3L9,3L9,3L10,3L10,3L12,3L12,4L13,4L13,4L2629,4L2629,5L2663,5L2663,6L2666,6L2666,6L2691,6L2691,6L2699,6L2699,6L2836,6" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.q75zmmn1</title>
					</path>
				</g>
				<g style="--index: 2;">
					<path d="M0,0L6,0L6,2L7,2L7,2L12,2L12,3L13,3L13,3L14,3L14,3L2635,3L2635,4L2663,4L2663,5L2812,5L2812,6L2836,6" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.1gnozzxl</title>
					</path>
				</g>
				<g style="--index: 3;">
					<path d="M0,0L9,0L9,1L12,1L12,1L2635,1L2635,2L2642,2L2642,2L2663,2L2663,2L2799,2L2799,3L2836,3" tabindex="0">
						<title>l_o9xo3rp9-xd144xzd-ql69e17l.qyz3jjd1</title>
					</path>
				</g>
				<g style="--index: 4;">
					<path d="M0,0L14,0L14,1L15,1L15,3L19,3L19,4L28,4L28,4L85,4L85,5L118,5L118,6L609,6L609,7L884,7L884,8L979,8L979,8L1043,8L1043,9L1061,9L1061,11L1068,11L1068,12L1091,12L1091,12L1118,12L1118,12L1154,12L1154,13L1157,13L1157,13L1158,13L1158,13L1159,13L1159,13L1161,13L1161,13L1162,13L1162,13L1165,13L1165,13L1187,13L1187,13L1196,13L1196,13L1492,13L1492,13L1493,13L1493,13L1530,13L1530,14L1562,14L1562,15L1588,15L1588,16L1615,16L1615,17L1616,17L1616,17L1657,17L1657,18L1675,18L1675,19L1677,19L1677,20L1681,20L1681,21L1683,21L1683,22L1715,22L1715,23L1716,23L1716,23L1719,23L1719,23L1745,23L1745,24L1792,24L1792,25L1799,25L1799,26L1811,26L1811,27L1863,27L1863,28L1875,28L1875,29L1916,29L1916,30L1922,30L1922,31L1925,31L1925,32L1928,32L1928,32L1932,32L1932,33L1941,33L1941,34L1954,34L1954,35L1983,35L1983,36L1995,36L1995,37L2064,37L2064,38L2088,38L2088,39L2097,39L2097,40L2120,40L2120,40L2133,40L2133,41L2136,41L2136,42L2138,42L2138,43L2179,43L2179,44L2261,44L2261,45L2288,45L2288,46L2290,46L2290,47L2304,47L2304,48L2320,48L2320,49L2321,49L2321,50L2338,50L2338,51L2343,51L2343,52L2347,52L2347,53L2395,53L2395,54L2414,54L2414,55L2415,55L2415,55L2424,55L2424,56L2447,56L2447,57L2452,57L2452,58L2457,58L2457,58L2470,58L2470,59L2518,59L2518,60L2519,60L2519,61L2546,61L2546,61L2555,61L2555,62L2581,62L2581,62L2585,62L2585,64L2586,64L2586,64L2593,64L2593,65L2595,65L2595,66L2596,66L2596,66L2606,66L2606,67L2612,67L2612,69L2614,69L2614,70L2615,70L2615,70L2616,70L2616,71L2623,71L2623,72L2625,72L2625,73L2626,73L2626,73L2627,73L2627,73L2635,73L2635,74L2639,74L2639,77L2640,77L2640,78L2644,78L2644,79L2653,79L2653,79L2654,79L2654,80L2657,80L2657,80L2662,80L2662,81L2670,81L2670,81L2671,81L2671,82L2674,82L2674,83L2675,83L2675,83L2677,83L2677,83L2684,83L2684,84L2689,84L2689,85L2728,85L2728,86L2732,86L2732,87L2733,87L2733,89L2735,89L2735,89L2736,89L2736,89L2737,89L2737,90L2738,90L2738,91L2739,91L2739,91L2744,91L2744,92L2748,92L2748,92L2749,92L2749,92L2750,92L2750,92L2751,92L2751,94L2757,94L2757,95L2765,95L2765,96L2766,96L2766,96L2777,96L2777,97L2779,97L2779,98L2780,98L2780,98L2783,98L2783,100L2787,100L2787,103L2788,103L2788,104L2790,104L2790,104L2791,104L2791,105L2795,105L2795,105L2799,105L2799,107L2800,107L2800,107L2802,107L2802,107L2806,107L2806,108L2811,108L2811,109L2812,109L2812,109L2821,109L2821,110L2826,110L2826,111L2832,111L2832,112L2836,112" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.013856dq</title>
					</path>
				</g>
				<g style="--index: 5;">
					<path d="M0,0L15,0L15,1L19,1L19,2L45,2L45,2L87,2L87,3L117,3L117,4L609,4L609,5L854,5L854,6L856,6L856,7L860,7L860,8L861,8L861,8L874,8L874,9L884,9L884,9L965,9L965,10L979,10L979,10L991,10L991,11L1041,11L1041,12L1059,12L1059,13L1061,13L1061,14L1066,14L1066,15L1068,15L1068,16L1085,16L1085,16L1086,16L1086,16L1117,16L1117,17L1126,17L1126,17L1164,17L1164,18L1196,18L1196,18L1288,18L1288,18L1408,18L1408,19L1435,19L1435,19L1466,19L1466,20L1651,20L1651,21L1657,21L1657,22L1677,22L1677,23L1707,23L1707,24L1729,24L1729,25L1731,25L1731,26L1745,26L1745,27L1811,27L1811,28L1842,28L1842,29L1844,29L1844,30L1892,30L1892,30L1928,30L1928,31L1953,31L1953,32L1996,32L1996,32L2073,32L2073,33L2090,33L2090,34L2133,34L2133,35L2187,35L2187,36L2261,36L2261,37L2321,37L2321,38L2330,38L2330,39L2361,39L2361,40L2414,40L2414,41L2415,41L2415,42L2424,42L2424,43L2470,43L2470,44L2483,44L2483,45L2546,45L2546,46L2558,46L2558,46L2595,46L2595,47L2607,47L2607,48L2608,48L2608,49L2611,49L2611,51L2618,51L2618,52L2623,52L2623,53L2633,53L2633,54L2635,54L2635,54L2644,54L2644,54L2646,54L2646,54L2652,54L2652,56L2653,56L2653,56L2655,56L2655,56L2674,56L2674,57L2675,57L2675,57L2676,57L2676,57L2681,57L2681,57L2698,57L2698,58L2723,58L2723,59L2733,59L2733,60L2736,60L2736,60L2739,60L2739,61L2753,61L2753,62L2763,62L2763,63L2764,63L2764,64L2765,64L2765,65L2766,65L2766,65L2767,65L2767,67L2768,67L2768,68L2770,68L2770,68L2771,68L2771,69L2772,69L2772,70L2774,70L2774,70L2775,70L2775,70L2780,70L2780,70L2781,70L2781,70L2782,70L2782,70L2784,70L2784,72L2791,72L2791,73L2792,73L2792,74L2804,74L2804,74L2807,74L2807,74L2809,74L2809,74L2827,74L2827,75L2834,75L2834,75L2836,75" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.jq60ze3q</title>
					</path>
				</g>
				<g style="--index: 6;">
					<path dtabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.81ppdgg1</title>
					</path>
				</g>
				<g style="--index: 7;">
					<path d="M0,0L15,0L15,1L109,1L109,2L120,2L120,3L879,3L879,4L937,4L937,5L939,5L939,5L973,5L973,5L977,5L977,5L1054,5L1054,6L1061,6L1061,7L1064,7L1064,8L1086,8L1086,9L1090,9L1090,10L1112,10L1112,10L1117,10L1117,10L1163,10L1163,11L1188,11L1188,11L1196,11L1196,11L1274,11L1274,12L1556,12L1556,13L1620,13L1620,14L1621,14L1621,15L1622,15L1622,15L1648,15L1648,17L1650,17L1650,17L1655,17L1655,17L1657,17L1657,18L1662,18L1662,19L1753,19L1753,20L1758,20L1758,21L1812,21L1812,22L1814,22L1814,23L1819,23L1819,24L1927,24L1927,25L1953,25L1953,26L1958,26L1958,27L1990,27L1990,28L2127,28L2127,29L2148,29L2148,30L2199,30L2199,31L2209,31L2209,31L2261,31L2261,32L2349,32L2349,33L2401,33L2401,34L2420,34L2420,35L2425,35L2425,35L2434,35L2434,36L2452,36L2452,37L2470,37L2470,38L2558,38L2558,38L2562,38L2562,40L2564,40L2564,41L2598,41L2598,42L2626,42L2626,43L2640,43L2640,43L2644,43L2644,43L2664,43L2664,44L2665,44L2665,45L2667,45L2667,45L2668,45L2668,45L2674,45L2674,46L2676,46L2676,47L2677,47L2677,47L2726,47L2726,47L2732,47L2732,47L2736,47L2736,47L2743,47L2743,48L2751,48L2751,49L2753,49L2753,50L2763,50L2763,51L2764,51L2764,51L2766,51L2766,52L2768,52L2768,53L2769,53L2769,54L2771,54L2771,55L2777,55L2777,55L2778,55L2778,56L2779,56L2779,56L2781,56L2781,57L2783,57L2783,57L2787,57L2787,57L2789,57L2789,58L2792,58L2792,58L2793,58L2793,58L2794,58L2794,58L2796,58L2796,59L2799,59L2799,60L2802,60L2802,60L2804,60L2804,60L2817,60L2817,61L2820,61L2820,62L2826,62L2826,62L2834,62L2834,63L2836,63" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.81wp50oq</title>
					</path>
				</g>
				<g style="--index: 8;">
					<path d="M0,0L15,0L15,1L24,1L24,2L73,2L73,2L87,2L87,3L113,3L113,4L597,4L597,5L858,5L858,5L878,5L878,6L944,6L944,6L1041,6L1041,7L1064,7L1064,8L1387,8L1387,9L1537,9L1537,10L1565,10L1565,11L1580,11L1580,12L1592,12L1592,12L1607,12L1607,12L1635,12L1635,13L1655,13L1655,14L1676,14L1676,15L1688,15L1688,16L1689,16L1689,16L1702,16L1702,17L1730,17L1730,18L1808,18L1808,19L1857,19L1857,20L1877,20L1877,20L1907,20L1907,21L1912,21L1912,22L1966,22L1966,23L2024,23L2024,24L2058,24L2058,25L2064,25L2064,26L2099,26L2099,28L2113,28L2113,28L2175,28L2175,29L2181,29L2181,30L2187,30L2187,30L2234,30L2234,30L2276,30L2276,31L2349,31L2349,32L2393,32L2393,33L2421,33L2421,34L2443,34L2443,35L2450,35L2450,35L2467,35L2467,35L2470,35L2470,35L2471,35L2471,35L2475,35L2475,35L2478,35L2478,35L2513,35L2513,36L2563,36L2563,37L2596,37L2596,39L2597,39L2597,40L2662,40L2662,41L2668,41L2668,42L2673,42L2673,43L2684,43L2684,44L2699,44L2699,45L2700,45L2700,45L2716,45L2716,46L2732,46L2732,47L2735,47L2735,47L2745,47L2745,47L2748,47L2748,48L2756,48L2756,49L2765,49L2765,50L2767,50L2767,51L2769,51L2769,52L2773,52L2773,52L2774,52L2774,53L2775,53L2775,54L2780,54L2780,54L2781,54L2781,55L2791,55L2791,55L2793,55L2793,56L2797,56L2797,56L2809,56L2809,58L2810,58L2810,58L2823,58L2823,59L2828,59L2828,60L2834,60L2834,61L2836,61" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.21g82pnl</title>
					</path>
				</g>
				<g style="--index: 9;">
					<path d="M0,0L15,0L15,1L19,1L19,2L23,2L23,3L25,3L25,4L32,4L32,5L41,5L41,5L44,5L44,5L87,5L87,7L108,7L108,8L115,8L115,9L597,9L597,10L657,10L657,11L728,11L728,11L857,11L857,12L871,12L871,13L933,13L933,14L973,14L973,14L1048,14L1048,15L1064,15L1064,16L1065,16L1065,17L1069,17L1069,17L1071,17L1071,17L1125,17L1125,18L1132,18L1132,19L1133,19L1133,19L1139,19L1139,20L1140,20L1140,21L1144,21L1144,22L1145,22L1145,22L1146,22L1146,22L1148,22L1148,22L1154,22L1154,23L1163,23L1163,24L1180,24L1180,25L1181,25L1181,25L1200,25L1200,26L1208,26L1208,27L1211,27L1211,28L1221,28L1221,29L1223,29L1223,30L1377,30L1377,31L1409,31L1409,32L1480,32L1480,33L1485,33L1485,34L1487,34L1487,34L1495,34L1495,35L1496,35L1496,36L1516,36L1516,37L1532,37L1532,39L1536,39L1536,40L1537,40L1537,40L1538,40L1538,41L1587,41L1587,42L1618,42L1618,43L1646,43L1646,44L1653,44L1653,45L1657,45L1657,46L1658,46L1658,47L1676,47L1676,48L1689,48L1689,49L1701,49L1701,50L1705,50L1705,51L1714,51L1714,51L1716,51L1716,52L1717,52L1717,53L1751,53L1751,54L1770,54L1770,55L1773,55L1773,56L1819,56L1819,57L1842,57L1842,57L1843,57L1843,57L1860,57L1860,58L1908,58L1908,59L1912,59L1912,60L1923,60L1923,61L1952,61L1952,63L1959,63L1959,64L1966,64L1966,65L2001,65L2001,66L2013,66L2013,67L2058,67L2058,68L2064,68L2064,69L2069,69L2069,70L2175,70L2175,71L2182,71L2182,72L2212,72L2212,73L2234,73L2234,73L2321,73L2321,74L2332,74L2332,75L2337,75L2337,76L2352,76L2352,77L2354,77L2354,77L2365,77L2365,78L2367,78L2367,79L2378,79L2378,80L2384,80L2384,81L2386,81L2386,83L2440,83L2440,84L2458,84L2458,84L2470,84L2470,85L2471,85L2471,85L2484,85L2484,86L2513,86L2513,87L2529,87L2529,88L2538,88L2538,89L2551,89L2551,90L2552,90L2552,90L2554,90L2554,92L2571,92L2571,92L2572,92L2572,94L2577,94L2577,95L2592,95L2592,96L2600,96L2600,97L2607,97L2607,98L2608,98L2608,100L2610,100L2610,101L2613,101L2613,102L2616,102L2616,103L2617,103L2617,104L2622,104L2622,105L2628,105L2628,107L2638,107L2638,108L2640,108L2640,108L2641,108L2641,108L2658,108L2658,109L2662,109L2662,110L2663,110L2663,110L2668,110L2668,111L2672,111L2672,113L2673,113L2673,114L2684,114L2684,115L2686,115L2686,116L2703,116L2703,117L2729,117L2729,117L2735,117L2735,117L2747,117L2747,118L2759,118L2759,118L2764,118L2764,120L2767,120L2767,122L2770,122L2770,122L2775,122L2775,122L2776,122L2776,122L2777,122L2777,122L2786,122L2786,123L2789,123L2789,124L2792,124L2792,124L2793,124L2793,125L2794,125L2794,125L2796,125L2796,126L2798,126L2798,126L2801,126L2801,127L2803,127L2803,127L2809,127L2809,128L2813,128L2813,128L2814,128L2814,129L2815,129L2815,130L2817,130L2817,130L2818,130L2818,130L2820,130L2820,131L2823,131L2823,132L2825,132L2825,133L2827,133L2827,134L2829,134L2829,135L2836,135" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.xqkjmxnl</title>
					</path>
				</g>
				<g style="--index: 10;">
					<path dtabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.jqzpx3gl</title>
					</path>
				</g>
				<g style="--index: 11;">
					<path d="M0,0L21,0L21,1L23,1L23,2L87,2L87,3L120,3L120,4L755,4L755,5L881,5L881,6L883,6L883,6L1027,6L1027,6L1054,6L1054,7L1068,7L1068,9L1101,9L1101,10L1103,10L1103,10L1159,10L1159,11L1162,11L1162,12L1169,12L1169,12L1187,12L1187,12L1188,12L1188,12L1494,12L1494,12L1497,12L1497,12L1499,12L1499,13L1553,13L1553,14L1554,14L1554,14L1557,14L1557,14L1614,14L1614,14L1621,14L1621,15L1639,15L1639,16L1657,16L1657,17L1658,17L1658,18L1679,18L1679,19L1685,19L1685,20L1715,20L1715,21L1720,21L1720,22L1788,22L1788,23L1794,23L1794,24L1901,24L1901,25L1953,25L1953,26L2028,26L2028,27L2068,27L2068,27L2222,27L2222,28L2261,28L2261,29L2318,29L2318,30L2321,30L2321,31L2327,31L2327,31L2357,31L2357,32L2425,32L2425,33L2426,33L2426,33L2427,33L2427,33L2428,33L2428,33L2429,33L2429,34L2430,34L2430,34L2431,34L2431,34L2451,34L2451,34L2452,34L2452,35L2470,35L2470,36L2586,36L2586,36L2619,36L2619,36L2629,36L2629,36L2637,36L2637,37L2641,37L2641,38L2660,38L2660,38L2674,38L2674,39L2676,39L2676,40L2729,40L2729,40L2731,40L2731,41L2735,41L2735,42L2736,42L2736,42L2739,42L2739,42L2740,42L2740,42L2743,42L2743,43L2771,43L2771,44L2772,44L2772,46L2778,46L2778,46L2779,46L2779,46L2780,46L2780,46L2791,46L2791,48L2793,48L2793,48L2794,48L2794,48L2799,48L2799,49L2802,49L2802,49L2806,49L2806,50L2818,50L2818,50L2820,50L2820,51L2833,51L2833,52L2836,52" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.rqvpey7q</title>
					</path>
				</g>
				<g style="--index: 12;">
					<path dtabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.p12dx87q</title>
					</path>
				</g>
				<g style="--index: 13;">
					<path d="M0,0L21,0L21,1L31,1L31,1L71,1L71,1L87,1L87,2L200,2L200,3L609,3L609,4L772,4L772,5L902,5L902,6L1009,6L1009,6L1048,6L1048,7L1061,7L1061,8L1073,8L1073,9L1087,9L1087,10L1120,10L1120,10L1130,10L1130,11L1164,11L1164,12L1197,12L1197,13L1270,13L1270,14L1390,14L1390,15L1405,15L1405,16L1535,16L1535,17L1537,17L1537,18L1597,18L1597,19L1651,19L1651,20L1695,20L1695,21L1730,21L1730,22L1785,22L1785,23L1821,23L1821,24L1828,24L1828,25L1883,25L1883,26L1888,26L1888,27L1889,27L1889,28L1890,28L1890,29L1891,29L1891,29L1892,29L1892,30L1912,30L1912,31L1918,31L1918,32L1928,32L1928,33L1929,33L1929,34L1953,34L1953,35L1954,35L1954,36L1974,36L1974,36L1978,36L1978,37L1987,37L1987,38L1988,38L1988,38L1994,38L1994,38L2001,38L2001,39L2002,39L2002,39L2029,39L2029,40L2063,40L2063,41L2108,41L2108,42L2176,42L2176,43L2189,43L2189,43L2260,43L2260,44L2273,44L2273,45L2305,45L2305,46L2355,46L2355,47L2356,47L2356,48L2358,48L2358,49L2367,49L2367,50L2402,50L2402,51L2413,51L2413,52L2437,52L2437,52L2439,52L2439,53L2440,53L2440,55L2462,55L2462,55L2470,55L2470,56L2481,56L2481,56L2493,56L2493,57L2506,57L2506,58L2542,58L2542,59L2545,59L2545,60L2556,60L2556,60L2571,60L2571,61L2577,61L2577,62L2587,62L2587,63L2589,63L2589,64L2590,64L2590,65L2614,65L2614,66L2616,66L2616,67L2617,67L2617,68L2618,68L2618,69L2619,69L2619,69L2629,69L2629,69L2635,69L2635,70L2636,70L2636,71L2637,71L2637,72L2640,72L2640,73L2643,73L2643,73L2654,73L2654,73L2674,73L2674,74L2736,74L2736,74L2743,74L2743,75L2746,75L2746,76L2747,76L2747,76L2749,76L2749,77L2750,77L2750,78L2751,78L2751,79L2752,79L2752,79L2753,79L2753,79L2756,79L2756,80L2757,80L2757,81L2762,81L2762,82L2766,82L2766,83L2767,83L2767,84L2771,84L2771,86L2772,86L2772,87L2774,87L2774,87L2775,87L2775,88L2777,88L2777,89L2778,89L2778,89L2782,89L2782,89L2783,89L2783,90L2785,90L2785,91L2786,91L2786,91L2788,91L2788,91L2789,91L2789,91L2795,91L2795,92L2796,92L2796,93L2798,93L2798,94L2799,94L2799,94L2802,94L2802,94L2803,94L2803,94L2810,94L2810,95L2814,95L2814,95L2820,95L2820,97L2826,97L2826,98L2836,98" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.810zwdwq</title>
					</path>
				</g>
				<g style="--index: 14;">
					<path d="M0,0L23,0L23,1L25,1L25,1L37,1L37,2L38,2L38,2L39,2L39,2L87,2L87,3L113,3L113,4L119,4L119,4L195,4L195,6L265,6L265,6L386,6L386,7L596,7L596,8L876,8L876,9L979,9L979,10L981,10L981,10L1010,10L1010,10L1050,10L1050,10L1064,10L1064,11L1072,11L1072,11L1090,11L1090,12L1096,12L1096,13L1104,13L1104,13L1113,13L1113,14L1115,14L1115,14L1116,14L1116,14L1139,14L1139,15L1160,15L1160,15L1162,15L1162,15L1174,15L1174,15L1188,15L1188,15L1192,15L1192,15L1208,15L1208,16L1209,16L1209,16L1214,16L1214,18L1377,18L1377,19L1443,19L1443,20L1475,20L1475,21L1539,21L1539,22L1567,22L1567,23L1595,23L1595,24L1657,24L1657,25L1667,25L1667,26L1676,26L1676,27L1689,27L1689,28L1692,28L1692,29L1702,29L1702,30L1704,30L1704,31L1719,31L1719,32L1728,32L1728,33L1776,33L1776,34L1777,34L1777,35L1778,35L1778,35L1783,35L1783,36L1788,36L1788,37L1801,37L1801,37L1850,37L1850,38L1857,38L1857,39L1868,39L1868,39L1871,39L1871,40L1872,40L1872,40L1883,40L1883,41L1910,41L1910,43L1924,43L1924,44L1947,44L1947,45L1992,45L1992,46L1999,46L1999,47L2008,47L2008,49L2024,49L2024,50L2057,50L2057,51L2072,51L2072,52L2085,52L2085,52L2134,52L2134,53L2175,53L2175,54L2177,54L2177,55L2210,55L2210,56L2232,56L2232,57L2233,57L2233,57L2236,57L2236,57L2240,57L2240,58L2241,58L2241,58L2319,58L2319,59L2323,59L2323,60L2358,60L2358,60L2386,60L2386,61L2417,61L2417,62L2450,62L2450,62L2456,62L2456,63L2470,63L2470,64L2471,64L2471,64L2475,64L2475,64L2531,64L2531,65L2532,65L2532,66L2567,66L2567,67L2569,67L2569,67L2578,67L2578,68L2587,68L2587,69L2592,69L2592,70L2596,70L2596,71L2622,71L2622,72L2623,72L2623,73L2624,73L2624,74L2627,74L2627,75L2628,75L2628,76L2656,76L2656,77L2673,77L2673,78L2684,78L2684,79L2686,79L2686,80L2715,80L2715,81L2723,81L2723,82L2735,82L2735,82L2736,82L2736,83L2740,83L2740,84L2741,84L2741,84L2744,84L2744,84L2748,84L2748,85L2749,85L2749,85L2750,85L2750,86L2775,86L2775,87L2778,87L2778,88L2781,88L2781,89L2784,89L2784,89L2786,89L2786,90L2789,90L2789,90L2792,90L2792,91L2793,91L2793,91L2794,91L2794,91L2797,91L2797,91L2798,91L2798,92L2799,92L2799,92L2800,92L2800,93L2807,93L2807,93L2809,93L2809,93L2810,93L2810,94L2812,94L2812,94L2817,94L2817,94L2823,94L2823,95L2826,95L2826,96L2827,96L2827,96L2829,96L2829,96L2831,96L2831,97L2833,97L2833,97L2835,97L2835,98L2836,98" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.21dz3e4l</title>
					</path>
				</g>
				<g style="--index: 15;">
					<path d="M0,0L23,0L23,1L25,1L25,1L37,1L37,1L39,1L39,2L40,2L40,2L83,2L83,3L113,3L113,4L119,4L119,4L597,4L597,5L882,5L882,6L979,6L979,7L988,7L988,7L1010,7L1010,7L1064,7L1064,8L1073,8L1073,8L1104,8L1104,9L1113,9L1113,10L1114,10L1114,10L1139,10L1139,11L1145,11L1145,11L1146,11L1146,11L1147,11L1147,11L1162,11L1162,11L1163,11L1163,11L1213,11L1213,12L1490,12L1490,12L1653,12L1653,13L1657,13L1657,14L1676,14L1676,15L1688,15L1688,16L1702,16L1702,17L1706,17L1706,18L1713,18L1713,18L1717,18L1717,19L1720,19L1720,20L1782,20L1782,21L1809,21L1809,22L1821,22L1821,23L1857,23L1857,24L1874,24L1874,25L1898,25L1898,26L1910,26L1910,28L1924,28L1924,29L1978,29L1978,30L2007,30L2007,31L2020,31L2020,32L2025,32L2025,33L2027,33L2027,33L2168,33L2168,34L2175,34L2175,35L2178,35L2178,36L2200,36L2200,37L2214,37L2214,37L2239,37L2239,38L2242,38L2242,39L2252,39L2252,39L2308,39L2308,40L2319,40L2319,41L2321,41L2321,41L2323,41L2323,42L2385,42L2385,43L2395,43L2395,45L2413,45L2413,45L2417,45L2417,46L2418,46L2418,47L2421,47L2421,48L2440,48L2440,49L2449,49L2449,50L2450,50L2450,50L2456,50L2456,50L2470,50L2470,52L2471,52L2471,52L2500,52L2500,53L2520,53L2520,54L2553,54L2553,55L2557,55L2557,56L2563,56L2563,57L2565,57L2565,58L2572,58L2572,58L2587,58L2587,59L2603,59L2603,60L2607,60L2607,61L2611,61L2611,62L2612,62L2612,63L2616,63L2616,64L2623,64L2623,65L2624,65L2624,66L2625,66L2625,67L2631,67L2631,68L2632,68L2632,69L2644,69L2644,69L2646,69L2646,69L2650,69L2650,70L2651,70L2651,70L2652,70L2652,71L2654,71L2654,71L2656,71L2656,71L2660,71L2660,71L2665,71L2665,71L2668,71L2668,72L2670,72L2670,72L2673,72L2673,73L2684,73L2684,74L2686,74L2686,75L2699,75L2699,76L2704,76L2704,77L2706,77L2706,77L2707,77L2707,78L2708,78L2708,79L2709,79L2709,79L2715,79L2715,79L2718,79L2718,80L2719,80L2719,81L2720,81L2720,81L2735,81L2735,82L2741,82L2741,82L2746,82L2746,83L2747,83L2747,84L2750,84L2750,85L2761,85L2761,86L2769,86L2769,87L2770,87L2770,87L2771,87L2771,87L2774,87L2774,87L2775,87L2775,89L2786,89L2786,90L2787,90L2787,90L2792,90L2792,91L2793,91L2793,92L2794,92L2794,92L2797,92L2797,92L2798,92L2798,93L2801,93L2801,93L2807,93L2807,93L2808,93L2808,93L2810,93L2810,94L2811,94L2811,94L2812,94L2812,94L2817,94L2817,94L2821,94L2821,94L2823,94L2823,95L2826,95L2826,96L2829,96L2829,96L2832,96L2832,96L2833,96L2833,96L2834,96L2834,97L2835,97L2835,97L2836,97" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.klrpy2jq</title>
					</path>
				</g>
				<g style="--index: 16;">
					<path d="M0,0L23,0L23,1L24,1L24,1L33,1L33,2L39,2L39,2L200,2L200,3L1023,3L1023,4L1044,4L1044,5L1068,5L1068,5L1109,5L1109,7L1112,7L1112,7L1229,7L1229,8L1241,8L1241,9L1391,9L1391,10L1411,10L1411,11L1706,11L1706,12L2672,12L2672,13L2813,13L2813,14L2820,14L2820,15L2836,15" tabindex="0">
						<title>l_r9gn1qpd-xd144xzd-38dz6v1n.814y45w1</title>
					</path>
				</g>
				<g style="--index: 17;">
					<path d="M0,0L23,0L23,1L202,1L202,2L1044,2L1044,3L1108,3L1108,4L1111,4L1111,5L1112,5L1112,6L1125,6L1125,6L1154,6L1154,6L1196,6L1196,6L1197,6L1197,6L1970,6L1970,7L2671,7L2671,8L2813,8L2813,9L2836,9" tabindex="0">
						<title>l_o9xo3rp9-xd144xzd-ql69e17l.ln8rzznl</title>
					</path>
				</g>
				<g style="--index: 18;">
					<path d="M0,0L42,0L42,1L45,1L45,2L115,2L115,3L432,3L432,3L597,3L597,4L772,4L772,5L773,5L773,5L780,5L780,5L783,5L783,5L791,5L791,5L837,5L837,5L887,5L887,6L910,6L910,6L980,6L980,7L1064,7L1064,8L1092,8L1092,9L1093,9L1093,9L1113,9L1113,10L1115,10L1115,10L1116,10L1116,10L1132,10L1132,11L1154,11L1154,12L1160,12L1160,12L1831,12L1831,13L1933,13L1933,14L2021,14L2021,15L2175,15L2175,16L2189,16L2189,16L2198,16L2198,16L2293,16L2293,16L2371,16L2371,16L2426,16L2426,17L2470,17L2470,18L2519,18L2519,19L2620,19L2620,20L2626,20L2626,21L2636,21L2636,22L2641,22L2641,22L2647,22L2647,23L2650,23L2650,24L2651,24L2651,24L2653,24L2653,25L2657,25L2657,25L2661,25L2661,25L2673,25L2673,26L2674,26L2674,26L2684,26L2684,27L2692,27L2692,28L2716,28L2716,29L2735,29L2735,29L2743,29L2743,30L2748,30L2748,31L2756,31L2756,32L2761,32L2761,32L2780,32L2780,33L2792,33L2792,34L2794,34L2794,34L2795,34L2795,34L2797,34L2797,34L2803,34L2803,34L2809,34L2809,35L2819,35L2819,36L2823,36L2823,37L2830,37L2830,38L2836,38" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.gq7jrxvq</title>
					</path>
				</g>
				<g style="--index: 19;">
					<path d="M0,0L46,0L46,1L201,1L201,2L1073,2L1073,3L1093,3L1093,4L1104,4L1104,4L1105,4L1105,4L1126,4L1126,4L1139,4L1139,5L1534,5L1534,6L1994,6L1994,6L2177,6L2177,7L2236,7L2236,7L2249,7L2249,7L2630,7L2630,8L2779,8L2779,8L2836,8" tabindex="0">
						<title>l_r9gn1qpd-xd144xzd-38dz6v1n.z19md2jl</title>
					</path>
				</g>
				<g style="--index: 20;">
					<path d="M0,0L71,0L71,1L87,1L87,2L118,2L118,3L432,3L432,3L856,3L856,4L882,4L882,5L979,5L979,5L982,5L982,5L984,5L984,5L1044,5L1044,6L1061,6L1061,7L1066,7L1066,8L1091,8L1091,9L1118,9L1118,10L1120,10L1120,10L1122,10L1122,10L1125,10L1125,10L1152,10L1152,10L1172,10L1172,11L1187,11L1187,11L1188,11L1188,11L1196,11L1196,11L1352,11L1352,12L1361,12L1361,12L1590,12L1590,12L1655,12L1655,12L1657,12L1657,13L1716,13L1716,14L1743,14L1743,15L1749,15L1749,15L1805,15L1805,15L1812,15L1812,16L1814,16L1814,16L1840,16L1840,16L1907,16L1907,16L1914,16L1914,16L1923,16L1923,17L1964,17L1964,17L1979,17L1979,18L1997,18L1997,19L2064,19L2064,20L2076,20L2076,20L2103,20L2103,21L2261,21L2261,22L2323,22L2323,23L2417,23L2417,24L2470,24L2470,25L2563,25L2563,26L2586,26L2586,26L2596,26L2596,27L2661,27L2661,28L2662,28L2662,29L2663,29L2663,30L2667,30L2667,30L2674,30L2674,31L2684,31L2684,32L2691,32L2691,33L2715,33L2715,33L2736,33L2736,33L2739,33L2739,33L2754,33L2754,34L2775,34L2775,35L2777,35L2777,36L2792,36L2792,36L2796,36L2796,37L2802,37L2802,37L2807,37L2807,37L2809,37L2809,37L2811,37L2811,37L2817,37L2817,37L2820,37L2820,38L2834,38L2834,38L2836,38" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.9qj0x8el</title>
					</path>
				</g>
				<g style="--index: 21;">
					<path d="M0,0L74,0L74,1L85,1L85,2L107,2L107,2L109,2L109,2L120,2L120,3L860,3L860,3L878,3L878,4L879,4L879,5L925,5L925,6L1039,6L1039,6L1041,6L1041,7L1059,7L1059,8L1061,8L1061,9L1068,9L1068,10L1083,10L1083,10L1087,10L1087,11L1088,11L1088,11L1092,11L1092,11L1162,11L1162,12L1169,12L1169,12L1528,12L1528,12L1633,12L1633,13L1657,13L1657,14L1699,14L1699,15L1805,15L1805,16L1808,16L1808,16L1812,16L1812,17L1814,17L1814,17L1871,17L1871,18L1921,18L1921,18L1927,18L1927,18L1929,18L1929,19L1953,19L1953,20L2064,20L2064,21L2111,21L2111,22L2133,22L2133,23L2261,23L2261,24L2425,24L2425,25L2470,25L2470,25L2586,25L2586,25L2622,25L2622,26L2641,26L2641,27L2642,27L2642,28L2643,28L2643,29L2655,29L2655,29L2674,29L2674,30L2677,30L2677,30L2736,30L2736,30L2739,30L2739,31L2743,31L2743,32L2768,32L2768,34L2773,34L2773,35L2774,35L2774,36L2775,36L2775,36L2776,36L2776,36L2779,36L2779,37L2783,37L2783,38L2800,38L2800,39L2804,39L2804,39L2817,39L2817,39L2836,39" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.5lermx5q</title>
					</path>
				</g>
				<g style="--index: 22;">
					<path d="M0,0L105,0L105,1L197,1L197,2L878,2L878,3L963,3L963,3L1033,3L1033,3L1061,3L1061,4L1064,4L1064,5L1084,5L1084,6L1088,6L1088,7L1092,7L1092,7L1093,7L1093,8L1103,8L1103,8L1118,8L1118,8L1121,8L1121,8L1126,8L1126,8L1530,8L1530,8L1541,8L1541,9L1612,9L1612,10L1613,10L1613,10L1614,10L1614,10L1621,10L1621,11L1622,11L1622,11L1643,11L1643,11L1645,11L1645,11L1686,11L1686,12L1811,12L1811,13L1812,13L1812,14L1815,14L1815,15L1819,15L1819,16L1906,16L1906,17L1913,17L1913,18L1969,18L1969,18L2059,18L2059,19L2176,19L2176,20L2321,20L2321,21L2326,21L2326,22L2328,22L2328,23L2330,23L2330,23L2349,23L2349,24L2379,24L2379,24L2416,24L2416,24L2444,24L2444,25L2452,25L2452,26L2470,26L2470,27L2478,27L2478,28L2510,28L2510,28L2517,28L2517,29L2519,29L2519,30L2538,30L2538,31L2543,31L2543,32L2633,32L2633,33L2637,33L2637,34L2645,34L2645,35L2647,35L2647,36L2662,36L2662,36L2675,36L2675,36L2686,36L2686,37L2731,37L2731,38L2739,38L2739,38L2741,38L2741,38L2742,38L2742,38L2747,38L2747,39L2753,39L2753,40L2754,40L2754,40L2755,40L2755,40L2756,40L2756,41L2767,41L2767,42L2769,42L2769,43L2770,43L2770,44L2772,44L2772,44L2777,44L2777,45L2780,45L2780,45L2783,45L2783,45L2786,45L2786,46L2787,46L2787,46L2791,46L2791,48L2792,48L2792,49L2799,49L2799,51L2803,51L2803,52L2805,52L2805,54L2817,54L2817,54L2821,54L2821,55L2827,55L2827,56L2828,56L2828,57L2836,57" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.z19m8p0l</title>
					</path>
				</g>
				<g style="--index: 23;">
					<path d="M0,0L105,0L105,1L114,1L114,2L876,2L876,3L878,3L878,4L1064,4L1064,6L1065,6L1065,6L1078,6L1078,6L1094,6L1094,7L1159,7L1159,8L1160,8L1160,8L1200,8L1200,8L1261,8L1261,9L1542,9L1542,10L1552,10L1552,11L1619,11L1619,12L1717,12L1717,13L1780,13L1780,14L1813,14L1813,15L1815,15L1815,15L1856,15L1856,16L1866,16L1866,17L1884,17L1884,18L1892,18L1892,19L2069,19L2069,20L2092,20L2092,21L2100,21L2100,21L2138,21L2138,22L2202,22L2202,23L2227,23L2227,24L2228,24L2228,24L2236,24L2236,24L2243,24L2243,24L2244,24L2244,24L2245,24L2245,25L2246,25L2246,25L2320,25L2320,26L2331,26L2331,27L2366,27L2366,28L2452,28L2452,29L2454,29L2454,30L2470,30L2470,31L2478,31L2478,32L2479,32L2479,33L2600,33L2600,34L2636,34L2636,35L2660,35L2660,35L2698,35L2698,36L2708,36L2708,37L2709,37L2709,37L2742,37L2742,37L2745,37L2745,37L2752,37L2752,37L2753,37L2753,38L2755,38L2755,39L2756,39L2756,40L2758,40L2758,40L2764,40L2764,40L2767,40L2767,41L2768,41L2768,42L2770,42L2770,42L2774,42L2774,42L2782,42L2782,43L2786,43L2786,44L2817,44L2817,44L2821,44L2821,46L2827,46L2827,47L2829,47L2829,48L2835,48L2835,49L2836,49" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.gq7jzvvq</title>
					</path>
				</g>
				<g style="--index: 24;">
					<path d="M0,0L105,0L105,1L107,1L107,2L108,2L108,2L109,2L109,2L195,2L195,3L196,3L196,4L877,4L877,5L1061,5L1061,6L1069,6L1069,7L1084,7L1084,8L1101,8L1101,8L1121,8L1121,8L1159,8L1159,9L1777,9L1777,11L1821,11L1821,11L1865,11L1865,12L1939,12L1939,13L1940,13L1940,14L1971,14L1971,15L2134,15L2134,16L2241,16L2241,16L2244,16L2244,16L2286,16L2286,17L2296,17L2296,18L2329,18L2329,19L2466,19L2466,20L2470,20L2470,20L2476,20L2476,21L2478,21L2478,22L2510,22L2510,22L2564,22L2564,23L2566,23L2566,24L2626,24L2626,25L2627,25L2627,25L2637,25L2637,26L2649,26L2649,26L2662,26L2662,26L2705,26L2705,26L2721,26L2721,26L2739,26L2739,27L2742,27L2742,27L2748,27L2748,28L2749,28L2749,28L2750,28L2750,28L2753,28L2753,28L2757,28L2757,28L2758,28L2758,29L2759,29L2759,30L2763,30L2763,30L2764,30L2764,31L2765,31L2765,31L2766,31L2766,31L2767,31L2767,32L2768,32L2768,33L2769,33L2769,34L2770,34L2770,34L2771,34L2771,34L2772,34L2772,34L2775,34L2775,34L2776,34L2776,34L2781,34L2781,34L2783,34L2783,35L2786,35L2786,35L2794,35L2794,35L2795,35L2795,35L2797,35L2797,36L2803,36L2803,36L2804,36L2804,36L2805,36L2805,37L2807,37L2807,39L2821,39L2821,40L2829,40L2829,41L2836,41" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.81ppd5g1</title>
					</path>
				</g>
				<g style="--index: 25;">
					<path d="M0,0L106,0L106,1L192,1L192,2L197,2L197,3L867,3L867,4L925,4L925,5L979,5L979,6L988,6L988,6L1037,6L1037,7L1062,7L1062,8L1064,8L1064,9L1068,9L1068,10L1069,10L1069,11L1070,11L1070,11L1071,11L1071,12L1072,12L1072,12L1077,12L1077,12L1079,12L1079,12L1084,12L1084,12L1085,12L1085,12L1094,12L1094,12L1097,12L1097,12L1151,12L1151,13L1165,13L1165,13L1213,13L1213,14L1300,14L1300,14L1301,14L1301,14L1426,14L1426,14L1514,14L1514,15L1526,15L1526,15L1529,15L1529,15L1542,15L1542,16L1552,16L1552,17L1555,17L1555,18L1580,18L1580,19L1606,19L1606,19L1608,19L1608,19L1611,19L1611,19L1613,19L1613,19L1614,19L1614,19L1616,19L1616,19L1626,19L1626,20L1642,20L1642,20L1657,20L1657,20L1661,20L1661,21L1799,21L1799,22L1810,22L1810,22L1812,22L1812,23L1861,23L1861,23L1873,23L1873,24L1924,24L1924,25L2065,25L2065,26L2132,26L2132,27L2134,27L2134,27L2426,27L2426,28L2664,28L2664,29L2836,29" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.21g8ownl</title>
					</path>
				</g>
				<g style="--index: 26;">
					<path d="M0,0L107,0L107,1L115,1L115,2L195,2L195,3L196,3L196,3L871,3L871,4L879,4L879,5L977,5L977,5L1062,5L1062,7L1065,7L1065,8L1066,8L1066,9L1068,9L1068,10L1073,10L1073,10L1087,10L1087,11L1092,11L1092,11L1093,11L1093,11L1168,11L1168,11L1270,11L1270,12L1541,12L1541,13L1633,13L1633,14L1634,14L1634,14L1644,14L1644,14L1716,14L1716,15L1811,15L1811,16L1812,16L1812,17L1856,17L1856,18L1907,18L1907,18L1916,18L1916,18L1927,18L1927,19L2228,19L2228,20L2319,20L2319,21L2320,21L2320,22L2329,22L2329,23L2367,23L2367,24L2378,24L2378,25L2416,25L2416,25L2424,25L2424,26L2434,26L2434,27L2470,27L2470,27L2478,27L2478,28L2554,28L2554,29L2555,29L2555,30L2581,30L2581,31L2585,31L2585,32L2587,32L2587,33L2588,33L2588,34L2590,34L2590,35L2596,35L2596,36L2603,36L2603,37L2607,37L2607,38L2622,38L2622,39L2631,39L2631,40L2637,40L2637,41L2640,41L2640,42L2642,42L2642,43L2648,43L2648,43L2655,43L2655,44L2656,44L2656,45L2660,45L2660,45L2662,45L2662,46L2681,46L2681,47L2686,47L2686,48L2689,48L2689,49L2699,49L2699,50L2727,50L2727,51L2739,51L2739,51L2741,51L2741,51L2742,51L2742,51L2748,51L2748,52L2749,52L2749,52L2750,52L2750,53L2751,53L2751,54L2754,54L2754,55L2755,55L2755,56L2756,56L2756,57L2761,57L2761,58L2764,58L2764,59L2767,59L2767,61L2768,61L2768,62L2769,62L2769,63L2770,63L2770,64L2772,64L2772,64L2783,64L2783,65L2786,65L2786,66L2788,66L2788,67L2790,67L2790,67L2791,67L2791,68L2792,68L2792,69L2793,69L2793,70L2797,70L2797,70L2799,70L2799,71L2802,71L2802,72L2804,72L2804,73L2805,73L2805,74L2821,74L2821,75L2828,75L2828,76L2833,76L2833,77L2834,77L2834,77L2836,77" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.814y7w01</title>
					</path>
				</g>
				<g style="--index: 27;">
					<path d="M0,0L107,0L107,1L114,1L114,2L266,2L266,2L867,2L867,3L975,3L975,4L1029,4L1029,4L1062,4L1062,5L1090,5L1090,6L1096,6L1096,6L1105,6L1105,6L1106,6L1106,6L1113,6L1113,7L1213,7L1213,8L1811,8L1811,9L1812,9L1812,10L1891,10L1891,11L1962,11L1962,13L2091,13L2091,13L2229,13L2229,14L2327,14L2327,15L2416,15L2416,16L2470,16L2470,17L2478,17L2478,18L2648,18L2648,19L2649,19L2649,19L2650,19L2650,19L2653,19L2653,19L2657,19L2657,19L2661,19L2661,19L2665,19L2665,20L2701,20L2701,20L2722,20L2722,21L2742,21L2742,21L2743,21L2743,22L2748,22L2748,22L2757,22L2757,22L2758,22L2758,22L2759,22L2759,23L2776,23L2776,24L2777,24L2777,24L2804,24L2804,24L2811,24L2811,24L2821,24L2821,25L2836,25" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.xqkjmnnl</title>
					</path>
				</g>
				<g style="--index: 28;">
					<path d="M0,0L108,0L108,1L197,1L197,2L277,2L277,2L883,2L883,3L1062,3L1062,4L1113,4L1113,5L1128,5L1128,5L1129,5L1129,6L1155,6L1155,6L1326,6L1326,7L1409,7L1409,8L1562,8L1562,9L1635,9L1635,10L1636,10L1636,11L1637,11L1637,11L1660,11L1660,11L1678,11L1678,11L1861,11L1861,11L1880,11L1880,12L1883,12L1883,13L1977,13L1977,14L1988,14L1988,15L1994,15L1994,15L1998,15L1998,16L2001,16L2001,16L2007,16L2007,16L2028,16L2028,17L2098,17L2098,18L2189,18L2189,18L2470,18L2470,19L2534,19L2534,20L2546,20L2546,21L2555,21L2555,21L2563,21L2563,21L2566,21L2566,21L2569,21L2569,21L2577,21L2577,22L2595,22L2595,23L2600,23L2600,23L2634,23L2634,24L2655,24L2655,24L2705,24L2705,25L2709,25L2709,26L2721,26L2721,27L2736,27L2736,27L2738,27L2738,27L2739,27L2739,28L2742,28L2742,28L2744,28L2744,29L2768,29L2768,30L2770,30L2770,30L2775,30L2775,30L2778,30L2778,30L2779,30L2779,30L2781,30L2781,30L2791,30L2791,31L2802,31L2802,32L2805,32L2805,32L2816,32L2816,33L2817,33L2817,33L2821,33L2821,34L2836,34" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.4lxpe62q</title>
					</path>
				</g>
				<g style="--index: 29;">
					<path d="M0,0L108,0L108,1L197,1L197,2L269,2L269,2L274,2L274,2L403,2L403,2L889,2L889,3L1042,3L1042,4L1061,4L1061,5L1062,5L1062,5L1099,5L1099,5L1100,5L1100,5L1101,5L1101,5L1113,5L1113,6L1169,6L1169,6L1608,6L1608,7L1832,7L1832,8L2001,8L2001,8L2426,8L2426,9L2470,9L2470,10L2543,10L2543,11L2548,11L2548,12L2556,12L2556,13L2562,13L2562,13L2566,13L2566,14L2628,14L2628,14L2631,14L2631,14L2632,14L2632,15L2652,15L2652,15L2653,15L2653,16L2654,16L2654,16L2660,16L2660,16L2694,16L2694,16L2742,16L2742,16L2743,16L2743,17L2778,17L2778,18L2779,18L2779,18L2780,18L2780,18L2785,18L2785,18L2795,18L2795,18L2821,18L2821,19L2836,19" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.p12dx07q</title>
					</path>
				</g>
				<g style="--index: 30;">
					<path d="M0,0L200,0L200,1L267,1L267,1L889,1L889,2L977,2L977,3L1042,3L1042,4L1068,4L1068,5L1097,5L1097,6L1105,6L1105,7L1109,7L1109,7L1111,7L1111,7L1119,7L1119,7L1126,7L1126,7L1170,7L1170,8L1654,8L1654,9L1657,9L1657,10L2023,10L2023,10L2192,10L2192,11L2260,11L2260,12L2328,12L2328,13L2426,13L2426,14L2443,14L2443,15L2470,15L2470,16L2630,16L2630,17L2641,17L2641,18L2648,18L2648,18L2649,18L2649,18L2650,18L2650,18L2661,18L2661,19L2666,19L2666,19L2675,19L2675,19L2676,19L2676,19L2736,19L2736,19L2745,19L2745,19L2763,19L2763,19L2795,19L2795,19L2804,19L2804,19L2813,19L2813,20L2820,20L2820,21L2836,21" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.5lmkgmjq</title>
					</path>
				</g>
				<g style="--index: 31;">
					<path d="M0,0L249,0L249,2L252,2L252,2L262,2L262,3L264,3L264,3L1113,3L1113,4L1130,4L1130,5L1229,5L1229,6L1244,6L1244,7L1266,7L1266,8L1299,8L1299,8L1319,8L1319,9L1369,9L1369,10L1661,10L1661,10L1698,10L1698,11L1705,11L1705,11L1717,11L1717,11L1972,11L1972,12L1974,12L1974,12L1976,12L1976,13L1977,13L1977,13L2016,13L2016,14L2068,14L2068,15L2127,15L2127,16L2180,16L2180,16L2199,16L2199,17L2200,17L2200,18L2203,18L2203,18L2230,18L2230,18L2299,18L2299,19L2323,19L2323,20L2342,20L2342,20L2390,20L2390,20L2535,20L2535,21L2610,21L2610,22L2615,22L2615,23L2625,23L2625,24L2632,24L2632,25L2751,25L2751,25L2765,25L2765,26L2771,26L2771,27L2779,27L2779,27L2791,27L2791,27L2836,27" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.4qypgj4q</title>
					</path>
				</g>
				<g style="--index: 32;">
					<path d="M0,0L279,0L279,1L280,1L280,1L388,1L388,2L478,2L478,3L541,3L541,4L570,4L570,4L572,4L572,4L1068,4L1068,4L1328,4L1328,5L1330,5L1330,6L2636,6L2636,7L2639,7L2639,7L2650,7L2650,7L2685,7L2685,7L2714,7L2714,8L2804,8L2804,8L2816,8L2816,8L2832,8L2832,8L2836,8" tabindex="0">
						<title>xd17x94d-9l71pv4l.81wrgm5l</title>
					</path>
				</g>
				<g style="--index: 33;">
					<path d="M0,0L430,0L430,1L431,1L431,1L1068,1L1068,2L1104,2L1104,3L1120,3L1120,4L1130,4L1130,5L1204,5L1204,6L1945,6L1945,7L1994,7L1994,7L2086,7L2086,8L2131,8L2131,9L2177,9L2177,10L2238,10L2238,10L2275,10L2275,10L2285,10L2285,11L2475,11L2475,12L2582,12L2582,13L2624,13L2624,14L2630,14L2630,15L2697,15L2697,16L2767,16L2767,17L2799,17L2799,18L2803,18L2803,19L2814,19L2814,20L2836,20" tabindex="0">
						<title>l_r9gn1qpd-xd144xwd</title>
					</path>
				</g>
				<g style="--index: 34;">
					<path d="M0,0L432,0L432,1L1009,1L1009,2L1068,2L1068,3L1108,3L1108,4L1109,4L1109,5L1130,5L1130,6L2383,6L2383,7L2689,7L2689,8L2764,8L2764,9L2774,9L2774,10L2792,10L2792,10L2802,10L2802,11L2818,11L2818,12L2836,12" tabindex="0">
						<title>l_o9xo3rp9-9kv66g32-onv7r45n.9qj08g7l</title>
					</path>
				</g>
				<g style="--index: 35;">
					<path d="M0,0L588,0L588,1L864,1L864,2L885,2L885,2L1062,2L1062,3L1066,3L1066,4L1075,4L1075,5L1080,5L1080,5L1102,5L1102,5L1169,5L1169,6L1529,6L1529,7L1641,7L1641,8L1650,8L1650,8L1651,8L1651,8L1939,8L1939,9L2350,9L2350,10L2470,10L2470,11L2588,11L2588,12L2599,12L2599,13L2626,13L2626,14L2669,14L2669,15L2738,15L2738,16L2743,16L2743,17L2744,17L2744,17L2754,17L2754,19L2756,19L2756,19L2759,19L2759,19L2763,19L2763,19L2765,19L2765,19L2766,19L2766,19L2770,19L2770,19L2791,19L2791,19L2821,19L2821,19L2836,19" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.21dzoj3l</title>
					</path>
				</g>
				<g style="--index: 36;">
					<path d="M0,0L588,0L588,1L868,1L868,2L939,2L939,3L945,3L945,3L985,3L985,3L1001,3L1001,3L1059,3L1059,4L1060,4L1060,4L1061,4L1061,4L1080,4L1080,4L1160,4L1160,5L1169,5L1169,5L1622,5L1622,6L1623,6L1623,6L1629,6L1629,7L1643,7L1643,7L1650,7L1650,7L1654,7L1654,7L1656,7L1656,8L1954,8L1954,9L1967,9L1967,9L2127,9L2127,10L2438,10L2438,11L2465,11L2465,12L2470,12L2470,13L2505,13L2505,14L2596,14L2596,15L2640,15L2640,16L2665,16L2665,16L2675,16L2675,16L2686,16L2686,17L2743,17L2743,18L2755,18L2755,19L2766,19L2766,19L2767,19L2767,20L2768,20L2768,20L2774,20L2774,20L2779,20L2779,20L2787,20L2787,20L2790,20L2790,20L2791,20L2791,21L2798,21L2798,21L2821,21L2821,22L2836,22" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.jqzpyr4l</title>
					</path>
				</g>
				<g style="--index: 37;">
					<path d="M0,0L588,0L588,1L885,1L885,2L973,2L973,2L1062,2L1062,3L1108,3L1108,4L1124,4L1124,4L1127,4L1127,4L1155,4L1155,5L1196,5L1196,5L1529,5L1529,6L1944,6L1944,7L2448,7L2448,8L2470,8L2470,9L2599,9L2599,10L2628,10L2628,11L2641,11L2641,12L2643,12L2643,12L2644,12L2644,12L2648,12L2648,12L2649,12L2649,12L2664,12L2664,13L2743,13L2743,14L2744,14L2744,14L2745,14L2745,14L2756,14L2756,15L2757,15L2757,16L2763,16L2763,16L2766,16L2766,16L2818,16L2818,16L2836,16" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.klrp6ejq</title>
					</path>
				</g>
				<g style="--index: 38;">
					<path d="M0,0L592,0L592,1L889,1L889,2L1042,2L1042,3L1061,3L1061,4L1075,4L1075,4L1085,4L1085,4L1107,4L1107,5L1160,5L1160,5L1178,5L1178,6L1180,6L1180,6L1622,6L1622,6L2221,6L2221,7L2335,7L2335,8L2470,8L2470,9L2618,9L2618,10L2628,10L2628,11L2629,11L2629,11L2654,11L2654,12L2660,12L2660,12L2743,12L2743,12L2744,12L2744,13L2767,13L2767,13L2795,13L2795,13L2821,13L2821,14L2826,14L2826,15L2836,15" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.21g8owxl</title>
					</path>
				</g>
				<g style="--index: 39;">
					<path d="M0,0L756,0L756,1L853,1L853,1L857,1L857,2L891,2L891,2L902,2L902,2L904,2L904,3L907,3L907,3L908,3L908,3L911,3L911,3L920,3L920,3L977,3L977,4L978,4L978,4L980,4L980,4L1011,4L1011,4L1038,4L1038,4L1039,4L1039,5L1042,5L1042,5L1066,5L1066,5L1067,5L1067,5L1072,5L1072,5L1074,5L1074,5L1080,5L1080,6L1084,6L1084,7L1092,7L1092,8L1098,8L1098,9L1101,9L1101,10L1105,10L1105,11L1110,11L1110,11L1115,11L1115,12L1117,12L1117,12L1118,12L1118,13L1123,13L1123,13L1127,13L1127,14L1155,14L1155,14L1156,14L1156,14L1157,14L1157,14L1161,14L1161,15L1171,15L1171,15L1190,15L1190,15L1194,15L1194,15L1197,15L1197,15L1207,15L1207,15L1238,15L1238,16L1272,16L1272,17L1273,17L1273,17L1274,17L1274,18L1284,18L1284,18L1286,18L1286,18L1290,18L1290,18L1291,18L1291,18L1305,18L1305,18L1381,18L1381,19L1462,19L1462,21L1464,21L1464,21L1491,21L1491,22L1494,22L1494,23L1556,23L1556,24L1593,24L1593,25L1625,25L1625,26L1649,26L1649,27L1652,27L1652,27L1661,27L1661,28L1668,28L1668,29L1678,29L1678,30L1687,30L1687,30L1701,30L1701,31L1705,31L1705,31L1707,31L1707,32L1709,32L1709,33L1716,33L1716,33L1730,33L1730,33L1751,33L1751,33L1757,33L1757,33L1770,33L1770,33L1780,33L1780,33L1936,33L1936,33L2772,33L2772,34L2814,34L2814,35L2816,35L2816,35L2819,35L2819,36L2820,36L2820,37L2827,37L2827,37L2836,37" tabindex="0">
						<title>xd17x94d-9l71pv4l.zqo20y2l</title>
					</path>
				</g>
				<g style="--index: 40;">
					<path d="M0,0L772,0L772,1L869,1L869,2L1051,2L1051,3L1064,3L1064,4L1096,4L1096,4L1111,4L1111,5L1200,5L1200,6L1269,6L1269,7L1656,7L1656,8L1693,8L1693,9L1827,9L1827,10L1875,10L1875,11L1883,11L1883,12L1884,12L1884,12L1891,12L1891,13L1905,13L1905,13L1921,13L1921,14L1922,14L1922,14L1994,14L1994,14L2171,14L2171,15L2190,15L2190,15L2328,15L2328,16L2435,16L2435,17L2470,17L2470,18L2577,18L2577,20L2618,20L2618,21L2646,21L2646,22L2655,22L2655,23L2741,23L2741,24L2743,24L2743,25L2747,25L2747,25L2752,25L2752,26L2753,26L2753,26L2754,26L2754,27L2758,27L2758,28L2763,28L2763,28L2766,28L2766,30L2767,30L2767,30L2773,30L2773,31L2774,31L2774,31L2775,31L2775,32L2777,32L2777,32L2779,32L2779,32L2786,32L2786,32L2787,32L2787,32L2788,32L2788,33L2789,33L2789,33L2790,33L2790,33L2792,33L2792,33L2806,33L2806,34L2814,34L2814,34L2816,34L2816,34L2820,34L2820,34L2821,34L2821,35L2836,35" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.jqzpyrgl</title>
					</path>
				</g>
				<g style="--index: 41;">
					<path d="M0,0L860,0L860,2L1118,2L1118,3L1142,3L1142,4L1143,4L1143,6L1194,6L1194,7L1221,7L1221,8L1225,8L1225,9L1303,9L1303,10L1304,10L1304,10L1324,10L1324,11L1354,11L1354,12L1413,12L1413,13L1550,13L1550,14L1587,14L1587,15L1603,15L1603,16L1606,16L1606,16L1607,16L1607,16L1624,16L1624,16L1653,16L1653,17L1708,17L1708,18L1723,18L1723,18L1773,18L1773,18L1811,18L1811,19L1921,19L1921,20L2037,20L2037,21L2045,21L2045,22L2789,22L2789,23L2812,23L2812,24L2836,24" tabindex="0">
						<title>9kv6l5e2-ql6rezjl.jq6d86v1</title>
					</path>
				</g>
				<g style="--index: 42;">
					<path d="M0,0L869,0L869,1L1047,1L1047,3L1061,3L1061,4L1062,4L1062,5L1066,5L1066,6L1102,6L1102,7L1119,7L1119,7L1159,7L1159,7L1169,7L1169,8L1528,8L1528,8L1646,8L1646,9L1928,9L1928,10L1945,10L1945,10L1976,10L1976,11L2325,11L2325,12L2331,12L2331,13L2417,13L2417,14L2429,14L2429,15L2470,15L2470,16L2554,16L2554,17L2569,17L2569,18L2599,18L2599,19L2627,19L2627,20L2655,20L2655,20L2685,20L2685,21L2686,21L2686,22L2743,22L2743,24L2744,24L2744,26L2766,26L2766,26L2767,26L2767,26L2816,26L2816,27L2817,27L2817,28L2821,28L2821,29L2836,29" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.5q86rxr1</title>
					</path>
				</g>
				<g style="--index: 43;">
					<path d="M0,0L883,0L883,1L936,1L936,2L980,2L980,2L1062,2L1062,4L1075,4L1075,4L1104,4L1104,4L1105,4L1105,4L1147,4L1147,5L1169,5L1169,5L1491,5L1491,6L1922,6L1922,7L2394,7L2394,7L2470,7L2470,8L2596,8L2596,9L2608,9L2608,10L2618,10L2618,11L2632,11L2632,12L2640,12L2640,12L2644,12L2644,13L2647,13L2647,14L2648,14L2648,15L2663,15L2663,15L2667,15L2667,15L2743,15L2743,16L2744,16L2744,16L2756,16L2756,16L2765,16L2765,16L2766,16L2766,17L2770,17L2770,17L2791,17L2791,18L2817,18L2817,18L2821,18L2821,19L2836,19" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.klrp6e0q</title>
					</path>
				</g>
				<g style="--index: 44;">
					<path d="M0,0L884,0L884,1L1050,1L1050,2L1094,2L1094,3L2629,3L2629,4L2633,4L2633,5L2763,5L2763,6L2776,6L2776,7L2836,7" tabindex="0">
						<title>l_rdqo542w-9kv66g32-onv7r45n.9qj08g7l</title>
					</path>
				</g>
				<g style="--index: 45;">
					<path d="M0,0L885,0L885,1L979,1L979,2L1037,2L1037,3L1050,3L1050,3L1056,3L1056,3L1061,3L1061,4L1062,4L1062,4L1063,4L1063,4L1074,4L1074,4L1091,4L1091,4L1117,4L1117,4L1147,4L1147,5L1622,5L1622,5L1811,5L1811,6L1928,6L1928,7L1945,7L1945,7L1963,7L1963,7L2127,7L2127,8L2325,8L2325,9L2418,9L2418,10L2470,10L2470,11L2599,11L2599,12L2651,12L2651,13L2667,13L2667,14L2743,14L2743,14L2744,14L2744,15L2759,15L2759,15L2760,15L2760,16L2764,16L2764,16L2765,16L2765,16L2766,16L2766,17L2770,17L2770,17L2791,17L2791,18L2821,18L2821,19L2836,19" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.gq7jzvnq</title>
					</path>
				</g>
				<g style="--index: 46;">
					<path d="M0,0L906,0L906,1L1105,1L1105,2L1130,2L1130,3L1170,3L1170,4L1205,4L1205,5L2375,5L2375,6L2631,6L2631,7L2733,7L2733,8L2736,8L2736,8L2773,8L2773,8L2836,8" tabindex="0">
						<title>l_o9xo3rp9-xd144xwd</title>
					</path>
				</g>
				<g style="--index: 47;">
					<path d="M0,0L909,0L909,1L975,1L975,2L1050,2L1050,3L1068,3L1068,4L1108,4L1108,5L1114,5L1114,6L1130,6L1130,7L1385,7L1385,7L1721,7L1721,8L1741,8L1741,8L1993,8L1993,8L2177,8L2177,9L2275,9L2275,9L2384,9L2384,10L2435,10L2435,11L2444,11L2444,12L2582,12L2582,13L2657,13L2657,14L2658,14L2658,15L2732,15L2732,16L2733,16L2733,17L2763,17L2763,18L2764,18L2764,19L2787,19L2787,20L2799,20L2799,21L2810,21L2810,21L2826,21L2826,22L2829,22L2829,23L2836,23" tabindex="0">
						<title>l_r9gn1qpd-9kv66g32-onv7r45n.9qj08g7l</title>
					</path>
				</g>
				<g style="--index: 48;">
					<path d="M0,0L936,0L936,1L1046,1L1046,2L1113,2L1113,3L1130,3L1130,4L1135,4L1135,5L1288,5L1288,5L1300,5L1300,6L1717,6L1717,7L1973,7L1973,7L2133,7L2133,8L2181,8L2181,8L2203,8L2203,8L2272,8L2272,9L2320,9L2320,10L2321,10L2321,12L2325,12L2325,12L2342,12L2342,12L2390,12L2390,13L2699,13L2699,14L2769,14L2769,15L2771,15L2771,16L2792,16L2792,16L2836,16" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.810zkwwq</title>
					</path>
				</g>
				<g style="--index: 49;">
					<path d="M0,0L1008,0L1008,1L1099,1L1099,2L1110,2L1110,3L1629,3L1629,4L2544,4L2544,5L2549,5L2549,6L2631,6L2631,7L2734,7L2734,8L2746,8L2746,8L2828,8L2828,9L2836,9" tabindex="0">
						<title>l_495zlx39-9kv66g32-onv7r45n.9qj08g7l</title>
					</path>
				</g>
				<g style="--index: 50;">
					<path d="M0,0L1012,0L1012,1L1135,1L1135,3L1136,3L1136,3L1265,3L1265,3L1276,3L1276,4L1319,4L1319,5L1661,5L1661,5L1705,5L1705,5L2136,5L2136,6L2178,6L2178,7L2181,7L2181,7L2203,7L2203,7L2205,7L2205,7L2274,7L2274,8L2295,8L2295,9L2300,9L2300,9L2301,9L2301,10L2325,10L2325,11L2349,11L2349,12L2390,12L2390,13L2428,13L2428,14L2615,14L2615,15L2769,15L2769,16L2792,16L2792,16L2824,16L2824,17L2836,17" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.9qj0kxel</title>
					</path>
				</g>
				<g style="--index: 51;">
					<path d="M0,0L1023,0L1023,1L1110,1L1110,2L1111,2L1111,3L1112,3L1112,3L1163,3L1163,3L1187,3L1187,4L1631,4L1631,5L1664,5L1664,6L2595,6L2595,7L2615,7L2615,7L2818,7L2818,8L2820,8L2820,9L2836,9" tabindex="0">
						<title>l_495zlx39-xd144xzd-onvyv77n.lmozgg01</title>
					</path>
				</g>
				<g style="--index: 52;">
					<path d="M0,0L1024,0L1024,1L1099,1L1099,2L1100,2L1100,2L1139,2L1139,2L1145,2L1145,2L1700,2L1700,3L1705,3L1705,4L2420,4L2420,5L2584,5L2584,6L2621,6L2621,6L2622,6L2622,6L2632,6L2632,7L2812,7L2812,7L2819,7L2819,8L2836,8" tabindex="0">
						<title>l_o9xo3rp9-xd144xzd-ql69e17l.10v3wwpl</title>
					</path>
				</g>
				<g style="--index: 53;">
					<path d="M0,0L1037,0L1037,1L1088,1L1088,2L1098,2L1098,3L1122,3L1122,4L1133,4L1133,5L1144,5L1144,5L1595,5L1595,6L1742,6L1742,7L1749,7L1749,7L2674,7L2674,8L2784,8L2784,9L2805,9L2805,10L2817,10L2817,11L2836,11" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.81wpx5oq</title>
					</path>
				</g>
				<g style="--index: 54;">
					<path d="M0,0L1038,0L1038,1L1061,1L1061,2L1124,2L1124,3L1157,3L1157,3L1321,3L1321,4L1354,4L1354,5L1938,5L1938,6L2175,6L2175,7L2509,7L2509,8L2619,8L2619,9L2740,9L2740,10L2773,10L2773,11L2784,11L2784,11L2790,11L2790,12L2806,12L2806,12L2818,12L2818,13L2836,13" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.zqop6rp1</title>
					</path>
				</g>
				<g style="--index: 55;">
					<path d="M0,0L1039,0L1039,1L1061,1L1061,2L1069,2L1069,3L1080,3L1080,4L1104,4L1104,5L1147,5L1147,5L1157,5L1157,5L1355,5L1355,5L1778,5L1778,6L1828,6L1828,6L1939,6L1939,6L2175,6L2175,7L2741,7L2741,8L2763,8L2763,9L2774,9L2774,10L2775,10L2775,10L2784,10L2784,10L2796,10L2796,10L2807,10L2807,10L2817,10L2817,11L2836,11" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.0138n5dq</title>
					</path>
				</g>
				<g style="--index: 56;">
					<path d="M0,0L1040,0L1040,2L1048,2L1048,3L1060,3L1060,4L1062,4L1062,4L1070,4L1070,4L1075,4L1075,4L1081,4L1081,5L1091,5L1091,5L1100,5L1100,5L1125,5L1125,5L1126,5L1126,5L1158,5L1158,6L1159,6L1159,6L1819,6L1819,7L1977,7L1977,8L2124,8L2124,9L2159,9L2159,10L2181,10L2181,10L2324,10L2324,11L2599,11L2599,12L2608,12L2608,12L2745,12L2745,13L2775,13L2775,15L2784,15L2784,15L2787,15L2787,16L2797,16L2797,17L2799,17L2799,17L2817,17L2817,17L2836,17" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.rqvp5e7q</title>
					</path>
				</g>
				<g style="--index: 57;">
					<path d="M0,0L1041,0L1041,1L1082,1L1082,2L1122,2L1122,3L1379,3L1379,4L1744,4L1744,5L2027,5L2027,5L2413,5L2413,7L2743,7L2743,9L2754,9L2754,11L2755,11L2755,11L2785,11L2785,11L2836,11" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.5ler7m5q</title>
					</path>
				</g>
				<g style="--index: 58;">
					<path d="M0,0L1042,0L1042,1L1048,1L1048,2L1072,2L1072,3L1104,3L1104,3L1160,3L1160,4L1161,4L1161,4L1182,4L1182,4L2744,4L2744,5L2778,5L2778,6L2779,6L2779,7L2785,7L2785,7L2799,7L2799,8L2836,8" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.0q5njgmq</title>
					</path>
				</g>
				<g style="--index: 59;">
					<path d="M0,0L1043,0L1043,1L1048,1L1048,2L1054,2L1054,2L1084,2L1084,3L1326,3L1326,3L1590,3L1590,4L1601,4L1601,4L1602,4L1602,4L1733,4L1733,4L1843,4L1843,4L1845,4L1845,4L2778,4L2778,5L2779,5L2779,6L2785,6L2785,6L2800,6L2800,6L2836,6" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.4lxp7e2q</title>
					</path>
				</g>
				<g style="--index: 60;">
					<path d="M0,0L1044,0L1044,1L1111,1L1111,2L1112,2L1112,2L1114,2L1114,3L1629,3L1629,4L2812,4L2812,5L2819,5L2819,6L2833,6L2833,6L2836,6" tabindex="0">
						<title>l_rdqo542w-xd144xzd-ylpk6768.qvv3eeyq</title>
					</path>
				</g>
				<g style="--index: 61;">
					<path d="M0,0L1044,0L1044,1L1061,1L1061,2L1074,2L1074,3L1104,3L1104,4L1118,4L1118,4L1162,4L1162,5L1361,5L1361,5L1646,5L1646,5L1723,5L1723,6L1811,6L1811,7L1910,7L1910,8L1937,8L1937,9L2328,9L2328,10L2394,10L2394,10L2625,10L2625,11L2647,11L2647,12L2746,12L2746,13L2747,13L2747,14L2768,14L2768,15L2779,15L2779,16L2780,16L2780,17L2785,17L2785,17L2790,17L2790,18L2791,18L2791,18L2802,18L2802,18L2817,18L2817,19L2821,19L2821,19L2836,19" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.814y0701</title>
					</path>
				</g>
				<g style="--index: 62;">
					<path d="M0,0L1045,0L1045,1L1142,1L1142,2L1537,2L1537,3L1638,3L1638,4L2548,4L2548,5L2594,5L2594,6L2630,6L2630,7L2791,7L2791,8L2836,8" tabindex="0">
						<title>l_495zlx39-xd144xzd-onvyv77n.1w43556q</title>
					</path>
				</g>
				<g style="--index: 63;">
					<path d="M0,0L1045,0L1045,1L1048,1L1048,2L1055,2L1055,3L1061,3L1061,4L1075,4L1075,4L1106,4L1106,5L1131,5L1131,5L1164,5L1164,6L1197,6L1197,6L1200,6L1200,6L1252,6L1252,6L2813,6L2813,7L2836,7" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.jq606z3q</title>
					</path>
				</g>
				<g style="--index: 64;">
					<path d="M0,0L1046,0L1046,1L1113,1L1113,2L1135,2L1135,4L1265,4L1265,5L1284,5L1284,5L1300,5L1300,6L1705,6L1705,6L1978,6L1978,7L2068,7L2068,8L2127,8L2127,9L2181,9L2181,9L2203,9L2203,9L2294,9L2294,10L2299,10L2299,10L2324,10L2324,11L2325,11L2325,12L2326,12L2326,12L2342,12L2342,12L2390,12L2390,13L2533,13L2533,14L2662,14L2662,15L2769,15L2769,16L2792,16L2792,16L2836,16" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.mlnwjz0l</title>
					</path>
				</g>
				<g style="--index: 65;">
					<path d="M0,0L1046,0L1046,1L1049,1L1049,2L1136,2L1136,3L1163,3L1163,4L1273,4L1273,5L1622,5L1622,5L1625,5L1625,6L1769,6L1769,7L1770,7L1770,7L1771,7L1771,7L2177,7L2177,8L2327,8L2327,8L2786,8L2786,8L2791,8L2791,9L2792,9L2792,10L2836,10" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.z19mo80l</title>
					</path>
				</g>
				<g style="--index: 66;">
					<path d="M0,0L1052,0L1052,1L1100,1L1100,2L1208,2L1208,2L1287,2L1287,2L2836,2" tabindex="0">
						<title>7dg65oxk-r8r1zm0n.gq7dw7vq</title>
					</path>
				</g>
				<g style="--index: 67;">
					<path d="M0,0L1055,0L1055,1L1099,1L1099,2L1284,2L1284,3L1292,3L1292,3L2836,3" tabindex="0">
						<title>xd1v018d-68k7x44l.zqo74r41</title>
					</path>
				</g>
				<g style="--index: 68;">
					<path d="M0,0L1062,0L1062,1L1211,1L1211,2L2151,2L2151,3L2627,3L2627,4L2633,4L2633,5L2727,5L2727,5L2836,5" tabindex="0">
						<title>l_rdqo542w-xd144xwd</title>
					</path>
				</g>
				<g style="--index: 69;">
					<path d="M0,0L1062,0L1062,1L1135,1L1135,2L1707,2L1707,3L2620,3L2620,4L2633,4L2633,5L2767,5L2767,5L2836,5" tabindex="0">
						<title>l_rdqo542w-xd144xzd-ylpk6768.le2dmv6l</title>
					</path>
				</g>
				<g style="--index: 70;">
					<path d="M0,0L1063,0L1063,1L1208,1L1208,2L2548,2L2548,3L2631,3L2631,4L2725,4L2725,4L2735,4L2735,4L2785,4L2785,5L2791,5L2791,6L2836,6" tabindex="0">
						<title>l_495zlx39-xd144xwd</title>
					</path>
				</g>
				<g style="--index: 71;">
					<path d="M0,0L1069,0L1069,1L1448,1L1448,2L2685,2L2685,3L2692,3L2692,3L2698,3L2698,3L2836,3" tabindex="0">
						<title>7dg65oxk-r8r1zm0n.xqk0drn1</title>
					</path>
				</g>
				<g style="--index: 72;">
					<path d="M0,0L1124,0L1124,1L1129,1L1129,2L1132,2L1132,5L1133,5L1133,5L1187,5L1187,5L1200,5L1200,5L1605,5L1605,6L2760,6L2760,7L2784,7L2784,8L2793,8L2793,9L2836,9" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.5lmk0gjq</title>
					</path>
				</g>
				<g style="--index: 73;">
					<path d="M0,0L1137,0L1137,1L1977,1L1977,2L2383,2L2383,3L2444,3L2444,4L2544,4L2544,5L2570,5L2570,5L2614,5L2614,5L2632,5L2632,6L2773,6L2773,7L2827,7L2827,8L2836,8" tabindex="0">
						<title>l_o9xo3rp9-9kv66g32-onv7r45n.810zdxoq</title>
					</path>
				</g>
				<g style="--index: 74;">
					<path d="M0,0L1137,0L1137,1L1145,1L1145,2L1158,2L1158,3L1907,3L1907,4L1994,4L1994,4L2001,4L2001,4L2175,4L2175,5L2239,5L2239,5L2271,5L2271,5L2275,5L2275,5L2630,5L2630,6L2819,6L2819,7L2827,7L2827,8L2829,8L2829,9L2834,9L2834,9L2836,9" tabindex="0">
						<title>l_r9gn1qpd-9kv66g32-onv7r45n.810zdxoq</title>
					</path>
				</g>
				<g style="--index: 75;">
					<path d="M0,0L1137,0L1137,1L1609,1L1609,2L2548,2L2548,3L2601,3L2601,4L2606,4L2606,4L2608,4L2608,4L2784,4L2784,5L2791,5L2791,6L2836,6" tabindex="0">
						<title>l_495zlx39-9kv66g32-onv7r45n.810zdxoq</title>
					</path>
				</g>
				<g style="--index: 76;">
					<path d="M0,0L1137,0L1137,1L2618,1L2618,2L2621,2L2621,2L2622,2L2622,2L2623,2L2623,2L2627,2L2627,2L2634,2L2634,3L2836,3" tabindex="0">
						<title>l_rdqo542w-9kv66g32-onv7r45n.810zdxoq</title>
					</path>
				</g>
				<g style="--index: 77;">
					<path d="M0,0L1191,0L1191,2L1192,2L1192,5L1222,5L1222,6L1324,6L1324,7L1777,7L1777,9L1910,9L1910,10L2065,10L2065,11L2789,11L2789,12L2796,12L2796,12L2812,12L2812,13L2836,13" tabindex="0">
						<title>rkl9qwrk-6njkg4el.z19p2o8l</title>
					</path>
				</g>
				<g style="--index: 78;">
					<path d="M0,0L1225,0L1225,1L1230,1L1230,2L1314,2L1314,3L1398,3L1398,4L1449,4L1449,5L1646,5L1646,6L1910,6L1910,7L1993,7L1993,8L2105,8L2105,9L2177,9L2177,10L2209,10L2209,11L2235,11L2235,11L2236,11L2236,11L2283,11L2283,12L2442,12L2442,13L2604,13L2604,14L2605,14L2605,14L2607,14L2607,15L2610,15L2610,15L2627,15L2627,16L2628,16L2628,16L2630,16L2630,16L2645,16L2645,16L2648,16L2648,17L2733,17L2733,17L2734,17L2734,17L2736,17L2736,18L2777,18L2777,19L2793,19L2793,20L2822,20L2822,21L2836,21" tabindex="0">
						<title>l_r9gn1qpd-xd144xzd-38dz6v1n.5leogx5q</title>
					</path>
				</g>
				<g style="--index: 79;">
					<path d="M0,0L1227,0L1227,1L1935,1L1935,2L2028,2L2028,3L2031,3L2031,4L2060,4L2060,4L2385,4L2385,5L2453,5L2453,6L2454,6L2454,6L2458,6L2458,6L2459,6L2459,6L2460,6L2460,6L2461,6L2461,6L2553,6L2553,7L2633,7L2633,8L2635,8L2635,9L2648,9L2648,10L2664,10L2664,11L2766,11L2766,12L2793,12L2793,12L2796,12L2796,13L2799,13L2799,14L2814,14L2814,14L2815,14L2815,15L2823,15L2823,16L2836,16" tabindex="0">
						<title>l_o9xo3rp9-xd144xzd-ql69e17l.qj7jxxoq</title>
					</path>
				</g>
				<g style="--index: 80;">
					<path d="M0,0L1237,0L1237,2L1637,2L1637,3L2082,3L2082,5L2136,5L2136,6L2144,6L2144,6L2549,6L2549,7L2572,7L2572,8L2584,8L2584,8L2628,8L2628,8L2631,8L2631,9L2738,9L2738,9L2742,9L2742,10L2757,10L2757,11L2790,11L2790,12L2836,12" tabindex="0">
						<title>l_495zlx39-xd144xzd-onvyv77n.qoxdrr4q</title>
					</path>
				</g>
				<g style="--index: 81;">
					<path d="M0,0L1247,0L1247,1L2091,1L2091,2L2163,2L2163,3L2596,3L2596,4L2628,4L2628,5L2629,5L2629,6L2745,6L2745,6L2767,6L2767,6L2768,6L2768,7L2791,7L2791,8L2792,8L2792,8L2803,8L2803,9L2805,9L2805,9L2836,9" tabindex="0">
						<title>l_rdqo542w-xd144xzd-ylpk6768.q5vkg7vl</title>
					</path>
				</g>
				<g style="--index: 82;">
					<path d="M0,0L1450,0L1450,1L1743,1L1743,2L2586,2L2586,3L2593,3L2593,4L2595,4L2595,4L2746,4L2746,5L2799,5L2799,6L2812,6L2812,7L2836,7" tabindex="0">
						<title>9kv6l5e2-ql6rezjl.9qj3pk7l</title>
					</path>
				</g>
				<g style="--index: 83;">
					<path d="M0,0L1611,0L1611,1L1686,1L1686,1L1711,1L1711,2L2836,2" tabindex="0">
						<title>mke75px2-yn2mz5d8.4lx6574l</title>
					</path>
				</g>
				<g style="--index: 84;">
					<path dtabindex="0">
						<title>xd17x94d-9l71pv4l.21gpn081</title>
					</path>
				</g>
				<g style="--index: 85;">
					<path d="M0,0L1822,0L1822,1L1851,1L1851,2L1854,2L1854,2L1902,2L1902,2L1943,2L1943,2L2043,2L2043,3L2181,3L2181,4L2248,4L2248,4L2293,4L2293,4L2375,4L2375,4L2654,4L2654,5L2725,5L2725,5L2728,5L2728,5L2829,5L2829,5L2836,5" tabindex="0">
						<title>7dg65oxk-r8r1zm0n.5q89kv31</title>
					</path>
				</g>
				<g style="--index: 86;">
					<path d="M0,0L1846,0L1846,1L1852,1L1852,1L1946,1L1946,1L2067,1L2067,2L2072,2L2072,3L2234,3L2234,3L2451,3L2451,4L2720,4L2720,5L2801,5L2801,6L2830,6L2830,6L2836,6" tabindex="0">
						<title>xd1v018d-68k7x44l.mlno8vjq</title>
					</path>
				</g>
				<g style="--index: 87;">
					<path d="M0,0L1873,0L1873,1L2563,1L2563,2L2568,2L2568,3L2589,3L2589,4L2812,4L2812,5L2832,5L2832,5L2836,5" tabindex="0">
						<title>rkl9qwrk-6njkg4el.81p5ym8l</title>
					</path>
				</g>
				<g style="--index: 88;">
					<path d="M0,0L1993,0L1993,2L1995,2L1995,3L2021,3L2021,4L2076,4L2076,5L2180,5L2180,5L2182,5L2182,5L2183,5L2183,5L2311,5L2311,6L2382,6L2382,7L2384,7L2384,8L2417,8L2417,8L2445,8L2445,9L2446,9L2446,9L2448,9L2448,9L2449,9L2449,9L2456,9L2456,10L2470,10L2470,11L2473,11L2473,11L2474,11L2474,11L2477,11L2477,11L2499,11L2499,12L2543,12L2543,13L2545,13L2545,13L2562,13L2562,14L2565,14L2565,15L2576,15L2576,16L2577,16L2577,17L2593,17L2593,18L2630,18L2630,18L2634,18L2634,19L2663,19L2663,20L2669,20L2669,20L2671,20L2671,21L2686,21L2686,22L2722,22L2722,23L2724,23L2724,23L2744,23L2744,24L2746,24L2746,24L2768,24L2768,25L2769,25L2769,25L2773,25L2773,26L2776,26L2776,27L2777,27L2777,28L2783,28L2783,29L2792,29L2792,29L2793,29L2793,30L2809,30L2809,31L2819,31L2819,32L2820,32L2820,33L2822,33L2822,34L2827,34L2827,35L2836,35" tabindex="0">
						<title>l_gdr5onk9-rkl3znrk-rn1g06dn.qj77o50q</title>
					</path>
				</g>
				<g style="--index: 89;">
					<path d="M0,0L2018,0L2018,1L2029,1L2029,2L2030,2L2030,3L2031,3L2031,4L2036,4L2036,5L2038,5L2038,6L2039,6L2039,6L2043,6L2043,7L2044,7L2044,7L2045,7L2045,8L2053,8L2053,9L2055,9L2055,10L2056,10L2056,11L2061,11L2061,12L2063,12L2063,12L2069,12L2069,13L2105,13L2105,14L2110,14L2110,15L2111,15L2111,15L2112,15L2112,16L2166,16L2166,17L2176,17L2176,17L2179,17L2179,17L2191,17L2191,17L2194,17L2194,17L2225,17L2225,17L2228,17L2228,17L2296,17L2296,18L2327,18L2327,19L2375,19L2375,20L2379,20L2379,21L2383,21L2383,21L2410,21L2410,22L2413,22L2413,23L2420,23L2420,24L2447,24L2447,24L2454,24L2454,24L2473,24L2473,24L2474,24L2474,25L2475,25L2475,25L2495,25L2495,25L2509,25L2509,26L2514,26L2514,27L2521,27L2521,28L2545,28L2545,29L2563,29L2563,30L2585,30L2585,31L2586,31L2586,32L2588,32L2588,32L2592,32L2592,33L2617,33L2617,34L2620,34L2620,35L2623,35L2623,36L2626,36L2626,37L2631,37L2631,38L2638,38L2638,39L2645,39L2645,39L2646,39L2646,40L2659,40L2659,40L2667,40L2667,40L2686,40L2686,41L2695,41L2695,42L2713,42L2713,43L2721,43L2721,44L2732,44L2732,46L2733,46L2733,46L2735,46L2735,46L2736,46L2736,47L2742,47L2742,48L2750,48L2750,49L2751,49L2751,49L2753,49L2753,49L2757,49L2757,50L2762,50L2762,50L2764,50L2764,51L2766,51L2766,52L2767,52L2767,52L2771,52L2771,54L2772,54L2772,54L2773,54L2773,56L2775,56L2775,57L2776,57L2776,57L2777,57L2777,57L2778,57L2778,57L2780,57L2780,58L2784,58L2784,58L2785,58L2785,58L2787,58L2787,58L2788,58L2788,59L2791,59L2791,59L2794,59L2794,59L2795,59L2795,60L2798,60L2798,61L2801,61L2801,61L2805,61L2805,62L2808,62L2808,63L2836,63" tabindex="0">
						<title>9kv6l5e2-ql6rezjl.1dk62o3l</title>
					</path>
				</g>
				<g style="--index: 90;">
					<path d="M0,0L2032,0L2032,1L2035,1L2035,2L2039,2L2039,3L2042,3L2042,4L2044,4L2044,4L2045,4L2045,5L2061,5L2061,6L2063,6L2063,6L2064,6L2064,6L2069,6L2069,7L2076,7L2076,7L2129,7L2129,8L2146,8L2146,9L2255,9L2255,10L2422,10L2422,11L2448,11L2448,12L2495,12L2495,13L2589,13L2589,14L2596,14L2596,15L2613,15L2613,16L2621,16L2621,16L2634,16L2634,17L2649,17L2649,18L2651,18L2651,20L2655,20L2655,20L2657,20L2657,20L2687,20L2687,21L2699,21L2699,22L2721,22L2721,23L2742,23L2742,24L2746,24L2746,25L2751,25L2751,26L2753,26L2753,27L2763,27L2763,27L2764,27L2764,27L2765,27L2765,28L2767,28L2767,28L2771,28L2771,29L2772,29L2772,29L2773,29L2773,29L2774,29L2774,29L2776,29L2776,30L2778,30L2778,30L2788,30L2788,31L2795,31L2795,32L2799,32L2799,33L2826,33L2826,34L2836,34" tabindex="0">
						<title>rkl9qwrk-6njkg4el.lr3x560l</title>
					</path>
				</g>
				<g style="--index: 91;">
					<path d="M0,0L2069,0L2069,1L2075,1L2075,2L2076,2L2076,4L2094,4L2094,4L2134,4L2134,5L2432,5L2432,6L2608,6L2608,7L2619,7L2619,8L2621,8L2621,8L2640,8L2640,8L2660,8L2660,9L2661,9L2661,9L2672,9L2672,9L2723,9L2723,10L2735,10L2735,11L2741,11L2741,11L2805,11L2805,12L2809,12L2809,12L2830,12L2830,12L2831,12L2831,12L2832,12L2832,12L2836,12" tabindex="0">
						<title>l_xd0mnpjw-rkl3znrk-wley4prn.192xe54q</title>
					</path>
				</g>
				<g style="--index: 92;">
					<path d="M0,0L2115,0L2115,1L2178,1L2178,1L2179,1L2179,1L2182,1L2182,1L2358,1L2358,1L2568,1L2568,2L2627,2L2627,2L2628,2L2628,3L2671,3L2671,3L2714,3L2714,4L2719,4L2719,4L2771,4L2771,5L2793,5L2793,6L2836,6" tabindex="0">
						<title>l_gdr5onk9-rkl3znrk-rn1g06dn.lmooe9y1</title>
					</path>
				</g>
				<g style="--index: 93;">
					<path d="M0,0L2115,0L2115,1L2440,1L2440,3L2661,3L2661,4L2770,4L2770,5L2781,5L2781,7L2782,7L2782,7L2784,7L2784,8L2803,8L2803,9L2817,9L2817,10L2836,10L2836,12L2836,12" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.1dkg795l</title>
					</path>
				</g>
				<g style="--index: 94;">
					<path d="M0,0L2115,0L2115,1L2179,1L2179,1L2182,1L2182,1L2627,1L2627,2L2671,2L2671,3L2672,3L2672,3L2836,3" tabindex="0">
						<title>l_gdr5onk9-rkl3znrk-rn1g06dn.q655wjnl</title>
					</path>
				</g>
				<g style="--index: 95;">
					<path d="M0,0L2321,0L2321,1L2323,1L2323,1L2333,1L2333,2L2462,2L2462,2L2493,2L2493,3L2507,3L2507,4L2823,4L2823,5L2836,5" tabindex="0">
						<title>zdn9m472-2lge53e8.qzn0z9gq</title>
					</path>
				</g>
				<g style="--index: 96;">
					<path d="M0,0L2322,0L2322,1L2323,1L2323,3L2324,3L2324,4L2367,4L2367,5L2368,5L2368,5L2379,5L2379,6L2390,6L2390,7L2450,7L2450,8L2452,8L2452,9L2470,9L2470,10L2478,10L2478,11L2554,11L2554,12L2617,12L2617,13L2624,13L2624,14L2637,14L2637,15L2653,15L2653,17L2657,17L2657,17L2658,17L2658,18L2660,18L2660,18L2676,18L2676,18L2692,18L2692,19L2700,19L2700,19L2727,19L2727,20L2732,20L2732,21L2742,21L2742,22L2768,22L2768,23L2769,23L2769,24L2771,24L2771,25L2775,25L2775,25L2776,25L2776,25L2778,25L2778,25L2805,25L2805,27L2819,27L2819,28L2828,28L2828,29L2836,29" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.qj7zdm3q</title>
					</path>
				</g>
				<g style="--index: 97;">
					<path d="M0,0L2423,0L2423,1L2425,1L2425,1L2836,1" tabindex="0">
						<title>zdn9m472-2lge53e8.q5v59jml</title>
					</path>
				</g>
				<g style="--index: 98;">
					<path d="M0,0L2448,0L2448,1L2449,1L2449,2L2813,2L2813,4L2836,4" tabindex="0">
						<title>l_gdr5onk9-rkl3znrk-rn1g06dn.1gn42k6l</title>
					</path>
				</g>
				<g style="--index: 99;">
					<path d="M0,0L2619,0L2619,1L2630,1L2630,2L2637,2L2637,3L2654,3L2654,4L2805,4L2805,5L2836,5" tabindex="0">
						<title>9kv6lno2-wl3v33o8.qyz82z61</title>
					</path>
				</g>
				<g style="--index: 100;">
					<path d="M0,0L2624,0L2624,1L2729,1L2729,3L2730,3L2730,4L2732,4L2732,5L2733,5L2733,6L2735,6L2735,7L2742,7L2742,8L2750,8L2750,8L2751,8L2751,8L2772,8L2772,8L2775,8L2775,9L2784,9L2784,9L2788,9L2788,10L2836,10" tabindex="0">
						<title>zd39lqyd-yn26k2jl.qoxwn4pq</title>
					</path>
				</g>
				<g style="--index: 101;">
					<path d="M0,0L2649,0L2649,1L2651,1L2651,1L2836,1" tabindex="0">
						<title>q2560qwk-wleg9w4n.q8k5zerq</title>
					</path>
				</g>
				<g style="--index: 102;">
					<path d="M0,0L2664,0L2664,1L2670,1L2670,2L2812,2L2812,3L2817,3L2817,3L2818,3L2818,4L2820,4L2820,4L2836,4" tabindex="0">
						<title>l_o9xo3rp9-xd144xzd-ql69e17l.1927drjq</title>
					</path>
				</g>
				<g style="--index: 103;">
					<path d="M0,0L2707,0L2707,1L2836,1" tabindex="0">
						<title>mke75px2-yn2mz5d8.p120vy4l</title>
					</path>
				</g>
				<g style="--index: 104;">
					<path d="M0,0L2733,0L2733,1L2772,1L2772,2L2812,2L2812,3L2836,3" tabindex="0">
						<title>zd39lqyd-yn26k2jl.1w4w8yoq</title>
					</path>
				</g>
				<g style="--index: 105;">
					<path d="M0,0L2747,0L2747,3L2748,3L2748,4L2749,4L2749,5L2752,5L2752,6L2753,6L2753,7L2756,7L2756,8L2758,8L2758,8L2768,8L2768,9L2793,9L2793,10L2798,10L2798,11L2802,11L2802,11L2814,11L2814,11L2818,11L2818,12L2820,12L2820,13L2836,13" tabindex="0">
						<title>l_dy1gjkkd-rkl3znrk-wle345e8.q65k767l</title>
					</path>
				</g>
				<g style="--index: 106;">
					<path d="M0,0L2747,0L2747,1L2748,1L2748,2L2751,2L2751,3L2753,3L2753,4L2754,4L2754,5L2755,5L2755,6L2757,6L2757,8L2758,8L2758,8L2794,8L2794,8L2797,8L2797,9L2836,9" tabindex="0">
						<title>l_drpxgo6w-rkl3znrk-68kwx3z8.1w4w8x5q</title>
					</path>
				</g>
				<g style="--index: 107;">
					<path d="M0,0L2749,0L2749,1L2769,1L2769,1L2770,1L2770,2L2771,2L2771,2L2795,2L2795,3L2822,3L2822,3L2836,3" tabindex="0">
						<title>l_dy1gjkkd-rkl3znrk-wle345e8.lmojn041</title>
					</path>
				</g>
				<g style="--index: 108;">
					<path d="M0,0L2757,0L2757,1L2772,1L2772,2L2827,2L2827,2L2836,2" tabindex="0">
						<title>l_drpxgo6w-rkl3znrk-68kwx3z8.qoxwn62q</title>
					</path>
				</g>
			</g>
		</svg>
	</foreignObject>
</svg>
