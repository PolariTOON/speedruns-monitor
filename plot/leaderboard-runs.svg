<svg xmlns="http://www.w3.org/2000/svg" lang="en">
	<title>Run count by leaderboard</title>
	<metadata>
		<meta xmlns="http://www.w3.org/1999/xhtml" charset="utf-8" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="viewport" content="width=device-width" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="color-scheme" content="dark light" />
	</metadata>
	<style>
		*,
		::before,
		::after {
			box-sizing: border-box;
		}
		:root {
			background: var(--canvas-background);
			color: var(--canvas-foreground);
			fill: var(--canvas-background);
			stroke: var(--canvas-foreground);
			stroke-linejoin: round;
			stroke-linecap: round;
		}
		foreignObject {
			pointer-events: none;
		}
		foreignObject::before,
		foreignObject::after {
			content: "";
			position: absolute;
			z-index: 1;
			left: 20px;
			bottom: 20px;
			pointer-events: auto;
		}
		foreignObject::before {
			width: calc(100% - 40px);
			height: calc(20px + var(--date-size) * 1px);
		}
		foreignObject::after {
			width: calc(20px + var(--value-size) * 1px);
			height: calc(100% - 40px);
		}
		foreignObject &gt; div {
			position: absolute;
			z-index: 4;
			right: 0;
			top: 0;
			margin: 20px;
			border: 1px solid var(--canvas-foreground);
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			transition: opacity 1s;
			pointer-events: auto;
		}
		foreignObject:is(:hover, :focus-within) &gt; div:not(:hover, :focus-within) {
			opacity: 0;
			pointer-events: none;
		}
		foreignObject &gt; div &gt; p {
			margin: 0;
		}
		label {
			display: table;
			border-collapse: separate;
			border-spacing: 10px;
			direction: rtl;
		}
		progress,
		input[type="checkbox"] {
			display: table-cell;
			width: 16px;
			height: 16px;
			margin: 2px;
			accent-color: var(--canvas-foreground);
			vertical-align: top;
			direction: ltr;
		}
		progress + span,
		input[type="checkbox"] + span {
			display: table-cell;
			vertical-align: top;
			direction: ltr;
		}
		input[type="checkbox"]:not(:disabled):is(:hover, :focus-within) + span {
			text-decoration: underline;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			position: absolute;
			z-index: 2;
			margin: 0;
			padding: 10px;
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			font-weight: bold;
			pointer-events: auto;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg + svg {
			border-top: 1px solid #0000;
			border-bottom: 1px solid var(--canvas-foreground);
		}
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px dashed #0000;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg {
			width: calc(20px + var(--date-size) * 1px);
			height: 42px;
			bottom: 20px;
		}
		foreignObject &gt; svg:first-of-type {
			left: calc(40px + var(--value-size) * 1px);
			transform: rotate(90deg) translate(-100%, 0);
			transform-origin: left bottom;
		}
		foreignObject &gt; svg:first-of-type + svg {
			right: 20px;
			transform: rotate(90deg) translate(0, 100%);
			transform-origin: right bottom;
		}
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			width: calc(20px + var(--value-size) * 1px);
			height: 42px;
			left: 20px;
		}
		foreignObject &gt; svg:first-of-type + svg + svg {
			bottom: calc(40px + var(--date-size) * 1px);
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			top: 20px;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text {
			fill: var(--canvas-foreground);
			stroke: none;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text {
			cursor: vertical-text;
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg + svg {
			position: relative;
			z-index: 3;
			width: calc(100% - 60px - var(--value-size) * 1px);
			height: calc(100% - 60px - var(--date-size) * 1px);
			margin: 20px 20px calc(40px + var(--date-size) * 1px) calc(40px + var(--value-size) * 1px);
			border-left: 1px solid var(--canvas-foreground);
			border-right: 1px dashed var(--canvas-foreground);
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px solid var(--canvas-foreground);
			background: var(--canvas-background);
			pointer-events: auto;
		}
		g &gt; rect {
			vector-effect: non-scaling-stroke;
			fill: var(--highlighted);
			stroke: none;
		}
		g &gt; rect[tabindex] {
			fill: var(--tier, #0000);
			cursor: help;
		}
		g &gt; rect[tabindex][data-tier="diamond"] {
			--tier: var(--diamond);
		}
		g &gt; rect[tabindex][data-tier="gold"] {
			--tier: var(--gold);
		}
		g &gt; rect[tabindex][data-tier="silver"] {
			--tier: var(--silver);
		}
		g &gt; rect[tabindex][data-tier="bronze"] {
			--tier: var(--bronze);
		}
		g &gt; path[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: hsl(calc(var(--index) / var(--count) * 360), 50%, 50%);
			cursor: help;
		}
		g:is(:hover, :focus-within) &gt; path[tabindex] {
			stroke: var(--canvas-foreground);
		}
		g &gt; path[tabindex]:is(:hover, :focus-within) {
			outline: 0;
		}
		g &gt; path[tabindex]:first-of-type {
			stroke-width: 2;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) {
			stroke-width: 4;
		}
		g &gt; path[tabindex]:first-of-type:not(:last-of-type) {
			stroke-dasharray: 4 8;
		}
		g &gt; path[tabindex]:first-of-type + rect {
			fill: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect {
			fill: var(--highlighted);
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] {
			stroke-width: 8;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) {
			stroke-width: 16;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line + line {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			stroke-width: 2;
			stroke-dasharray: 4 8;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line + line {
			stroke: var(--faded);
		}
		@media (prefers-color-scheme: dark) {
			:root {
				--canvas-background: #000;
				--canvas-foreground: #ccc;
				--diamond: #0363;
				--gold: #6303;
				--silver: #3633;
				--bronze: #6363;
				--highlighted: #6663;
				--faded: #9993;
			}
		}
		@media (prefers-color-scheme: light) {
			:root {
				--canvas-background: #fff;
				--canvas-foreground: #333;
				--diamond: #9cf3;
				--gold: #fc93;
				--silver: #9c93;
				--bronze: #c9c3;
				--highlighted: #9993;
				--faded: #6663;
			}
		}
	</style>
	<script>
		"use strict";
		{
			const script = document.currentScript;
			const documentUrl = location.href;
			const scope = new URL("../", documentUrl).pathname;
			const playersKey = `${scope}#players`;
			const leaderboardsKey = `${scope}#leaderboards`;
			const sessionKey = `${scope}#session`;
			const lockKey = `${scope}#lock`;
			async function importDataScript(dataScriptUrl, signal) {
				signal.throwIfAborted();
				if (documentUrl.protocol !== "file:") {
					const response = await fetch(dataScriptUrl, {
						signal,
					});
					if (!response.ok) {
						throw new Error(response.statusText);
					}
					const data = await response.json();
					return data;
				}
				return await new Promise((resolve, reject) =&gt; {
					const name = `callback${Math.random() * 2 ** 53}`;
					let called = false;
					let data = null;
					function callback(value) {
						if (!called) {
							called = true;
							data = value;
						}
					}
					window[name] = callback;
					const dataScript = document.createElementNS("http://www.w3.org/2000/svg", "script");
					dataScript.href = `${dataScriptUrl}&amp;callback=${name}`;
					function handleAbort(event) {
						delete window[name];
						dataScript.removeEventListener("error", handleError);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const reason = signal.reason;
						reject(reason);
					}
					function handleError(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const error = event.error;
						reject(error);
					}
					function handleLoad(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("error", handleError);
						dataScript.remove();
						resolve(data);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					dataScript.addEventListener("error", handleError, {
						once: true,
					});
					dataScript.addEventListener("load", handleLoad, {
						once: true,
					});
					script.after(dataScript);
				});
			}
			async function waitForTimeout(delay, signal) {
				signal.throwIfAborted();
				return await new Promise((resolve, reject) =&gt; {
					let timeout = null;
					function handleAbort() {
						clearTimeout(timeout);
						const reason = signal.reason;
						reject(reason);
					}
					function handleTimeout() {
						signal.removeEventListener("abort", handleAbort);
						resolve(delay);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					timeout = setTimeout(handleTimeout, delay);
				});
			}
			window.addEventListener("pageshow", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully restored page from cache`);
				} else {
					console.log(`Unsuccessfully restored page from cache`);
				}
			});
			window.addEventListener("pagehide", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully saved page to cache`);
				} else {
					console.log(`Unsuccessfully saved page to cache`);
				}
			});
			window.addEventListener("pageshow", async (event) =&gt; {
				const rootTitleElement = document.querySelector("title");
				const rootTitleContent = rootTitleElement.textContent;
				const pathTitleElements = Array.from(document.querySelectorAll("g &gt; path[tabindex]:first-of-type &gt; title"));
				const pathTitleContents = pathTitleElements.map((pathTitleElement) =&gt; {
					const pathTitleContent = pathTitleElement.textContent;
					return pathTitleContent;
				});
				const foreignObject = document.querySelector("foreignObject");
				const div = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
				div.dir = "ltr";
				const p = document.createElementNS("http://www.w3.org/1999/xhtml", "p");
				const label = document.createElementNS("http://www.w3.org/1999/xhtml", "label");
				const progress = document.createElementNS("http://www.w3.org/1999/xhtml", "progress");
				label.append(progress);
				const span = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
				span.textContent = "Loading names";
				label.append(span);
				p.append(label);
				div.append(p);
				foreignObject.prepend(div);
				let lock = false;
				let session = null;
				const broadcastChannel = new BroadcastChannel(sessionKey);
				const abortController = new AbortController();
				const signal = abortController.signal;
				const abort = abortController.abort.bind(abortController);
				const {promise, resolve} = Promise.withResolvers();
				broadcastChannel.addEventListener("message", (event) =&gt; {
					const data = event.data;
					const type = data.type;
					switch (type) {
						case "request": {
							if (lock &amp;&amp; signal.aborted) {
								broadcastChannel.postMessage({
									type: "response",
									session,
								});
							}
							break;
						}
						case "response": {
							if (!signal.aborted) {
								session = data.session;
								if (session != null) {
									const {players, leaderboards} = session;
									try {
										const cachedPlayers = JSON.stringify(players);
										const cachedLeaderboards = JSON.stringify(leaderboards);
										sessionStorage.setItem(playersKey, cachedPlayers);
										sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
									} catch {}
									console.log(`Successfully loaded names from peer`);
									abort();
									resolve();
								} else {
									console.log(`Unsuccessfully loaded names from peer`);
									abort();
									resolve();
								}
							}
							break;
						}
					}
				});
				try {
					const cachedPlayers = sessionStorage.getItem(playersKey);
					const cachedLeaderboards = sessionStorage.getItem(leaderboardsKey);
					if (cachedPlayers == null || cachedLeaderboards == null) {
						throw new Error();
					}
					const players = JSON.parse(cachedPlayers);
					const leaderboards = JSON.parse(cachedLeaderboards);
					session = {players, leaderboards};
				} catch {}
				if (session != null) {
					broadcastChannel.postMessage({
						type: "response",
						session,
					});
					console.log(`Successfully loaded names from local`);
					abort();
					resolve();
				} else {
					broadcastChannel.postMessage({
						type: "request",
					});
					console.log(`Unsuccessfully loaded names from local`);
				}
				(async () =&gt; {
					for (;;) {
						await navigator.locks.request(lockKey, async () =&gt; {
							lock = true;
							console.log(`Acquired lock`);
							if (!signal.aborted) {
								try {
									const players = Object.create(null);
									const leaderboards = Object.create(null);
									const games = ["9d3rrxyd", "w6jl2ned"];
									for (const gameId of games) {
										const {data} = await importDataScript(`https://www.speedrun.com/api/v1/games/${gameId}?embed=categories,levels,variables`, signal);
										const versions = data.variables.data.find((variable) =&gt; {
											return variable.name === "Version";
										});
										const levels = Object.fromEntries(data.levels.data.map((level) =&gt; {
											return [level.id, level];
										}));
										const categories = Object.fromEntries(data.categories.data.map((category) =&gt; {
											return [category.id, category];
										}));
										const variables = Object.fromEntries(data.variables.data.map((variable) =&gt; {
											return [variable.id, variable];
										}));
										console.log(`Got game`);
										await waitForTimeout(800, signal);
										const slice = 200;
										for (let offset = 0;; offset += slice) {
											const {data, pagination} = await importDataScript(`https://www.speedrun.com/api/v1/runs?game=${gameId}&amp;orderby=date&amp;direction=asc&amp;embed=players&amp;offset=${offset}&amp;max=${slice}`, signal);
											const {size} = pagination;
											if (size === 0) {
												break;
											}
											for (const run of data) {
												const status = run.status.status;
												if (status == null || status === "new") {
													continue;
												}
												const player = run.players.data[0].rel === "user" ? run.players.data[0].id : "814p2558";
												const playerName = run.players.data[0].rel === "user" ? run.players.data[0].names.international : "anonymous";
												players[player] ??= playerName;
												const level = run.level;
												const category = run.category;
												const values = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return `-${variable}.${value}`;
												});
												const leaderboard = `${level != null ? `l_${level}-` : ""}${category}${values.join("")}`;
												const levelName = run.level != null ? levels[run.level]?.name ?? null : null;
												const categoryName = categories[run.category]?.name ?? null;
												const valueNames = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return variables[variable]?.values.values[value]?.label ?? null;
												}).filter((valueName) =&gt; {
													return valueName != null;
												});
												const leaderboardName = `${levelName != null ? `${levelName}: ` : ""}${categoryName ?? ""}${values.length !== 0 ? ` - ${valueNames.join(", ")}` : ""}`;
												leaderboards[leaderboard] ??= leaderboardName;
											}
											console.log(`Got runs ${offset}-${offset + size - 1}`);
											await waitForTimeout(800, signal);
										}
									}
									session = {players, leaderboards};
								} catch {}
								if (!signal.aborted) {
									if (session != null) {
										const {players, leaderboards} = session;
										try {
											const cachedPlayers = JSON.stringify(players);
											const cachedLeaderboards = JSON.stringify(leaderboards);
											sessionStorage.setItem(playersKey, cachedPlayers);
											sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
										} catch {}
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Successfully loaded names from remote`);
										abort();
										resolve();
									} else {
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Unsuccessfully loaded names from remote`);
										abort();
										resolve();
									}
								}
							}
							await new Promise((resolve) =&gt; {
								window.addEventListener("beforeunload", () =&gt; {
									resolve();
								}, {
									once: true,
								});
							});
						});
						lock = false;
						console.log(`Released lock`);
						await new Promise((resolve) =&gt; {
							window.addEventListener("pagehide", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
						await new Promise((resolve) =&gt;{
							window.addEventListener("pageshow", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
					}
				})();
				await promise;
				if (session == null) {
					const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
					input.type = "checkbox";
					input.autocomplete = "off";
					input.disabled = true;
					input.indeterminate = true;
					progress.replaceWith(input);
					span.textContent = "Unavailable names";
					return;
				}
				const {players, leaderboards} = session;
				const hasPlayerRoot = rootTitleContent.includes(" for player");
				const hasLeaderboardRoot = rootTitleContent.includes(" for leaderboard");
				const rootTitle = {
					element: rootTitleElement,
					contentWithIds: rootTitleContent,
					contentWithNames: hasPlayerRoot ? rootTitleContent.replace(/ for player ([0-9_a-z]+)/, ($0, $1) =&gt; {
						return ` for player ${players[$1] ?? $1}`;
					}) : hasLeaderboardRoot ? rootTitleContent.replace(/ for leaderboard ((?:l_[0-9_a-z]+-)?[0-9_a-z]+(-[0-9_a-z]+\.[0-9_a-z]+)*)/, ($0, $1) =&gt; {
						return ` for leaderboard ${leaderboards[$1] ?? $1}`;
					}) : rootTitleContent,
				};
				const hasPlayerPaths = rootTitleContent.includes(" by player");
				const hasLeaderboardPaths = rootTitleContent.includes(" by leaderboard");
				const pathTitles = pathTitleElements.map((pathTitleElement, k) =&gt; {
					const pathTitleContent = pathTitleContents[k];
					const pathTitle = {
						element: pathTitleElement,
						contentWithIds: pathTitleContent,
						contentWithNames: hasPlayerPaths ? players[pathTitleContent] ?? pathTitleContent : hasLeaderboardPaths ? leaderboards[pathTitleContent] ?? pathTitleContent : pathTitleContent,
					};
					return pathTitle;
				});
				const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
				input.type = "checkbox";
				input.autocomplete = "off";
				input.addEventListener("change", () =&gt; {
					input.disabled = true;
					if (input.checked) {
						rootTitle.element.textContent = rootTitle.contentWithNames;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithNames;
						}
					} else {
						rootTitle.element.textContent = rootTitle.contentWithIds;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithIds;
						}
					}
					input.disabled = false;
				});
				progress.replaceWith(input);
				span.textContent = "Reveal names";
			}, {
				once: true,
			});
		}
	</script>
	<script>
		"use strict";
		{
			document.addEventListener("DOMContentLoaded", (event) =&gt; {
				const minDateText = document.querySelector("foreignObject &gt; svg:first-of-type &gt; text");
				const maxDateText = document.querySelector("foreignObject &gt; svg:first-of-type + svg &gt; text");
				const startX = Math.round(Date.parse(minDateText.textContent) / 86400000);
				function xToDate(x) {
					const datetime = new Date((startX + x) * 86400000);
					const year = `${datetime.getUTCFullYear()}`.padStart(4, "0");
					const month = `${datetime.getUTCMonth() + 1}`.padStart(2, "0");
					const day = `${datetime.getUTCDate()}`.padStart(2, "0");
					const date = `${year}-${month}-${day}`;
					const size = date.length * 10;
					return {date, size};
				}
				function setMinDate(x) {
					const {date, size} = xToDate(Math.floor(x));
					minDateText.textLength.baseVal.value = size;
					minDateText.textContent = date;
				}
				function setMaxDate(x) {
					const {date, size} = xToDate(Math.ceil(x));
					maxDateText.textLength.baseVal.value = size;
					maxDateText.textContent = date;
				}
				const minValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg &gt; text");
				const maxValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text");
				const timed = minValueText.textContent.includes(":");
				function yToValue(y) {
					if (timed) {
						const minutes = `${(y - y % 6000) / 6000}`.padStart(2, "0");
						const seconds = `${(y - y % 100) / 100 % 60}`.padStart(2, "0");
						const centiseconds = `${y % 100}`.padStart(2, "0");
						const value = `${minutes}:${seconds}.${centiseconds}`;
						const size = value.length * 10;
						return {value, size};
					} else {
						const value = `${y}`;
						const size = value.length * 10;
						return {value, size};
					}
				}
				function setMinValue(y) {
					const {value, size} = yToValue(Math.floor(y));
					minValueText.textLength.baseVal.value = size;
					minValueText.textContent = value;
				}
				function setMaxValue(y) {
					const {value, size} = yToValue(Math.ceil(y));
					maxValueText.textLength.baseVal.value = size;
					maxValueText.textContent = value;
				}
				const svg = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg + svg");
				svg.tabIndex = -1;
				svg.style.setProperty("outline", "0");
				if (CSS.supports("overflow-clip-margin", "8px")) {
					svg.style.setProperty("overflow", "clip");
					svg.style.setProperty("overflow-clip-margin", "8px");
				}
				svg.style.setProperty("touch-action", "none");
				const {x: baseX, y: baseY, width: baseWidth, height: baseHeight} = svg.viewBox.baseVal;
				let pointerCount = 0;
				const pointers = Object.create(null);
				const xPointerIds = [];
				const yPointerIds = [];
				let x = null;
				let y = null;
				let width = null;
				let height = null;
				svg.addEventListener("pointerdown", (event) =&gt; {
					const {pointerId} = event;
					if (pointerId in pointers) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.setPointerCapture(pointerId);
					++pointerCount;
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId] = {
						offsetX,
						offsetY,
					};
					xPointerIds.splice(xPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetX &lt;= offsetX;
					}) + 1, 0, pointerId);
					yPointerIds.splice(yPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetY &lt;= offsetY;
					}) + 1, 0, pointerId);
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					width = Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth);
					height = Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight);
					x = Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX);
					y = Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY);
				});
				svg.addEventListener("pointerup", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.releasePointerCapture(pointerId);
					--pointerCount;
					delete pointers[pointerId];
					xPointerIds.splice(xPointerIds.lastIndexOf(pointerId), 1);
					yPointerIds.splice(yPointerIds.lastIndexOf(pointerId), 1);
					const minOffsetX = pointerCount !== 0 ? pointers[xPointerIds[0]].offsetX : null;
					const minOffsetY = pointerCount !== 0 ? pointers[yPointerIds[0]].offsetY : null;
					const maxClientWidth = pointerCount !== 0 ? pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX : null;
					const maxClientHeight = pointerCount !== 0 ? pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY : null;
					width = pointerCount !== 0 ? Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth) : null;
					height = pointerCount !== 0 ? Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight) : null;
					x = pointerCount !== 0 ? Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX) : null;
					y = pointerCount !== 0 ? Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY) : null;
				});
				svg.addEventListener("pointermove", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					event.preventDefault();
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId].offsetX = offsetX;
					pointers[pointerId].offsetY = offsetY;
					const oldXIndex = xPointerIds.lastIndexOf(pointerId);
					let newXIndex = oldXIndex;
					while (newXIndex &gt; 0 &amp;&amp; pointers[xPointerIds[newXIndex - 1]].offsetX &gt; offsetX) {
						--newXIndex;
					}
					xPointerIds.copyWithin(newXIndex + 1, newXIndex, oldXIndex);
					xPointerIds[newXIndex] = pointerId;
					while (newXIndex &lt; pointerCount - 1 &amp;&amp; pointers[xPointerIds[newXIndex + 1]].offsetX &lt; offsetX) {
						++newXIndex;
					}
					xPointerIds.copyWithin(oldXIndex, oldXIndex + 1, newXIndex + 1);
					xPointerIds[newXIndex] = pointerId;
					const oldYIndex = yPointerIds.lastIndexOf(pointerId);
					let newYIndex = oldYIndex;
					while (newYIndex &gt; 0 &amp;&amp; pointers[yPointerIds[newYIndex - 1]].offsetY &gt; offsetY) {
						--newYIndex;
					}
					yPointerIds.copyWithin(newYIndex + 1, newYIndex, oldYIndex);
					yPointerIds[newYIndex] = pointerId;
					while (newYIndex &lt; pointerCount - 1 &amp;&amp; pointers[yPointerIds[newYIndex + 1]].offsetY &lt; offsetY) {
						++newYIndex;
					}
					yPointerIds.copyWithin(oldYIndex, oldYIndex + 1, newYIndex + 1);
					yPointerIds[newYIndex] = pointerId;
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					animWidth = width === 0 ? animWidth : maxClientWidth === 0 ? baseWidth : Math.min(svg.clientWidth / maxClientWidth * width, baseWidth);
					animHeight = height === 0 ? animHeight : maxClientHeight === 0 ? baseHeight : Math.min(svg.clientHeight / maxClientHeight * height, baseHeight);
					animX = Math.max(Math.min(x - minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(y - minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
				const zoomIntensity = 1.25;
				svg.addEventListener("wheel", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					if (!ctrlKey) {
						const vectorX = (shiftKey ? event.deltaY : event.deltaX) / svg.clientWidth * animWidth;
						const vectorY = (shiftKey ? 0 : event.deltaY) / svg.clientHeight * animHeight;
						animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
						animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
						svg.viewBox.baseVal.x = animX;
						svg.viewBox.baseVal.y = animY;
						setMinDate(animX);
						setMaxDate(animX + animWidth);
						setMinValue(baseY * 2 + baseHeight - animHeight - animY);
						setMaxValue(baseY * 2 + baseHeight - animY);
						return;
					}
					const ratioX = zoomIntensity ** Math.sign(shiftKey ? event.deltaY : event.deltaX);
					const ratioY = zoomIntensity ** Math.sign(shiftKey ? 0 : event.deltaY);
					const positionX = Math.max(0, Math.min(event.offsetX / svg.clientWidth, 1)) * animWidth;
					const positionY = Math.max(0, Math.min(event.offsetY / svg.clientHeight, 1)) * animHeight;
					animWidth = Math.min(animWidth * ratioX, baseWidth);
					animHeight = Math.min(animHeight * ratioY, baseHeight);
					animX = Math.max(Math.min(animX + positionX * (1 - ratioX), baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(animY + positionY * (1 - ratioY), baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				}, {
					passive: false,
				});
				svg.addEventListener("keydown", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					switch (event.code) {
						case "Space": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "Equal":
						case "NumpadAdd":
						case "Minus":
						case "NumpadSubtract": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.code === "Minus" || event.code === "NumpadSubtract" ? zoomIntensity : 1 / zoomIntensity;
							if (!shiftKey) {
								animHeight = Math.min(animHeight * ratio, baseHeight);
								animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "Digit0":
						case "Numpad0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							if (!shiftKey) {
								animY = baseY;
								animHeight = baseHeight;
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animX = baseX;
							animWidth = baseWidth;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
					}
					switch (event.key) {
						case "ArrowRight": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = 50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowLeft": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = -50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowDown": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = 50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "End": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY + baseHeight - animHeight;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "ArrowUp": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = -50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "Home": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "PageDown":
						case "PageUp":
						case " ": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = event.key === "PageUp" || event.key === " " &amp;&amp; shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "+":
						case "-": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.key === "-" ? 1 / zoomIntensity : zoomIntensity;
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animHeight = Math.min(animHeight * ratio, baseHeight);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animX = baseX;
							animY = baseY;
							animWidth = baseWidth;
							animHeight = baseHeight;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
					}
				});
				svg.addEventListener("focusin", (event) =&gt; {
					if (!event.target.matches(":focus-visible")) {
						return;
					}
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					let {x, y, width, height} = event.target.getBBox();
					width = Math.round(width);
					height = Math.round(height);
					x = Math.round(x);
					y = baseY * 2 + baseHeight - height - Math.round(y);
					if (x + width &lt; animX) {
						animX = x;
						if (width &gt; animWidth) {
							animX += (width - animWidth) / 2;
						}
					} else if (x &gt; animX + animWidth) {
						animX = x + width - animWidth;
						if (width &gt; animWidth) {
							animX -= (width - animWidth) / 2;
						}
					}
					if (y + height &lt; animY) {
						animY = y;
						if (height &gt; animHeight) {
							animY += (height - animHeight) / 2;
						}
					} else if (y &gt; animY + animHeight) {
						animY = y + height - animHeight;
						if (height &gt; animHeight) {
							animY -= (height - animHeight) / 2;
						}
					}
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
			}, {
				once: true,
			});
		}
	</script>
	<foreignObject x="0" y="0" width="100%" height="100%" style="--date-size: 100; --value-size: 30;">
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2017-12-25</text>
		</svg>
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2025-02-28</text>
		</svg>
		<svg viewBox="0 0 30 20">
			<text x="15" y="10" dx="0" dy="2" textLength="10" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">0</text>
		</svg>
		<svg viewBox="0 0 30 20">
			<text x="15" y="10" dx="0" dy="2" textLength="30" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">293</text>
		</svg>
		<svg viewBox="0 0 2622 293" preserveAspectRatio="none" overflow="visible">
			<g transform="translate(0 293) scale(1 -1)" style="--count: 107;">
				<g>
					<rect x="0" y="0" width="2622" height="293"/>
				</g>
				<g style="--index: 0;">
					<path d="M0,0L0,0L0,1L6,1L6,2L9,2L9,3L10,3L10,4L11,4L11,6L13,6L13,7L14,7L14,9L2622,9" tabindex="0">
						<title>l_r9gn1qpd-xd144xzd-38dz6v1n.ln8kgdol</title>
					</path>
				</g>
				<g style="--index: 1;">
					<path d="M0,0L4,0L4,2L5,2L5,3L6,3L6,6L8,6L8,8L9,8L9,10L10,10L10,11L12,11L12,12L13,12L13,13L2622,13" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.q75zmmn1</title>
					</path>
				</g>
				<g style="--index: 2;">
					<path d="M0,0L6,0L6,2L7,2L7,3L12,3L12,6L13,6L13,7L14,7L14,8L2622,8" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.1gnozzxl</title>
					</path>
				</g>
				<g style="--index: 3;">
					<path d="M0,0L9,0L9,1L12,1L12,2L2622,2" tabindex="0">
						<title>l_o9xo3rp9-xd144xzd-38dz6v1n.ln8kgdol</title>
					</path>
				</g>
				<g style="--index: 4;">
					<path d="M0,0L14,0L14,2L15,2L15,4L19,4L19,5L28,5L28,6L85,6L85,7L118,7L118,8L609,8L609,9L884,9L884,10L979,10L979,11L1043,11L1043,12L1061,12L1061,14L1068,14L1068,15L1091,15L1091,16L1118,16L1118,17L1154,17L1154,18L1157,18L1157,20L1158,20L1158,22L1159,22L1159,23L1161,23L1161,24L1162,24L1162,25L1165,25L1165,26L1187,26L1187,28L1196,28L1196,29L1492,29L1492,30L1493,30L1493,31L1530,31L1530,32L1562,32L1562,33L1588,33L1588,34L1615,34L1615,35L1616,35L1616,36L1657,36L1657,37L1675,37L1675,38L1677,38L1677,39L1681,39L1681,40L1683,40L1683,41L1715,41L1715,42L1716,42L1716,43L1719,43L1719,44L1745,44L1745,46L1792,46L1792,47L1799,47L1799,48L1811,48L1811,49L1863,49L1863,50L1875,50L1875,51L1916,51L1916,52L1922,52L1922,53L1925,53L1925,54L1928,54L1928,55L1932,55L1932,56L1941,56L1941,57L1954,57L1954,58L1983,58L1983,59L1995,59L1995,60L2064,60L2064,61L2088,61L2088,62L2097,62L2097,63L2120,63L2120,64L2133,64L2133,65L2136,65L2136,66L2138,66L2138,67L2179,67L2179,68L2261,68L2261,69L2288,69L2288,70L2290,70L2290,71L2304,71L2304,72L2320,72L2320,73L2321,73L2321,74L2338,74L2338,75L2343,75L2343,76L2347,76L2347,77L2395,77L2395,78L2414,78L2414,79L2415,79L2415,80L2424,80L2424,81L2447,81L2447,82L2452,82L2452,83L2457,83L2457,84L2470,84L2470,85L2518,85L2518,86L2519,86L2519,87L2546,87L2546,88L2555,88L2555,89L2581,89L2581,90L2585,90L2585,92L2586,92L2586,93L2593,93L2593,94L2595,94L2595,95L2596,95L2596,96L2606,96L2606,97L2612,97L2612,99L2614,99L2614,100L2615,100L2615,101L2616,101L2616,102L2622,102" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.013856dq</title>
					</path>
				</g>
				<g style="--index: 5;">
					<path d="M0,0L15,0L15,1L19,1L19,2L45,2L45,3L87,3L87,4L117,4L117,5L609,5L609,6L854,6L854,7L856,7L856,8L860,8L860,9L861,9L861,10L874,10L874,11L884,11L884,12L965,12L965,13L979,13L979,14L991,14L991,15L1041,15L1041,16L1059,16L1059,17L1061,17L1061,18L1066,18L1066,19L1068,19L1068,20L1085,20L1085,21L1086,21L1086,22L1117,22L1117,23L1126,23L1126,24L1164,24L1164,25L1196,25L1196,26L1288,26L1288,27L1408,27L1408,28L1435,28L1435,29L1466,29L1466,30L1651,30L1651,31L1657,31L1657,32L1677,32L1677,33L1707,33L1707,34L1729,34L1729,35L1731,35L1731,36L1745,36L1745,37L1811,37L1811,38L1842,38L1842,39L1844,39L1844,40L1892,40L1892,41L1928,41L1928,42L1953,42L1953,43L1996,43L1996,44L2073,44L2073,45L2090,45L2090,46L2133,46L2133,47L2187,47L2187,48L2261,48L2261,49L2321,49L2321,50L2330,50L2330,51L2361,51L2361,52L2414,52L2414,53L2415,53L2415,54L2424,54L2424,55L2470,55L2470,56L2483,56L2483,57L2546,57L2546,58L2558,58L2558,59L2595,59L2595,60L2608,60L2608,61L2611,61L2611,63L2618,63L2618,64L2622,64" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.jq60ze3q</title>
					</path>
				</g>
				<g style="--index: 6;">
					<path d="M0,0L15,0L15,1L19,1L19,2L21,2L21,3L23,3L23,4L24,4L24,5L25,5L25,6L28,6L28,7L30,7L30,8L32,8L32,10L33,10L33,12L42,12L42,13L44,13L44,14L84,14L84,16L97,16L97,17L108,17L108,18L109,18L109,19L115,19L115,20L429,20L429,21L430,21L430,22L596,22L596,23L656,23L656,24L658,24L658,25L659,25L659,26L868,26L868,27L885,27L885,28L886,28L886,29L981,29L981,30L1048,30L1048,31L1061,31L1061,32L1070,32L1070,33L1087,33L1087,34L1111,34L1111,35L1120,35L1120,36L1121,36L1121,37L1122,37L1122,38L1126,38L1126,39L1128,39L1128,41L1129,41L1129,42L1155,42L1155,43L1158,43L1158,44L1163,44L1163,45L1200,45L1200,46L1214,46L1214,47L1217,47L1217,48L1302,48L1302,49L1383,49L1383,50L1414,50L1414,51L1440,51L1440,53L1443,53L1443,54L1444,54L1444,55L1469,55L1469,56L1499,56L1499,57L1500,57L1500,58L1528,58L1528,59L1533,59L1533,60L1552,60L1552,61L1553,61L1553,62L1568,62L1568,63L1588,63L1588,64L1593,64L1593,65L1595,65L1595,66L1597,66L1597,67L1615,67L1615,68L1617,68L1617,70L1629,70L1629,71L1656,71L1656,72L1676,72L1676,73L1681,73L1681,74L1698,74L1698,75L1719,75L1719,76L1721,76L1721,77L1725,77L1725,78L1787,78L1787,79L1793,79L1793,80L1822,80L1822,81L1857,81L1857,82L1880,82L1880,83L1902,83L1902,84L1907,84L1907,85L1910,85L1910,86L1912,86L1912,87L1923,87L1923,91L1952,91L1952,92L1961,92L1961,93L1963,93L1963,95L1965,95L1965,96L1966,96L1966,97L1980,97L1980,99L1986,99L1986,100L1994,100L1994,101L1996,101L1996,102L1998,102L1998,103L2005,103L2005,104L2019,104L2019,105L2024,105L2024,106L2032,106L2032,107L2036,107L2036,109L2049,109L2049,110L2052,110L2052,111L2058,111L2058,112L2064,112L2064,113L2069,113L2069,114L2085,114L2085,115L2099,115L2099,116L2112,116L2112,117L2113,117L2113,118L2116,118L2116,119L2122,119L2122,120L2175,120L2175,121L2179,121L2179,122L2230,122L2230,123L2231,123L2231,124L2233,124L2233,125L2234,125L2234,126L2235,126L2235,127L2249,127L2249,128L2254,128L2254,129L2276,129L2276,130L2282,130L2282,131L2288,131L2288,132L2299,132L2299,133L2321,133L2321,134L2336,134L2336,135L2338,135L2338,136L2341,136L2341,137L2351,137L2351,139L2353,139L2353,140L2368,140L2368,141L2381,141L2381,142L2387,142L2387,143L2388,143L2388,144L2391,144L2391,145L2393,145L2393,146L2415,146L2415,147L2417,147L2417,148L2419,148L2419,149L2431,149L2431,150L2432,150L2432,151L2433,151L2433,152L2441,152L2441,153L2448,153L2448,154L2449,154L2449,155L2458,155L2458,156L2470,156L2470,157L2474,157L2474,159L2484,159L2484,160L2511,160L2511,162L2526,162L2526,163L2534,163L2534,164L2535,164L2535,165L2547,165L2547,166L2585,166L2585,168L2593,168L2593,170L2597,170L2597,171L2603,171L2603,172L2618,172L2618,173L2621,173L2621,175L2622,175L2622,176L2622,176" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.81ppdgg1</title>
					</path>
				</g>
				<g style="--index: 7;">
					<path d="M0,0L15,0L15,1L24,1L24,2L73,2L73,3L87,3L87,4L113,4L113,5L597,5L597,6L858,6L858,7L878,7L878,8L944,8L944,9L1041,9L1041,10L1064,10L1064,11L1387,11L1387,12L1537,12L1537,13L1565,13L1565,14L1580,14L1580,15L1592,15L1592,16L1607,16L1607,17L1626,17L1626,18L1635,18L1635,19L1655,19L1655,20L1676,20L1676,21L1688,21L1688,22L1689,22L1689,23L1692,23L1692,24L1702,24L1702,25L1730,25L1730,26L1808,26L1808,27L1857,27L1857,28L1877,28L1877,29L1907,29L1907,30L1912,30L1912,31L1966,31L1966,32L2024,32L2024,33L2058,33L2058,34L2064,34L2064,35L2099,35L2099,37L2113,37L2113,38L2175,38L2175,39L2181,39L2181,40L2187,40L2187,41L2234,41L2234,42L2276,42L2276,43L2349,43L2349,44L2393,44L2393,45L2421,45L2421,46L2450,46L2450,47L2467,47L2467,48L2470,48L2470,49L2471,49L2471,50L2475,50L2475,51L2478,51L2478,52L2513,52L2513,53L2563,53L2563,54L2596,54L2596,56L2622,56" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.21g82pnl</title>
					</path>
				</g>
				<g style="--index: 8;">
					<path d="M0,0L15,0L15,1L109,1L109,2L120,2L120,3L879,3L879,4L937,4L937,6L939,6L939,7L973,7L973,8L977,8L977,9L1054,9L1054,10L1061,10L1061,11L1064,11L1064,12L1086,12L1086,13L1090,13L1090,14L1112,14L1112,15L1117,15L1117,16L1163,16L1163,17L1188,17L1188,18L1196,18L1196,19L1274,19L1274,20L1556,20L1556,21L1620,21L1620,22L1621,22L1621,23L1622,23L1622,24L1648,24L1648,27L1650,27L1650,28L1655,28L1655,29L1657,29L1657,30L1662,30L1662,31L1753,31L1753,32L1758,32L1758,33L1812,33L1812,34L1814,34L1814,35L1819,35L1819,36L1927,36L1927,37L1953,37L1953,38L1958,38L1958,39L1990,39L1990,40L2127,40L2127,41L2148,41L2148,42L2199,42L2199,43L2209,43L2209,44L2261,44L2261,45L2349,45L2349,46L2401,46L2401,47L2420,47L2420,48L2425,48L2425,49L2434,49L2434,50L2452,50L2452,51L2470,51L2470,52L2558,52L2558,53L2562,53L2562,55L2564,55L2564,56L2598,56L2598,57L2620,57L2620,58L2622,58" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.81wp50oq</title>
					</path>
				</g>
				<g style="--index: 9;">
					<path d="M0,0L15,0L15,1L19,1L19,2L23,2L23,3L25,3L25,5L32,5L32,7L41,7L41,8L44,8L44,9L87,9L87,11L108,11L108,12L115,12L115,13L597,13L597,14L657,14L657,15L728,15L728,16L857,16L857,17L871,17L871,18L908,18L908,19L933,19L933,20L973,20L973,21L1048,21L1048,22L1064,22L1064,23L1065,23L1065,24L1069,24L1069,25L1071,25L1071,26L1125,26L1125,28L1132,28L1132,29L1133,29L1133,31L1139,31L1139,33L1140,33L1140,34L1144,34L1144,35L1145,35L1145,36L1146,36L1146,37L1148,37L1148,38L1154,38L1154,39L1163,39L1163,40L1180,40L1180,41L1181,41L1181,42L1200,42L1200,44L1208,44L1208,45L1211,45L1211,46L1221,46L1221,47L1223,47L1223,48L1377,48L1377,49L1409,49L1409,50L1480,50L1480,51L1485,51L1485,52L1487,52L1487,53L1495,53L1495,54L1496,54L1496,55L1516,55L1516,56L1532,56L1532,58L1536,58L1536,59L1537,59L1537,60L1538,60L1538,61L1587,61L1587,62L1618,62L1618,63L1646,63L1646,64L1653,64L1653,65L1657,65L1657,66L1658,66L1658,67L1676,67L1676,68L1689,68L1689,69L1701,69L1701,70L1705,70L1705,71L1714,71L1714,72L1716,72L1716,73L1717,73L1717,74L1751,74L1751,75L1770,75L1770,76L1773,76L1773,77L1819,77L1819,78L1842,78L1842,79L1843,79L1843,81L1860,81L1860,82L1908,82L1908,83L1912,83L1912,84L1923,84L1923,85L1952,85L1952,88L1959,88L1959,89L1966,89L1966,90L2001,90L2001,91L2013,91L2013,92L2058,92L2058,93L2064,93L2064,94L2069,94L2069,95L2175,95L2175,96L2182,96L2182,97L2212,97L2212,98L2234,98L2234,99L2321,99L2321,100L2332,100L2332,101L2337,101L2337,102L2352,102L2352,103L2354,103L2354,104L2365,104L2365,105L2367,105L2367,106L2378,106L2378,107L2384,107L2384,108L2386,108L2386,110L2440,110L2440,111L2458,111L2458,112L2470,112L2470,113L2471,113L2471,114L2484,114L2484,115L2513,115L2513,116L2529,116L2529,117L2538,117L2538,118L2551,118L2551,119L2552,119L2552,120L2554,120L2554,122L2571,122L2571,123L2572,123L2572,125L2577,125L2577,126L2592,126L2592,127L2600,127L2600,128L2607,128L2607,129L2608,129L2608,131L2610,131L2610,132L2613,132L2613,133L2616,133L2616,135L2617,135L2617,136L2622,136L2622,137L2622,137" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.xqkjmxnl</title>
					</path>
				</g>
				<g style="--index: 10;">
					<path dtabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.jqzpx3gl</title>
					</path>
				</g>
				<g style="--index: 11;">
					<path d="M0,0L21,0L21,1L23,1L23,2L87,2L87,3L120,3L120,4L755,4L755,5L881,5L881,6L883,6L883,7L1027,7L1027,8L1054,8L1054,9L1068,9L1068,11L1101,11L1101,14L1103,14L1103,15L1159,15L1159,16L1162,16L1162,17L1169,17L1169,18L1187,18L1187,20L1188,20L1188,21L1494,21L1494,22L1497,22L1497,23L1499,23L1499,24L1553,24L1553,25L1554,25L1554,26L1557,26L1557,27L1614,27L1614,28L1621,28L1621,29L1639,29L1639,30L1657,30L1657,31L1658,31L1658,32L1679,32L1679,33L1685,33L1685,34L1715,34L1715,35L1720,35L1720,36L1788,36L1788,37L1794,37L1794,38L1901,38L1901,39L1953,39L1953,40L2028,40L2028,41L2068,41L2068,42L2222,42L2222,43L2261,43L2261,44L2318,44L2318,45L2321,45L2321,46L2327,46L2327,47L2357,47L2357,48L2425,48L2425,50L2426,50L2426,51L2427,51L2427,53L2428,53L2428,54L2429,54L2429,56L2430,56L2430,57L2431,57L2431,59L2451,59L2451,60L2452,60L2452,61L2470,61L2470,62L2586,62L2586,63L2619,63L2619,64L2622,64" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.rqvpey7q</title>
					</path>
				</g>
				<g style="--index: 12;">
					<path d="M0,0L21,0L21,2L22,2L22,3L30,3L30,5L39,5L39,6L71,6L71,7L80,7L80,8L87,8L87,9L108,9L108,11L109,11L109,12L111,12L111,13L117,13L117,14L121,14L121,15L189,15L189,16L194,16L194,17L195,17L195,18L370,18L370,19L597,19L597,20L751,20L751,21L772,21L772,22L882,22L882,23L907,23L907,24L976,24L976,25L990,25L990,26L1019,26L1019,27L1047,27L1047,28L1048,28L1048,29L1049,29L1049,30L1050,30L1050,31L1063,31L1063,32L1066,32L1066,33L1068,33L1068,34L1069,34L1069,36L1070,36L1070,38L1083,38L1083,39L1085,39L1085,40L1088,40L1088,41L1089,41L1089,42L1090,42L1090,43L1118,43L1118,44L1120,44L1120,45L1129,45L1129,46L1143,46L1143,47L1144,47L1144,48L1160,48L1160,49L1163,49L1163,50L1164,50L1164,51L1195,51L1195,52L1198,52L1198,53L1202,53L1202,54L1206,54L1206,55L1220,55L1220,56L1226,56L1226,57L1232,57L1232,58L1256,58L1256,59L1270,59L1270,61L1275,61L1275,62L1283,62L1283,63L1301,63L1301,64L1304,64L1304,65L1305,65L1305,66L1310,66L1310,67L1320,67L1320,68L1326,68L1326,69L1382,69L1382,70L1383,70L1383,71L1392,71L1392,72L1403,72L1403,73L1404,73L1404,74L1406,74L1406,76L1427,76L1427,77L1435,77L1435,78L1439,78L1439,79L1442,79L1442,80L1443,80L1443,81L1445,81L1445,82L1446,82L1446,83L1458,83L1458,84L1477,84L1477,85L1481,85L1481,86L1482,86L1482,87L1493,87L1493,88L1496,88L1496,89L1508,89L1508,90L1511,90L1511,91L1516,91L1516,92L1523,92L1523,93L1525,93L1525,95L1526,95L1526,96L1527,96L1527,97L1532,97L1532,98L1534,98L1534,100L1539,100L1539,101L1541,101L1541,102L1542,102L1542,103L1546,103L1546,104L1549,104L1549,106L1564,106L1564,107L1567,107L1567,108L1579,108L1579,109L1582,109L1582,110L1587,110L1587,112L1618,112L1618,113L1619,113L1619,114L1620,114L1620,115L1621,115L1621,116L1622,116L1622,117L1623,117L1623,118L1625,118L1625,119L1653,119L1653,120L1655,120L1655,121L1656,121L1656,122L1657,122L1657,123L1661,123L1661,125L1664,125L1664,126L1665,126L1665,127L1666,127L1666,128L1676,128L1676,130L1694,130L1694,131L1696,131L1696,132L1699,132L1699,133L1701,133L1701,136L1703,136L1703,139L1705,139L1705,140L1706,140L1706,142L1708,142L1708,144L1709,144L1709,145L1710,145L1710,146L1713,146L1713,148L1720,148L1720,149L1721,149L1721,150L1722,150L1722,151L1723,151L1723,152L1726,152L1726,153L1729,153L1729,154L1731,154L1731,155L1732,155L1732,156L1737,156L1737,157L1747,157L1747,158L1749,158L1749,159L1751,159L1751,160L1752,160L1752,161L1754,161L1754,162L1755,162L1755,163L1771,163L1771,164L1777,164L1777,165L2204,165L2204,166L2622,166" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.p12dx87q</title>
					</path>
				</g>
				<g style="--index: 13;">
					<path d="M0,0L21,0L21,1L31,1L31,2L71,2L71,3L87,3L87,4L200,4L200,5L609,5L609,6L772,6L772,7L902,7L902,8L1009,8L1009,9L1048,9L1048,10L1061,10L1061,11L1073,11L1073,12L1087,12L1087,13L1120,13L1120,14L1130,14L1130,15L1164,15L1164,16L1197,16L1197,17L1270,17L1270,18L1390,18L1390,19L1405,19L1405,20L1535,20L1535,21L1537,21L1537,22L1597,22L1597,23L1651,23L1651,24L1695,24L1695,25L1730,25L1730,26L1785,26L1785,27L2189,27L2189,28L2622,28" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.810zwdwq</title>
					</path>
				</g>
				<g style="--index: 14;">
					<path d="M0,0L23,0L23,1L25,1L25,2L37,2L37,4L38,4L38,5L39,5L39,7L87,7L87,8L113,8L113,9L119,9L119,10L195,10L195,13L265,13L265,14L386,14L386,15L596,15L596,16L876,16L876,17L979,17L979,20L981,20L981,21L1010,21L1010,22L1050,22L1050,23L1064,23L1064,24L1072,24L1072,25L1090,25L1090,26L1096,26L1096,27L1104,27L1104,28L1113,28L1113,29L1115,29L1115,30L1116,30L1116,31L1139,31L1139,32L1160,32L1160,33L1162,33L1162,34L1174,34L1174,35L1188,35L1188,36L1192,36L1192,37L1208,37L1208,39L1209,39L1209,40L1214,40L1214,42L1377,42L1377,43L1443,43L1443,44L1475,44L1475,45L1539,45L1539,46L1567,46L1567,47L1595,47L1595,48L1657,48L1657,49L1667,49L1667,50L1676,50L1676,51L1689,51L1689,52L1692,52L1692,53L1702,53L1702,54L1704,54L1704,55L1719,55L1719,57L1728,57L1728,58L1776,58L1776,59L1777,59L1777,60L1778,60L1778,61L1783,61L1783,62L1788,62L1788,63L1801,63L1801,64L1850,64L1850,65L1857,65L1857,66L1868,66L1868,67L1871,67L1871,68L1872,68L1872,69L1883,69L1883,70L1910,70L1910,72L1924,72L1924,73L1947,73L1947,74L1992,74L1992,75L1999,75L1999,76L2008,76L2008,78L2024,78L2024,79L2057,79L2057,80L2072,80L2072,81L2085,81L2085,82L2134,82L2134,83L2175,83L2175,84L2177,84L2177,86L2210,86L2210,87L2232,87L2232,88L2233,88L2233,89L2236,89L2236,90L2240,90L2240,91L2241,91L2241,92L2319,92L2319,93L2323,93L2323,94L2358,94L2358,95L2386,95L2386,96L2417,96L2417,97L2450,97L2450,98L2456,98L2456,99L2470,99L2470,100L2471,100L2471,101L2475,101L2475,102L2531,102L2531,103L2532,103L2532,104L2567,104L2567,106L2569,106L2569,107L2578,107L2578,108L2587,108L2587,109L2592,109L2592,110L2596,110L2596,111L2622,111L2622,112L2622,112" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.21dz3e4l</title>
					</path>
				</g>
				<g style="--index: 15;">
					<path d="M0,0L23,0L23,1L25,1L25,2L37,2L37,3L39,3L39,5L40,5L40,6L83,6L83,7L113,7L113,8L119,8L119,9L597,9L597,10L882,10L882,11L979,11L979,12L988,12L988,13L1010,13L1010,14L1064,14L1064,15L1073,15L1073,16L1104,16L1104,17L1113,17L1113,18L1114,18L1114,19L1139,19L1139,20L1145,20L1145,21L1146,21L1146,23L1147,23L1147,24L1162,24L1162,25L1163,25L1163,26L1213,26L1213,28L1490,28L1490,29L1653,29L1653,30L1657,30L1657,31L1676,31L1676,32L1688,32L1688,33L1702,33L1702,34L1706,34L1706,35L1713,35L1713,36L1717,36L1717,37L1720,37L1720,38L1782,38L1782,39L1809,39L1809,40L1821,40L1821,41L1857,41L1857,42L1874,42L1874,43L1898,43L1898,44L1910,44L1910,46L1924,46L1924,47L1978,47L1978,48L2007,48L2007,49L2020,49L2020,50L2025,50L2025,51L2027,51L2027,52L2168,52L2168,53L2175,53L2175,54L2178,54L2178,55L2200,55L2200,56L2214,56L2214,57L2239,57L2239,58L2242,58L2242,59L2252,59L2252,60L2308,60L2308,61L2319,61L2319,62L2321,62L2321,63L2323,63L2323,64L2385,64L2385,65L2395,65L2395,67L2413,67L2413,68L2417,68L2417,69L2418,69L2418,70L2421,70L2421,71L2440,71L2440,72L2449,72L2449,74L2450,74L2450,75L2456,75L2456,76L2470,76L2470,78L2471,78L2471,79L2500,79L2500,80L2520,80L2520,81L2553,81L2553,82L2557,82L2557,83L2563,83L2563,84L2565,84L2565,85L2587,85L2587,86L2603,86L2603,87L2607,87L2607,89L2611,89L2611,90L2612,90L2612,91L2616,91L2616,92L2622,92" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.klrpy2jq</title>
					</path>
				</g>
				<g style="--index: 16;">
					<path d="M0,0L23,0L23,1L24,1L24,2L33,2L33,4L39,4L39,5L200,5L200,6L1023,6L1023,7L1044,7L1044,8L1068,8L1068,9L1109,9L1109,11L1112,11L1112,12L1229,12L1229,13L1241,13L1241,14L1391,14L1391,15L1411,15L1411,16L1706,16L1706,17L2622,17" tabindex="0">
						<title>l_r9gn1qpd-xd144xzd-38dz6v1n.814y45w1</title>
					</path>
				</g>
				<g style="--index: 17;">
					<path d="M0,0L23,0L23,1L202,1L202,2L1044,2L1044,3L1108,3L1108,4L1111,4L1111,5L1112,5L1112,7L1125,7L1125,8L1154,8L1154,9L1196,9L1196,10L1197,10L1197,11L1970,11L1970,12L2622,12" tabindex="0">
						<title>l_o9xo3rp9-xd144xzd-38dz6v1n.814y45w1</title>
					</path>
				</g>
				<g style="--index: 18;">
					<path d="M0,0L42,0L42,1L45,1L45,2L115,2L115,3L432,3L432,4L597,4L597,5L772,5L772,6L773,6L773,7L780,7L780,8L783,8L783,9L791,9L791,10L837,10L837,12L887,12L887,13L910,13L910,14L915,14L915,15L980,15L980,16L1064,16L1064,17L1092,17L1092,18L1093,18L1093,19L1113,19L1113,21L1115,21L1115,22L1116,22L1116,23L1132,23L1132,24L1154,24L1154,25L1160,25L1160,26L1831,26L1831,27L1933,27L1933,28L2021,28L2021,29L2175,29L2175,30L2189,30L2189,31L2198,31L2198,32L2293,32L2293,33L2371,33L2371,34L2426,34L2426,35L2470,35L2470,36L2519,36L2519,37L2620,37L2620,38L2622,38" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.gq7jrxvq</title>
					</path>
				</g>
				<g style="--index: 19;">
					<path d="M0,0L46,0L46,1L201,1L201,2L1073,2L1073,3L1093,3L1093,4L1104,4L1104,5L1105,5L1105,7L1126,7L1126,8L1139,8L1139,9L1534,9L1534,10L1994,10L1994,11L2177,11L2177,12L2236,12L2236,13L2249,13L2249,14L2622,14" tabindex="0">
						<title>l_r9gn1qpd-xd144xzd-38dz6v1n.z19md2jl</title>
					</path>
				</g>
				<g style="--index: 20;">
					<path d="M0,0L71,0L71,1L87,1L87,2L118,2L118,3L432,3L432,4L856,4L856,5L882,5L882,6L979,6L979,7L982,7L982,8L984,8L984,9L1044,9L1044,10L1061,10L1061,11L1066,11L1066,12L1091,12L1091,13L1118,13L1118,15L1120,15L1120,16L1122,16L1122,18L1125,18L1125,19L1152,19L1152,20L1172,20L1172,21L1187,21L1187,23L1188,23L1188,25L1196,25L1196,26L1352,26L1352,27L1361,27L1361,28L1590,28L1590,29L1655,29L1655,30L1657,30L1657,31L1716,31L1716,34L1743,34L1743,35L1749,35L1749,37L1805,37L1805,38L1812,38L1812,39L1814,39L1814,40L1840,40L1840,41L1907,41L1907,42L1914,42L1914,43L1923,43L1923,45L1964,45L1964,46L1979,46L1979,47L1997,47L1997,48L2064,48L2064,49L2076,49L2076,50L2103,50L2103,51L2261,51L2261,52L2323,52L2323,53L2417,53L2417,54L2470,54L2470,55L2563,55L2563,56L2586,56L2586,58L2596,58L2596,59L2622,59" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.9qj0x8el</title>
					</path>
				</g>
				<g style="--index: 21;">
					<path d="M0,0L74,0L74,1L85,1L85,2L107,2L107,3L109,3L109,4L120,4L120,5L860,5L860,6L878,6L878,7L879,7L879,8L925,8L925,9L1039,9L1039,10L1041,10L1041,11L1059,11L1059,12L1061,12L1061,13L1068,13L1068,14L1083,14L1083,15L1087,15L1087,18L1088,18L1088,22L1092,22L1092,23L1162,23L1162,25L1169,25L1169,26L1528,26L1528,27L1633,27L1633,28L1657,28L1657,29L1699,29L1699,30L1805,30L1805,32L1808,32L1808,33L1812,33L1812,34L1814,34L1814,35L1871,35L1871,36L1921,36L1921,37L1929,37L1929,38L1953,38L1953,39L2064,39L2064,40L2111,40L2111,41L2133,41L2133,42L2261,42L2261,43L2425,43L2425,44L2470,44L2470,45L2586,45L2586,46L2622,46L2622,47L2622,47" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.5lermx5q</title>
					</path>
				</g>
				<g style="--index: 22;">
					<path d="M0,0L105,0L105,1L197,1L197,2L878,2L878,3L963,3L963,4L1033,4L1033,5L1061,5L1061,6L1064,6L1064,7L1084,7L1084,8L1088,8L1088,9L1092,9L1092,10L1093,10L1093,13L1103,13L1103,14L1118,14L1118,16L1121,16L1121,17L1126,17L1126,18L1530,18L1530,19L1541,19L1541,20L1612,20L1612,21L1613,21L1613,22L1614,22L1614,23L1621,23L1621,24L1622,24L1622,25L1643,25L1643,26L1645,26L1645,27L1686,27L1686,28L1811,28L1811,29L1812,29L1812,30L1815,30L1815,31L1819,31L1819,32L1906,32L1906,33L1913,33L1913,34L2059,34L2059,35L2176,35L2176,36L2321,36L2321,37L2326,37L2326,38L2328,38L2328,39L2330,39L2330,40L2349,40L2349,41L2379,41L2379,42L2416,42L2416,43L2444,43L2444,44L2452,44L2452,45L2470,45L2470,46L2478,46L2478,47L2510,47L2510,48L2517,48L2517,49L2519,49L2519,50L2538,50L2538,52L2543,52L2543,53L2622,53" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.z19m8p0l</title>
					</path>
				</g>
				<g style="--index: 23;">
					<path d="M0,0L105,0L105,1L114,1L114,2L876,2L876,3L878,3L878,4L1064,4L1064,6L1065,6L1065,7L1078,7L1078,8L1094,8L1094,9L1159,9L1159,10L1160,10L1160,11L1200,11L1200,12L1261,12L1261,13L1542,13L1542,14L1552,14L1552,15L1619,15L1619,16L1717,16L1717,17L1780,17L1780,18L1813,18L1813,19L1815,19L1815,20L1856,20L1856,22L1866,22L1866,23L1884,23L1884,24L1892,24L1892,26L2069,26L2069,27L2092,27L2092,28L2100,28L2100,29L2138,29L2138,30L2202,30L2202,31L2227,31L2227,32L2228,32L2228,33L2243,33L2243,34L2244,34L2244,35L2245,35L2245,37L2246,37L2246,38L2320,38L2320,39L2331,39L2331,40L2366,40L2366,41L2452,41L2452,42L2454,42L2454,43L2470,43L2470,44L2478,44L2478,45L2479,45L2479,47L2622,47" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.gq7jzvvq</title>
					</path>
				</g>
				<g style="--index: 24;">
					<path d="M0,0L105,0L105,1L107,1L107,5L108,5L108,6L109,6L109,7L195,7L195,8L196,8L196,9L877,9L877,10L1061,10L1061,11L1069,11L1069,12L1084,12L1084,13L1101,13L1101,14L1121,14L1121,15L1159,15L1159,17L1777,17L1777,20L1821,20L1821,21L1865,21L1865,22L1939,22L1939,23L1940,23L1940,24L1971,24L1971,25L2134,25L2134,26L2241,26L2241,27L2244,27L2244,28L2286,28L2286,29L2296,29L2296,30L2329,30L2329,31L2466,31L2466,32L2470,32L2470,33L2476,33L2476,34L2478,34L2478,35L2510,35L2510,36L2564,36L2564,37L2566,37L2566,38L2622,38" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.81ppd5g1</title>
					</path>
				</g>
				<g style="--index: 25;">
					<path d="M0,0L106,0L106,1L192,1L192,2L197,2L197,3L867,3L867,4L925,4L925,5L979,5L979,6L988,6L988,7L1037,7L1037,8L1062,8L1062,9L1064,9L1064,10L1068,10L1068,13L1069,13L1069,16L1070,16L1070,17L1071,17L1071,18L1072,18L1072,19L1077,19L1077,20L1079,20L1079,21L1084,21L1084,22L1085,22L1085,23L1094,23L1094,24L1097,24L1097,26L1151,26L1151,27L1165,27L1165,28L1213,28L1213,29L1300,29L1300,30L1301,30L1301,31L1426,31L1426,35L1514,35L1514,36L1526,36L1526,37L1529,37L1529,38L1542,38L1542,39L1552,39L1552,40L1555,40L1555,41L1580,41L1580,42L1606,42L1606,43L1608,43L1608,44L1611,44L1611,45L1613,45L1613,46L1614,46L1614,47L1616,47L1616,48L1626,48L1626,49L1642,49L1642,50L1657,50L1657,51L1661,51L1661,52L1799,52L1799,53L1810,53L1810,54L1812,54L1812,55L1861,55L1861,56L1873,56L1873,57L1924,57L1924,58L2065,58L2065,59L2132,59L2132,60L2134,60L2134,61L2426,61L2426,62L2622,62" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.21g8ownl</title>
					</path>
				</g>
				<g style="--index: 26;">
					<path d="M0,0L107,0L107,1L115,1L115,2L195,2L195,3L196,3L196,4L871,4L871,5L879,5L879,6L977,6L977,7L1062,7L1062,9L1065,9L1065,11L1066,11L1066,12L1068,12L1068,14L1073,14L1073,15L1087,15L1087,16L1092,16L1092,17L1093,17L1093,18L1168,18L1168,19L1270,19L1270,20L1541,20L1541,21L1633,21L1633,22L1634,22L1634,23L1644,23L1644,24L1716,24L1716,25L1811,25L1811,26L1812,26L1812,27L1856,27L1856,28L1907,28L1907,29L1916,29L1916,30L1927,30L1927,31L2228,31L2228,32L2319,32L2319,33L2320,33L2320,34L2329,34L2329,35L2367,35L2367,36L2378,36L2378,37L2416,37L2416,38L2424,38L2424,39L2434,39L2434,40L2470,40L2470,41L2478,41L2478,42L2554,42L2554,43L2555,43L2555,44L2581,44L2581,45L2585,45L2585,46L2587,46L2587,47L2588,47L2588,48L2590,48L2590,49L2596,49L2596,50L2603,50L2603,51L2607,51L2607,52L2622,52" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.814y7w01</title>
					</path>
				</g>
				<g style="--index: 27;">
					<path d="M0,0L107,0L107,1L114,1L114,2L266,2L266,3L867,3L867,4L975,4L975,5L1029,5L1029,6L1062,6L1062,7L1090,7L1090,8L1096,8L1096,9L1105,9L1105,10L1106,10L1106,11L1113,11L1113,12L1213,12L1213,13L1811,13L1811,14L1812,14L1812,15L1891,15L1891,16L1962,16L1962,18L2091,18L2091,19L2229,19L2229,20L2327,20L2327,21L2416,21L2416,22L2470,22L2470,23L2478,23L2478,24L2622,24" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.xqkjmnnl</title>
					</path>
				</g>
				<g style="--index: 28;">
					<path d="M0,0L108,0L108,1L197,1L197,2L277,2L277,3L883,3L883,4L1062,4L1062,5L1113,5L1113,6L1128,6L1128,7L1129,7L1129,8L1155,8L1155,9L1326,9L1326,10L1409,10L1409,11L1562,11L1562,12L1635,12L1635,13L1636,13L1636,14L1637,14L1637,15L1660,15L1660,16L1678,16L1678,17L2189,17L2189,18L2595,18L2595,19L2600,19L2600,20L2622,20" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.4lxpe62q</title>
					</path>
				</g>
				<g style="--index: 29;">
					<path d="M0,0L108,0L108,1L197,1L197,2L269,2L269,3L274,3L274,4L403,4L403,5L889,5L889,6L1042,6L1042,7L1061,7L1061,8L1062,8L1062,9L1099,9L1099,10L1100,10L1100,12L1101,12L1101,13L1113,13L1113,14L1169,14L1169,15L1608,15L1608,16L1832,16L1832,17L2001,17L2001,18L2426,18L2426,19L2470,19L2470,20L2543,20L2543,21L2548,21L2548,22L2562,22L2562,24L2566,24L2566,25L2622,25" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.p12dx07q</title>
					</path>
				</g>
				<g style="--index: 30;">
					<path d="M0,0L200,0L200,1L267,1L267,2L889,2L889,3L977,3L977,4L1042,4L1042,5L1068,5L1068,6L1097,6L1097,7L1105,7L1105,8L1109,8L1109,9L1111,9L1111,10L1119,10L1119,11L1126,11L1126,12L1170,12L1170,13L1654,13L1654,14L1657,14L1657,15L2023,15L2023,16L2192,16L2192,17L2260,17L2260,18L2328,18L2328,19L2426,19L2426,20L2470,20L2470,21L2622,21" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.5lmkgmjq</title>
					</path>
				</g>
				<g style="--index: 31;">
					<path d="M0,0L249,0L249,2L252,2L252,3L262,3L262,4L264,4L264,5L1113,5L1113,6L1130,6L1130,7L1229,7L1229,8L1244,8L1244,9L1266,9L1266,11L1299,11L1299,12L1319,12L1319,13L1369,13L1369,14L1661,14L1661,15L1698,15L1698,16L1705,16L1705,17L1717,17L1717,18L1972,18L1972,19L1974,19L1974,20L1976,20L1976,22L1977,22L1977,23L2016,23L2016,24L2068,24L2068,25L2127,25L2127,26L2180,26L2180,27L2199,27L2199,28L2200,28L2200,29L2203,29L2203,30L2230,30L2230,31L2299,31L2299,32L2323,32L2323,33L2342,33L2342,34L2390,34L2390,35L2535,35L2535,36L2610,36L2610,37L2615,37L2615,38L2622,38" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.4qypgj4q</title>
					</path>
				</g>
				<g style="--index: 32;">
					<path d="M0,0L279,0L279,1L280,1L280,3L388,3L388,4L478,4L478,5L541,5L541,6L570,6L570,7L572,7L572,8L1068,8L1068,9L1328,9L1328,11L1330,11L1330,12L2622,12" tabindex="0">
						<title>xd17x94d-9l71pv4l.81wrgm5l</title>
					</path>
				</g>
				<g style="--index: 33;">
					<path d="M0,0L430,0L430,1L431,1L431,2L909,2L909,3L1068,3L1068,4L1104,4L1104,5L1120,5L1120,6L1130,6L1130,7L1204,7L1204,8L1945,8L1945,9L1994,9L1994,10L2086,10L2086,11L2131,11L2131,12L2177,12L2177,13L2238,13L2238,14L2275,14L2275,15L2285,15L2285,16L2475,16L2475,17L2582,17L2582,18L2622,18" tabindex="0">
						<title>l_r9gn1qpd-xd144xwd</title>
					</path>
				</g>
				<g style="--index: 34;">
					<path d="M0,0L432,0L432,1L1009,1L1009,2L1068,2L1068,3L1108,3L1108,4L1109,4L1109,5L1130,5L1130,6L2383,6L2383,7L2622,7" tabindex="0">
						<title>l_o9xo3rp9-9kv66g32-onv7r45n.9qj08g7l</title>
					</path>
				</g>
				<g style="--index: 35;">
					<path d="M0,0L588,0L588,1L864,1L864,2L885,2L885,3L1062,3L1062,4L1066,4L1066,5L1075,5L1075,6L1080,6L1080,7L1102,7L1102,8L1169,8L1169,9L1529,9L1529,10L1641,10L1641,11L1650,11L1650,12L1651,12L1651,13L1939,13L1939,14L2350,14L2350,15L2470,15L2470,16L2588,16L2588,17L2599,17L2599,18L2622,18" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.21dzoj3l</title>
					</path>
				</g>
				<g style="--index: 36;">
					<path d="M0,0L588,0L588,1L868,1L868,2L939,2L939,3L945,3L945,5L985,5L985,6L1001,6L1001,7L1059,7L1059,8L1060,8L1060,10L1061,10L1061,11L1080,11L1080,12L1160,12L1160,13L1169,13L1169,14L1622,14L1622,15L1623,15L1623,16L1629,16L1629,17L1643,17L1643,18L1650,18L1650,20L1654,20L1654,22L1656,22L1656,23L1954,23L1954,24L1967,24L1967,26L2127,26L2127,27L2438,27L2438,28L2465,28L2465,29L2470,29L2470,30L2505,30L2505,31L2596,31L2596,32L2622,32" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.jqzpyr4l</title>
					</path>
				</g>
				<g style="--index: 37;">
					<path d="M0,0L588,0L588,1L885,1L885,2L973,2L973,3L1062,3L1062,4L1108,4L1108,5L1124,5L1124,6L1127,6L1127,7L1155,7L1155,8L1196,8L1196,9L1529,9L1529,10L1944,10L1944,11L2448,11L2448,12L2470,12L2470,13L2599,13L2599,14L2622,14" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.klrp6ejq</title>
					</path>
				</g>
				<g style="--index: 38;">
					<path d="M0,0L592,0L592,1L889,1L889,2L1042,2L1042,3L1061,3L1061,4L1075,4L1075,5L1085,5L1085,6L1107,6L1107,7L1160,7L1160,8L1178,8L1178,9L1180,9L1180,10L1622,10L1622,11L2221,11L2221,12L2335,12L2335,13L2470,13L2470,14L2618,14L2618,15L2622,15" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.21g8owxl</title>
					</path>
				</g>
				<g style="--index: 39;">
					<path d="M0,0L756,0L756,1L853,1L853,2L857,2L857,3L891,3L891,4L902,4L902,6L904,6L904,8L907,8L907,9L908,9L908,10L911,10L911,11L920,11L920,12L977,12L977,13L978,13L978,15L980,15L980,16L1011,16L1011,18L1038,18L1038,19L1039,19L1039,21L1042,21L1042,23L1066,23L1066,25L1067,25L1067,26L1072,26L1072,27L1074,27L1074,28L1080,28L1080,29L1084,29L1084,30L1092,30L1092,31L1098,31L1098,32L1101,32L1101,33L1105,33L1105,34L1110,34L1110,35L1115,35L1115,36L1117,36L1117,37L1118,37L1118,38L1123,38L1123,39L1127,39L1127,40L1155,40L1155,41L1156,41L1156,42L1157,42L1157,43L1161,43L1161,44L1171,44L1171,45L1190,45L1190,46L1194,46L1194,47L1197,47L1197,49L1207,49L1207,50L1238,50L1238,51L1272,51L1272,53L1273,53L1273,54L1274,54L1274,56L1284,56L1284,57L1286,57L1286,58L1290,58L1290,59L1291,59L1291,60L1305,60L1305,61L1381,61L1381,62L1462,62L1462,64L1464,64L1464,65L1491,65L1491,66L1494,66L1494,67L1556,67L1556,68L1593,68L1593,69L1625,69L1625,70L1649,70L1649,71L1652,71L1652,72L1661,72L1661,73L1668,73L1668,74L1678,74L1678,75L1687,75L1687,76L1701,76L1701,77L1705,77L1705,78L1707,78L1707,79L1709,79L1709,80L1716,80L1716,81L1730,81L1730,82L1751,82L1751,83L1757,83L1757,85L1770,85L1770,86L1780,86L1780,87L1936,87L1936,88L2622,88" tabindex="0">
						<title>xd17x94d-9l71pv4l.zqo20y2l</title>
					</path>
				</g>
				<g style="--index: 40;">
					<path d="M0,0L772,0L772,2L869,2L869,3L1051,3L1051,4L1064,4L1064,5L1096,5L1096,6L1111,6L1111,7L1200,7L1200,8L1269,8L1269,9L1656,9L1656,10L1693,10L1693,11L2190,11L2190,12L2622,12" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.jqzpyrgl</title>
					</path>
				</g>
				<g style="--index: 41;">
					<path d="M0,0L860,0L860,2L1118,2L1118,3L1142,3L1142,5L1143,5L1143,8L1154,8L1154,9L1156,9L1156,11L1194,11L1194,12L1221,12L1221,13L1225,13L1225,14L1303,14L1303,15L1304,15L1304,16L1324,16L1324,17L1354,17L1354,18L1413,18L1413,19L1550,19L1550,20L1587,20L1587,21L1603,21L1603,22L1606,22L1606,23L1607,23L1607,24L1624,24L1624,25L1653,25L1653,26L1708,26L1708,27L1723,27L1723,28L1773,28L1773,29L1811,29L1811,30L1921,30L1921,32L2037,32L2037,33L2045,33L2045,34L2622,34" tabindex="0">
						<title>9kv6l5e2-ql6rezjl.jq6d86v1</title>
					</path>
				</g>
				<g style="--index: 42;">
					<path d="M0,0L869,0L869,1L1047,1L1047,3L1061,3L1061,4L1062,4L1062,5L1066,5L1066,6L1102,6L1102,7L1119,7L1119,8L1159,8L1159,9L1169,9L1169,10L1528,10L1528,11L1646,11L1646,12L1928,12L1928,13L1945,13L1945,14L1976,14L1976,15L2325,15L2325,16L2331,16L2331,17L2417,17L2417,18L2429,18L2429,19L2470,19L2470,20L2554,20L2554,21L2569,21L2569,22L2599,22L2599,23L2622,23" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.5q86rxr1</title>
					</path>
				</g>
				<g style="--index: 43;">
					<path d="M0,0L883,0L883,1L936,1L936,2L980,2L980,3L1062,3L1062,6L1075,6L1075,8L1104,8L1104,9L1105,9L1105,10L1147,10L1147,11L1169,11L1169,12L1491,12L1491,13L1922,13L1922,14L2394,14L2394,15L2470,15L2470,16L2596,16L2596,17L2608,17L2608,18L2618,18L2618,19L2622,19" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.klrp6e0q</title>
					</path>
				</g>
				<g style="--index: 44;">
					<path d="M0,0L884,0L884,1L1050,1L1050,2L1094,2L1094,3L2622,3" tabindex="0">
						<title>l_rdqo542w-9kv66g32-onv7r45n.9qj08g7l</title>
					</path>
				</g>
				<g style="--index: 45;">
					<path d="M0,0L885,0L885,1L979,1L979,3L1037,3L1037,4L1050,4L1050,5L1056,5L1056,6L1061,6L1061,7L1062,7L1062,8L1063,8L1063,9L1074,9L1074,10L1091,10L1091,11L1117,11L1117,12L1147,12L1147,13L1622,13L1622,14L1811,14L1811,15L1928,15L1928,16L1945,16L1945,17L1963,17L1963,18L2127,18L2127,19L2325,19L2325,20L2418,20L2418,21L2470,21L2470,22L2599,22L2599,23L2622,23" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.gq7jzvnq</title>
					</path>
				</g>
				<g style="--index: 46;">
					<path d="M0,0L906,0L906,1L1105,1L1105,2L1130,2L1130,3L1170,3L1170,4L1205,4L1205,5L2375,5L2375,6L2622,6" tabindex="0">
						<title>l_o9xo3rp9-xd144xwd</title>
					</path>
				</g>
				<g style="--index: 47;">
					<path d="M0,0L909,0L909,1L915,1L915,2L975,2L975,3L1050,3L1050,4L1068,4L1068,5L1108,5L1108,6L1114,6L1114,7L1130,7L1130,8L1385,8L1385,9L1721,9L1721,10L1741,10L1741,11L1993,11L1993,12L2177,12L2177,13L2275,13L2275,14L2384,14L2384,15L2435,15L2435,16L2444,16L2444,17L2582,17L2582,18L2622,18" tabindex="0">
						<title>l_r9gn1qpd-9kv66g32-onv7r45n.9qj08g7l</title>
					</path>
				</g>
				<g style="--index: 48;">
					<path d="M0,0L936,0L936,1L1046,1L1046,2L1113,2L1113,3L1130,3L1130,4L1135,4L1135,5L1288,5L1288,6L1300,6L1300,7L1717,7L1717,8L1973,8L1973,9L2133,9L2133,10L2181,10L2181,11L2203,11L2203,12L2272,12L2272,13L2320,13L2320,14L2321,14L2321,16L2325,16L2325,17L2342,17L2342,18L2390,18L2390,19L2622,19" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.810zkwwq</title>
					</path>
				</g>
				<g style="--index: 49;">
					<path d="M0,0L1008,0L1008,1L1099,1L1099,2L1110,2L1110,3L1629,3L1629,4L2544,4L2544,5L2549,5L2549,6L2622,6" tabindex="0">
						<title>l_495zlx39-9kv66g32-onv7r45n.9qj08g7l</title>
					</path>
				</g>
				<g style="--index: 50;">
					<path d="M0,0L1012,0L1012,1L1135,1L1135,3L1136,3L1136,4L1265,4L1265,5L1276,5L1276,6L1319,6L1319,7L1661,7L1661,8L1705,8L1705,9L2136,9L2136,10L2178,10L2178,11L2181,11L2181,12L2203,12L2203,13L2205,13L2205,14L2274,14L2274,15L2295,15L2295,16L2300,16L2300,17L2301,17L2301,18L2325,18L2325,19L2349,19L2349,20L2390,20L2390,21L2428,21L2428,22L2615,22L2615,23L2622,23" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.9qj0kxel</title>
					</path>
				</g>
				<g style="--index: 51;">
					<path d="M0,0L1023,0L1023,1L1110,1L1110,2L1111,2L1111,4L1112,4L1112,5L1163,5L1163,6L1187,6L1187,7L1631,7L1631,8L1664,8L1664,9L2595,9L2595,10L2615,10L2615,11L2622,11" tabindex="0">
						<title>l_495zlx39-xd144xzd-38dz6v1n.814y45w1</title>
					</path>
				</g>
				<g style="--index: 52;">
					<path d="M0,0L1024,0L1024,1L1099,1L1099,2L1100,2L1100,3L1139,3L1139,4L1145,4L1145,5L1700,5L1700,6L1705,6L1705,7L2420,7L2420,8L2584,8L2584,9L2621,9L2621,10L2622,10L2622,11L2622,11" tabindex="0">
						<title>l_o9xo3rp9-xd144xzd-38dz6v1n.z19md2jl</title>
					</path>
				</g>
				<g style="--index: 53;">
					<path d="M0,0L1037,0L1037,1L1088,1L1088,2L1098,2L1098,3L1122,3L1122,4L1133,4L1133,6L1144,6L1144,7L1595,7L1595,8L1742,8L1742,9L1749,9L1749,11L2622,11" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.81wpx5oq</title>
					</path>
				</g>
				<g style="--index: 54;">
					<path d="M0,0L1038,0L1038,1L1061,1L1061,2L1124,2L1124,3L1157,3L1157,4L1321,4L1321,5L1354,5L1354,6L1938,6L1938,7L2175,7L2175,8L2509,8L2509,9L2622,9" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.zqop6rp1</title>
					</path>
				</g>
				<g style="--index: 55;">
					<path d="M0,0L1039,0L1039,1L1061,1L1061,2L1069,2L1069,3L1080,3L1080,4L1104,4L1104,5L1147,5L1147,6L1157,6L1157,7L1355,7L1355,8L1778,8L1778,9L1828,9L1828,10L1939,10L1939,11L2175,11L2175,12L2622,12" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.0138n5dq</title>
					</path>
				</g>
				<g style="--index: 56;">
					<path d="M0,0L1040,0L1040,2L1048,2L1048,3L1060,3L1060,4L1062,4L1062,5L1070,5L1070,6L1075,6L1075,7L1081,7L1081,8L1091,8L1091,10L1100,10L1100,12L1125,12L1125,13L1126,13L1126,14L1158,14L1158,15L1159,15L1159,16L1819,16L1819,17L1977,17L1977,18L2124,18L2124,19L2159,19L2159,20L2181,20L2181,21L2324,21L2324,22L2599,22L2599,23L2608,23L2608,24L2622,24" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.rqvp5e7q</title>
					</path>
				</g>
				<g style="--index: 57;">
					<path d="M0,0L1041,0L1041,1L1082,1L1082,2L1122,2L1122,3L1379,3L1379,5L1744,5L1744,6L2027,6L2027,7L2413,7L2413,9L2622,9" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.5ler7m5q</title>
					</path>
				</g>
				<g style="--index: 58;">
					<path d="M0,0L1042,0L1042,1L1048,1L1048,2L1072,2L1072,3L1104,3L1104,4L1160,4L1160,7L1161,7L1161,8L1182,8L1182,9L2622,9" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.0q5njgmq</title>
					</path>
				</g>
				<g style="--index: 59;">
					<path d="M0,0L1043,0L1043,1L1048,1L1048,2L1054,2L1054,3L1084,3L1084,4L1326,4L1326,6L1590,6L1590,7L1601,7L1601,8L1602,8L1602,9L1733,9L1733,10L1843,10L1843,12L1845,12L1845,13L2622,13" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.4lxp7e2q</title>
					</path>
				</g>
				<g style="--index: 60;">
					<path d="M0,0L1044,0L1044,1L1111,1L1111,2L1112,2L1112,3L1114,3L1114,4L1629,4L1629,5L2622,5" tabindex="0">
						<title>l_rdqo542w-xd144xzd-38dz6v1n.814y45w1</title>
					</path>
				</g>
				<g style="--index: 61;">
					<path d="M0,0L1044,0L1044,1L1061,1L1061,2L1074,2L1074,3L1104,3L1104,4L1118,4L1118,5L1162,5L1162,7L1361,7L1361,8L1646,8L1646,9L1723,9L1723,10L1811,10L1811,11L1910,11L1910,12L1937,12L1937,13L2328,13L2328,14L2394,14L2394,15L2622,15" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.814y0701</title>
					</path>
				</g>
				<g style="--index: 62;">
					<path d="M0,0L1045,0L1045,1L1142,1L1142,2L1537,2L1537,3L1638,3L1638,4L2548,4L2548,5L2594,5L2594,6L2622,6" tabindex="0">
						<title>l_495zlx39-xd144xzd-38dz6v1n.z19md2jl</title>
					</path>
				</g>
				<g style="--index: 63;">
					<path d="M0,0L1045,0L1045,1L1048,1L1048,2L1055,2L1055,3L1061,3L1061,4L1075,4L1075,8L1106,8L1106,9L1131,9L1131,11L1164,11L1164,12L1197,12L1197,13L1200,13L1200,14L1252,14L1252,15L2115,15L2115,16L2440,16L2440,18L2622,18" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.jq606z3q</title>
					</path>
				</g>
				<g style="--index: 64;">
					<path d="M0,0L1046,0L1046,1L1113,1L1113,2L1135,2L1135,4L1265,4L1265,6L1284,6L1284,7L1300,7L1300,8L1705,8L1705,9L1978,9L1978,10L2068,10L2068,11L2127,11L2127,12L2181,12L2181,13L2203,13L2203,14L2294,14L2294,15L2299,15L2299,16L2324,16L2324,17L2325,17L2325,18L2326,18L2326,20L2342,20L2342,21L2390,21L2390,22L2533,22L2533,23L2622,23" tabindex="0">
						<title>l_ldykv1zw-rkl3znrk-wl3059ol.mlnwjz0l</title>
					</path>
				</g>
				<g style="--index: 65;">
					<path d="M0,0L1046,0L1046,1L1049,1L1049,2L1136,2L1136,3L1163,3L1163,4L1273,4L1273,5L1622,5L1622,6L1625,6L1625,7L1769,7L1769,8L1770,8L1770,9L1771,9L1771,10L2177,10L2177,11L2327,11L2327,12L2622,12" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.z19mo80l</title>
					</path>
				</g>
				<g style="--index: 66;">
					<path d="M0,0L1052,0L1052,1L1100,1L1100,2L1208,2L1208,3L1287,3L1287,4L2622,4" tabindex="0">
						<title>7dg65oxk-r8r1zm0n.gq7dw7vq</title>
					</path>
				</g>
				<g style="--index: 67;">
					<path d="M0,0L1055,0L1055,1L1099,1L1099,2L1284,2L1284,3L1292,3L1292,4L2622,4" tabindex="0">
						<title>xd1v018d-68k7x44l.zqo74r41</title>
					</path>
				</g>
				<g style="--index: 68;">
					<path d="M0,0L1062,0L1062,1L1211,1L1211,2L2151,2L2151,3L2622,3" tabindex="0">
						<title>l_rdqo542w-xd144xwd</title>
					</path>
				</g>
				<g style="--index: 69;">
					<path d="M0,0L1062,0L1062,1L1135,1L1135,2L1707,2L1707,3L2620,3L2620,4L2622,4" tabindex="0">
						<title>l_rdqo542w-xd144xzd-38dz6v1n.z19md2jl</title>
					</path>
				</g>
				<g style="--index: 70;">
					<path d="M0,0L1063,0L1063,1L1208,1L1208,2L2548,2L2548,3L2622,3" tabindex="0">
						<title>l_495zlx39-xd144xwd</title>
					</path>
				</g>
				<g style="--index: 71;">
					<path d="M0,0L1069,0L1069,1L1448,1L1448,2L2622,2" tabindex="0">
						<title>7dg65oxk-r8r1zm0n.xqk0drn1</title>
					</path>
				</g>
				<g style="--index: 72;">
					<path d="M0,0L1124,0L1124,1L1129,1L1129,2L1132,2L1132,6L1133,6L1133,7L1187,7L1187,8L1200,8L1200,9L1605,9L1605,10L2622,10" tabindex="0">
						<title>l_r9gnozkd-rkl3znrk-wledz9en.5lmk0gjq</title>
					</path>
				</g>
				<g style="--index: 73;">
					<path d="M0,0L1137,0L1137,1L1145,1L1145,2L1158,2L1158,3L1907,3L1907,4L1994,4L1994,5L2001,5L2001,6L2175,6L2175,7L2239,7L2239,8L2271,8L2271,9L2275,9L2275,10L2622,10" tabindex="0">
						<title>l_r9gn1qpd-9kv66g32-onv7r45n.810zdxoq</title>
					</path>
				</g>
				<g style="--index: 74;">
					<path d="M0,0L1137,0L1137,1L1977,1L1977,2L2383,2L2383,3L2444,3L2444,4L2544,4L2544,5L2570,5L2570,6L2614,6L2614,7L2622,7" tabindex="0">
						<title>l_o9xo3rp9-9kv66g32-onv7r45n.810zdxoq</title>
					</path>
				</g>
				<g style="--index: 75;">
					<path d="M0,0L1137,0L1137,1L1609,1L1609,2L2548,2L2548,3L2601,3L2601,4L2606,4L2606,5L2608,5L2608,6L2622,6" tabindex="0">
						<title>l_495zlx39-9kv66g32-onv7r45n.810zdxoq</title>
					</path>
				</g>
				<g style="--index: 76;">
					<path d="M0,0L1137,0L1137,1L2618,1L2618,2L2621,2L2621,4L2622,4L2622,6L2622,6" tabindex="0">
						<title>l_rdqo542w-9kv66g32-onv7r45n.810zdxoq</title>
					</path>
				</g>
				<g style="--index: 77;">
					<path d="M0,0L1191,0L1191,2L1192,2L1192,5L1222,5L1222,6L1324,6L1324,7L1777,7L1777,9L1910,9L1910,10L2065,10L2065,11L2622,11" tabindex="0">
						<title>rkl9qwrk-6njkg4el.z19p2o8l</title>
					</path>
				</g>
				<g style="--index: 78;">
					<path d="M0,0L1225,0L1225,1L1230,1L1230,2L1314,2L1314,3L1398,3L1398,4L1449,4L1449,5L1646,5L1646,6L2105,6L2105,7L2622,7" tabindex="0">
						<title>l_r9gn1qpd-xd144xzd-38dz6v1n.5leogx5q</title>
					</path>
				</g>
				<g style="--index: 79;">
					<path d="M0,0L1227,0L1227,1L2177,1L2177,2L2622,2" tabindex="0">
						<title>l_o9xo3rp9-xd144xzd-38dz6v1n.5leogx5q</title>
					</path>
				</g>
				<g style="--index: 80;">
					<path d="M0,0L1237,0L1237,2L1637,2L1637,3L2136,3L2136,4L2622,4" tabindex="0">
						<title>l_495zlx39-xd144xzd-38dz6v1n.5leogx5q</title>
					</path>
				</g>
				<g style="--index: 81;">
					<path d="M0,0L1247,0L1247,1L2163,1L2163,2L2622,2" tabindex="0">
						<title>l_rdqo542w-xd144xzd-38dz6v1n.5leogx5q</title>
					</path>
				</g>
				<g style="--index: 82;">
					<path d="M0,0L1450,0L1450,1L1743,1L1743,2L2586,2L2586,3L2593,3L2593,5L2595,5L2595,6L2622,6" tabindex="0">
						<title>9kv6l5e2-ql6rezjl.9qj3pk7l</title>
					</path>
				</g>
				<g style="--index: 83;">
					<path d="M0,0L1611,0L1611,1L1686,1L1686,2L1711,2L1711,3L2622,3" tabindex="0">
						<title>mke75px2-yn2mz5d8.4lx6574l</title>
					</path>
				</g>
				<g style="--index: 84;">
					<path dtabindex="0">
						<title>xd17x94d-9l71pv4l.21gpn081</title>
					</path>
				</g>
				<g style="--index: 85;">
					<path d="M0,0L1784,0L1784,1L1801,1L1801,2L1805,2L1805,3L1809,3L1809,4L1813,4L1813,5L1819,5L1819,6L1832,6L1832,7L1837,7L1837,9L1842,9L1842,10L1850,10L1850,11L1851,11L1851,13L1856,13L1856,14L1869,14L1869,15L1874,15L1874,16L1875,16L1875,17L1876,17L1876,19L1880,19L1880,21L1881,21L1881,22L1890,22L1890,23L1898,23L1898,24L1899,24L1899,25L1901,25L1901,26L1903,26L1903,27L1908,27L1908,29L1912,29L1912,30L1923,30L1923,31L1924,31L1924,33L1928,33L1928,34L1932,34L1932,35L1934,35L1934,36L1937,36L1937,37L1938,37L1938,38L1949,38L1949,39L1957,39L1957,40L1958,40L1958,41L1959,41L1959,42L1966,42L1966,43L1968,43L1968,44L1973,44L1973,45L1980,45L1980,46L1981,46L1981,47L1983,47L1983,48L1993,48L1993,49L1994,49L1994,50L2001,50L2001,51L2007,51L2007,52L2014,52L2014,53L2017,53L2017,54L2037,54L2037,55L2038,55L2038,57L2040,57L2040,58L2048,58L2048,59L2089,59L2089,60L2100,60L2100,61L2101,61L2101,62L2107,62L2107,63L2122,63L2122,64L2128,64L2128,65L2134,65L2134,67L2140,67L2140,68L2148,68L2148,69L2175,69L2175,70L2191,70L2191,71L2204,71L2204,72L2229,72L2229,73L2268,73L2268,74L2271,74L2271,75L2272,75L2272,76L2292,76L2292,77L2295,77L2295,78L2302,78L2302,79L2304,79L2304,80L2327,80L2327,81L2337,81L2337,82L2339,82L2339,83L2345,83L2345,84L2375,84L2375,85L2378,85L2378,86L2401,86L2401,88L2408,88L2408,89L2416,89L2416,90L2429,90L2429,91L2430,91L2430,93L2437,93L2437,94L2442,94L2442,95L2446,95L2446,96L2448,96L2448,97L2458,97L2458,99L2470,99L2470,100L2478,100L2478,101L2498,101L2498,103L2503,103L2503,104L2504,104L2504,106L2505,106L2505,108L2508,108L2508,109L2513,109L2513,110L2519,110L2519,111L2531,111L2531,112L2537,112L2537,113L2540,113L2540,114L2546,114L2546,115L2549,115L2549,116L2558,116L2558,117L2583,117L2583,118L2585,118L2585,119L2595,119L2595,120L2596,120L2596,121L2600,121L2600,122L2606,122L2606,124L2608,124L2608,125L2611,125L2611,126L2616,126L2616,127L2621,127L2621,128L2622,128" tabindex="0">
						<title>l_r9gn1qpd-9d8eewld-0nwoqwkl.klr25nj1</title>
					</path>
				</g>
				<g style="--index: 86;">
					<path d="M0,0L1821,0L1821,1L1828,1L1828,2L1883,2L1883,3L1888,3L1888,4L1889,4L1889,5L1890,5L1890,6L1891,6L1891,8L1892,8L1892,10L1912,10L1912,11L1918,11L1918,12L1928,12L1928,13L1929,13L1929,14L1953,14L1953,16L1954,16L1954,17L1974,17L1974,18L1978,18L1978,20L1987,20L1987,21L1988,21L1988,22L1994,22L1994,23L2001,23L2001,24L2002,24L2002,25L2029,25L2029,26L2063,26L2063,27L2108,27L2108,28L2176,28L2176,29L2260,29L2260,30L2273,30L2273,31L2305,31L2305,32L2355,32L2355,33L2356,33L2356,34L2358,34L2358,35L2367,35L2367,36L2402,36L2402,37L2413,37L2413,38L2437,38L2437,39L2439,39L2439,41L2440,41L2440,43L2462,43L2462,44L2470,44L2470,45L2481,45L2481,46L2493,46L2493,47L2506,47L2506,48L2542,48L2542,49L2545,49L2545,50L2556,50L2556,51L2571,51L2571,52L2587,52L2587,53L2589,53L2589,54L2590,54L2590,55L2614,55L2614,56L2616,56L2616,57L2617,57L2617,58L2618,58L2618,59L2619,59L2619,60L2622,60" tabindex="0">
						<title>l_o9xo3rp9-9d8eewld-7896y468.4qywn341</title>
					</path>
				</g>
				<g style="--index: 87;">
					<path d="M0,0L1822,0L1822,1L1851,1L1851,2L1854,2L1854,3L1902,3L1902,4L1943,4L1943,5L2043,5L2043,6L2181,6L2181,7L2248,7L2248,8L2293,8L2293,9L2375,9L2375,10L2622,10" tabindex="0">
						<title>7dg65oxk-r8r1zm0n.5q89kv31</title>
					</path>
				</g>
				<g style="--index: 88;">
					<path d="M0,0L1827,0L1827,1L1875,1L1875,2L1883,2L1883,3L1884,3L1884,4L1891,4L1891,5L1905,5L1905,6L1921,6L1921,7L1922,7L1922,8L1994,8L1994,9L2171,9L2171,10L2328,10L2328,11L2435,11L2435,12L2470,12L2470,13L2577,13L2577,14L2618,14L2618,15L2622,15" tabindex="0">
						<title>l_rdqo542w-9d8eewld-wl30kw9l.810dx3wl</title>
					</path>
				</g>
				<g style="--index: 89;">
					<path d="M0,0L1846,0L1846,1L1852,1L1852,2L1946,2L1946,3L2067,3L2067,4L2072,4L2072,5L2234,5L2234,6L2451,6L2451,7L2622,7" tabindex="0">
						<title>xd1v018d-68k7x44l.mlno8vjq</title>
					</path>
				</g>
				<g style="--index: 90;">
					<path d="M0,0L1861,0L1861,1L1880,1L1880,2L1883,2L1883,4L1977,4L1977,5L1988,5L1988,6L1994,6L1994,7L1998,7L1998,8L2001,8L2001,9L2007,9L2007,10L2028,10L2028,11L2098,11L2098,12L2470,12L2470,13L2534,13L2534,14L2546,14L2546,15L2566,15L2566,16L2569,16L2569,17L2622,17" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.mlno5r0q</title>
					</path>
				</g>
				<g style="--index: 91;">
					<path d="M0,0L1873,0L1873,1L2563,1L2563,2L2568,2L2568,3L2589,3L2589,4L2622,4" tabindex="0">
						<title>rkl9qwrk-6njkg4el.81p5ym8l</title>
					</path>
				</g>
				<g style="--index: 92;">
					<path d="M0,0L1910,0L1910,1L1993,1L1993,2L2177,2L2177,3L2209,3L2209,4L2235,4L2235,5L2236,5L2236,6L2283,6L2283,7L2442,7L2442,8L2604,8L2604,9L2605,9L2605,10L2607,10L2607,11L2610,11L2610,13L2622,13" tabindex="0">
						<title>l_r9gn1qpd-xd144xzd-38dz6v1n.q755eky1</title>
					</path>
				</g>
				<g style="--index: 93;">
					<path d="M0,0L1935,0L1935,1L2028,1L2028,2L2031,2L2031,3L2060,3L2060,4L2385,4L2385,5L2453,5L2453,6L2454,6L2454,7L2458,7L2458,8L2459,8L2459,9L2460,9L2460,10L2461,10L2461,11L2553,11L2553,12L2622,12" tabindex="0">
						<title>l_o9xo3rp9-xd144xzd-38dz6v1n.q755eky1</title>
					</path>
				</g>
				<g style="--index: 94;">
					<path d="M0,0L1993,0L1993,2L1995,2L1995,3L2021,3L2021,4L2076,4L2076,5L2180,5L2180,6L2182,6L2182,7L2183,7L2183,8L2311,8L2311,9L2384,9L2384,10L2417,10L2417,11L2445,11L2445,12L2446,12L2446,13L2448,13L2448,14L2449,14L2449,15L2456,15L2456,16L2470,16L2470,17L2473,17L2473,18L2474,18L2474,19L2477,19L2477,20L2499,20L2499,21L2543,21L2543,22L2545,22L2545,23L2562,23L2562,24L2565,24L2565,25L2576,25L2576,26L2593,26L2593,27L2622,27" tabindex="0">
						<title>l_gdr5onk9-rkl3znrk-rn1g06dn.qj77o50q</title>
					</path>
				</g>
				<g style="--index: 95;">
					<path d="M0,0L2018,0L2018,1L2029,1L2029,2L2030,2L2030,3L2031,3L2031,5L2036,5L2036,6L2038,6L2038,7L2039,7L2039,8L2043,8L2043,9L2044,9L2044,10L2045,10L2045,11L2053,11L2053,12L2055,12L2055,13L2056,13L2056,14L2061,14L2061,15L2063,15L2063,16L2069,16L2069,17L2105,17L2105,18L2110,18L2110,19L2111,19L2111,20L2112,20L2112,21L2166,21L2166,22L2176,22L2176,23L2179,23L2179,24L2191,24L2191,25L2194,25L2194,26L2225,26L2225,27L2228,27L2228,28L2296,28L2296,29L2327,29L2327,30L2375,30L2375,32L2379,32L2379,33L2383,33L2383,34L2410,34L2410,35L2413,35L2413,36L2420,36L2420,37L2447,37L2447,38L2454,38L2454,39L2473,39L2473,40L2474,40L2474,41L2475,41L2475,42L2495,42L2495,43L2509,43L2509,44L2514,44L2514,45L2521,45L2521,46L2545,46L2545,47L2563,47L2563,48L2585,48L2585,49L2586,49L2586,50L2588,50L2588,51L2592,51L2592,52L2617,52L2617,53L2620,53L2620,54L2622,54" tabindex="0">
						<title>9kv6l5e2-ql6rezjl.1dk62o3l</title>
					</path>
				</g>
				<g style="--index: 96;">
					<path d="M0,0L2032,0L2032,1L2035,1L2035,2L2039,2L2039,3L2042,3L2042,4L2044,4L2044,5L2045,5L2045,6L2061,6L2061,7L2063,7L2063,8L2064,8L2064,9L2069,9L2069,10L2076,10L2076,11L2129,11L2129,12L2146,12L2146,13L2255,13L2255,14L2422,14L2422,15L2448,15L2448,16L2495,16L2495,18L2589,18L2589,19L2596,19L2596,20L2613,20L2613,21L2621,21L2621,22L2622,22" tabindex="0">
						<title>rkl9qwrk-6njkg4el.lr3x560l</title>
					</path>
				</g>
				<g style="--index: 97;">
					<path d="M0,0L2069,0L2069,1L2075,1L2075,2L2076,2L2076,4L2094,4L2094,5L2134,5L2134,6L2432,6L2432,7L2608,7L2608,8L2619,8L2619,9L2621,9L2621,10L2622,10" tabindex="0">
						<title>l_xd0mnpjw-rkl3znrk-wley4prn.192xe54q</title>
					</path>
				</g>
				<g style="--index: 98;">
					<path d="M0,0L2082,0L2082,2L2144,2L2144,3L2549,3L2549,4L2572,4L2572,5L2584,5L2584,6L2622,6" tabindex="0">
						<title>l_495zlx39-xd144xzd-38dz6v1n.q755eky1</title>
					</path>
				</g>
				<g style="--index: 99;">
					<path d="M0,0L2091,0L2091,1L2596,1L2596,2L2622,2" tabindex="0">
						<title>l_rdqo542w-xd144xzd-38dz6v1n.q755eky1</title>
					</path>
				</g>
				<g style="--index: 100;">
					<path d="M0,0L2115,0L2115,1L2178,1L2178,2L2179,2L2179,3L2182,3L2182,4L2358,4L2358,5L2568,5L2568,6L2622,6" tabindex="0">
						<title>l_gdr5onk9-rkl3znrk-rn1g06dn.lmooe9y1</title>
					</path>
				</g>
				<g style="--index: 101;">
					<path d="M0,0L2115,0L2115,1L2179,1L2179,2L2182,2L2182,3L2622,3" tabindex="0">
						<title>l_gdr5onk9-rkl3znrk-rn1g06dn.q655wjnl</title>
					</path>
				</g>
				<g style="--index: 102;">
					<path d="M0,0L2321,0L2321,1L2323,1L2323,2L2333,2L2333,3L2462,3L2462,4L2493,4L2493,5L2507,5L2507,6L2622,6" tabindex="0">
						<title>zdn9m472-2lge53e8.qzn0z9gq</title>
					</path>
				</g>
				<g style="--index: 103;">
					<path d="M0,0L2322,0L2322,1L2323,1L2323,3L2324,3L2324,4L2367,4L2367,5L2368,5L2368,8L2379,8L2379,9L2390,9L2390,10L2450,10L2450,11L2452,11L2452,12L2470,12L2470,13L2478,13L2478,14L2554,14L2554,15L2617,15L2617,16L2622,16" tabindex="0">
						<title>l_495zlx39-9d8eewld-2lgr793n.qj7zdm3q</title>
					</path>
				</g>
				<g style="--index: 104;">
					<path d="M0,0L2423,0L2423,1L2425,1L2425,2L2622,2" tabindex="0">
						<title>zdn9m472-2lge53e8.q5v59jml</title>
					</path>
				</g>
				<g style="--index: 105;">
					<path d="M0,0L2448,0L2448,1L2449,1L2449,2L2622,2" tabindex="0">
						<title>l_gdr5onk9-rkl3znrk-rn1g06dn.1gn42k6l</title>
					</path>
				</g>
				<g style="--index: 106;">
					<path d="M0,0L2619,0L2619,1L2622,1" tabindex="0">
						<title>9kv6lno2-wl3v33o8.qyz82z61</title>
					</path>
				</g>
			</g>
		</svg>
	</foreignObject>
</svg>
