<svg xmlns="http://www.w3.org/2000/svg" lang="en">
	<title>Rank by player for leaderboard l_o9xo3rp9-9d8eewld-7896y468.810zwdwq</title>
	<metadata>
		<meta xmlns="http://www.w3.org/1999/xhtml" charset="utf-8" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="viewport" content="width=device-width" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="color-scheme" content="dark light" />
	</metadata>
	<style>
		*,
		::before,
		::after {
			box-sizing: border-box;
		}
		:root {
			background: var(--canvas-background);
			color: var(--canvas-foreground);
			fill: var(--canvas-background);
			stroke: var(--canvas-foreground);
			stroke-linejoin: round;
			stroke-linecap: round;
		}
		foreignObject {
			pointer-events: none;
		}
		foreignObject::before,
		foreignObject::after {
			content: "";
			position: absolute;
			z-index: 1;
			left: 20px;
			bottom: 20px;
			pointer-events: auto;
		}
		foreignObject::before {
			width: calc(100% - 40px);
			height: calc(20px + var(--date-size) * 1px);
		}
		foreignObject::after {
			width: calc(20px + var(--value-size) * 1px);
			height: calc(100% - 40px);
		}
		foreignObject &gt; div {
			position: absolute;
			z-index: 4;
			right: 0;
			top: 0;
			margin: 20px;
			border: 1px solid var(--canvas-foreground);
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			transition: opacity 1s;
			pointer-events: auto;
		}
		foreignObject:is(:hover, :focus-within) &gt; div:not(:hover, :focus-within) {
			opacity: 0;
			pointer-events: none;
		}
		foreignObject &gt; div &gt; p {
			margin: 0;
		}
		label {
			display: table;
			border-collapse: separate;
			border-spacing: 10px;
			direction: rtl;
		}
		progress,
		input[type="checkbox"] {
			display: table-cell;
			width: 16px;
			height: 16px;
			margin: 2px;
			accent-color: var(--canvas-foreground);
			vertical-align: top;
			direction: ltr;
		}
		progress + span,
		input[type="checkbox"] + span {
			display: table-cell;
			vertical-align: top;
			direction: ltr;
		}
		input[type="checkbox"]:not(:disabled):is(:hover, :focus-within) + span {
			text-decoration: underline;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			position: absolute;
			z-index: 2;
			margin: 0;
			padding: 10px;
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			font-weight: bold;
			pointer-events: auto;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg + svg {
			border-top: 1px solid #0000;
			border-bottom: 1px solid var(--canvas-foreground);
		}
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px dashed #0000;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg {
			width: calc(20px + var(--date-size) * 1px);
			height: 42px;
			bottom: 20px;
		}
		foreignObject &gt; svg:first-of-type {
			left: calc(40px + var(--value-size) * 1px);
			transform: rotate(90deg) translate(-100%, 0);
			transform-origin: left bottom;
		}
		foreignObject &gt; svg:first-of-type + svg {
			right: 20px;
			transform: rotate(90deg) translate(0, 100%);
			transform-origin: right bottom;
		}
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			width: calc(20px + var(--value-size) * 1px);
			height: 42px;
			left: 20px;
		}
		foreignObject &gt; svg:first-of-type + svg + svg {
			bottom: calc(40px + var(--date-size) * 1px);
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			top: 20px;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text {
			fill: var(--canvas-foreground);
			stroke: none;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text {
			cursor: vertical-text;
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg + svg {
			position: relative;
			z-index: 3;
			width: calc(100% - 60px - var(--value-size) * 1px);
			height: calc(100% - 60px - var(--date-size) * 1px);
			margin: 20px 20px calc(40px + var(--date-size) * 1px) calc(40px + var(--value-size) * 1px);
			border-left: 1px solid var(--canvas-foreground);
			border-right: 1px dashed var(--canvas-foreground);
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px solid var(--canvas-foreground);
			background: var(--canvas-background);
			pointer-events: auto;
		}
		g &gt; rect {
			vector-effect: non-scaling-stroke;
			fill: var(--highlighted);
			stroke: none;
		}
		g &gt; rect[tabindex] {
			fill: var(--tier, #0000);
			cursor: help;
		}
		g &gt; rect[tabindex][data-tier="diamond"] {
			--tier: var(--diamond);
		}
		g &gt; rect[tabindex][data-tier="gold"] {
			--tier: var(--gold);
		}
		g &gt; rect[tabindex][data-tier="silver"] {
			--tier: var(--silver);
		}
		g &gt; rect[tabindex][data-tier="bronze"] {
			--tier: var(--bronze);
		}
		g &gt; path[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: hsl(calc(var(--index) / var(--count) * 360), 50%, 50%);
			cursor: help;
		}
		g:is(:hover, :focus-within) &gt; path[tabindex] {
			stroke: var(--canvas-foreground);
		}
		g &gt; path[tabindex]:is(:hover, :focus-within) {
			outline: 0;
		}
		g &gt; path[tabindex]:first-of-type {
			stroke-width: 2;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) {
			stroke-width: 4;
		}
		g &gt; path[tabindex]:first-of-type:not(:last-of-type) {
			stroke-dasharray: 4 8;
		}
		g &gt; path[tabindex]:first-of-type + rect {
			fill: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect {
			fill: var(--highlighted);
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] {
			stroke-width: 8;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) {
			stroke-width: 16;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line + line {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			stroke-width: 2;
			stroke-dasharray: 4 8;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line + line {
			stroke: var(--faded);
		}
		@media (prefers-color-scheme: dark) {
			:root {
				--canvas-background: #000;
				--canvas-foreground: #ccc;
				--diamond: #0363;
				--gold: #6303;
				--silver: #3633;
				--bronze: #6363;
				--highlighted: #6663;
				--faded: #9993;
			}
		}
		@media (prefers-color-scheme: light) {
			:root {
				--canvas-background: #fff;
				--canvas-foreground: #333;
				--diamond: #9cf3;
				--gold: #fc93;
				--silver: #9c93;
				--bronze: #c9c3;
				--highlighted: #9993;
				--faded: #6663;
			}
		}
	</style>
	<script>
		"use strict";
		{
			const script = document.currentScript;
			const documentUrl = location.href;
			const scope = new URL("../../", documentUrl).pathname;
			const playersKey = `${scope}#players`;
			const leaderboardsKey = `${scope}#leaderboards`;
			const sessionKey = `${scope}#session`;
			const lockKey = `${scope}#lock`;
			async function importDataScript(dataScriptUrl, signal) {
				signal.throwIfAborted();
				if (documentUrl.protocol !== "file:") {
					const response = await fetch(dataScriptUrl, {
						signal,
					});
					if (!response.ok) {
						throw new Error(response.statusText);
					}
					const data = await response.json();
					return data;
				}
				return await new Promise((resolve, reject) =&gt; {
					const name = `callback${Math.random() * 2 ** 53}`;
					let called = false;
					let data = null;
					function callback(value) {
						if (!called) {
							called = true;
							data = value;
						}
					}
					window[name] = callback;
					const dataScript = document.createElementNS("http://www.w3.org/2000/svg", "script");
					dataScript.href = `${dataScriptUrl}&amp;callback=${name}`;
					function handleAbort(event) {
						delete window[name];
						dataScript.removeEventListener("error", handleError);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const reason = signal.reason;
						reject(reason);
					}
					function handleError(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const error = event.error;
						reject(error);
					}
					function handleLoad(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("error", handleError);
						dataScript.remove();
						resolve(data);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					dataScript.addEventListener("error", handleError, {
						once: true,
					});
					dataScript.addEventListener("load", handleLoad, {
						once: true,
					});
					script.after(dataScript);
				});
			}
			async function waitForTimeout(delay, signal) {
				signal.throwIfAborted();
				return await new Promise((resolve, reject) =&gt; {
					let timeout = null;
					function handleAbort() {
						clearTimeout(timeout);
						const reason = signal.reason;
						reject(reason);
					}
					function handleTimeout() {
						signal.removeEventListener("abort", handleAbort);
						resolve(delay);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					timeout = setTimeout(handleTimeout, delay);
				});
			}
			window.addEventListener("pageshow", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully restored page from cache`);
				} else {
					console.log(`Unsuccessfully restored page from cache`);
				}
			});
			window.addEventListener("pagehide", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully saved page to cache`);
				} else {
					console.log(`Unsuccessfully saved page to cache`);
				}
			});
			window.addEventListener("pageshow", async (event) =&gt; {
				const rootTitleElement = document.querySelector("title");
				const rootTitleContent = rootTitleElement.textContent;
				const pathTitleElements = Array.from(document.querySelectorAll("g &gt; path[tabindex]:first-of-type &gt; title"));
				const pathTitleContents = pathTitleElements.map((pathTitleElement) =&gt; {
					const pathTitleContent = pathTitleElement.textContent;
					return pathTitleContent;
				});
				const foreignObject = document.querySelector("foreignObject");
				const div = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
				div.dir = "ltr";
				const p = document.createElementNS("http://www.w3.org/1999/xhtml", "p");
				const label = document.createElementNS("http://www.w3.org/1999/xhtml", "label");
				const progress = document.createElementNS("http://www.w3.org/1999/xhtml", "progress");
				label.append(progress);
				const span = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
				span.textContent = "Loading names";
				label.append(span);
				p.append(label);
				div.append(p);
				foreignObject.prepend(div);
				let lock = false;
				let session = null;
				const broadcastChannel = new BroadcastChannel(sessionKey);
				const abortController = new AbortController();
				const signal = abortController.signal;
				const abort = abortController.abort.bind(abortController);
				const {promise, resolve} = Promise.withResolvers();
				broadcastChannel.addEventListener("message", (event) =&gt; {
					const data = event.data;
					const type = data.type;
					switch (type) {
						case "request": {
							if (lock &amp;&amp; signal.aborted) {
								broadcastChannel.postMessage({
									type: "response",
									session,
								});
							}
							break;
						}
						case "response": {
							if (!signal.aborted) {
								session = data.session;
								if (session != null) {
									const {players, leaderboards} = session;
									try {
										const cachedPlayers = JSON.stringify(players);
										const cachedLeaderboards = JSON.stringify(leaderboards);
										sessionStorage.setItem(playersKey, cachedPlayers);
										sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
									} catch {}
									console.log(`Successfully loaded names from peer`);
									abort();
									resolve();
								} else {
									console.log(`Unsuccessfully loaded names from peer`);
									abort();
									resolve();
								}
							}
							break;
						}
					}
				});
				try {
					const cachedPlayers = sessionStorage.getItem(playersKey);
					const cachedLeaderboards = sessionStorage.getItem(leaderboardsKey);
					if (cachedPlayers == null || cachedLeaderboards == null) {
						throw new Error();
					}
					const players = JSON.parse(cachedPlayers);
					const leaderboards = JSON.parse(cachedLeaderboards);
					session = {players, leaderboards};
				} catch {}
				if (session != null) {
					broadcastChannel.postMessage({
						type: "response",
						session,
					});
					console.log(`Successfully loaded names from local`);
					abort();
					resolve();
				} else {
					broadcastChannel.postMessage({
						type: "request",
					});
					console.log(`Unsuccessfully loaded names from local`);
				}
				(async () =&gt; {
					for (;;) {
						await navigator.locks.request(lockKey, async () =&gt; {
							lock = true;
							console.log(`Acquired lock`);
							if (!signal.aborted) {
								try {
									const players = Object.create(null);
									const leaderboards = Object.create(null);
									const games = ["9d3rrxyd", "w6jl2ned"];
									for (const gameId of games) {
										const {data} = await importDataScript(`https://www.speedrun.com/api/v1/games/${gameId}?embed=categories,levels,variables`, signal);
										const versions = data.variables.data.find((variable) =&gt; {
											return variable.name === "Version";
										});
										const levels = Object.fromEntries(data.levels.data.map((level) =&gt; {
											return [level.id, level];
										}));
										const categories = Object.fromEntries(data.categories.data.map((category) =&gt; {
											return [category.id, category];
										}));
										const variables = Object.fromEntries(data.variables.data.map((variable) =&gt; {
											return [variable.id, variable];
										}));
										console.log(`Got game`);
										await waitForTimeout(800, signal);
										const slice = 200;
										for (let offset = 0;; offset += slice) {
											const {data, pagination} = await importDataScript(`https://www.speedrun.com/api/v1/runs?game=${gameId}&amp;orderby=date&amp;direction=asc&amp;embed=players&amp;offset=${offset}&amp;max=${slice}`, signal);
											const {size} = pagination;
											if (size === 0) {
												break;
											}
											for (const run of data) {
												const status = run.status.status;
												if (status == null || status === "new") {
													continue;
												}
												const player = run.players.data[0].rel === "user" ? run.players.data[0].id : "814p2558";
												const playerName = run.players.data[0].rel === "user" ? run.players.data[0].names.international : "anonymous";
												players[player] ??= playerName;
												const level = run.level;
												const category = run.category;
												const values = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return `-${variable}.${value}`;
												});
												const leaderboard = `${level != null ? `l_${level}-` : ""}${category}${values.join("")}`;
												const levelName = run.level != null ? levels[run.level]?.name ?? null : null;
												const categoryName = categories[run.category]?.name ?? null;
												const valueNames = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return variables[variable]?.values.values[value]?.label ?? null;
												}).filter((valueName) =&gt; {
													return valueName != null;
												});
												const leaderboardName = `${levelName != null ? `${levelName}: ` : ""}${categoryName ?? ""}${values.length !== 0 ? ` - ${valueNames.join(", ")}` : ""}`;
												leaderboards[leaderboard] ??= leaderboardName;
											}
											console.log(`Got runs ${offset}-${offset + size - 1}`);
											await waitForTimeout(800, signal);
										}
									}
									session = {players, leaderboards};
								} catch {}
								if (!signal.aborted) {
									if (session != null) {
										const {players, leaderboards} = session;
										try {
											const cachedPlayers = JSON.stringify(players);
											const cachedLeaderboards = JSON.stringify(leaderboards);
											sessionStorage.setItem(playersKey, cachedPlayers);
											sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
										} catch {}
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Successfully loaded names from remote`);
										abort();
										resolve();
									} else {
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Unsuccessfully loaded names from remote`);
										abort();
										resolve();
									}
								}
							}
							await new Promise((resolve) =&gt; {
								window.addEventListener("beforeunload", () =&gt; {
									resolve();
								}, {
									once: true,
								});
							});
						});
						lock = false;
						console.log(`Released lock`);
						await new Promise((resolve) =&gt; {
							window.addEventListener("pagehide", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
						await new Promise((resolve) =&gt;{
							window.addEventListener("pageshow", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
					}
				})();
				await promise;
				if (session == null) {
					const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
					input.type = "checkbox";
					input.autocomplete = "off";
					input.disabled = true;
					input.indeterminate = true;
					progress.replaceWith(input);
					span.textContent = "Unavailable names";
					return;
				}
				const {players, leaderboards} = session;
				const hasPlayerRoot = rootTitleContent.includes(" for player");
				const hasLeaderboardRoot = rootTitleContent.includes(" for leaderboard");
				const rootTitle = {
					element: rootTitleElement,
					contentWithIds: rootTitleContent,
					contentWithNames: hasPlayerRoot ? rootTitleContent.replace(/ for player ([0-9_a-z]+)/, ($0, $1) =&gt; {
						return ` for player ${players[$1] ?? $1}`;
					}) : hasLeaderboardRoot ? rootTitleContent.replace(/ for leaderboard ((?:l_[0-9_a-z]+-)?[0-9_a-z]+(-[0-9_a-z]+\.[0-9_a-z]+)*)/, ($0, $1) =&gt; {
						return ` for leaderboard ${leaderboards[$1] ?? $1}`;
					}) : rootTitleContent,
				};
				const hasPlayerPaths = rootTitleContent.includes(" by player");
				const hasLeaderboardPaths = rootTitleContent.includes(" by leaderboard");
				const pathTitles = pathTitleElements.map((pathTitleElement, k) =&gt; {
					const pathTitleContent = pathTitleContents[k];
					const pathTitle = {
						element: pathTitleElement,
						contentWithIds: pathTitleContent,
						contentWithNames: hasPlayerPaths ? players[pathTitleContent] ?? pathTitleContent : hasLeaderboardPaths ? leaderboards[pathTitleContent] ?? pathTitleContent : pathTitleContent,
					};
					return pathTitle;
				});
				const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
				input.type = "checkbox";
				input.autocomplete = "off";
				input.addEventListener("change", () =&gt; {
					input.disabled = true;
					if (input.checked) {
						rootTitle.element.textContent = rootTitle.contentWithNames;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithNames;
						}
					} else {
						rootTitle.element.textContent = rootTitle.contentWithIds;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithIds;
						}
					}
					input.disabled = false;
				});
				progress.replaceWith(input);
				span.textContent = "Reveal names";
			}, {
				once: true,
			});
		}
	</script>
	<script>
		"use strict";
		{
			document.addEventListener("DOMContentLoaded", (event) =&gt; {
				const minDateText = document.querySelector("foreignObject &gt; svg:first-of-type &gt; text");
				const maxDateText = document.querySelector("foreignObject &gt; svg:first-of-type + svg &gt; text");
				const startX = Math.round(Date.parse(minDateText.textContent) / 86400000);
				function xToDate(x) {
					const datetime = new Date((startX + x) * 86400000);
					const year = `${datetime.getUTCFullYear()}`.padStart(4, "0");
					const month = `${datetime.getUTCMonth() + 1}`.padStart(2, "0");
					const day = `${datetime.getUTCDate()}`.padStart(2, "0");
					const date = `${year}-${month}-${day}`;
					const size = date.length * 10;
					return {date, size};
				}
				function setMinDate(x) {
					const {date, size} = xToDate(Math.floor(x));
					minDateText.textLength.baseVal.value = size;
					minDateText.textContent = date;
				}
				function setMaxDate(x) {
					const {date, size} = xToDate(Math.ceil(x));
					maxDateText.textLength.baseVal.value = size;
					maxDateText.textContent = date;
				}
				const minValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg &gt; text");
				const maxValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text");
				const timed = minValueText.textContent.includes(":");
				function yToValue(y) {
					if (timed) {
						const minutes = `${(y - y % 6000) / 6000}`.padStart(2, "0");
						const seconds = `${(y - y % 100) / 100 % 60}`.padStart(2, "0");
						const centiseconds = `${y % 100}`.padStart(2, "0");
						const value = `${minutes}:${seconds}.${centiseconds}`;
						const size = value.length * 10;
						return {value, size};
					} else {
						const value = `${y}`;
						const size = value.length * 10;
						return {value, size};
					}
				}
				function setMinValue(y) {
					const {value, size} = yToValue(Math.floor(y));
					minValueText.textLength.baseVal.value = size;
					minValueText.textContent = value;
				}
				function setMaxValue(y) {
					const {value, size} = yToValue(Math.ceil(y));
					maxValueText.textLength.baseVal.value = size;
					maxValueText.textContent = value;
				}
				const svg = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg + svg");
				svg.tabIndex = -1;
				svg.style.setProperty("outline", "0");
				if (CSS.supports("overflow-clip-margin", "8px")) {
					svg.style.setProperty("overflow", "clip");
					svg.style.setProperty("overflow-clip-margin", "8px");
				}
				svg.style.setProperty("touch-action", "none");
				const {x: baseX, y: baseY, width: baseWidth, height: baseHeight} = svg.viewBox.baseVal;
				let pointerCount = 0;
				const pointers = Object.create(null);
				const xPointerIds = [];
				const yPointerIds = [];
				let x = null;
				let y = null;
				let width = null;
				let height = null;
				svg.addEventListener("pointerdown", (event) =&gt; {
					const {pointerId} = event;
					if (pointerId in pointers) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.setPointerCapture(pointerId);
					++pointerCount;
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId] = {
						offsetX,
						offsetY,
					};
					xPointerIds.splice(xPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetX &lt;= offsetX;
					}) + 1, 0, pointerId);
					yPointerIds.splice(yPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetY &lt;= offsetY;
					}) + 1, 0, pointerId);
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					width = Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth);
					height = Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight);
					x = Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX);
					y = Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY);
				});
				svg.addEventListener("pointerup", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.releasePointerCapture(pointerId);
					--pointerCount;
					delete pointers[pointerId];
					xPointerIds.splice(xPointerIds.lastIndexOf(pointerId), 1);
					yPointerIds.splice(yPointerIds.lastIndexOf(pointerId), 1);
					const minOffsetX = pointerCount !== 0 ? pointers[xPointerIds[0]].offsetX : null;
					const minOffsetY = pointerCount !== 0 ? pointers[yPointerIds[0]].offsetY : null;
					const maxClientWidth = pointerCount !== 0 ? pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX : null;
					const maxClientHeight = pointerCount !== 0 ? pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY : null;
					width = pointerCount !== 0 ? Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth) : null;
					height = pointerCount !== 0 ? Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight) : null;
					x = pointerCount !== 0 ? Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX) : null;
					y = pointerCount !== 0 ? Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY) : null;
				});
				svg.addEventListener("pointermove", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					event.preventDefault();
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId].offsetX = offsetX;
					pointers[pointerId].offsetY = offsetY;
					const oldXIndex = xPointerIds.lastIndexOf(pointerId);
					let newXIndex = oldXIndex;
					while (newXIndex &gt; 0 &amp;&amp; pointers[xPointerIds[newXIndex - 1]].offsetX &gt; offsetX) {
						--newXIndex;
					}
					xPointerIds.copyWithin(newXIndex + 1, newXIndex, oldXIndex);
					xPointerIds[newXIndex] = pointerId;
					while (newXIndex &lt; pointerCount - 1 &amp;&amp; pointers[xPointerIds[newXIndex + 1]].offsetX &lt; offsetX) {
						++newXIndex;
					}
					xPointerIds.copyWithin(oldXIndex, oldXIndex + 1, newXIndex + 1);
					xPointerIds[newXIndex] = pointerId;
					const oldYIndex = yPointerIds.lastIndexOf(pointerId);
					let newYIndex = oldYIndex;
					while (newYIndex &gt; 0 &amp;&amp; pointers[yPointerIds[newYIndex - 1]].offsetY &gt; offsetY) {
						--newYIndex;
					}
					yPointerIds.copyWithin(newYIndex + 1, newYIndex, oldYIndex);
					yPointerIds[newYIndex] = pointerId;
					while (newYIndex &lt; pointerCount - 1 &amp;&amp; pointers[yPointerIds[newYIndex + 1]].offsetY &lt; offsetY) {
						++newYIndex;
					}
					yPointerIds.copyWithin(oldYIndex, oldYIndex + 1, newYIndex + 1);
					yPointerIds[newYIndex] = pointerId;
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					animWidth = width === 0 ? animWidth : maxClientWidth === 0 ? baseWidth : Math.min(svg.clientWidth / maxClientWidth * width, baseWidth);
					animHeight = height === 0 ? animHeight : maxClientHeight === 0 ? baseHeight : Math.min(svg.clientHeight / maxClientHeight * height, baseHeight);
					animX = Math.max(Math.min(x - minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(y - minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
				const zoomIntensity = 1.25;
				svg.addEventListener("wheel", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					if (!ctrlKey) {
						const vectorX = (shiftKey ? event.deltaY : event.deltaX) / svg.clientWidth * animWidth;
						const vectorY = (shiftKey ? 0 : event.deltaY) / svg.clientHeight * animHeight;
						animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
						animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
						svg.viewBox.baseVal.x = animX;
						svg.viewBox.baseVal.y = animY;
						setMinDate(animX);
						setMaxDate(animX + animWidth);
						setMinValue(baseY * 2 + baseHeight - animHeight - animY);
						setMaxValue(baseY * 2 + baseHeight - animY);
						return;
					}
					const ratioX = zoomIntensity ** Math.sign(shiftKey ? event.deltaY : event.deltaX);
					const ratioY = zoomIntensity ** Math.sign(shiftKey ? 0 : event.deltaY);
					const positionX = Math.max(0, Math.min(event.offsetX / svg.clientWidth, 1)) * animWidth;
					const positionY = Math.max(0, Math.min(event.offsetY / svg.clientHeight, 1)) * animHeight;
					animWidth = Math.min(animWidth * ratioX, baseWidth);
					animHeight = Math.min(animHeight * ratioY, baseHeight);
					animX = Math.max(Math.min(animX + positionX * (1 - ratioX), baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(animY + positionY * (1 - ratioY), baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				}, {
					passive: false,
				});
				svg.addEventListener("keydown", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					switch (event.code) {
						case "Space": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "Equal":
						case "NumpadAdd":
						case "Minus":
						case "NumpadSubtract": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.code === "Minus" || event.code === "NumpadSubtract" ? zoomIntensity : 1 / zoomIntensity;
							if (!shiftKey) {
								animHeight = Math.min(animHeight * ratio, baseHeight);
								animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "Digit0":
						case "Numpad0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							if (!shiftKey) {
								animY = baseY;
								animHeight = baseHeight;
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animX = baseX;
							animWidth = baseWidth;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
					}
					switch (event.key) {
						case "ArrowRight": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = 50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowLeft": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = -50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowDown": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = 50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "End": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY + baseHeight - animHeight;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "ArrowUp": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = -50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "Home": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "PageDown":
						case "PageUp":
						case " ": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = event.key === "PageUp" || event.key === " " &amp;&amp; shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "+":
						case "-": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.key === "-" ? 1 / zoomIntensity : zoomIntensity;
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animHeight = Math.min(animHeight * ratio, baseHeight);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animX = baseX;
							animY = baseY;
							animWidth = baseWidth;
							animHeight = baseHeight;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
					}
				});
				svg.addEventListener("focusin", (event) =&gt; {
					if (!event.target.matches(":focus-visible")) {
						return;
					}
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					let {x, y, width, height} = event.target.getBBox();
					width = Math.round(width);
					height = Math.round(height);
					x = Math.round(x);
					y = baseY * 2 + baseHeight - height - Math.round(y);
					if (x + width &lt; animX) {
						animX = x;
						if (width &gt; animWidth) {
							animX += (width - animWidth) / 2;
						}
					} else if (x &gt; animX + animWidth) {
						animX = x + width - animWidth;
						if (width &gt; animWidth) {
							animX -= (width - animWidth) / 2;
						}
					}
					if (y + height &lt; animY) {
						animY = y;
						if (height &gt; animHeight) {
							animY += (height - animHeight) / 2;
						}
					} else if (y &gt; animY + animHeight) {
						animY = y + height - animHeight;
						if (height &gt; animHeight) {
							animY -= (height - animHeight) / 2;
						}
					}
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
			}, {
				once: true,
			});
		}
	</script>
	<foreignObject x="0" y="0" width="100%" height="100%" style="--date-size: 100; --value-size: 20;">
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2018-01-15</text>
		</svg>
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2025-07-31</text>
		</svg>
		<svg viewBox="0 0 20 20">
			<text x="10" y="10" dx="0" dy="2" textLength="10" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">0</text>
		</svg>
		<svg viewBox="0 0 20 20">
			<text x="10" y="10" dx="0" dy="2" textLength="20" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">87</text>
		</svg>
		<svg viewBox="0 0 2754 87" preserveAspectRatio="none" overflow="visible">
			<g transform="translate(0 87) scale(1 -1)" style="--count: 88;">
				<g>
					<rect x="0" y="0" width="2754" height="87"/>
				</g>
				<g style="--index: 0;">
					<path d="M0,0L0,0L0,0L10,0L10,0L50,0L50,0L179,0L179,1L881,1L881,2L1027,2L1027,3L1040,3L1040,4L1066,4L1066,5L1109,5L1109,6L1176,6L1176,7L2168,7L2168,8L2725,8L2725,10L2728,10L2728,11L2729,11L2729,12L2730,12L2730,13L2741,13L2741,14L2746,14L2746,15L2750,15L2750,17L2751,17L2751,18L2754,18L2754,19L2754,19" tabindex="0">
						<title>qj2pq1p8</title>
					</path>
				</g>
				<g style="--index: 1;">
					<path d="M0,1L66,1L66,1L179,1L179,2L751,2L751,3L881,3L881,4L1027,4L1027,5L1040,5L1040,6L1052,6L1052,7L1066,7L1066,8L1109,8L1109,9L1143,9L1143,10L1176,10L1176,11L2168,11L2168,12L2725,12L2725,14L2728,14L2728,15L2729,15L2729,16L2730,16L2730,18L2736,18L2736,19L2741,19L2741,20L2745,20L2745,21L2746,21L2746,22L2750,22L2750,24L2751,24L2751,25L2754,25L2754,26L2754,26" tabindex="0">
						<title>18qg9ndx</title>
					</path>
				</g>
				<g style="--index: 2;">
					<path d="M0,2L179,2L179,0L881,0L881,1L1040,1L1040,2L1066,2L1066,3L1099,3L1099,4L1109,4L1109,5L1176,5L1176,6L2168,6L2168,7L2725,7L2725,9L2729,9L2729,10L2730,10L2730,11L2741,11L2741,12L2746,12L2746,13L2750,13L2750,15L2754,15L2754,16L2754,16" tabindex="0">
						<title>y8dgoe98</title>
					</path>
				</g>
				<g style="--index: 3;">
					<path d="M0,3L588,3L588,3L751,3L751,4L881,4L881,5L1027,5L1027,6L1040,6L1040,7L1052,7L1052,8L1066,8L1066,9L1109,9L1109,10L1143,10L1143,11L1176,11L1176,12L1249,12L1249,13L2168,13L2168,14L2725,14L2725,16L2728,16L2728,17L2729,17L2729,18L2730,18L2730,20L2736,20L2736,21L2741,21L2741,22L2745,22L2745,23L2746,23L2746,24L2750,24L2750,26L2751,26L2751,27L2754,27L2754,28L2754,28" tabindex="0">
						<title>j9rlkzoj</title>
					</path>
				</g>
				<g style="--index: 4;">
					<path d="M0,4L751,4L751,2L881,2L881,3L1027,3L1027,4L1040,4L1040,5L1052,5L1052,6L1066,6L1066,7L1109,7L1109,8L1143,8L1143,9L1176,9L1176,10L2168,10L2168,11L2725,11L2725,13L2728,13L2728,14L2729,14L2729,15L2730,15L2730,16L2741,16L2741,17L2745,17L2745,18L2746,18L2746,19L2750,19L2750,21L2751,21L2751,22L2754,22L2754,23L2754,23" tabindex="0">
						<title>8146r4r8</title>
					</path>
				</g>
				<g style="--index: 5;">
					<path d="M0,5L881,5L881,0L988,0L988,0L1040,0L1040,1L1109,1L1109,2L1176,2L1176,3L2168,3L2168,4L2725,4L2725,6L2729,6L2729,7L2730,7L2730,8L2746,8L2746,9L2750,9L2750,11L2754,11L2754,12L2754,12" tabindex="0">
						<title>x356nrej</title>
					</path>
				</g>
				<g style="--index: 6;">
					<path d="M0,6L1027,6L1027,2L1040,2L1040,3L1066,3L1066,4L1099,4L1099,2L1109,2L1109,3L1176,3L1176,4L2168,4L2168,5L2725,5L2725,7L2729,7L2729,8L2730,8L2730,9L2741,9L2741,10L2746,10L2746,11L2750,11L2750,13L2754,13L2754,14L2754,14" tabindex="0">
						<title>j0np7or8</title>
					</path>
				</g>
				<g style="--index: 7;">
					<path d="M0,7L1040,7L1040,0L1109,0L1109,1L1176,1L1176,2L2168,2L2168,3L2725,3L2725,5L2729,5L2729,6L2730,6L2730,7L2746,7L2746,8L2750,8L2750,10L2754,10L2754,11L2754,11" tabindex="0">
						<title>x7q00668</title>
					</path>
				</g>
				<g style="--index: 8;">
					<path d="M0,8L1052,8L1052,5L1066,5L1066,6L1109,6L1109,7L1176,7L1176,8L2168,8L2168,9L2725,9L2725,11L2728,11L2728,12L2729,12L2729,13L2730,13L2730,14L2741,14L2741,15L2746,15L2746,16L2750,16L2750,18L2751,18L2751,19L2754,19L2754,20L2754,20" tabindex="0">
						<title>j92wdlw8</title>
					</path>
				</g>
				<g style="--index: 9;">
					<path d="M0,9L1066,9L1066,2L1099,2L1099,3L1109,3L1109,4L1176,4L1176,5L2168,5L2168,6L2725,6L2725,8L2729,8L2729,9L2730,9L2730,10L2741,10L2741,11L2746,11L2746,12L2750,12L2750,14L2754,14L2754,15L2754,15" tabindex="0">
						<title>86ngl5wx</title>
					</path>
				</g>
				<g style="--index: 10;">
					<path d="M0,10L1109,10L1109,0L1176,0L1176,1L2168,1L2168,2L2725,2L2725,4L2729,4L2729,5L2730,5L2730,6L2746,6L2746,7L2750,7L2750,9L2754,9L2754,10L2754,10" tabindex="0">
						<title>xkon93k8</title>
					</path>
				</g>
				<g style="--index: 11;">
					<path d="M0,11L1143,11L1143,8L1176,8L1176,9L2168,9L2168,10L2725,10L2725,12L2728,12L2728,13L2729,13L2729,14L2730,14L2730,15L2741,15L2741,16L2745,16L2745,17L2746,17L2746,18L2750,18L2750,20L2751,20L2751,21L2754,21L2754,22L2754,22" tabindex="0">
						<title>8grypo7x</title>
					</path>
				</g>
				<g style="--index: 12;">
					<path d="M0,12L1176,12L1176,0L2168,0L2168,1L2725,1L2725,3L2729,3L2729,4L2730,4L2730,5L2746,5L2746,6L2750,6L2750,7L2754,7L2754,8L2754,8" tabindex="0">
						<title>814zn7l8</title>
					</path>
				</g>
				<g style="--index: 13;">
					<path d="M0,13L1249,13L1249,12L2168,12L2168,13L2725,13L2725,15L2728,15L2728,16L2729,16L2729,17L2730,17L2730,19L2736,19L2736,20L2741,20L2741,21L2745,21L2745,22L2746,22L2746,23L2750,23L2750,25L2751,25L2751,26L2754,26L2754,27L2754,27" tabindex="0">
						<title>x7mk3z6x</title>
					</path>
				</g>
				<g style="--index: 14;">
					<path d="M0,14L1369,14L1369,14L1514,14L1514,15L1630,15L1630,16L1870,16L1870,18L1871,18L1871,19L1897,19L1897,20L1907,20L1907,21L1908,21L1908,22L1966,22L1966,23L1980,23L1980,24L1981,24L1981,25L2239,25L2239,26L2346,26L2346,27L2381,27L2381,28L2418,28L2418,29L2419,29L2419,30L2449,30L2449,31L2550,31L2550,32L2569,32L2569,33L2597,33L2597,34L2615,34L2615,35L2619,35L2619,36L2722,36L2722,37L2725,37L2725,38L2728,38L2728,39L2729,39L2729,40L2730,40L2730,41L2735,41L2735,42L2736,42L2736,43L2741,43L2741,44L2745,44L2745,45L2746,45L2746,46L2750,46L2750,48L2751,48L2751,49L2754,49L2754,50L2754,50" tabindex="0">
						<title>8w16l2zx</title>
					</path>
				</g>
				<g style="--index: 15;">
					<path d="M0,15L1384,15L1384,15L1514,15L1514,16L1576,16L1576,17L1630,17L1630,18L1674,18L1674,19L1709,19L1709,20L1764,20L1764,21L1862,21L1862,22L1868,22L1868,23L1869,23L1869,24L1871,24L1871,25L1897,25L1897,26L1907,26L1907,27L1908,27L1908,28L1932,28L1932,29L1966,29L1966,30L1967,30L1967,31L1980,31L1980,32L2042,32L2042,33L2087,33L2087,34L2239,34L2239,35L2284,35L2284,36L2334,36L2334,37L2337,37L2337,38L2346,38L2346,39L2381,39L2381,40L2418,40L2418,41L2419,41L2419,42L2449,42L2449,43L2524,43L2524,44L2550,44L2550,45L2556,45L2556,46L2568,46L2568,47L2569,47L2569,48L2595,48L2595,49L2597,49L2597,50L2615,50L2615,51L2616,51L2616,52L2619,52L2619,53L2722,53L2722,54L2725,54L2725,55L2728,55L2728,56L2729,56L2729,57L2730,57L2730,58L2735,58L2735,59L2736,59L2736,60L2741,60L2741,61L2745,61L2745,62L2746,62L2746,63L2750,63L2750,65L2751,65L2751,66L2754,66L2754,67L2754,67" tabindex="0">
						<title>81qdl4lj</title>
					</path>
				</g>
				<g style="--index: 16;">
					<path d="M0,16L1514,16L1514,14L1630,14L1630,15L1871,15L1871,16L1897,16L1897,17L1953,17L1953,18L1980,18L1980,19L2346,19L2346,20L2381,20L2381,21L2418,21L2418,22L2449,22L2449,23L2597,23L2597,24L2608,24L2608,25L2615,25L2615,26L2619,26L2619,27L2722,27L2722,28L2725,28L2725,29L2728,29L2728,30L2729,30L2729,31L2730,31L2730,32L2735,32L2735,33L2736,33L2736,34L2741,34L2741,35L2745,35L2745,36L2746,36L2746,37L2750,37L2750,39L2751,39L2751,40L2754,40L2754,41L2754,41" tabindex="0">
						<title>866gn938</title>
					</path>
				</g>
				<g style="--index: 17;">
					<path d="M0,17L1516,17L1516,17L1576,17L1576,18L1630,18L1630,19L1674,19L1674,20L1709,20L1709,21L1764,21L1764,22L1862,22L1862,23L1868,23L1868,24L1869,24L1869,25L1871,25L1871,26L1897,26L1897,27L1907,27L1907,28L1908,28L1908,29L1932,29L1932,30L1966,30L1966,31L1967,31L1967,32L1980,32L1980,33L2008,33L2008,34L2042,34L2042,35L2087,35L2087,36L2239,36L2239,37L2252,37L2252,38L2284,38L2284,39L2334,39L2334,40L2337,40L2337,41L2346,41L2346,42L2381,42L2381,43L2418,43L2418,44L2419,44L2419,45L2449,45L2449,46L2524,46L2524,47L2550,47L2550,48L2556,48L2556,49L2568,49L2568,50L2569,50L2569,51L2595,51L2595,52L2597,52L2597,53L2614,53L2614,54L2615,54L2615,56L2616,56L2616,57L2619,57L2619,58L2722,58L2722,59L2725,59L2725,60L2728,60L2728,61L2729,61L2729,62L2730,62L2730,63L2735,63L2735,64L2736,64L2736,65L2741,65L2741,66L2745,66L2745,67L2746,67L2746,68L2750,68L2750,70L2751,70L2751,71L2754,71L2754,72L2754,72" tabindex="0">
						<title>8ek1yoo8</title>
					</path>
				</g>
				<g style="--index: 18;">
					<path d="M0,18L1576,18L1576,16L1630,16L1630,17L1674,17L1674,18L1869,18L1869,19L1870,19L1870,20L1871,20L1871,21L1897,21L1897,22L1907,22L1907,23L1908,23L1908,24L1966,24L1966,25L1967,25L1967,26L1980,26L1980,27L2087,27L2087,28L2239,28L2239,29L2284,29L2284,30L2334,30L2334,31L2346,31L2346,32L2381,32L2381,33L2418,33L2418,34L2419,34L2419,35L2449,35L2449,36L2524,36L2524,37L2550,37L2550,38L2556,38L2556,39L2568,39L2568,40L2569,40L2569,41L2595,41L2595,42L2597,42L2597,43L2615,43L2615,44L2619,44L2619,45L2722,45L2722,46L2725,46L2725,47L2728,47L2728,48L2729,48L2729,49L2730,49L2730,50L2735,50L2735,51L2736,51L2736,52L2741,52L2741,53L2745,53L2745,54L2746,54L2746,55L2750,55L2750,57L2751,57L2751,58L2754,58L2754,59L2754,59" tabindex="0">
						<title>8gm02d18</title>
					</path>
				</g>
				<g style="--index: 19;">
					<path d="M0,19L1630,19L1630,14L2168,14L2168,15L2441,15L2441,16L2622,16L2622,17L2722,17L2722,18L2725,18L2725,19L2728,19L2728,20L2729,20L2729,21L2730,21L2730,22L2735,22L2735,23L2736,23L2736,24L2741,24L2741,25L2745,25L2745,26L2746,26L2746,27L2750,27L2750,29L2751,29L2751,30L2754,30L2754,31L2754,31" tabindex="0">
						<title>joovynnj</title>
					</path>
				</g>
				<g style="--index: 20;">
					<path d="M0,20L1674,20L1674,17L1869,17L1869,18L1870,18L1870,19L1871,19L1871,20L1897,20L1897,21L1907,21L1907,22L1908,22L1908,23L1966,23L1966,24L1980,24L1980,25L1981,25L1981,26L2087,26L2087,27L2239,27L2239,28L2284,28L2284,29L2334,29L2334,30L2346,30L2346,31L2381,31L2381,32L2418,32L2418,33L2419,33L2419,34L2449,34L2449,35L2524,35L2524,36L2550,36L2550,37L2569,37L2569,38L2595,38L2595,39L2597,39L2597,40L2615,40L2615,41L2619,41L2619,42L2722,42L2722,43L2725,43L2725,44L2728,44L2728,45L2729,45L2729,46L2730,46L2730,47L2735,47L2735,48L2736,48L2736,49L2741,49L2741,50L2745,50L2745,51L2746,51L2746,52L2750,52L2750,54L2751,54L2751,55L2754,55L2754,56L2754,56" tabindex="0">
						<title>j9p1q7ox</title>
					</path>
				</g>
				<g style="--index: 21;">
					<path d="M0,21L1709,21L1709,19L1764,19L1764,20L1862,20L1862,21L1868,21L1868,22L1869,22L1869,23L1871,23L1871,24L1897,24L1897,25L1907,25L1907,26L1908,26L1908,27L1966,27L1966,28L1967,28L1967,29L1980,29L1980,30L2042,30L2042,31L2087,31L2087,32L2239,32L2239,33L2284,33L2284,34L2334,34L2334,35L2337,35L2337,36L2346,36L2346,37L2381,37L2381,38L2418,38L2418,39L2419,39L2419,40L2449,40L2449,41L2524,41L2524,42L2550,42L2550,43L2556,43L2556,44L2568,44L2568,45L2569,45L2569,46L2595,46L2595,47L2597,47L2597,48L2615,48L2615,49L2616,49L2616,50L2619,50L2619,51L2722,51L2722,52L2725,52L2725,53L2728,53L2728,54L2729,54L2729,55L2730,55L2730,56L2735,56L2735,57L2736,57L2736,58L2741,58L2741,59L2745,59L2745,60L2746,60L2746,61L2750,61L2750,63L2751,63L2751,64L2754,64L2754,65L2754,65" tabindex="0">
						<title>xk115v9j</title>
					</path>
				</g>
				<g style="--index: 22;">
					<path d="M0,22L1764,22L1764,19L1869,19L1869,20L1870,20L1870,21L1871,21L1871,22L1897,22L1897,23L1907,23L1907,24L1908,24L1908,25L1966,25L1966,26L1967,26L1967,27L1980,27L1980,28L2087,28L2087,29L2239,29L2239,30L2284,30L2284,31L2334,31L2334,32L2346,32L2346,33L2381,33L2381,34L2418,34L2418,35L2419,35L2419,36L2449,36L2449,37L2524,37L2524,38L2550,38L2550,39L2556,39L2556,40L2568,40L2568,41L2569,41L2569,42L2595,42L2595,43L2597,43L2597,44L2615,44L2615,45L2619,45L2619,46L2722,46L2722,47L2725,47L2725,48L2728,48L2728,49L2729,49L2729,50L2730,50L2730,51L2735,51L2735,52L2736,52L2736,53L2741,53L2741,54L2745,54L2745,55L2746,55L2746,56L2750,56L2750,58L2751,58L2751,59L2754,59L2754,60L2754,60" tabindex="0">
						<title>8rlrzvd8</title>
					</path>
				</g>
				<g style="--index: 23;">
					<path d="M0,23L1800,23L1800,23L1862,23L1862,24L1868,24L1868,25L1869,25L1869,26L1871,26L1871,27L1897,27L1897,28L1907,28L1907,29L1908,29L1908,30L1932,30L1932,31L1966,31L1966,32L1967,32L1967,33L1980,33L1980,34L2008,34L2008,35L2042,35L2042,36L2087,36L2087,37L2239,37L2239,38L2252,38L2252,39L2284,39L2284,40L2334,40L2334,41L2337,41L2337,42L2346,42L2346,43L2381,43L2381,44L2418,44L2418,45L2419,45L2419,46L2449,46L2449,47L2524,47L2524,48L2550,48L2550,49L2556,49L2556,50L2568,50L2568,51L2569,51L2569,52L2595,52L2595,53L2597,53L2597,54L2614,54L2614,55L2615,55L2615,57L2616,57L2616,58L2619,58L2619,59L2722,59L2722,60L2725,60L2725,61L2728,61L2728,62L2729,62L2729,63L2730,63L2730,64L2735,64L2735,65L2736,65L2736,66L2741,66L2741,67L2745,67L2745,68L2746,68L2746,69L2750,69L2750,71L2751,71L2751,72L2754,72L2754,73L2754,73" tabindex="0">
						<title>8qoz5eoj</title>
					</path>
				</g>
				<g style="--index: 24;">
					<path d="M0,24L1807,24L1807,24L1862,24L1862,25L1867,25L1867,26L1868,26L1868,27L1869,27L1869,28L1871,28L1871,29L1891,29L1891,30L1897,30L1897,31L1907,31L1907,32L1908,32L1908,33L1932,33L1932,34L1933,34L1933,35L1957,35L1957,36L1966,36L1966,37L1980,37L1980,38L2008,38L2008,39L2042,39L2042,40L2087,40L2087,41L2239,41L2239,42L2252,42L2252,43L2284,43L2284,44L2334,44L2334,45L2337,45L2337,46L2346,46L2346,47L2381,47L2381,48L2392,48L2392,49L2418,49L2418,50L2419,50L2419,52L2449,52L2449,53L2485,53L2485,54L2521,54L2521,55L2524,55L2524,56L2550,56L2550,57L2556,57L2556,58L2566,58L2566,59L2568,59L2568,60L2569,60L2569,61L2593,61L2593,62L2595,62L2595,63L2596,63L2596,64L2597,64L2597,65L2614,65L2614,66L2615,66L2615,67L2616,67L2616,68L2619,68L2619,69L2653,69L2653,70L2722,70L2722,71L2725,71L2725,72L2728,72L2728,73L2729,73L2729,74L2730,74L2730,75L2735,75L2735,76L2736,76L2736,77L2741,77L2741,78L2745,78L2745,79L2746,79L2746,80L2750,80L2750,82L2751,82L2751,83L2754,83L2754,84L2754,84" tabindex="0">
						<title>xz0v5kn8</title>
					</path>
				</g>
				<g style="--index: 25;">
					<path d="M0,25L1862,25L1862,20L1869,20L1869,21L1870,21L1870,16L1871,16L1871,17L1897,17L1897,18L1907,18L1907,19L1908,19L1908,20L1953,20L1953,17L1957,17L1957,15L1980,15L1980,16L2381,16L2381,17L2418,17L2418,19L2441,19L2441,20L2622,20L2622,21L2633,21L2633,22L2722,22L2722,23L2725,23L2725,24L2728,24L2728,25L2729,25L2729,26L2730,26L2730,27L2735,27L2735,28L2736,28L2736,29L2741,29L2741,30L2745,30L2745,31L2746,31L2746,32L2750,32L2750,34L2751,34L2751,35L2754,35L2754,36L2754,36" tabindex="0">
						<title>8640og3j</title>
					</path>
				</g>
				<g style="--index: 26;">
					<path d="M0,26L1867,26L1867,25L1868,25L1868,26L1869,26L1869,27L1871,27L1871,28L1897,28L1897,29L1907,29L1907,30L1908,30L1908,31L1932,31L1932,32L1933,32L1933,33L1957,33L1957,34L1966,34L1966,35L1980,35L1980,36L2008,36L2008,37L2042,37L2042,38L2087,38L2087,39L2239,39L2239,40L2252,40L2252,41L2284,41L2284,42L2334,42L2334,43L2337,43L2337,44L2346,44L2346,45L2381,45L2381,46L2392,46L2392,47L2418,47L2418,48L2419,48L2419,49L2449,49L2449,50L2521,50L2521,51L2524,51L2524,52L2550,52L2550,53L2556,53L2556,54L2566,54L2566,55L2568,55L2568,56L2569,56L2569,57L2593,57L2593,58L2595,58L2595,59L2596,59L2596,60L2597,60L2597,61L2614,61L2614,62L2615,62L2615,63L2616,63L2616,64L2619,64L2619,65L2653,65L2653,66L2722,66L2722,67L2725,67L2725,68L2728,68L2728,69L2729,69L2729,70L2730,70L2730,71L2735,71L2735,72L2736,72L2736,73L2741,73L2741,74L2745,74L2745,75L2746,75L2746,76L2750,76L2750,78L2751,78L2751,79L2754,79L2754,80L2754,80" tabindex="0">
						<title>j9p7powx</title>
					</path>
				</g>
				<g style="--index: 27;">
					<path d="M0,27L1868,27L1868,21L1869,21L1869,22L1871,22L1871,23L1897,23L1897,24L1907,24L1907,25L1908,25L1908,26L1966,26L1966,27L1967,27L1967,28L1980,28L1980,29L2042,29L2042,30L2087,30L2087,31L2239,31L2239,32L2284,32L2284,33L2334,33L2334,34L2337,34L2337,35L2346,35L2346,36L2381,36L2381,37L2418,37L2418,38L2419,38L2419,39L2449,39L2449,40L2524,40L2524,41L2550,41L2550,42L2556,42L2556,43L2568,43L2568,44L2569,44L2569,45L2595,45L2595,46L2597,46L2597,47L2615,47L2615,48L2616,48L2616,49L2619,49L2619,50L2722,50L2722,51L2725,51L2725,52L2728,52L2728,53L2729,53L2729,54L2730,54L2730,55L2735,55L2735,56L2736,56L2736,57L2741,57L2741,58L2745,58L2745,59L2746,59L2746,60L2750,60L2750,62L2751,62L2751,63L2754,63L2754,64L2754,64" tabindex="0">
						<title>xk349668</title>
					</path>
				</g>
				<g style="--index: 28;">
					<path d="M0,28L1869,28L1869,17L1870,17L1870,17L1871,17L1871,18L1897,18L1897,19L1907,19L1907,20L1908,20L1908,21L1966,21L1966,22L1980,22L1980,23L1981,23L1981,24L2239,24L2239,25L2346,25L2346,26L2381,26L2381,27L2418,27L2418,28L2419,28L2419,29L2449,29L2449,30L2550,30L2550,31L2597,31L2597,32L2615,32L2615,33L2619,33L2619,34L2722,34L2722,35L2725,35L2725,36L2728,36L2728,37L2729,37L2729,38L2730,38L2730,39L2735,39L2735,40L2736,40L2736,41L2741,41L2741,42L2745,42L2745,43L2746,43L2746,44L2750,44L2750,46L2751,46L2751,47L2754,47L2754,48L2754,48" tabindex="0">
						<title>j9p3ykox</title>
					</path>
				</g>
				<g style="--index: 29;">
					<path d="M0,29L1871,29L1871,15L1897,15L1897,16L1957,16L1957,17L1980,17L1980,18L2346,18L2346,19L2381,19L2381,20L2418,20L2418,21L2597,21L2597,22L2608,22L2608,23L2615,23L2615,24L2619,24L2619,25L2722,25L2722,26L2725,26L2725,27L2728,27L2728,28L2729,28L2729,29L2730,29L2730,30L2735,30L2735,31L2736,31L2736,32L2741,32L2741,33L2745,33L2745,34L2746,34L2746,35L2750,35L2750,37L2751,37L2751,38L2754,38L2754,39L2754,39" tabindex="0">
						<title>8q6k30oj</title>
					</path>
				</g>
				<g style="--index: 30;">
					<path d="M0,30L1891,30L1891,29L1897,29L1897,30L1907,30L1907,31L1908,31L1908,32L1932,32L1932,33L1933,33L1933,34L1957,34L1957,35L1966,35L1966,36L1980,36L1980,37L2008,37L2008,38L2042,38L2042,39L2087,39L2087,40L2239,40L2239,41L2252,41L2252,42L2284,42L2284,43L2334,43L2334,44L2337,44L2337,45L2346,45L2346,46L2381,46L2381,47L2392,47L2392,48L2418,48L2418,49L2419,49L2419,50L2449,50L2449,51L2485,51L2485,52L2521,52L2521,53L2524,53L2524,54L2550,54L2550,55L2556,55L2556,56L2566,56L2566,57L2568,57L2568,58L2569,58L2569,59L2593,59L2593,60L2595,60L2595,61L2596,61L2596,62L2597,62L2597,63L2614,63L2614,64L2615,64L2615,65L2616,65L2616,66L2619,66L2619,67L2653,67L2653,68L2722,68L2722,69L2725,69L2725,70L2728,70L2728,71L2729,71L2729,72L2730,72L2730,73L2735,73L2735,74L2736,74L2736,75L2741,75L2741,76L2745,76L2745,77L2746,77L2746,78L2750,78L2750,80L2751,80L2751,81L2754,81L2754,82L2754,82" tabindex="0">
						<title>joneez78</title>
					</path>
				</g>
				<g style="--index: 31;">
					<path d="M0,31L1897,31L1897,15L1957,15L1957,16L1980,16L1980,17L2381,17L2381,18L2418,18L2418,20L2441,20L2441,15L2725,15L2725,17L2728,17L2728,18L2729,18L2729,19L2730,19L2730,21L2735,21L2735,22L2736,22L2736,23L2741,23L2741,24L2745,24L2745,25L2746,25L2746,26L2750,26L2750,28L2751,28L2751,29L2754,29L2754,30L2754,30" tabindex="0">
						<title>j4235d5x</title>
					</path>
				</g>
				<g style="--index: 32;">
					<path d="M0,32L1907,32L1907,18L1953,18L1953,19L1980,19L1980,20L2346,20L2346,21L2381,21L2381,22L2418,22L2418,23L2449,23L2449,24L2550,24L2550,25L2597,25L2597,26L2608,26L2608,27L2615,27L2615,28L2619,28L2619,29L2722,29L2722,30L2725,30L2725,31L2728,31L2728,32L2729,32L2729,33L2730,33L2730,34L2735,34L2735,35L2736,35L2736,36L2741,36L2741,37L2745,37L2745,38L2746,38L2746,39L2750,39L2750,41L2751,41L2751,42L2754,42L2754,43L2754,43" tabindex="0">
						<title>j9pkl7vx</title>
					</path>
				</g>
				<g style="--index: 33;">
					<path d="M0,33L1908,33L1908,19L1953,19L1953,20L1980,20L1980,21L1981,21L1981,22L2346,22L2346,23L2381,23L2381,24L2418,24L2418,25L2449,25L2449,26L2550,26L2550,27L2597,27L2597,28L2608,28L2608,29L2615,29L2615,30L2619,30L2619,31L2722,31L2722,32L2725,32L2725,33L2728,33L2728,34L2729,34L2729,35L2730,35L2730,36L2735,36L2735,37L2736,37L2736,38L2741,38L2741,39L2745,39L2745,40L2746,40L2746,41L2750,41L2750,43L2751,43L2751,44L2754,44L2754,45L2754,45" tabindex="0">
						<title>8g072p2x</title>
					</path>
				</g>
				<g style="--index: 34;">
					<path d="M0,34L1932,34L1932,28L1966,28L1966,29L1967,29L1967,30L1980,30L1980,31L2042,31L2042,32L2087,32L2087,33L2239,33L2239,34L2284,34L2284,35L2334,35L2334,36L2337,36L2337,37L2346,37L2346,38L2381,38L2381,39L2418,39L2418,40L2419,40L2419,41L2449,41L2449,42L2524,42L2524,43L2550,43L2550,44L2556,44L2556,45L2568,45L2568,46L2569,46L2569,47L2595,47L2595,48L2597,48L2597,49L2615,49L2615,50L2616,50L2616,51L2619,51L2619,52L2722,52L2722,53L2725,53L2725,54L2728,54L2728,55L2729,55L2729,56L2730,56L2730,57L2735,57L2735,58L2736,58L2736,59L2741,59L2741,60L2745,60L2745,61L2746,61L2746,62L2750,62L2750,64L2751,64L2751,65L2754,65L2754,66L2754,66" tabindex="0">
						<title>8g0qr57x</title>
					</path>
				</g>
				<g style="--index: 35;">
					<path d="M0,35L1933,35L1933,32L1966,32L1966,33L1967,33L1967,34L1980,34L1980,35L2008,35L2008,36L2042,36L2042,37L2087,37L2087,38L2239,38L2239,39L2252,39L2252,40L2284,40L2284,41L2334,41L2334,42L2337,42L2337,43L2346,43L2346,44L2381,44L2381,45L2418,45L2418,46L2419,46L2419,47L2449,47L2449,48L2524,48L2524,49L2535,49L2535,50L2550,50L2550,51L2556,51L2556,52L2568,52L2568,53L2569,53L2569,54L2593,54L2593,55L2595,55L2595,56L2596,56L2596,57L2597,57L2597,58L2614,58L2614,59L2615,59L2615,60L2616,60L2616,61L2619,61L2619,62L2653,62L2653,63L2722,63L2722,64L2725,64L2725,65L2728,65L2728,66L2729,66L2729,67L2730,67L2730,68L2735,68L2735,69L2736,69L2736,70L2741,70L2741,71L2745,71L2745,72L2746,72L2746,73L2750,73L2750,75L2751,75L2751,76L2754,76L2754,77L2754,77" tabindex="0">
						<title>8ew394p8</title>
					</path>
				</g>
				<g style="--index: 36;">
					<path d="M0,36L1957,36L1957,33L1966,33L1966,34L1967,34L1967,25L1980,25L1980,26L1981,26L1981,21L2346,21L2346,22L2381,22L2381,23L2418,23L2418,24L2449,24L2449,25L2550,25L2550,26L2597,26L2597,27L2608,27L2608,28L2615,28L2615,29L2619,29L2619,30L2722,30L2722,31L2725,31L2725,32L2728,32L2728,33L2729,33L2729,34L2730,34L2730,35L2735,35L2735,36L2736,36L2736,37L2741,37L2741,38L2745,38L2745,39L2746,39L2746,40L2750,40L2750,42L2751,42L2751,43L2754,43L2754,44L2754,44" tabindex="0">
						<title>xyodgvzj</title>
					</path>
				</g>
				<g style="--index: 37;">
					<path d="M0,37L1966,37L1966,21L1980,21L1980,22L1981,22L1981,23L2239,23L2239,24L2346,24L2346,25L2381,25L2381,26L2418,26L2418,27L2419,27L2419,28L2449,28L2449,29L2550,29L2550,30L2597,30L2597,31L2615,31L2615,32L2619,32L2619,33L2722,33L2722,34L2725,34L2725,35L2728,35L2728,36L2729,36L2729,37L2730,37L2730,38L2735,38L2735,39L2736,39L2736,40L2741,40L2741,41L2745,41L2745,42L2746,42L2746,43L2750,43L2750,45L2751,45L2751,46L2754,46L2754,47L2754,47" tabindex="0">
						<title>8w049n3j</title>
					</path>
				</g>
				<g style="--index: 38;">
					<path d="M0,38L1980,38L1980,15L2168,15L2168,0L2725,0L2725,2L2729,2L2729,3L2730,3L2730,4L2746,4L2746,5L2750,5L2750,6L2754,6L2754,7L2754,7" tabindex="0">
						<title>jn2m23wj</title>
					</path>
				</g>
				<g style="--index: 39;">
					<path d="M0,39L2008,39L2008,33L2042,33L2042,34L2087,34L2087,35L2239,35L2239,36L2252,36L2252,37L2284,37L2284,38L2334,38L2334,39L2337,39L2337,40L2346,40L2346,41L2381,41L2381,42L2418,42L2418,43L2419,43L2419,44L2449,44L2449,45L2524,45L2524,46L2550,46L2550,47L2556,47L2556,48L2568,48L2568,49L2569,49L2569,50L2595,50L2595,51L2597,51L2597,52L2615,52L2615,54L2616,54L2616,55L2619,55L2619,56L2722,56L2722,57L2725,57L2725,58L2728,58L2728,59L2729,59L2729,60L2730,60L2730,61L2735,61L2735,62L2736,62L2736,63L2741,63L2741,64L2745,64L2745,65L2746,65L2746,66L2750,66L2750,68L2751,68L2751,69L2754,69L2754,70L2754,70" tabindex="0">
						<title>8v05z9yx</title>
					</path>
				</g>
				<g style="--index: 40;">
					<path d="M0,40L2042,40L2042,29L2087,29L2087,30L2239,30L2239,31L2284,31L2284,32L2334,32L2334,33L2346,33L2346,34L2381,34L2381,35L2418,35L2418,36L2419,36L2419,37L2449,37L2449,38L2524,38L2524,39L2550,39L2550,40L2556,40L2556,41L2568,41L2568,42L2569,42L2569,43L2595,43L2595,44L2597,44L2597,45L2615,45L2615,46L2619,46L2619,47L2722,47L2722,48L2725,48L2725,49L2728,49L2728,50L2729,50L2729,51L2730,51L2730,52L2735,52L2735,53L2736,53L2736,54L2741,54L2741,55L2745,55L2745,56L2746,56L2746,57L2750,57L2750,59L2751,59L2751,60L2754,60L2754,61L2754,61" tabindex="0">
						<title>jon0m6l8</title>
					</path>
				</g>
				<g style="--index: 41;">
					<path d="M0,41L2087,41L2087,26L2239,26L2239,27L2334,27L2334,28L2346,28L2346,29L2381,29L2381,30L2418,30L2418,31L2419,31L2419,32L2449,32L2449,33L2524,33L2524,34L2550,34L2550,35L2569,35L2569,36L2597,36L2597,37L2615,37L2615,38L2619,38L2619,39L2722,39L2722,40L2725,40L2725,41L2728,41L2728,42L2729,42L2729,43L2730,43L2730,44L2735,44L2735,45L2736,45L2736,46L2741,46L2741,47L2745,47L2745,48L2746,48L2746,49L2750,49L2750,51L2751,51L2751,52L2754,52L2754,53L2754,53" tabindex="0">
						<title>8v02q3nx</title>
					</path>
				</g>
				<g style="--index: 42;">
					<path d="M0,42L2155,42L2155,42L2239,42L2239,43L2252,43L2252,44L2284,44L2284,45L2334,45L2334,46L2335,46L2335,47L2337,47L2337,48L2346,48L2346,49L2381,49L2381,50L2392,50L2392,51L2418,51L2418,52L2419,52L2419,54L2449,54L2449,55L2485,55L2485,56L2521,56L2521,57L2524,57L2524,58L2550,58L2550,59L2556,59L2556,60L2566,60L2566,61L2568,61L2568,62L2569,62L2569,63L2593,63L2593,64L2595,64L2595,65L2596,65L2596,66L2597,66L2597,67L2614,67L2614,68L2615,68L2615,69L2616,69L2616,70L2619,70L2619,71L2653,71L2653,72L2722,72L2722,73L2725,73L2725,74L2728,74L2728,75L2729,75L2729,76L2730,76L2730,77L2735,77L2735,78L2736,78L2736,79L2741,79L2741,80L2745,80L2745,81L2746,81L2746,82L2750,82L2750,84L2751,84L2751,85L2754,85L2754,86L2754,86" tabindex="0">
						<title>x77ee56x</title>
					</path>
				</g>
				<g style="--index: 43;">
					<path d="M0,43L2239,43L2239,23L2346,23L2346,24L2381,24L2381,25L2418,25L2418,26L2419,26L2419,27L2449,27L2449,28L2550,28L2550,29L2597,29L2597,30L2608,30L2608,21L2619,21L2619,22L2622,22L2622,23L2633,23L2633,21L2722,21L2722,22L2725,22L2725,23L2728,23L2728,24L2729,24L2729,25L2730,25L2730,26L2735,26L2735,27L2736,27L2736,28L2741,28L2741,29L2745,29L2745,30L2746,30L2746,31L2750,31L2750,33L2751,33L2751,34L2754,34L2754,35L2754,35" tabindex="0">
						<title>8w3l21qj</title>
					</path>
				</g>
				<g style="--index: 44;">
					<path d="M0,44L2252,44L2252,36L2284,36L2284,37L2334,37L2334,38L2337,38L2337,39L2346,39L2346,40L2381,40L2381,41L2418,41L2418,42L2419,42L2419,43L2449,43L2449,44L2524,44L2524,45L2550,45L2550,46L2556,46L2556,47L2568,47L2568,48L2569,48L2569,49L2595,49L2595,50L2597,50L2597,51L2615,51L2615,52L2616,52L2616,53L2619,53L2619,54L2722,54L2722,55L2725,55L2725,56L2728,56L2728,57L2729,57L2729,58L2730,58L2730,59L2735,59L2735,60L2736,60L2736,61L2741,61L2741,62L2745,62L2745,63L2746,63L2746,64L2750,64L2750,66L2751,66L2751,67L2754,67L2754,68L2754,68" tabindex="0">
						<title>xz22lw4x</title>
					</path>
				</g>
				<g style="--index: 45;">
					<path d="M0,45L2284,45L2284,28L2334,28L2334,29L2346,29L2346,30L2381,30L2381,31L2418,31L2418,32L2419,32L2419,33L2449,33L2449,34L2524,34L2524,35L2550,35L2550,36L2569,36L2569,37L2595,37L2595,38L2597,38L2597,39L2615,39L2615,40L2619,40L2619,41L2722,41L2722,42L2725,42L2725,43L2728,43L2728,44L2729,44L2729,45L2730,45L2730,46L2735,46L2735,47L2736,47L2736,48L2741,48L2741,49L2745,49L2745,50L2746,50L2746,51L2750,51L2750,53L2751,53L2751,54L2754,54L2754,55L2754,55" tabindex="0">
						<title>j46k93w8</title>
					</path>
				</g>
				<g style="--index: 46;">
					<path d="M0,46L2334,46L2334,27L2346,27L2346,28L2381,28L2381,29L2418,29L2418,30L2419,30L2419,31L2449,31L2449,32L2550,32L2550,33L2569,33L2569,34L2597,34L2597,35L2615,35L2615,36L2619,36L2619,37L2722,37L2722,38L2725,38L2725,39L2728,39L2728,40L2729,40L2729,41L2730,41L2730,42L2735,42L2735,43L2736,43L2736,44L2741,44L2741,45L2745,45L2745,46L2746,46L2746,47L2750,47L2750,49L2751,49L2751,50L2754,50L2754,51L2754,51" tabindex="0">
						<title>8eep62p8</title>
					</path>
				</g>
				<g style="--index: 47;">
					<path d="M0,47L2335,47L2335,46L2337,46L2337,47L2346,47L2346,48L2381,48L2381,49L2392,49L2392,50L2418,50L2418,51L2419,51L2419,53L2449,53L2449,54L2485,54L2485,55L2521,55L2521,56L2524,56L2524,57L2550,57L2550,58L2556,58L2556,59L2566,59L2566,60L2568,60L2568,61L2569,61L2569,62L2593,62L2593,63L2595,63L2595,64L2596,64L2596,65L2597,65L2597,66L2614,66L2614,67L2615,67L2615,68L2616,68L2616,69L2619,69L2619,70L2653,70L2653,71L2722,71L2722,72L2725,72L2725,73L2728,73L2728,74L2729,74L2729,75L2730,75L2730,76L2735,76L2735,77L2736,77L2736,78L2741,78L2741,79L2745,79L2745,80L2746,80L2746,81L2750,81L2750,83L2751,83L2751,84L2754,84L2754,85L2754,85" tabindex="0">
						<title>8g2w027j</title>
					</path>
				</g>
				<g style="--index: 48;">
					<path d="M0,48L2337,48L2337,34L2346,34L2346,35L2381,35L2381,36L2418,36L2418,37L2419,37L2419,38L2449,38L2449,39L2524,39L2524,40L2550,40L2550,41L2556,41L2556,42L2568,42L2568,43L2569,43L2569,44L2595,44L2595,45L2597,45L2597,46L2615,46L2615,47L2619,47L2619,48L2722,48L2722,49L2725,49L2725,50L2728,50L2728,51L2729,51L2729,52L2730,52L2730,53L2735,53L2735,54L2736,54L2736,55L2741,55L2741,56L2745,56L2745,57L2746,57L2746,58L2750,58L2750,60L2751,60L2751,61L2754,61L2754,62L2754,62" tabindex="0">
						<title>86rq7yw8</title>
					</path>
				</g>
				<g style="--index: 49;">
					<path d="M0,49L2346,49L2346,18L2381,18L2381,19L2418,19L2418,17L2441,17L2441,18L2622,18L2622,19L2722,19L2722,20L2725,20L2725,21L2728,21L2728,22L2729,22L2729,23L2730,23L2730,24L2735,24L2735,25L2736,25L2736,26L2741,26L2741,27L2745,27L2745,28L2746,28L2746,29L2750,29L2750,31L2751,31L2751,32L2754,32L2754,33L2754,33" tabindex="0">
						<title>8v0mryvx</title>
					</path>
				</g>
				<g style="--index: 50;">
					<path d="M0,50L2381,50L2381,16L2441,16L2441,17L2622,17L2622,18L2722,18L2722,19L2725,19L2725,20L2728,20L2728,21L2729,21L2729,22L2730,22L2730,23L2735,23L2735,24L2736,24L2736,25L2741,25L2741,26L2745,26L2745,27L2746,27L2746,28L2750,28L2750,30L2751,30L2751,31L2754,31L2754,32L2754,32" tabindex="0">
						<title>86rpw3p8</title>
					</path>
				</g>
				<g style="--index: 51;">
					<path d="M0,51L2392,51L2392,46L2418,46L2418,47L2419,47L2419,48L2449,48L2449,49L2521,49L2521,50L2524,50L2524,51L2550,51L2550,52L2556,52L2556,53L2568,53L2568,54L2569,54L2569,55L2593,55L2593,56L2595,56L2595,57L2596,57L2596,58L2597,58L2597,59L2614,59L2614,60L2615,60L2615,61L2616,61L2616,62L2619,62L2619,63L2653,63L2653,64L2722,64L2722,65L2725,65L2725,66L2728,66L2728,67L2729,67L2729,68L2730,68L2730,69L2735,69L2735,70L2736,70L2736,71L2741,71L2741,72L2745,72L2745,73L2746,73L2746,74L2750,74L2750,76L2751,76L2751,77L2754,77L2754,78L2754,78" tabindex="0">
						<title>xzyl2k9j</title>
					</path>
				</g>
				<g style="--index: 52;">
					<path d="M0,52L2418,52L2418,18L2441,18L2441,19L2622,19L2622,20L2722,20L2722,21L2725,21L2725,22L2728,22L2728,23L2729,23L2729,24L2730,24L2730,25L2735,25L2735,26L2736,26L2736,27L2741,27L2741,28L2745,28L2745,29L2746,29L2746,30L2750,30L2750,32L2751,32L2751,33L2754,33L2754,34L2754,34" tabindex="0">
						<title>x7z6ly08</title>
					</path>
				</g>
				<g style="--index: 53;">
					<path d="M0,53L2419,53L2419,26L2449,26L2449,27L2550,27L2550,28L2597,28L2597,29L2608,29L2608,30L2615,30L2615,31L2619,31L2619,32L2722,32L2722,33L2725,33L2725,34L2728,34L2728,35L2729,35L2729,36L2730,36L2730,37L2735,37L2735,38L2736,38L2736,39L2741,39L2741,40L2745,40L2745,41L2746,41L2746,42L2750,42L2750,44L2751,44L2751,45L2754,45L2754,46L2754,46" tabindex="0">
						<title>86p4245j</title>
					</path>
				</g>
				<g style="--index: 54;">
					<path d="M0,54L2419,54L2419,51L2449,51L2449,52L2485,52L2485,53L2521,53L2521,54L2524,54L2524,55L2550,55L2550,56L2556,56L2556,57L2566,57L2566,58L2568,58L2568,59L2569,59L2569,60L2593,60L2593,61L2595,61L2595,62L2596,62L2596,63L2597,63L2597,64L2614,64L2614,65L2615,65L2615,66L2616,66L2616,67L2619,67L2619,68L2653,68L2653,69L2722,69L2722,70L2725,70L2725,71L2728,71L2728,72L2729,72L2729,73L2730,73L2730,74L2735,74L2735,75L2736,75L2736,76L2741,76L2741,77L2745,77L2745,78L2746,78L2746,79L2750,79L2750,81L2751,81L2751,82L2754,82L2754,83L2754,83" tabindex="0">
						<title>xk6pydk8</title>
					</path>
				</g>
				<g style="--index: 55;">
					<path d="M0,55L2449,55L2449,22L2597,22L2597,23L2608,23L2608,24L2615,24L2615,25L2619,25L2619,26L2722,26L2722,27L2725,27L2725,28L2728,28L2728,29L2729,29L2729,30L2730,30L2730,31L2735,31L2735,32L2736,32L2736,33L2741,33L2741,34L2745,34L2745,35L2746,35L2746,36L2750,36L2750,38L2751,38L2751,39L2754,39L2754,40L2754,40" tabindex="0">
						<title>0jmw6wex</title>
					</path>
				</g>
				<g style="--index: 56;">
					<path d="M0,56L2472,56L2472,56L2485,56L2485,57L2521,57L2521,58L2524,58L2524,59L2550,59L2550,60L2556,60L2556,61L2566,61L2566,62L2568,62L2568,63L2569,63L2569,64L2593,64L2593,65L2595,65L2595,66L2596,66L2596,67L2597,67L2597,68L2614,68L2614,69L2615,69L2615,70L2616,70L2616,71L2619,71L2619,72L2653,72L2653,73L2722,73L2722,74L2725,74L2725,75L2728,75L2728,76L2729,76L2729,77L2730,77L2730,78L2735,78L2735,79L2736,79L2736,80L2741,80L2741,81L2745,81L2745,82L2746,82L2746,83L2750,83L2750,85L2751,85L2751,86L2754,86L2754,87L2754,87" tabindex="0">
						<title>xykykon8</title>
					</path>
				</g>
				<g style="--index: 57;">
					<path d="M0,57L2485,57L2485,51L2521,51L2521,52L2524,52L2524,53L2550,53L2550,54L2556,54L2556,55L2566,55L2566,56L2568,56L2568,57L2569,57L2569,58L2593,58L2593,59L2595,59L2595,60L2596,60L2596,61L2597,61L2597,62L2614,62L2614,63L2615,63L2615,64L2616,64L2616,65L2619,65L2619,66L2653,66L2653,67L2722,67L2722,68L2725,68L2725,69L2728,69L2728,70L2729,70L2729,71L2730,71L2730,72L2735,72L2735,73L2736,73L2736,74L2741,74L2741,75L2745,75L2745,76L2746,76L2746,77L2750,77L2750,79L2751,79L2751,80L2754,80L2754,81L2754,81" tabindex="0">
						<title>8l6n3m48</title>
					</path>
				</g>
				<g style="--index: 58;">
					<path d="M0,58L2521,58L2521,49L2524,49L2524,50L2535,50L2535,49L2550,49L2550,50L2556,50L2556,51L2568,51L2568,52L2569,52L2569,53L2595,53L2595,54L2597,54L2597,55L2614,55L2614,56L2615,56L2615,58L2616,58L2616,59L2619,59L2619,60L2722,60L2722,61L2725,61L2725,62L2728,62L2728,63L2729,63L2729,64L2730,64L2730,65L2735,65L2735,66L2736,66L2736,67L2741,67L2741,68L2745,68L2745,69L2746,69L2746,70L2750,70L2750,72L2751,72L2751,73L2754,73L2754,74L2754,74" tabindex="0">
						<title>jm6vm048</title>
					</path>
				</g>
				<g style="--index: 59;">
					<path d="M0,59L2524,59L2524,33L2550,33L2550,34L2569,34L2569,35L2597,35L2597,36L2615,36L2615,37L2619,37L2619,38L2722,38L2722,39L2725,39L2725,40L2728,40L2728,41L2729,41L2729,42L2730,42L2730,43L2735,43L2735,44L2736,44L2736,45L2741,45L2741,46L2745,46L2745,47L2746,47L2746,48L2750,48L2750,50L2751,50L2751,51L2754,51L2754,52L2754,52" tabindex="0">
						<title>8lrpdkl8</title>
					</path>
				</g>
				<g style="--index: 60;">
					<path d="M0,60L2550,60L2550,24L2597,24L2597,25L2608,25L2608,26L2615,26L2615,27L2619,27L2619,28L2722,28L2722,29L2725,29L2725,30L2728,30L2728,31L2729,31L2729,32L2730,32L2730,33L2735,33L2735,34L2736,34L2736,35L2741,35L2741,36L2745,36L2745,37L2746,37L2746,38L2750,38L2750,40L2751,40L2751,41L2754,41L2754,42L2754,42" tabindex="0">
						<title>j4pz2evj</title>
					</path>
				</g>
				<g style="--index: 61;">
					<path d="M0,61L2556,61L2556,38L2569,38L2569,39L2595,39L2595,40L2597,40L2597,41L2615,41L2615,42L2619,42L2619,43L2722,43L2722,44L2725,44L2725,45L2728,45L2728,46L2729,46L2729,47L2730,47L2730,48L2735,48L2735,49L2736,49L2736,50L2741,50L2741,51L2745,51L2745,52L2746,52L2746,53L2750,53L2750,55L2751,55L2751,56L2754,56L2754,57L2754,57" tabindex="0">
						<title>81pdyqq8</title>
					</path>
				</g>
				<g style="--index: 62;">
					<path d="M0,62L2566,62L2566,54L2568,54L2568,55L2569,55L2569,56L2593,56L2593,57L2595,57L2595,58L2596,58L2596,59L2597,59L2597,60L2614,60L2614,61L2615,61L2615,62L2616,62L2616,63L2619,63L2619,64L2653,64L2653,65L2722,65L2722,66L2725,66L2725,67L2728,67L2728,68L2729,68L2729,69L2730,69L2730,70L2735,70L2735,71L2736,71L2736,72L2741,72L2741,73L2745,73L2745,74L2746,74L2746,75L2750,75L2750,77L2751,77L2751,78L2754,78L2754,79L2754,79" tabindex="0">
						<title>8eovz07j</title>
					</path>
				</g>
				<g style="--index: 63;">
					<path d="M0,63L2568,63L2568,39L2569,39L2569,40L2595,40L2595,41L2597,41L2597,42L2615,42L2615,43L2619,43L2619,44L2722,44L2722,45L2725,45L2725,46L2728,46L2728,47L2729,47L2729,48L2730,48L2730,49L2735,49L2735,50L2736,50L2736,51L2741,51L2741,52L2745,52L2745,53L2746,53L2746,54L2750,54L2750,56L2751,56L2751,57L2754,57L2754,58L2754,58" tabindex="0">
						<title>j2pgg2n8</title>
					</path>
				</g>
				<g style="--index: 64;">
					<path d="M0,64L2569,64L2569,32L2597,32L2597,33L2615,33L2615,34L2619,34L2619,35L2722,35L2722,36L2725,36L2725,37L2728,37L2728,38L2729,38L2729,39L2730,39L2730,40L2735,40L2735,41L2736,41L2736,42L2741,42L2741,43L2745,43L2745,44L2746,44L2746,45L2750,45L2750,47L2751,47L2751,48L2754,48L2754,49L2754,49" tabindex="0">
						<title>x7z9n168</title>
					</path>
				</g>
				<g style="--index: 65;">
					<path d="M0,65L2593,65L2593,54L2595,54L2595,55L2597,55L2597,56L2614,56L2614,57L2615,57L2615,53L2616,53L2616,54L2619,54L2619,55L2722,55L2722,56L2725,56L2725,57L2728,57L2728,58L2729,58L2729,59L2730,59L2730,60L2735,60L2735,61L2736,61L2736,62L2741,62L2741,63L2745,63L2745,64L2746,64L2746,65L2750,65L2750,67L2751,67L2751,68L2754,68L2754,69L2754,69" tabindex="0">
						<title>j9ve5wox</title>
					</path>
				</g>
				<g style="--index: 66;">
					<path d="M0,66L2595,66L2595,37L2597,37L2597,38L2615,38L2615,39L2619,39L2619,40L2722,40L2722,41L2725,41L2725,42L2728,42L2728,43L2729,43L2729,44L2730,44L2730,45L2735,45L2735,46L2736,46L2736,47L2741,47L2741,48L2745,48L2745,49L2746,49L2746,50L2750,50L2750,52L2751,52L2751,53L2754,53L2754,54L2754,54" tabindex="0">
						<title>8gor462x</title>
					</path>
				</g>
				<g style="--index: 67;">
					<path d="M0,67L2596,67L2596,56L2597,56L2597,57L2614,57L2614,58L2615,58L2615,59L2616,59L2616,60L2619,60L2619,61L2653,61L2653,62L2722,62L2722,63L2725,63L2725,64L2728,64L2728,65L2729,65L2729,66L2730,66L2730,67L2735,67L2735,68L2736,68L2736,69L2741,69L2741,70L2745,70L2745,71L2746,71L2746,72L2750,72L2750,74L2751,74L2751,75L2754,75L2754,76L2754,76" tabindex="0">
						<title>j5p6o068</title>
					</path>
				</g>
				<g style="--index: 68;">
					<path d="M0,68L2597,68L2597,21L2608,21L2608,22L2615,22L2615,23L2619,23L2619,24L2722,24L2722,25L2725,25L2725,26L2728,26L2728,27L2729,27L2729,28L2730,28L2730,29L2735,29L2735,30L2736,30L2736,31L2741,31L2741,32L2745,32L2745,33L2746,33L2746,34L2750,34L2750,36L2751,36L2751,37L2754,37L2754,38L2754,38" tabindex="0">
						<title>xk6gnm98</title>
					</path>
				</g>
				<g style="--index: 69;">
					<path d="M0,69L2614,69L2614,53L2615,53L2615,55L2616,55L2616,56L2619,56L2619,57L2722,57L2722,58L2725,58L2725,59L2728,59L2728,60L2729,60L2729,61L2730,61L2730,62L2735,62L2735,63L2736,63L2736,64L2741,64L2741,65L2745,65L2745,66L2746,66L2746,67L2750,67L2750,69L2751,69L2751,70L2754,70L2754,71L2754,71" tabindex="0">
						<title>j4p14gmj</title>
					</path>
				</g>
				<g style="--index: 70;">
					<path d="M0,70L2615,70L2615,22L2619,22L2619,23L2622,23L2622,16L2725,16L2725,0L2726,0L2726,1L2730,1L2730,2L2731,2L2731,2L2732,2L2732,0L2753,0L2753,0L2754,0" tabindex="0">
						<title>8gop7k2x</title>
					</path>
				</g>
				<g style="--index: 71;">
					<path d="M0,71L2616,71L2616,48L2619,48L2619,49L2722,49L2722,50L2725,50L2725,51L2728,51L2728,52L2729,52L2729,53L2730,53L2730,54L2735,54L2735,55L2736,55L2736,56L2741,56L2741,57L2745,57L2745,58L2746,58L2746,59L2750,59L2750,61L2751,61L2751,62L2754,62L2754,63L2754,63" tabindex="0">
						<title>8l6m01r8</title>
					</path>
				</g>
				<g style="--index: 72;">
					<path d="M0,72L2619,72L2619,21L2622,21L2622,22L2633,22L2633,23L2722,23L2722,24L2725,24L2725,25L2728,25L2728,26L2729,26L2729,27L2730,27L2730,28L2735,28L2735,29L2736,29L2736,30L2741,30L2741,31L2745,31L2745,32L2746,32L2746,33L2750,33L2750,35L2751,35L2751,36L2754,36L2754,37L2754,37" tabindex="0">
						<title>jpzvon0x</title>
					</path>
				</g>
				<g style="--index: 73;">
					<path d="M0,73L2653,73L2653,61L2722,61L2722,62L2725,62L2725,63L2728,63L2728,64L2729,64L2729,65L2730,65L2730,66L2735,66L2735,67L2736,67L2736,68L2741,68L2741,69L2745,69L2745,70L2746,70L2746,71L2750,71L2750,73L2751,73L2751,74L2754,74L2754,75L2754,75" tabindex="0">
						<title>8r6739q8</title>
					</path>
				</g>
				<g style="--index: 74;">
					<path d="M0,74L2722,74L2722,17L2725,17L2725,18L2728,18L2728,19L2729,19L2729,20L2730,20L2730,0L2732,0L2732,1L2754,1L2754,2L2754,2" tabindex="0">
						<title>j2p4pel8</title>
					</path>
				</g>
				<g style="--index: 75;">
					<path d="M0,75L2725,75L2725,1L2726,1L2726,0L2730,0L2730,1L2732,1L2732,2L2754,2L2754,3L2754,3" tabindex="0">
						<title>jo19m63x</title>
					</path>
				</g>
				<g style="--index: 76;">
					<path d="M0,76L2728,76L2728,10L2729,10L2729,11L2730,11L2730,12L2741,12L2741,13L2746,13L2746,14L2750,14L2750,16L2751,16L2751,17L2754,17L2754,18L2754,18" tabindex="0">
						<title>8gon4d2x</title>
					</path>
				</g>
				<g style="--index: 77;">
					<path d="M0,77L2729,77L2729,2L2730,2L2730,3L2746,3L2746,3L2750,3L2750,4L2754,4L2754,5L2754,5" tabindex="0">
						<title>8qpl62dx</title>
					</path>
				</g>
				<g style="--index: 78;">
					<path d="M0,78L2730,78L2730,17L2741,17L2741,18L2745,18L2745,19L2746,19L2746,20L2750,20L2750,22L2751,22L2751,23L2754,23L2754,24L2754,24" tabindex="0">
						<title>j5p193z8</title>
					</path>
				</g>
				<g style="--index: 79;">
					<path d="M0,79L2735,79L2735,21L2736,21L2736,22L2741,22L2741,23L2745,23L2745,24L2746,24L2746,25L2750,25L2750,27L2751,27L2751,28L2754,28L2754,29L2754,29" tabindex="0">
						<title>j5rrzwnx</title>
					</path>
				</g>
				<g style="--index: 80;">
					<path d="M0,80L2736,80L2736,18L2741,18L2741,19L2745,19L2745,20L2746,20L2746,21L2750,21L2750,23L2751,23L2751,24L2754,24L2754,25L2754,25" tabindex="0">
						<title>81vvn0r8</title>
					</path>
				</g>
				<g style="--index: 81;">
					<path d="M0,81L2741,81L2741,9L2746,9L2746,10L2750,10L2750,12L2754,12L2754,13L2754,13" tabindex="0">
						<title>8ez66zd8</title>
					</path>
				</g>
				<g style="--index: 82;">
					<path d="M0,82L2745,82L2745,16L2746,16L2746,17L2750,17L2750,19L2751,19L2751,20L2754,20L2754,21L2754,21" tabindex="0">
						<title>8qpr2v0x</title>
					</path>
				</g>
				<g style="--index: 83;">
					<path d="M0,83L2746,83L2746,4L2750,4L2750,5L2754,5L2754,6L2754,6" tabindex="0">
						<title>j9yl9qox</title>
					</path>
				</g>
				<g style="--index: 84;">
					<path d="M0,84L2750,84L2750,3L2754,3L2754,4L2754,4" tabindex="0">
						<title>jo1zrpnx</title>
					</path>
				</g>
				<g style="--index: 85;">
					<path d="M0,85L2750,85L2750,8L2754,8L2754,9L2754,9" tabindex="0">
						<title>j2pmdqp8</title>
					</path>
				</g>
				<g style="--index: 86;">
					<path d="M0,86L2751,86L2751,16L2754,16L2754,17L2754,17" tabindex="0">
						<title>x3pk7pk8</title>
					</path>
				</g>
				<g style="--index: 87;">
					<path d="M0,87L2754,87L2754,1L2754,1" tabindex="0">
						<title>86pek6wj</title>
					</path>
				</g>
			</g>
		</svg>
	</foreignObject>
</svg>
