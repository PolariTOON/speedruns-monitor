<svg xmlns="http://www.w3.org/2000/svg" lang="en">
	<title>Time by player for leaderboard l_495zlx39-9d8eewld-2lgr793n.z19m8p0l</title>
	<metadata>
		<meta xmlns="http://www.w3.org/1999/xhtml" charset="utf-8" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="viewport" content="width=device-width" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="color-scheme" content="dark light" />
	</metadata>
	<style>
		*,
		::before,
		::after {
			box-sizing: border-box;
		}
		:root {
			background: var(--canvas-background);
			color: var(--canvas-foreground);
			fill: var(--canvas-background);
			stroke: var(--canvas-foreground);
			stroke-linejoin: round;
			stroke-linecap: round;
		}
		foreignObject {
			pointer-events: none;
		}
		foreignObject::before,
		foreignObject::after {
			content: "";
			position: absolute;
			z-index: 1;
			left: 20px;
			bottom: 20px;
			pointer-events: auto;
		}
		foreignObject::before {
			width: calc(100% - 40px);
			height: calc(20px + var(--date-size) * 1px);
		}
		foreignObject::after {
			width: calc(20px + var(--value-size) * 1px);
			height: calc(100% - 40px);
		}
		foreignObject &gt; div {
			position: absolute;
			z-index: 4;
			right: 0;
			top: 0;
			margin: 20px;
			border: 1px solid var(--canvas-foreground);
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			transition: opacity 1s;
			pointer-events: auto;
		}
		foreignObject:is(:hover, :focus-within) &gt; div:not(:hover, :focus-within) {
			opacity: 0;
			pointer-events: none;
		}
		foreignObject &gt; div &gt; p {
			margin: 0;
		}
		label {
			display: table;
			border-collapse: separate;
			border-spacing: 10px;
			direction: rtl;
		}
		progress,
		input[type="checkbox"] {
			display: table-cell;
			width: 16px;
			height: 16px;
			margin: 2px;
			accent-color: var(--canvas-foreground);
			vertical-align: top;
			direction: ltr;
		}
		progress + span,
		input[type="checkbox"] + span {
			display: table-cell;
			vertical-align: top;
			direction: ltr;
		}
		input[type="checkbox"]:not(:disabled):is(:hover, :focus-within) + span {
			text-decoration: underline;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			position: absolute;
			z-index: 2;
			margin: 0;
			padding: 10px;
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			font-weight: bold;
			pointer-events: auto;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg + svg {
			border-top: 1px solid #0000;
			border-bottom: 1px solid var(--canvas-foreground);
		}
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px dashed #0000;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg {
			width: calc(20px + var(--date-size) * 1px);
			height: 42px;
			bottom: 20px;
		}
		foreignObject &gt; svg:first-of-type {
			left: calc(40px + var(--value-size) * 1px);
			transform: rotate(90deg) translate(-100%, 0);
			transform-origin: left bottom;
		}
		foreignObject &gt; svg:first-of-type + svg {
			right: 20px;
			transform: rotate(90deg) translate(0, 100%);
			transform-origin: right bottom;
		}
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			width: calc(20px + var(--value-size) * 1px);
			height: 42px;
			left: 20px;
		}
		foreignObject &gt; svg:first-of-type + svg + svg {
			bottom: calc(40px + var(--date-size) * 1px);
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			top: 20px;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text {
			fill: var(--canvas-foreground);
			stroke: none;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text {
			cursor: vertical-text;
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg + svg {
			position: relative;
			z-index: 3;
			width: calc(100% - 60px - var(--value-size) * 1px);
			height: calc(100% - 60px - var(--date-size) * 1px);
			margin: 20px 20px calc(40px + var(--date-size) * 1px) calc(40px + var(--value-size) * 1px);
			border-left: 1px solid var(--canvas-foreground);
			border-right: 1px dashed var(--canvas-foreground);
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px solid var(--canvas-foreground);
			background: var(--canvas-background);
			pointer-events: auto;
		}
		g &gt; rect {
			vector-effect: non-scaling-stroke;
			fill: var(--highlighted);
			stroke: none;
		}
		g &gt; rect[tabindex] {
			fill: var(--tier, #0000);
			cursor: help;
		}
		g &gt; rect[tabindex][data-tier="diamond"] {
			--tier: var(--diamond);
		}
		g &gt; rect[tabindex][data-tier="gold"] {
			--tier: var(--gold);
		}
		g &gt; rect[tabindex][data-tier="silver"] {
			--tier: var(--silver);
		}
		g &gt; rect[tabindex][data-tier="bronze"] {
			--tier: var(--bronze);
		}
		g &gt; path[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: hsl(calc(var(--index) / var(--count) * 360), 50%, 50%);
			cursor: help;
		}
		g:is(:hover, :focus-within) &gt; path[tabindex] {
			stroke: var(--canvas-foreground);
		}
		g &gt; path[tabindex]:is(:hover, :focus-within) {
			outline: 0;
		}
		g &gt; path[tabindex]:first-of-type {
			stroke-width: 2;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) {
			stroke-width: 4;
		}
		g &gt; path[tabindex]:first-of-type:not(:last-of-type) {
			stroke-dasharray: 4 8;
		}
		g &gt; path[tabindex]:first-of-type + rect {
			fill: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect {
			fill: var(--highlighted);
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] {
			stroke-width: 8;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) {
			stroke-width: 16;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line + line {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			stroke-width: 2;
			stroke-dasharray: 4 8;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line + line {
			stroke: var(--faded);
		}
		@media (prefers-color-scheme: dark) {
			:root {
				--canvas-background: #000;
				--canvas-foreground: #ccc;
				--diamond: #0363;
				--gold: #6303;
				--silver: #3633;
				--bronze: #6363;
				--highlighted: #6663;
				--faded: #9993;
			}
		}
		@media (prefers-color-scheme: light) {
			:root {
				--canvas-background: #fff;
				--canvas-foreground: #333;
				--diamond: #9cf3;
				--gold: #fc93;
				--silver: #9c93;
				--bronze: #c9c3;
				--highlighted: #9993;
				--faded: #6663;
			}
		}
	</style>
	<script>
		"use strict";
		{
			const script = document.currentScript;
			const documentUrl = location.href;
			const scope = new URL("../../", documentUrl).pathname;
			const playersKey = `${scope}#players`;
			const leaderboardsKey = `${scope}#leaderboards`;
			const sessionKey = `${scope}#session`;
			const lockKey = `${scope}#lock`;
			async function importDataScript(dataScriptUrl, signal) {
				signal.throwIfAborted();
				if (documentUrl.protocol !== "file:") {
					const response = await fetch(dataScriptUrl, {
						signal,
					});
					if (!response.ok) {
						throw new Error(response.statusText);
					}
					const data = await response.json();
					return data;
				}
				return await new Promise((resolve, reject) =&gt; {
					const name = `callback${Math.random() * 2 ** 53}`;
					let called = false;
					let data = null;
					function callback(value) {
						if (!called) {
							called = true;
							data = value;
						}
					}
					window[name] = callback;
					const dataScript = document.createElementNS("http://www.w3.org/2000/svg", "script");
					dataScript.href = `${dataScriptUrl}&amp;callback=${name}`;
					function handleAbort(event) {
						delete window[name];
						dataScript.removeEventListener("error", handleError);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const reason = signal.reason;
						reject(reason);
					}
					function handleError(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const error = event.error;
						reject(error);
					}
					function handleLoad(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("error", handleError);
						dataScript.remove();
						resolve(data);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					dataScript.addEventListener("error", handleError, {
						once: true,
					});
					dataScript.addEventListener("load", handleLoad, {
						once: true,
					});
					script.after(dataScript);
				});
			}
			async function waitForTimeout(delay, signal) {
				signal.throwIfAborted();
				return await new Promise((resolve, reject) =&gt; {
					let timeout = null;
					function handleAbort() {
						clearTimeout(timeout);
						const reason = signal.reason;
						reject(reason);
					}
					function handleTimeout() {
						signal.removeEventListener("abort", handleAbort);
						resolve(delay);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					timeout = setTimeout(handleTimeout, delay);
				});
			}
			window.addEventListener("pageshow", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully restored page from cache`);
				} else {
					console.log(`Unsuccessfully restored page from cache`);
				}
			});
			window.addEventListener("pagehide", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully saved page to cache`);
				} else {
					console.log(`Unsuccessfully saved page to cache`);
				}
			});
			window.addEventListener("pageshow", async (event) =&gt; {
				const rootTitleElement = document.querySelector("title");
				const rootTitleContent = rootTitleElement.textContent;
				const pathTitleElements = Array.from(document.querySelectorAll("g &gt; path[tabindex]:first-of-type &gt; title"));
				const pathTitleContents = pathTitleElements.map((pathTitleElement) =&gt; {
					const pathTitleContent = pathTitleElement.textContent;
					return pathTitleContent;
				});
				const foreignObject = document.querySelector("foreignObject");
				const div = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
				div.dir = "ltr";
				const p = document.createElementNS("http://www.w3.org/1999/xhtml", "p");
				const label = document.createElementNS("http://www.w3.org/1999/xhtml", "label");
				const progress = document.createElementNS("http://www.w3.org/1999/xhtml", "progress");
				label.append(progress);
				const span = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
				span.textContent = "Loading names";
				label.append(span);
				p.append(label);
				div.append(p);
				foreignObject.prepend(div);
				let lock = false;
				let session = null;
				const broadcastChannel = new BroadcastChannel(sessionKey);
				const abortController = new AbortController();
				const signal = abortController.signal;
				const abort = abortController.abort.bind(abortController);
				const {promise, resolve} = Promise.withResolvers();
				broadcastChannel.addEventListener("message", (event) =&gt; {
					const data = event.data;
					const type = data.type;
					switch (type) {
						case "request": {
							if (lock &amp;&amp; signal.aborted) {
								broadcastChannel.postMessage({
									type: "response",
									session,
								});
							}
							break;
						}
						case "response": {
							if (!signal.aborted) {
								session = data.session;
								if (session != null) {
									const {players, leaderboards} = session;
									try {
										const cachedPlayers = JSON.stringify(players);
										const cachedLeaderboards = JSON.stringify(leaderboards);
										sessionStorage.setItem(playersKey, cachedPlayers);
										sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
									} catch {}
									console.log(`Successfully loaded names from peer`);
									abort();
									resolve();
								} else {
									console.log(`Unsuccessfully loaded names from peer`);
									abort();
									resolve();
								}
							}
							break;
						}
					}
				});
				try {
					const cachedPlayers = sessionStorage.getItem(playersKey);
					const cachedLeaderboards = sessionStorage.getItem(leaderboardsKey);
					if (cachedPlayers == null || cachedLeaderboards == null) {
						throw new Error();
					}
					const players = JSON.parse(cachedPlayers);
					const leaderboards = JSON.parse(cachedLeaderboards);
					session = {players, leaderboards};
				} catch {}
				if (session != null) {
					broadcastChannel.postMessage({
						type: "response",
						session,
					});
					console.log(`Successfully loaded names from local`);
					abort();
					resolve();
				} else {
					broadcastChannel.postMessage({
						type: "request",
					});
					console.log(`Unsuccessfully loaded names from local`);
				}
				(async () =&gt; {
					for (;;) {
						await navigator.locks.request(lockKey, async () =&gt; {
							lock = true;
							console.log(`Acquired lock`);
							if (!signal.aborted) {
								try {
									const players = Object.create(null);
									const leaderboards = Object.create(null);
									const games = ["9d3rrxyd", "w6jl2ned"];
									for (const gameId of games) {
										const {data} = await importDataScript(`https://www.speedrun.com/api/v1/games/${gameId}?embed=categories,levels,variables`, signal);
										const versions = data.variables.data.find((variable) =&gt; {
											return variable.name === "Version";
										});
										const levels = Object.fromEntries(data.levels.data.map((level) =&gt; {
											return [level.id, level];
										}));
										const categories = Object.fromEntries(data.categories.data.map((category) =&gt; {
											return [category.id, category];
										}));
										const variables = Object.fromEntries(data.variables.data.map((variable) =&gt; {
											return [variable.id, variable];
										}));
										console.log(`Got game`);
										await waitForTimeout(800, signal);
										const slice = 200;
										for (let offset = 0;; offset += slice) {
											const {data, pagination} = await importDataScript(`https://www.speedrun.com/api/v1/runs?game=${gameId}&amp;orderby=date&amp;direction=asc&amp;embed=players&amp;offset=${offset}&amp;max=${slice}`, signal);
											const {size} = pagination;
											if (size === 0) {
												break;
											}
											for (const run of data) {
												const status = run.status.status;
												if (status == null || status === "new") {
													continue;
												}
												const player = run.players.data[0].rel === "user" ? run.players.data[0].id : "814p2558";
												const playerName = run.players.data[0].rel === "user" ? run.players.data[0].names.international : "anonymous";
												players[player] ??= playerName;
												const level = run.level;
												const category = run.category;
												const values = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return `-${variable}.${value}`;
												});
												const leaderboard = `${level != null ? `l_${level}-` : ""}${category}${values.join("")}`;
												const levelName = run.level != null ? levels[run.level]?.name ?? null : null;
												const categoryName = categories[run.category]?.name ?? null;
												const valueNames = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return variables[variable]?.values.values[value]?.label ?? null;
												}).filter((valueName) =&gt; {
													return valueName != null;
												});
												const leaderboardName = `${levelName != null ? `${levelName}: ` : ""}${categoryName ?? ""}${values.length !== 0 ? ` - ${valueNames.join(", ")}` : ""}`;
												leaderboards[leaderboard] ??= leaderboardName;
											}
											console.log(`Got runs ${offset}-${offset + size - 1}`);
											await waitForTimeout(800, signal);
										}
									}
									session = {players, leaderboards};
								} catch {}
								if (!signal.aborted) {
									if (session != null) {
										const {players, leaderboards} = session;
										try {
											const cachedPlayers = JSON.stringify(players);
											const cachedLeaderboards = JSON.stringify(leaderboards);
											sessionStorage.setItem(playersKey, cachedPlayers);
											sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
										} catch {}
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Successfully loaded names from remote`);
										abort();
										resolve();
									} else {
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Unsuccessfully loaded names from remote`);
										abort();
										resolve();
									}
								}
							}
							await new Promise((resolve) =&gt; {
								window.addEventListener("beforeunload", () =&gt; {
									resolve();
								}, {
									once: true,
								});
							});
						});
						lock = false;
						console.log(`Released lock`);
						await new Promise((resolve) =&gt; {
							window.addEventListener("pagehide", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
						await new Promise((resolve) =&gt;{
							window.addEventListener("pageshow", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
					}
				})();
				await promise;
				if (session == null) {
					const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
					input.type = "checkbox";
					input.autocomplete = "off";
					input.disabled = true;
					input.indeterminate = true;
					progress.replaceWith(input);
					span.textContent = "Unavailable names";
					return;
				}
				const {players, leaderboards} = session;
				const hasPlayerRoot = rootTitleContent.includes(" for player");
				const hasLeaderboardRoot = rootTitleContent.includes(" for leaderboard");
				const rootTitle = {
					element: rootTitleElement,
					contentWithIds: rootTitleContent,
					contentWithNames: hasPlayerRoot ? rootTitleContent.replace(/ for player ([0-9_a-z]+)/, ($0, $1) =&gt; {
						return ` for player ${players[$1] ?? $1}`;
					}) : hasLeaderboardRoot ? rootTitleContent.replace(/ for leaderboard ((?:l_[0-9_a-z]+-)?[0-9_a-z]+(-[0-9_a-z]+\.[0-9_a-z]+)*)/, ($0, $1) =&gt; {
						return ` for leaderboard ${leaderboards[$1] ?? $1}`;
					}) : rootTitleContent,
				};
				const hasPlayerPaths = rootTitleContent.includes(" by player");
				const hasLeaderboardPaths = rootTitleContent.includes(" by leaderboard");
				const pathTitles = pathTitleElements.map((pathTitleElement, k) =&gt; {
					const pathTitleContent = pathTitleContents[k];
					const pathTitle = {
						element: pathTitleElement,
						contentWithIds: pathTitleContent,
						contentWithNames: hasPlayerPaths ? players[pathTitleContent] ?? pathTitleContent : hasLeaderboardPaths ? leaderboards[pathTitleContent] ?? pathTitleContent : pathTitleContent,
					};
					return pathTitle;
				});
				const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
				input.type = "checkbox";
				input.autocomplete = "off";
				input.addEventListener("change", () =&gt; {
					input.disabled = true;
					if (input.checked) {
						rootTitle.element.textContent = rootTitle.contentWithNames;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithNames;
						}
					} else {
						rootTitle.element.textContent = rootTitle.contentWithIds;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithIds;
						}
					}
					input.disabled = false;
				});
				progress.replaceWith(input);
				span.textContent = "Reveal names";
			}, {
				once: true,
			});
		}
	</script>
	<script>
		"use strict";
		{
			document.addEventListener("DOMContentLoaded", (event) =&gt; {
				const minDateText = document.querySelector("foreignObject &gt; svg:first-of-type &gt; text");
				const maxDateText = document.querySelector("foreignObject &gt; svg:first-of-type + svg &gt; text");
				const startX = Math.round(Date.parse(minDateText.textContent) / 86400000);
				function xToDate(x) {
					const datetime = new Date((startX + x) * 86400000);
					const year = `${datetime.getUTCFullYear()}`.padStart(4, "0");
					const month = `${datetime.getUTCMonth() + 1}`.padStart(2, "0");
					const day = `${datetime.getUTCDate()}`.padStart(2, "0");
					const date = `${year}-${month}-${day}`;
					const size = date.length * 10;
					return {date, size};
				}
				function setMinDate(x) {
					const {date, size} = xToDate(Math.floor(x));
					minDateText.textLength.baseVal.value = size;
					minDateText.textContent = date;
				}
				function setMaxDate(x) {
					const {date, size} = xToDate(Math.ceil(x));
					maxDateText.textLength.baseVal.value = size;
					maxDateText.textContent = date;
				}
				const minValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg &gt; text");
				const maxValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text");
				const timed = minValueText.textContent.includes(":");
				function yToValue(y) {
					if (timed) {
						const minutes = `${(y - y % 6000) / 6000}`.padStart(2, "0");
						const seconds = `${(y - y % 100) / 100 % 60}`.padStart(2, "0");
						const centiseconds = `${y % 100}`.padStart(2, "0");
						const value = `${minutes}:${seconds}.${centiseconds}`;
						const size = value.length * 10;
						return {value, size};
					} else {
						const value = `${y}`;
						const size = value.length * 10;
						return {value, size};
					}
				}
				function setMinValue(y) {
					const {value, size} = yToValue(Math.floor(y));
					minValueText.textLength.baseVal.value = size;
					minValueText.textContent = value;
				}
				function setMaxValue(y) {
					const {value, size} = yToValue(Math.ceil(y));
					maxValueText.textLength.baseVal.value = size;
					maxValueText.textContent = value;
				}
				const svg = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg + svg");
				svg.tabIndex = -1;
				svg.style.setProperty("outline", "0");
				if (CSS.supports("overflow-clip-margin", "8px")) {
					svg.style.setProperty("overflow", "clip");
					svg.style.setProperty("overflow-clip-margin", "8px");
				}
				svg.style.setProperty("touch-action", "none");
				const {x: baseX, y: baseY, width: baseWidth, height: baseHeight} = svg.viewBox.baseVal;
				let pointerCount = 0;
				const pointers = Object.create(null);
				const xPointerIds = [];
				const yPointerIds = [];
				let x = null;
				let y = null;
				let width = null;
				let height = null;
				svg.addEventListener("pointerdown", (event) =&gt; {
					const {pointerId} = event;
					if (pointerId in pointers) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.setPointerCapture(pointerId);
					++pointerCount;
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId] = {
						offsetX,
						offsetY,
					};
					xPointerIds.splice(xPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetX &lt;= offsetX;
					}) + 1, 0, pointerId);
					yPointerIds.splice(yPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetY &lt;= offsetY;
					}) + 1, 0, pointerId);
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					width = Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth);
					height = Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight);
					x = Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX);
					y = Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY);
				});
				svg.addEventListener("pointerup", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.releasePointerCapture(pointerId);
					--pointerCount;
					delete pointers[pointerId];
					xPointerIds.splice(xPointerIds.lastIndexOf(pointerId), 1);
					yPointerIds.splice(yPointerIds.lastIndexOf(pointerId), 1);
					const minOffsetX = pointerCount !== 0 ? pointers[xPointerIds[0]].offsetX : null;
					const minOffsetY = pointerCount !== 0 ? pointers[yPointerIds[0]].offsetY : null;
					const maxClientWidth = pointerCount !== 0 ? pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX : null;
					const maxClientHeight = pointerCount !== 0 ? pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY : null;
					width = pointerCount !== 0 ? Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth) : null;
					height = pointerCount !== 0 ? Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight) : null;
					x = pointerCount !== 0 ? Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX) : null;
					y = pointerCount !== 0 ? Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY) : null;
				});
				svg.addEventListener("pointermove", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					event.preventDefault();
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId].offsetX = offsetX;
					pointers[pointerId].offsetY = offsetY;
					const oldXIndex = xPointerIds.lastIndexOf(pointerId);
					let newXIndex = oldXIndex;
					while (newXIndex &gt; 0 &amp;&amp; pointers[xPointerIds[newXIndex - 1]].offsetX &gt; offsetX) {
						--newXIndex;
					}
					xPointerIds.copyWithin(newXIndex + 1, newXIndex, oldXIndex);
					xPointerIds[newXIndex] = pointerId;
					while (newXIndex &lt; pointerCount - 1 &amp;&amp; pointers[xPointerIds[newXIndex + 1]].offsetX &lt; offsetX) {
						++newXIndex;
					}
					xPointerIds.copyWithin(oldXIndex, oldXIndex + 1, newXIndex + 1);
					xPointerIds[newXIndex] = pointerId;
					const oldYIndex = yPointerIds.lastIndexOf(pointerId);
					let newYIndex = oldYIndex;
					while (newYIndex &gt; 0 &amp;&amp; pointers[yPointerIds[newYIndex - 1]].offsetY &gt; offsetY) {
						--newYIndex;
					}
					yPointerIds.copyWithin(newYIndex + 1, newYIndex, oldYIndex);
					yPointerIds[newYIndex] = pointerId;
					while (newYIndex &lt; pointerCount - 1 &amp;&amp; pointers[yPointerIds[newYIndex + 1]].offsetY &lt; offsetY) {
						++newYIndex;
					}
					yPointerIds.copyWithin(oldYIndex, oldYIndex + 1, newYIndex + 1);
					yPointerIds[newYIndex] = pointerId;
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					animWidth = width === 0 ? animWidth : maxClientWidth === 0 ? baseWidth : Math.min(svg.clientWidth / maxClientWidth * width, baseWidth);
					animHeight = height === 0 ? animHeight : maxClientHeight === 0 ? baseHeight : Math.min(svg.clientHeight / maxClientHeight * height, baseHeight);
					animX = Math.max(Math.min(x - minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(y - minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
				const zoomIntensity = 1.25;
				svg.addEventListener("wheel", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					if (!ctrlKey) {
						const vectorX = (shiftKey ? event.deltaY : event.deltaX) / svg.clientWidth * animWidth;
						const vectorY = (shiftKey ? 0 : event.deltaY) / svg.clientHeight * animHeight;
						animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
						animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
						svg.viewBox.baseVal.x = animX;
						svg.viewBox.baseVal.y = animY;
						setMinDate(animX);
						setMaxDate(animX + animWidth);
						setMinValue(baseY * 2 + baseHeight - animHeight - animY);
						setMaxValue(baseY * 2 + baseHeight - animY);
						return;
					}
					const ratioX = zoomIntensity ** Math.sign(shiftKey ? event.deltaY : event.deltaX);
					const ratioY = zoomIntensity ** Math.sign(shiftKey ? 0 : event.deltaY);
					const positionX = Math.max(0, Math.min(event.offsetX / svg.clientWidth, 1)) * animWidth;
					const positionY = Math.max(0, Math.min(event.offsetY / svg.clientHeight, 1)) * animHeight;
					animWidth = Math.min(animWidth * ratioX, baseWidth);
					animHeight = Math.min(animHeight * ratioY, baseHeight);
					animX = Math.max(Math.min(animX + positionX * (1 - ratioX), baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(animY + positionY * (1 - ratioY), baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				}, {
					passive: false,
				});
				svg.addEventListener("keydown", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					switch (event.code) {
						case "Space": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "Equal":
						case "NumpadAdd":
						case "Minus":
						case "NumpadSubtract": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.code === "Minus" || event.code === "NumpadSubtract" ? zoomIntensity : 1 / zoomIntensity;
							if (!shiftKey) {
								animHeight = Math.min(animHeight * ratio, baseHeight);
								animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "Digit0":
						case "Numpad0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							if (!shiftKey) {
								animY = baseY;
								animHeight = baseHeight;
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animX = baseX;
							animWidth = baseWidth;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
					}
					switch (event.key) {
						case "ArrowRight": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = 50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowLeft": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = -50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowDown": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = 50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "End": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY + baseHeight - animHeight;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "ArrowUp": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = -50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "Home": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "PageDown":
						case "PageUp":
						case " ": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = event.key === "PageUp" || event.key === " " &amp;&amp; shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "+":
						case "-": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.key === "-" ? 1 / zoomIntensity : zoomIntensity;
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animHeight = Math.min(animHeight * ratio, baseHeight);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animX = baseX;
							animY = baseY;
							animWidth = baseWidth;
							animHeight = baseHeight;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
					}
				});
				svg.addEventListener("focusin", (event) =&gt; {
					if (!event.target.matches(":focus-visible")) {
						return;
					}
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					let {x, y, width, height} = event.target.getBBox();
					width = Math.round(width);
					height = Math.round(height);
					x = Math.round(x);
					y = baseY * 2 + baseHeight - height - Math.round(y);
					if (x + width &lt; animX) {
						animX = x;
						if (width &gt; animWidth) {
							animX += (width - animWidth) / 2;
						}
					} else if (x &gt; animX + animWidth) {
						animX = x + width - animWidth;
						if (width &gt; animWidth) {
							animX -= (width - animWidth) / 2;
						}
					}
					if (y + height &lt; animY) {
						animY = y;
						if (height &gt; animHeight) {
							animY += (height - animHeight) / 2;
						}
					} else if (y &gt; animY + animHeight) {
						animY = y + height - animHeight;
						if (height &gt; animHeight) {
							animY -= (height - animHeight) / 2;
						}
					}
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
			}, {
				once: true,
			});
		}
	</script>
	<foreignObject x="0" y="0" width="100%" height="100%" style="--date-size: 100; --value-size: 80;">
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2018-04-09</text>
		</svg>
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2025-09-22</text>
		</svg>
		<svg viewBox="0 0 80 20">
			<text x="40" y="10" dx="0" dy="2" textLength="80" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">00:00.00</text>
		</svg>
		<svg viewBox="0 0 80 20">
			<text x="40" y="10" dx="0" dy="2" textLength="80" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">00:34.51</text>
		</svg>
		<svg viewBox="0 0 2723 3451" preserveAspectRatio="none" overflow="visible">
			<g transform="translate(0 3451) scale(1 -1)" style="--count: 57;">
				<g>
					<rect x="0" y="0" width="2723" height="1900" tabindex="0" data-tier="diamond">
						<title>00:19.00 for diamond</title>
					</rect>
					<rect x="0" y="1900" width="2723" height="1551" tabindex="0" data-tier="gold">
						<title>00:35.00 for gold</title>
					</rect>
					<rect x="0" y="3451" width="2723" height="0" tabindex="0" data-tier="silver">
						<title>00:47.00 for silver</title>
					</rect>
					<rect x="0" y="3451" width="2723" height="0" tabindex="0" data-tier="bronze">
						<title>01:10.00 for bronze</title>
					</rect>
				</g>
				<g style="--index: 0;">
					<path d="M0,3451" tabindex="0">
						<title>18qg9ndx</title>
					</path>
					<rect x="0" y="3451" width="0" height="0"/>
					<path d="M0,3451L0,3451" tabindex="0">
						<title>00:34.51 on 2018-04-09</title>
					</path>
					<line x1="0" y1="3451" x2="2723" y2="3451"/>
					<line x1="0" y1="0" x2="0" y2="3451"/>
				</g>
				<g style="--index: 1;">
					<path d="M92,1495" tabindex="0">
						<title>y8dgoe98</title>
					</path>
					<rect x="92" y="1495" width="0" height="0"/>
					<path d="M92,1495L92,1495" tabindex="0">
						<title>00:14.95 on 2018-07-10</title>
					</path>
					<line x1="0" y1="1495" x2="2723" y2="1495"/>
					<line x1="92" y1="0" x2="92" y2="3451"/>
				</g>
				<g style="--index: 2;">
					<path d="M773,1630L858,1630L858,1599L928,1599L928,1436L2637,1436L2637,1281" tabindex="0">
						<title>x356nrej</title>
					</path>
					<rect x="773" y="1281" width="1864" height="349"/>
					<path d="M773,1630L773,1630" tabindex="0">
						<title>00:16.30 on 2020-05-21</title>
					</path>
					<line x1="0" y1="1630" x2="2723" y2="1630"/>
					<line x1="773" y1="0" x2="773" y2="3451"/>
					<path d="M858,1599L858,1599" tabindex="0">
						<title>00:15.99 on 2020-08-14</title>
					</path>
					<line x1="0" y1="1599" x2="2723" y2="1599"/>
					<line x1="858" y1="0" x2="858" y2="3451"/>
					<path d="M928,1436L928,1436" tabindex="0">
						<title>00:14.36 on 2020-10-23</title>
					</path>
					<line x1="0" y1="1436" x2="2723" y2="1436"/>
					<line x1="928" y1="0" x2="928" y2="3451"/>
					<path d="M2637,1281L2637,1281" tabindex="0">
						<title>00:12.81 on 2025-06-28</title>
					</path>
					<line x1="0" y1="1281" x2="2723" y2="1281"/>
					<line x1="2637" y1="0" x2="2637" y2="3451"/>
				</g>
				<g style="--index: 3;">
					<path d="M956,1400L1425,1400L1425,1255L1509,1255L1509,1227L1540,1227L1540,1219" tabindex="0">
						<title>j2yr9lp8</title>
					</path>
					<rect x="956" y="1219" width="584" height="181"/>
					<path d="M956,1400L956,1400" tabindex="0">
						<title>00:14.00 on 2020-11-20</title>
					</path>
					<line x1="0" y1="1400" x2="2723" y2="1400"/>
					<line x1="956" y1="0" x2="956" y2="3451"/>
					<path d="M1425,1255L1425,1255" tabindex="0">
						<title>00:12.55 on 2022-03-04</title>
					</path>
					<line x1="0" y1="1255" x2="2723" y2="1255"/>
					<line x1="1425" y1="0" x2="1425" y2="3451"/>
					<path d="M1509,1227L1509,1227" tabindex="0">
						<title>00:12.27 on 2022-05-27</title>
					</path>
					<line x1="0" y1="1227" x2="2723" y2="1227"/>
					<line x1="1509" y1="0" x2="1509" y2="3451"/>
					<path d="M1540,1219L1540,1219" tabindex="0">
						<title>00:12.19 on 2022-06-27</title>
					</path>
					<line x1="0" y1="1219" x2="2723" y2="1219"/>
					<line x1="1540" y1="0" x2="1540" y2="3451"/>
				</g>
				<g style="--index: 4;">
					<path d="M959,1786L987,1786L987,1389" tabindex="0">
						<title>x7q00668</title>
					</path>
					<rect x="959" y="1389" width="28" height="397"/>
					<path d="M959,1786L959,1786" tabindex="0">
						<title>00:17.86 on 2020-11-23</title>
					</path>
					<line x1="0" y1="1786" x2="2723" y2="1786"/>
					<line x1="959" y1="0" x2="959" y2="3451"/>
					<path d="M987,1389L987,1389" tabindex="0">
						<title>00:13.89 on 2020-12-21</title>
					</path>
					<line x1="0" y1="1389" x2="2723" y2="1389"/>
					<line x1="987" y1="0" x2="987" y2="3451"/>
				</g>
				<g style="--index: 5;">
					<path d="M979,1782L1016,1782L1016,1568" tabindex="0">
						<title>j0np7or8</title>
					</path>
					<rect x="979" y="1568" width="37" height="214"/>
					<path d="M979,1782L979,1782" tabindex="0">
						<title>00:17.82 on 2020-12-13</title>
					</path>
					<line x1="0" y1="1782" x2="2723" y2="1782"/>
					<line x1="979" y1="0" x2="979" y2="3451"/>
					<path d="M1016,1568L1016,1568" tabindex="0">
						<title>00:15.68 on 2021-01-19</title>
					</path>
					<line x1="0" y1="1568" x2="2723" y2="1568"/>
					<line x1="1016" y1="0" x2="1016" y2="3451"/>
				</g>
				<g style="--index: 6;">
					<path d="M983,1558L988,1558L988,1399L1013,1399L1013,1359" tabindex="0">
						<title>814zn7l8</title>
					</path>
					<rect x="983" y="1359" width="30" height="199"/>
					<path d="M983,1558L983,1558" tabindex="0">
						<title>00:15.58 on 2020-12-17</title>
					</path>
					<line x1="0" y1="1558" x2="2723" y2="1558"/>
					<line x1="983" y1="0" x2="983" y2="3451"/>
					<path d="M988,1399L988,1399" tabindex="0">
						<title>00:13.99 on 2020-12-22</title>
					</path>
					<line x1="0" y1="1399" x2="2723" y2="1399"/>
					<line x1="988" y1="0" x2="988" y2="3451"/>
					<path d="M1013,1359L1013,1359" tabindex="0">
						<title>00:13.59 on 2021-01-16</title>
					</path>
					<line x1="0" y1="1359" x2="2723" y2="1359"/>
					<line x1="1013" y1="0" x2="1013" y2="3451"/>
				</g>
				<g style="--index: 7;">
					<path d="M988,1377L998,1377L998,1373L1021,1373L1021,1293" tabindex="0">
						<title>xkon93k8</title>
					</path>
					<rect x="988" y="1293" width="33" height="84"/>
					<path d="M988,1377L988,1377" tabindex="0">
						<title>00:13.77 on 2020-12-22</title>
					</path>
					<line x1="0" y1="1377" x2="2723" y2="1377"/>
					<line x1="988" y1="0" x2="988" y2="3451"/>
					<path d="M998,1373L998,1373" tabindex="0">
						<title>00:13.73 on 2021-01-01</title>
					</path>
					<line x1="0" y1="1373" x2="2723" y2="1373"/>
					<line x1="998" y1="0" x2="998" y2="3451"/>
					<path d="M1021,1293L1021,1293" tabindex="0">
						<title>00:12.93 on 2021-01-24</title>
					</path>
					<line x1="0" y1="1293" x2="2723" y2="1293"/>
					<line x1="1021" y1="0" x2="1021" y2="3451"/>
				</g>
				<g style="--index: 8;">
					<path d="M1436,2644" tabindex="0">
						<title>jpo31408</title>
					</path>
					<rect x="1436" y="2644" width="0" height="0"/>
					<path d="M1436,2644L1436,2644" tabindex="0">
						<title>00:26.44 on 2022-03-15</title>
					</path>
					<line x1="0" y1="2644" x2="2723" y2="2644"/>
					<line x1="1436" y1="0" x2="1436" y2="3451"/>
				</g>
				<g style="--index: 9;">
					<path d="M1507,1278L1508,1278L1508,1254L1538,1254L1538,1224" tabindex="0">
						<title>xk3m6d68</title>
					</path>
					<rect x="1507" y="1224" width="31" height="54"/>
					<path d="M1507,1278L1507,1278" tabindex="0">
						<title>00:12.78 on 2022-05-25</title>
					</path>
					<line x1="0" y1="1278" x2="2723" y2="1278"/>
					<line x1="1507" y1="0" x2="1507" y2="3451"/>
					<path d="M1508,1254L1508,1254" tabindex="0">
						<title>00:12.54 on 2022-05-26</title>
					</path>
					<line x1="0" y1="1254" x2="2723" y2="1254"/>
					<line x1="1508" y1="0" x2="1508" y2="3451"/>
					<path d="M1538,1224L1538,1224" tabindex="0">
						<title>00:12.24 on 2022-06-25</title>
					</path>
					<line x1="0" y1="1224" x2="2723" y2="1224"/>
					<line x1="1538" y1="0" x2="1538" y2="3451"/>
				</g>
				<g style="--index: 10;">
					<path d="M1516,1591L1517,1591L1517,1469" tabindex="0">
						<title>866k6d38</title>
					</path>
					<rect x="1516" y="1469" width="1" height="122"/>
					<path d="M1516,1591L1516,1591" tabindex="0">
						<title>00:15.91 on 2022-06-03</title>
					</path>
					<line x1="0" y1="1591" x2="2723" y2="1591"/>
					<line x1="1516" y1="0" x2="1516" y2="3451"/>
					<path d="M1517,1469L1517,1469" tabindex="0">
						<title>00:14.69 on 2022-06-04</title>
					</path>
					<line x1="0" y1="1469" x2="2723" y2="1469"/>
					<line x1="1517" y1="0" x2="1517" y2="3451"/>
				</g>
				<g style="--index: 11;">
					<path d="M1581,3079L2225,3079L2225,2051L2274,2051L2274,1694" tabindex="0">
						<title>j0gyekmx</title>
					</path>
					<rect x="1581" y="1694" width="693" height="1385"/>
					<path d="M1581,3079L1581,3079" tabindex="0">
						<title>00:30.79 on 2022-08-07</title>
					</path>
					<line x1="0" y1="3079" x2="2723" y2="3079"/>
					<line x1="1581" y1="0" x2="1581" y2="3451"/>
					<path d="M2225,2051L2225,2051" tabindex="0">
						<title>00:20.51 on 2024-05-12</title>
					</path>
					<line x1="0" y1="2051" x2="2723" y2="2051"/>
					<line x1="2225" y1="0" x2="2225" y2="3451"/>
					<path d="M2274,1694L2274,1694" tabindex="0">
						<title>00:16.94 on 2024-06-30</title>
					</path>
					<line x1="0" y1="1694" x2="2723" y2="1694"/>
					<line x1="2274" y1="0" x2="2274" y2="3451"/>
				</g>
				<g style="--index: 12;">
					<path d="M1706,2130" tabindex="0">
						<title>8g0ezgyx</title>
					</path>
					<rect x="1706" y="2130" width="0" height="0"/>
					<path d="M1706,2130L1706,2130" tabindex="0">
						<title>00:21.30 on 2022-12-10</title>
					</path>
					<line x1="0" y1="2130" x2="2723" y2="2130"/>
					<line x1="1706" y1="0" x2="1706" y2="3451"/>
				</g>
				<g style="--index: 13;">
					<path d="M1707,2104" tabindex="0">
						<title>8lonqn28</title>
					</path>
					<rect x="1707" y="2104" width="0" height="0"/>
					<path d="M1707,2104L1707,2104" tabindex="0">
						<title>00:21.04 on 2022-12-11</title>
					</path>
					<line x1="0" y1="2104" x2="2723" y2="2104"/>
					<line x1="1707" y1="0" x2="1707" y2="3451"/>
				</g>
				<g style="--index: 14;">
					<path d="M1710,1909" tabindex="0">
						<title>8qoz5eoj</title>
					</path>
					<rect x="1710" y="1909" width="0" height="0"/>
					<path d="M1710,1909L1710,1909" tabindex="0">
						<title>00:19.09 on 2022-12-14</title>
					</path>
					<line x1="0" y1="1909" x2="2723" y2="1909"/>
					<line x1="1710" y1="0" x2="1710" y2="3451"/>
				</g>
				<g style="--index: 15;">
					<path d="M1714,1787" tabindex="0">
						<title>8w02wmvj</title>
					</path>
					<rect x="1714" y="1787" width="0" height="0"/>
					<path d="M1714,1787L1714,1787" tabindex="0">
						<title>00:17.87 on 2022-12-18</title>
					</path>
					<line x1="0" y1="1787" x2="2723" y2="1787"/>
					<line x1="1714" y1="0" x2="1714" y2="3451"/>
				</g>
				<g style="--index: 16;">
					<path d="M1801,1916" tabindex="0">
						<title>8rle6yd8</title>
					</path>
					<rect x="1801" y="1916" width="0" height="0"/>
					<path d="M1801,1916L1801,1916" tabindex="0">
						<title>00:19.16 on 2023-03-15</title>
					</path>
					<line x1="0" y1="1916" x2="2723" y2="1916"/>
					<line x1="1801" y1="0" x2="1801" y2="3451"/>
				</g>
				<g style="--index: 17;">
					<path d="M1808,1213L1864,1213L1864,1210L2675,1210L2675,1183" tabindex="0">
						<title>jn2m23wj</title>
					</path>
					<rect x="1808" y="1183" width="867" height="30"/>
					<path d="M1808,1213L1808,1213" tabindex="0">
						<title>00:12.13 on 2023-03-22</title>
					</path>
					<line x1="0" y1="1213" x2="2723" y2="1213"/>
					<line x1="1808" y1="0" x2="1808" y2="3451"/>
					<path d="M1864,1210L1864,1210" tabindex="0">
						<title>00:12.10 on 2023-05-17</title>
					</path>
					<line x1="0" y1="1210" x2="2723" y2="1210"/>
					<line x1="1864" y1="0" x2="1864" y2="3451"/>
					<path d="M2675,1183L2675,1183" tabindex="0">
						<title>00:11.83 on 2025-08-05</title>
					</path>
					<line x1="0" y1="1183" x2="2723" y2="1183"/>
					<line x1="2675" y1="0" x2="2675" y2="3451"/>
				</g>
				<g style="--index: 18;">
					<path d="M1954,2332" tabindex="0">
						<title>jng9el48</title>
					</path>
					<rect x="1954" y="2332" width="0" height="0"/>
					<path d="M1954,2332L1954,2332" tabindex="0">
						<title>00:23.32 on 2023-08-15</title>
					</path>
					<line x1="0" y1="2332" x2="2723" y2="2332"/>
					<line x1="1954" y1="0" x2="1954" y2="3451"/>
				</g>
				<g style="--index: 19;">
					<path d="M2071,3371" tabindex="0">
						<title>x77ee56x</title>
					</path>
					<rect x="2071" y="3371" width="0" height="0"/>
					<path d="M2071,3371L2071,3371" tabindex="0">
						<title>00:33.71 on 2023-12-10</title>
					</path>
					<line x1="0" y1="3371" x2="2723" y2="3371"/>
					<line x1="2071" y1="0" x2="2071" y2="3451"/>
				</g>
				<g style="--index: 20;">
					<path d="M2216,2661" tabindex="0">
						<title>j465mqd8</title>
					</path>
					<rect x="2216" y="2661" width="0" height="0"/>
					<path d="M2216,2661L2216,2661" tabindex="0">
						<title>00:26.61 on 2024-05-03</title>
					</path>
					<line x1="0" y1="2661" x2="2723" y2="2661"/>
					<line x1="2216" y1="0" x2="2216" y2="3451"/>
				</g>
				<g style="--index: 21;">
					<path d="M2221,1410" tabindex="0">
						<title>8dpl6o58</title>
					</path>
					<rect x="2221" y="1410" width="0" height="0"/>
					<path d="M2221,1410L2221,1410" tabindex="0">
						<title>00:14.10 on 2024-05-08</title>
					</path>
					<line x1="0" y1="1410" x2="2723" y2="1410"/>
					<line x1="2221" y1="0" x2="2221" y2="3451"/>
				</g>
				<g style="--index: 22;">
					<path d="M2223,2003" tabindex="0">
						<title>x3w99yqj</title>
					</path>
					<rect x="2223" y="2003" width="0" height="0"/>
					<path d="M2223,2003L2223,2003" tabindex="0">
						<title>00:20.03 on 2024-05-10</title>
					</path>
					<line x1="0" y1="2003" x2="2723" y2="2003"/>
					<line x1="2223" y1="0" x2="2223" y2="3451"/>
				</g>
				<g style="--index: 23;">
					<path d="M2244,1451L2311,1451L2311,1298L2405,1298L2405,1251" tabindex="0">
						<title>8v0mryvx</title>
					</path>
					<rect x="2244" y="1251" width="161" height="200"/>
					<path d="M2244,1451L2244,1451" tabindex="0">
						<title>00:14.51 on 2024-05-31</title>
					</path>
					<line x1="0" y1="1451" x2="2723" y2="1451"/>
					<line x1="2244" y1="0" x2="2244" y2="3451"/>
					<path d="M2311,1298L2311,1298" tabindex="0">
						<title>00:12.98 on 2024-08-06</title>
					</path>
					<line x1="0" y1="1298" x2="2723" y2="1298"/>
					<line x1="2311" y1="0" x2="2311" y2="3451"/>
					<path d="M2405,1251L2405,1251" tabindex="0">
						<title>00:12.51 on 2024-11-08</title>
					</path>
					<line x1="0" y1="1251" x2="2723" y2="1251"/>
					<line x1="2405" y1="0" x2="2405" y2="3451"/>
				</g>
				<g style="--index: 24;">
					<path d="M2339,1362" tabindex="0">
						<title>jm62e748</title>
					</path>
					<rect x="2339" y="1362" width="0" height="0"/>
					<path d="M2339,1362L2339,1362" tabindex="0">
						<title>00:13.62 on 2024-09-03</title>
					</path>
					<line x1="0" y1="1362" x2="2723" y2="1362"/>
					<line x1="2339" y1="0" x2="2339" y2="3451"/>
				</g>
				<g style="--index: 25;">
					<path d="M2347,1628" tabindex="0">
						<title>j0ewnqw8</title>
					</path>
					<rect x="2347" y="1628" width="0" height="0"/>
					<path d="M2347,1628L2347,1628" tabindex="0">
						<title>00:16.28 on 2024-09-11</title>
					</path>
					<line x1="0" y1="1628" x2="2723" y2="1628"/>
					<line x1="2347" y1="0" x2="2347" y2="3451"/>
				</g>
				<g style="--index: 26;">
					<path d="M2365,1383" tabindex="0">
						<title>0jmw6wex</title>
					</path>
					<rect x="2365" y="1383" width="0" height="0"/>
					<path d="M2365,1383L2365,1383" tabindex="0">
						<title>00:13.83 on 2024-09-29</title>
					</path>
					<line x1="0" y1="1383" x2="2723" y2="1383"/>
					<line x1="2365" y1="0" x2="2365" y2="3451"/>
				</g>
				<g style="--index: 27;">
					<path d="M2373,1568L2557,1568L2557,1383L2667,1383L2667,1305" tabindex="0">
						<title>8w3l21qj</title>
					</path>
					<rect x="2373" y="1305" width="294" height="263"/>
					<path d="M2373,1568L2373,1568" tabindex="0">
						<title>00:15.68 on 2024-10-07</title>
					</path>
					<line x1="0" y1="1568" x2="2723" y2="1568"/>
					<line x1="2373" y1="0" x2="2373" y2="3451"/>
					<path d="M2557,1383L2557,1383" tabindex="0">
						<title>00:13.83 on 2025-04-09</title>
					</path>
					<line x1="0" y1="1383" x2="2723" y2="1383"/>
					<line x1="2557" y1="0" x2="2557" y2="3451"/>
					<path d="M2667,1305L2667,1305" tabindex="0">
						<title>00:13.05 on 2025-07-28</title>
					</path>
					<line x1="0" y1="1305" x2="2723" y2="1305"/>
					<line x1="2667" y1="0" x2="2667" y2="3451"/>
				</g>
				<g style="--index: 28;">
					<path d="M2412,1570" tabindex="0">
						<title>j9vz7vrx</title>
					</path>
					<rect x="2412" y="1570" width="0" height="0"/>
					<path d="M2412,1570L2412,1570" tabindex="0">
						<title>00:15.70 on 2024-11-15</title>
					</path>
					<line x1="0" y1="1570" x2="2723" y2="1570"/>
					<line x1="2412" y1="0" x2="2412" y2="3451"/>
				</g>
				<g style="--index: 29;">
					<path d="M2414,1419" tabindex="0">
						<title>8rl97mw8</title>
					</path>
					<rect x="2414" y="1419" width="0" height="0"/>
					<path d="M2414,1419L2414,1419" tabindex="0">
						<title>00:14.19 on 2024-11-17</title>
					</path>
					<line x1="0" y1="1419" x2="2723" y2="1419"/>
					<line x1="2414" y1="0" x2="2414" y2="3451"/>
				</g>
				<g style="--index: 30;">
					<path d="M2433,1789" tabindex="0">
						<title>j2prvwp8</title>
					</path>
					<rect x="2433" y="1789" width="0" height="0"/>
					<path d="M2433,1789L2433,1789" tabindex="0">
						<title>00:17.89 on 2024-12-06</title>
					</path>
					<line x1="0" y1="1789" x2="2723" y2="1789"/>
					<line x1="2433" y1="0" x2="2433" y2="3451"/>
				</g>
				<g style="--index: 31;">
					<path d="M2438,1682" tabindex="0">
						<title>8qpvqnwx</title>
					</path>
					<rect x="2438" y="1682" width="0" height="0"/>
					<path d="M2438,1682L2438,1682" tabindex="0">
						<title>00:16.82 on 2024-12-11</title>
					</path>
					<line x1="0" y1="1682" x2="2723" y2="1682"/>
					<line x1="2438" y1="0" x2="2438" y2="3451"/>
				</g>
				<g style="--index: 32;">
					<path d="M2528,1433L2570,1433L2570,1269L2678,1269L2678,1215L2681,1215L2681,1206" tabindex="0">
						<title>8gop7k2x</title>
					</path>
					<rect x="2528" y="1206" width="153" height="227"/>
					<path d="M2528,1433L2528,1433" tabindex="0">
						<title>00:14.33 on 2025-03-11</title>
					</path>
					<line x1="0" y1="1433" x2="2723" y2="1433"/>
					<line x1="2528" y1="0" x2="2528" y2="3451"/>
					<path d="M2570,1269L2570,1269" tabindex="0">
						<title>00:12.69 on 2025-04-22</title>
					</path>
					<line x1="0" y1="1269" x2="2723" y2="1269"/>
					<line x1="2570" y1="0" x2="2570" y2="3451"/>
					<path d="M2678,1215L2678,1215" tabindex="0">
						<title>00:12.15 on 2025-08-08</title>
					</path>
					<line x1="0" y1="1215" x2="2723" y2="1215"/>
					<line x1="2678" y1="0" x2="2678" y2="3451"/>
					<path d="M2681,1206L2681,1206" tabindex="0">
						<title>00:12.06 on 2025-08-11</title>
					</path>
					<line x1="0" y1="1206" x2="2723" y2="1206"/>
					<line x1="2681" y1="0" x2="2681" y2="3451"/>
				</g>
				<g style="--index: 33;">
					<path d="M2532,1891" tabindex="0">
						<title>j9ve5wox</title>
					</path>
					<rect x="2532" y="1891" width="0" height="0"/>
					<path d="M2532,1891L2532,1891" tabindex="0">
						<title>00:18.91 on 2025-03-15</title>
					</path>
					<line x1="0" y1="1891" x2="2723" y2="1891"/>
					<line x1="2532" y1="0" x2="2532" y2="3451"/>
				</g>
				<g style="--index: 34;">
					<path d="M2540,1877" tabindex="0">
						<title>j9vw0ewx</title>
					</path>
					<rect x="2540" y="1877" width="0" height="0"/>
					<path d="M2540,1877L2540,1877" tabindex="0">
						<title>00:18.77 on 2025-03-23</title>
					</path>
					<line x1="0" y1="1877" x2="2723" y2="1877"/>
					<line x1="2540" y1="0" x2="2540" y2="3451"/>
				</g>
				<g style="--index: 35;">
					<path d="M2542,1622" tabindex="0">
						<title>8w7p6k4x</title>
					</path>
					<rect x="2542" y="1622" width="0" height="0"/>
					<path d="M2542,1622L2542,1622" tabindex="0">
						<title>00:16.22 on 2025-03-25</title>
					</path>
					<line x1="0" y1="1622" x2="2723" y2="1622"/>
					<line x1="2542" y1="0" x2="2542" y2="3451"/>
				</g>
				<g style="--index: 36;">
					<path d="M2581,1324L2634,1324L2634,1256L2636,1256L2636,1225L2649,1225L2649,1211L2650,1211L2650,1208L2651,1208L2651,1197L2665,1197L2665,1191" tabindex="0">
						<title>j2p4pel8</title>
					</path>
					<rect x="2581" y="1191" width="84" height="133"/>
					<path d="M2581,1324L2581,1324" tabindex="0">
						<title>00:13.24 on 2025-05-03</title>
					</path>
					<line x1="0" y1="1324" x2="2723" y2="1324"/>
					<line x1="2581" y1="0" x2="2581" y2="3451"/>
					<path d="M2634,1256L2634,1256" tabindex="0">
						<title>00:12.56 on 2025-06-25</title>
					</path>
					<line x1="0" y1="1256" x2="2723" y2="1256"/>
					<line x1="2634" y1="0" x2="2634" y2="3451"/>
					<path d="M2636,1225L2636,1225" tabindex="0">
						<title>00:12.25 on 2025-06-27</title>
					</path>
					<line x1="0" y1="1225" x2="2723" y2="1225"/>
					<line x1="2636" y1="0" x2="2636" y2="3451"/>
					<path d="M2649,1211L2649,1211" tabindex="0">
						<title>00:12.11 on 2025-07-10</title>
					</path>
					<line x1="0" y1="1211" x2="2723" y2="1211"/>
					<line x1="2649" y1="0" x2="2649" y2="3451"/>
					<path d="M2650,1208L2650,1208" tabindex="0">
						<title>00:12.08 on 2025-07-11</title>
					</path>
					<line x1="0" y1="1208" x2="2723" y2="1208"/>
					<line x1="2650" y1="0" x2="2650" y2="3451"/>
					<path d="M2651,1197L2651,1197" tabindex="0">
						<title>00:11.97 on 2025-07-12</title>
					</path>
					<line x1="0" y1="1197" x2="2723" y2="1197"/>
					<line x1="2651" y1="0" x2="2651" y2="3451"/>
					<path d="M2665,1191L2665,1191" tabindex="0">
						<title>00:11.91 on 2025-07-26</title>
					</path>
					<line x1="0" y1="1191" x2="2723" y2="1191"/>
					<line x1="2665" y1="0" x2="2665" y2="3451"/>
				</g>
				<g style="--index: 37;">
					<path d="M2626,1234L2649,1234L2649,1199" tabindex="0">
						<title>81pdyqq8</title>
					</path>
					<rect x="2626" y="1199" width="23" height="35"/>
					<path d="M2626,1234L2626,1234" tabindex="0">
						<title>00:12.34 on 2025-06-17</title>
					</path>
					<line x1="0" y1="1234" x2="2723" y2="1234"/>
					<line x1="2626" y1="0" x2="2626" y2="3451"/>
					<path d="M2649,1199L2649,1199" tabindex="0">
						<title>00:11.99 on 2025-07-10</title>
					</path>
					<line x1="0" y1="1199" x2="2723" y2="1199"/>
					<line x1="2649" y1="0" x2="2649" y2="3451"/>
				</g>
				<g style="--index: 38;">
					<path d="M2642,1804" tabindex="0">
						<title>8r667zw8</title>
					</path>
					<rect x="2642" y="1804" width="0" height="0"/>
					<path d="M2642,1804L2642,1804" tabindex="0">
						<title>00:18.04 on 2025-07-03</title>
					</path>
					<line x1="0" y1="1804" x2="2723" y2="1804"/>
					<line x1="2642" y1="0" x2="2642" y2="3451"/>
				</g>
				<g style="--index: 39;">
					<path d="M2648,1287L2665,1287L2665,1230L2712,1230L2712,1214L2722,1214L2722,1199" tabindex="0">
						<title>8qpl62dx</title>
					</path>
					<rect x="2648" y="1199" width="74" height="88"/>
					<path d="M2648,1287L2648,1287" tabindex="0">
						<title>00:12.87 on 2025-07-09</title>
					</path>
					<line x1="0" y1="1287" x2="2723" y2="1287"/>
					<line x1="2648" y1="0" x2="2648" y2="3451"/>
					<path d="M2665,1230L2665,1230" tabindex="0">
						<title>00:12.30 on 2025-07-26</title>
					</path>
					<line x1="0" y1="1230" x2="2723" y2="1230"/>
					<line x1="2665" y1="0" x2="2665" y2="3451"/>
					<path d="M2712,1214L2712,1214" tabindex="0">
						<title>00:12.14 on 2025-09-11</title>
					</path>
					<line x1="0" y1="1214" x2="2723" y2="1214"/>
					<line x1="2712" y1="0" x2="2712" y2="3451"/>
					<path d="M2722,1199L2722,1199" tabindex="0">
						<title>00:11.99 on 2025-09-21</title>
					</path>
					<line x1="0" y1="1199" x2="2723" y2="1199"/>
					<line x1="2722" y1="0" x2="2722" y2="3451"/>
				</g>
				<g style="--index: 40;">
					<path d="M2651,1202" tabindex="0">
						<title>jo1zrpnx</title>
					</path>
					<rect x="2651" y="1202" width="0" height="0"/>
					<path d="M2651,1202L2651,1202" tabindex="0">
						<title>00:12.02 on 2025-07-12</title>
					</path>
					<line x1="0" y1="1202" x2="2723" y2="1202"/>
					<line x1="2651" y1="0" x2="2651" y2="3451"/>
				</g>
				<g style="--index: 41;">
					<path d="M2662,1465L2667,1465L2667,1345L2682,1345L2682,1266" tabindex="0">
						<title>j2pmdqp8</title>
					</path>
					<rect x="2662" y="1266" width="20" height="199"/>
					<path d="M2662,1465L2662,1465" tabindex="0">
						<title>00:14.65 on 2025-07-23</title>
					</path>
					<line x1="0" y1="1465" x2="2723" y2="1465"/>
					<line x1="2662" y1="0" x2="2662" y2="3451"/>
					<path d="M2667,1345L2667,1345" tabindex="0">
						<title>00:13.45 on 2025-07-28</title>
					</path>
					<line x1="0" y1="1345" x2="2723" y2="1345"/>
					<line x1="2667" y1="0" x2="2667" y2="3451"/>
					<path d="M2682,1266L2682,1266" tabindex="0">
						<title>00:12.66 on 2025-08-12</title>
					</path>
					<line x1="0" y1="1266" x2="2723" y2="1266"/>
					<line x1="2682" y1="0" x2="2682" y2="3451"/>
				</g>
				<g style="--index: 42;">
					<path d="M2664,1707" tabindex="0">
						<title>jn15mm18</title>
					</path>
					<rect x="2664" y="1707" width="0" height="0"/>
					<path d="M2664,1707L2664,1707" tabindex="0">
						<title>00:17.07 on 2025-07-25</title>
					</path>
					<line x1="0" y1="1707" x2="2723" y2="1707"/>
					<line x1="2664" y1="0" x2="2664" y2="3451"/>
				</g>
				<g style="--index: 43;">
					<path d="M2665,1457" tabindex="0">
						<title>j0164l3x</title>
					</path>
					<rect x="2665" y="1457" width="0" height="0"/>
					<path d="M2665,1457L2665,1457" tabindex="0">
						<title>00:14.57 on 2025-07-26</title>
					</path>
					<line x1="0" y1="1457" x2="2723" y2="1457"/>
					<line x1="2665" y1="0" x2="2665" y2="3451"/>
				</g>
				<g style="--index: 44;">
					<path d="M2672,1391" tabindex="0">
						<title>j01wv4rx</title>
					</path>
					<rect x="2672" y="1391" width="0" height="0"/>
					<path d="M2672,1391L2672,1391" tabindex="0">
						<title>00:13.91 on 2025-08-02</title>
					</path>
					<line x1="0" y1="1391" x2="2723" y2="1391"/>
					<line x1="2672" y1="0" x2="2672" y2="3451"/>
				</g>
				<g style="--index: 45;">
					<path d="M2681,1294" tabindex="0">
						<title>jm0r7048</title>
					</path>
					<rect x="2681" y="1294" width="0" height="0"/>
					<path d="M2681,1294L2681,1294" tabindex="0">
						<title>00:12.94 on 2025-08-11</title>
					</path>
					<line x1="0" y1="1294" x2="2723" y2="1294"/>
					<line x1="2681" y1="0" x2="2681" y2="3451"/>
				</g>
				<g style="--index: 46;">
					<path d="M2686,1370" tabindex="0">
						<title>8gzloyyj</title>
					</path>
					<rect x="2686" y="1370" width="0" height="0"/>
					<path d="M2686,1370L2686,1370" tabindex="0">
						<title>00:13.70 on 2025-08-16</title>
					</path>
					<line x1="0" y1="1370" x2="2723" y2="1370"/>
					<line x1="2686" y1="0" x2="2686" y2="3451"/>
				</g>
				<g style="--index: 47;">
					<path d="M2686,1401" tabindex="0">
						<title>81v3d938</title>
					</path>
					<rect x="2686" y="1401" width="0" height="0"/>
					<path d="M2686,1401L2686,1401" tabindex="0">
						<title>00:14.01 on 2025-08-16</title>
					</path>
					<line x1="0" y1="1401" x2="2723" y2="1401"/>
					<line x1="2686" y1="0" x2="2686" y2="3451"/>
				</g>
				<g style="--index: 48;">
					<path d="M2687,1821" tabindex="0">
						<title>8gzkpr2j</title>
					</path>
					<rect x="2687" y="1821" width="0" height="0"/>
					<path d="M2687,1821L2687,1821" tabindex="0">
						<title>00:18.21 on 2025-08-17</title>
					</path>
					<line x1="0" y1="1821" x2="2723" y2="1821"/>
					<line x1="2687" y1="0" x2="2687" y2="3451"/>
				</g>
				<g style="--index: 49;">
					<path d="M2694,1566" tabindex="0">
						<title>8gzn56rj</title>
					</path>
					<rect x="2694" y="1566" width="0" height="0"/>
					<path d="M2694,1566L2694,1566" tabindex="0">
						<title>00:15.66 on 2025-08-24</title>
					</path>
					<line x1="0" y1="1566" x2="2723" y2="1566"/>
					<line x1="2694" y1="0" x2="2694" y2="3451"/>
				</g>
				<g style="--index: 50;">
					<path d="M2694,1583" tabindex="0">
						<title>8v7p0yv8</title>
					</path>
					<rect x="2694" y="1583" width="0" height="0"/>
					<path d="M2694,1583L2694,1583" tabindex="0">
						<title>00:15.83 on 2025-08-24</title>
					</path>
					<line x1="0" y1="1583" x2="2723" y2="1583"/>
					<line x1="2694" y1="0" x2="2694" y2="3451"/>
				</g>
				<g style="--index: 51;">
					<path d="M2698,1199" tabindex="0">
						<title>86pek6wj</title>
					</path>
					<rect x="2698" y="1199" width="0" height="0"/>
					<path d="M2698,1199L2698,1199" tabindex="0">
						<title>00:11.99 on 2025-08-28</title>
					</path>
					<line x1="0" y1="1199" x2="2723" y2="1199"/>
					<line x1="2698" y1="0" x2="2698" y2="3451"/>
				</g>
				<g style="--index: 52;">
					<path d="M2700,1518" tabindex="0">
						<title>xkzy0d7x</title>
					</path>
					<rect x="2700" y="1518" width="0" height="0"/>
					<path d="M2700,1518L2700,1518" tabindex="0">
						<title>00:15.18 on 2025-08-30</title>
					</path>
					<line x1="0" y1="1518" x2="2723" y2="1518"/>
					<line x1="2700" y1="0" x2="2700" y2="3451"/>
				</g>
				<g style="--index: 53;">
					<path d="M2700,1354" tabindex="0">
						<title>8d951qgx</title>
					</path>
					<rect x="2700" y="1354" width="0" height="0"/>
					<path d="M2700,1354L2700,1354" tabindex="0">
						<title>00:13.54 on 2025-08-30</title>
					</path>
					<line x1="0" y1="1354" x2="2723" y2="1354"/>
					<line x1="2700" y1="0" x2="2700" y2="3451"/>
				</g>
				<g style="--index: 54;">
					<path d="M2716,1431" tabindex="0">
						<title>jppk5gkj</title>
					</path>
					<rect x="2716" y="1431" width="0" height="0"/>
					<path d="M2716,1431L2716,1431" tabindex="0">
						<title>00:14.31 on 2025-09-15</title>
					</path>
					<line x1="0" y1="1431" x2="2723" y2="1431"/>
					<line x1="2716" y1="0" x2="2716" y2="3451"/>
				</g>
				<g style="--index: 55;">
					<path d="M2722,1322L2723,1322L2723,1257" tabindex="0">
						<title>x7g52m6x</title>
					</path>
					<rect x="2722" y="1257" width="1" height="65"/>
					<path d="M2722,1322L2722,1322" tabindex="0">
						<title>00:13.22 on 2025-09-21</title>
					</path>
					<line x1="0" y1="1322" x2="2723" y2="1322"/>
					<line x1="2722" y1="0" x2="2722" y2="3451"/>
					<path d="M2723,1257L2723,1257" tabindex="0">
						<title>00:12.57 on 2025-09-22</title>
					</path>
					<line x1="0" y1="1257" x2="2723" y2="1257"/>
					<line x1="2723" y1="0" x2="2723" y2="3451"/>
				</g>
				<g style="--index: 56;">
					<path d="M2723,1598" tabindex="0">
						<title>j9y9geox</title>
					</path>
					<rect x="2723" y="1598" width="0" height="0"/>
					<path d="M2723,1598L2723,1598" tabindex="0">
						<title>00:15.98 on 2025-09-22</title>
					</path>
					<line x1="0" y1="1598" x2="2723" y2="1598"/>
					<line x1="2723" y1="0" x2="2723" y2="3451"/>
				</g>
			</g>
		</svg>
	</foreignObject>
</svg>
