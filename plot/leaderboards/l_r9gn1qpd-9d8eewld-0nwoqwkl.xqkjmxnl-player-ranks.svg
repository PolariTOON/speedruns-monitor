<svg xmlns="http://www.w3.org/2000/svg" lang="en">
	<title>Rank by player for leaderboard l_r9gn1qpd-9d8eewld-0nwoqwkl.xqkjmxnl</title>
	<metadata>
		<meta xmlns="http://www.w3.org/1999/xhtml" charset="utf-8" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="viewport" content="width=device-width" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="color-scheme" content="dark light" />
	</metadata>
	<style>
		*,
		::before,
		::after {
			box-sizing: border-box;
		}
		:root {
			background: var(--canvas-background);
			color: var(--canvas-foreground);
			fill: var(--canvas-background);
			stroke: var(--canvas-foreground);
			stroke-linejoin: round;
			stroke-linecap: round;
		}
		foreignObject {
			pointer-events: none;
		}
		foreignObject::before,
		foreignObject::after {
			content: "";
			position: absolute;
			z-index: 1;
			left: 20px;
			bottom: 20px;
			pointer-events: auto;
		}
		foreignObject::before {
			width: calc(100% - 40px);
			height: calc(20px + var(--date-size) * 1px);
		}
		foreignObject::after {
			width: calc(20px + var(--value-size) * 1px);
			height: calc(100% - 40px);
		}
		foreignObject &gt; div {
			position: absolute;
			z-index: 4;
			right: 0;
			top: 0;
			margin: 20px;
			border: 1px solid var(--canvas-foreground);
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			transition: opacity 1s;
			pointer-events: auto;
		}
		foreignObject:is(:hover, :focus-within) &gt; div:not(:hover, :focus-within) {
			opacity: 0;
			pointer-events: none;
		}
		foreignObject &gt; div &gt; p {
			margin: 0;
		}
		label {
			display: table;
			border-collapse: separate;
			border-spacing: 10px;
			direction: rtl;
		}
		progress,
		input[type="checkbox"] {
			display: table-cell;
			width: 16px;
			height: 16px;
			margin: 2px;
			accent-color: var(--canvas-foreground);
			vertical-align: top;
			direction: ltr;
		}
		progress + span,
		input[type="checkbox"] + span {
			display: table-cell;
			vertical-align: top;
			direction: ltr;
		}
		input[type="checkbox"]:not(:disabled):is(:hover, :focus-within) + span {
			text-decoration: underline;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			position: absolute;
			z-index: 2;
			margin: 0;
			padding: 10px;
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			font-weight: bold;
			pointer-events: auto;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg + svg {
			border-top: 1px solid #0000;
			border-bottom: 1px solid var(--canvas-foreground);
		}
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px dashed #0000;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg {
			width: calc(20px + var(--date-size) * 1px);
			height: 42px;
			bottom: 20px;
		}
		foreignObject &gt; svg:first-of-type {
			left: calc(40px + var(--value-size) * 1px);
			transform: rotate(90deg) translate(-100%, 0);
			transform-origin: left bottom;
		}
		foreignObject &gt; svg:first-of-type + svg {
			right: 20px;
			transform: rotate(90deg) translate(0, 100%);
			transform-origin: right bottom;
		}
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			width: calc(20px + var(--value-size) * 1px);
			height: 42px;
			left: 20px;
		}
		foreignObject &gt; svg:first-of-type + svg + svg {
			bottom: calc(40px + var(--date-size) * 1px);
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			top: 20px;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text {
			fill: var(--canvas-foreground);
			stroke: none;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text {
			cursor: vertical-text;
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg + svg {
			position: relative;
			z-index: 3;
			width: calc(100% - 60px - var(--value-size) * 1px);
			height: calc(100% - 60px - var(--date-size) * 1px);
			margin: 20px 20px calc(40px + var(--date-size) * 1px) calc(40px + var(--value-size) * 1px);
			border-left: 1px solid var(--canvas-foreground);
			border-right: 1px dashed var(--canvas-foreground);
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px solid var(--canvas-foreground);
			background: var(--canvas-background);
			pointer-events: auto;
		}
		g &gt; rect {
			vector-effect: non-scaling-stroke;
			fill: var(--highlighted);
			stroke: none;
		}
		g &gt; rect[tabindex] {
			fill: var(--tier, #0000);
			cursor: help;
		}
		g &gt; rect[tabindex][data-tier="diamond"] {
			--tier: var(--diamond);
		}
		g &gt; rect[tabindex][data-tier="gold"] {
			--tier: var(--gold);
		}
		g &gt; rect[tabindex][data-tier="silver"] {
			--tier: var(--silver);
		}
		g &gt; rect[tabindex][data-tier="bronze"] {
			--tier: var(--bronze);
		}
		g &gt; path[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: hsl(calc(var(--index) / var(--count) * 360), 50%, 50%);
			cursor: help;
		}
		g:is(:hover, :focus-within) &gt; path[tabindex] {
			stroke: var(--canvas-foreground);
		}
		g &gt; path[tabindex]:is(:hover, :focus-within) {
			outline: 0;
		}
		g &gt; path[tabindex]:first-of-type {
			stroke-width: 2;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) {
			stroke-width: 4;
		}
		g &gt; path[tabindex]:first-of-type:not(:last-of-type) {
			stroke-dasharray: 4 8;
		}
		g &gt; path[tabindex]:first-of-type + rect {
			fill: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect {
			fill: var(--highlighted);
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] {
			stroke-width: 8;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) {
			stroke-width: 16;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line + line {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			stroke-width: 2;
			stroke-dasharray: 4 8;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line + line {
			stroke: var(--faded);
		}
		@media (prefers-color-scheme: dark) {
			:root {
				--canvas-background: #000;
				--canvas-foreground: #ccc;
				--diamond: #0363;
				--gold: #6303;
				--silver: #3633;
				--bronze: #6363;
				--highlighted: #6663;
				--faded: #9993;
			}
		}
		@media (prefers-color-scheme: light) {
			:root {
				--canvas-background: #fff;
				--canvas-foreground: #333;
				--diamond: #9cf3;
				--gold: #fc93;
				--silver: #9c93;
				--bronze: #c9c3;
				--highlighted: #9993;
				--faded: #6663;
			}
		}
	</style>
	<script>
		"use strict";
		{
			const script = document.currentScript;
			const documentUrl = location.href;
			const scope = new URL("../../", documentUrl).pathname;
			const playersKey = `${scope}#players`;
			const leaderboardsKey = `${scope}#leaderboards`;
			const sessionKey = `${scope}#session`;
			const lockKey = `${scope}#lock`;
			async function importDataScript(dataScriptUrl, signal) {
				signal.throwIfAborted();
				if (documentUrl.protocol !== "file:") {
					const response = await fetch(dataScriptUrl, {
						signal,
					});
					if (!response.ok) {
						throw new Error(response.statusText);
					}
					const data = await response.json();
					return data;
				}
				return await new Promise((resolve, reject) =&gt; {
					const name = `callback${Math.random() * 2 ** 53}`;
					let called = false;
					let data = null;
					function callback(value) {
						if (!called) {
							called = true;
							data = value;
						}
					}
					window[name] = callback;
					const dataScript = document.createElementNS("http://www.w3.org/2000/svg", "script");
					dataScript.href = `${dataScriptUrl}&amp;callback=${name}`;
					function handleAbort(event) {
						delete window[name];
						dataScript.removeEventListener("error", handleError);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const reason = signal.reason;
						reject(reason);
					}
					function handleError(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const error = event.error;
						reject(error);
					}
					function handleLoad(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("error", handleError);
						dataScript.remove();
						resolve(data);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					dataScript.addEventListener("error", handleError, {
						once: true,
					});
					dataScript.addEventListener("load", handleLoad, {
						once: true,
					});
					script.after(dataScript);
				});
			}
			async function waitForTimeout(delay, signal) {
				signal.throwIfAborted();
				return await new Promise((resolve, reject) =&gt; {
					let timeout = null;
					function handleAbort() {
						clearTimeout(timeout);
						const reason = signal.reason;
						reject(reason);
					}
					function handleTimeout() {
						signal.removeEventListener("abort", handleAbort);
						resolve(delay);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					timeout = setTimeout(handleTimeout, delay);
				});
			}
			window.addEventListener("pageshow", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully restored page from cache`);
				} else {
					console.log(`Unsuccessfully restored page from cache`);
				}
			});
			window.addEventListener("pagehide", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully saved page to cache`);
				} else {
					console.log(`Unsuccessfully saved page to cache`);
				}
			});
			window.addEventListener("pageshow", async (event) =&gt; {
				const rootTitleElement = document.querySelector("title");
				const rootTitleContent = rootTitleElement.textContent;
				const pathTitleElements = Array.from(document.querySelectorAll("g &gt; path[tabindex]:first-of-type &gt; title"));
				const pathTitleContents = pathTitleElements.map((pathTitleElement) =&gt; {
					const pathTitleContent = pathTitleElement.textContent;
					return pathTitleContent;
				});
				const foreignObject = document.querySelector("foreignObject");
				const div = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
				div.dir = "ltr";
				const p = document.createElementNS("http://www.w3.org/1999/xhtml", "p");
				const label = document.createElementNS("http://www.w3.org/1999/xhtml", "label");
				const progress = document.createElementNS("http://www.w3.org/1999/xhtml", "progress");
				label.append(progress);
				const span = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
				span.textContent = "Loading names";
				label.append(span);
				p.append(label);
				div.append(p);
				foreignObject.prepend(div);
				let lock = false;
				let session = null;
				const broadcastChannel = new BroadcastChannel(sessionKey);
				const abortController = new AbortController();
				const signal = abortController.signal;
				const abort = abortController.abort.bind(abortController);
				const {promise, resolve} = Promise.withResolvers();
				broadcastChannel.addEventListener("message", (event) =&gt; {
					const data = event.data;
					const type = data.type;
					switch (type) {
						case "request": {
							if (lock &amp;&amp; signal.aborted) {
								broadcastChannel.postMessage({
									type: "response",
									session,
								});
							}
							break;
						}
						case "response": {
							if (!signal.aborted) {
								session = data.session;
								if (session != null) {
									const {players, leaderboards} = session;
									try {
										const cachedPlayers = JSON.stringify(players);
										const cachedLeaderboards = JSON.stringify(leaderboards);
										sessionStorage.setItem(playersKey, cachedPlayers);
										sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
									} catch {}
									console.log(`Successfully loaded names from peer`);
									abort();
									resolve();
								} else {
									console.log(`Unsuccessfully loaded names from peer`);
									abort();
									resolve();
								}
							}
							break;
						}
					}
				});
				try {
					const cachedPlayers = sessionStorage.getItem(playersKey);
					const cachedLeaderboards = sessionStorage.getItem(leaderboardsKey);
					if (cachedPlayers == null || cachedLeaderboards == null) {
						throw new Error();
					}
					const players = JSON.parse(cachedPlayers);
					const leaderboards = JSON.parse(cachedLeaderboards);
					session = {players, leaderboards};
				} catch {}
				if (session != null) {
					broadcastChannel.postMessage({
						type: "response",
						session,
					});
					console.log(`Successfully loaded names from local`);
					abort();
					resolve();
				} else {
					broadcastChannel.postMessage({
						type: "request",
					});
					console.log(`Unsuccessfully loaded names from local`);
				}
				(async () =&gt; {
					for (;;) {
						await navigator.locks.request(lockKey, async () =&gt; {
							lock = true;
							console.log(`Acquired lock`);
							if (!signal.aborted) {
								try {
									const players = Object.create(null);
									const leaderboards = Object.create(null);
									const games = ["9d3rrxyd", "w6jl2ned"];
									for (const gameId of games) {
										const {data} = await importDataScript(`https://www.speedrun.com/api/v1/games/${gameId}?embed=categories,levels,variables`, signal);
										const versions = data.variables.data.find((variable) =&gt; {
											return variable.name === "Version";
										});
										const levels = Object.fromEntries(data.levels.data.map((level) =&gt; {
											return [level.id, level];
										}));
										const categories = Object.fromEntries(data.categories.data.map((category) =&gt; {
											return [category.id, category];
										}));
										const variables = Object.fromEntries(data.variables.data.map((variable) =&gt; {
											return [variable.id, variable];
										}));
										console.log(`Got game`);
										await waitForTimeout(800, signal);
										const slice = 200;
										for (let offset = 0;; offset += slice) {
											const {data, pagination} = await importDataScript(`https://www.speedrun.com/api/v1/runs?game=${gameId}&amp;orderby=date&amp;direction=asc&amp;embed=players&amp;offset=${offset}&amp;max=${slice}`, signal);
											const {size} = pagination;
											if (size === 0) {
												break;
											}
											for (const run of data) {
												const status = run.status.status;
												if (status == null || status === "new") {
													continue;
												}
												const player = run.players.data[0].rel === "user" ? run.players.data[0].id : "814p2558";
												const playerName = run.players.data[0].rel === "user" ? run.players.data[0].names.international : "anonymous";
												players[player] ??= playerName;
												const level = run.level;
												const category = run.category;
												const values = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return `-${variable}.${value}`;
												});
												const leaderboard = `${level != null ? `l_${level}-` : ""}${category}${values.join("")}`;
												const levelName = run.level != null ? levels[run.level]?.name ?? null : null;
												const categoryName = categories[run.category]?.name ?? null;
												const valueNames = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return variables[variable]?.values.values[value]?.label ?? null;
												}).filter((valueName) =&gt; {
													return valueName != null;
												});
												const leaderboardName = `${levelName != null ? `${levelName}: ` : ""}${categoryName ?? ""}${values.length !== 0 ? ` - ${valueNames.join(", ")}` : ""}`;
												leaderboards[leaderboard] ??= leaderboardName;
											}
											console.log(`Got runs ${offset}-${offset + size - 1}`);
											await waitForTimeout(800, signal);
										}
									}
									session = {players, leaderboards};
								} catch {}
								if (!signal.aborted) {
									if (session != null) {
										const {players, leaderboards} = session;
										try {
											const cachedPlayers = JSON.stringify(players);
											const cachedLeaderboards = JSON.stringify(leaderboards);
											sessionStorage.setItem(playersKey, cachedPlayers);
											sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
										} catch {}
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Successfully loaded names from remote`);
										abort();
										resolve();
									} else {
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Unsuccessfully loaded names from remote`);
										abort();
										resolve();
									}
								}
							}
							await new Promise((resolve) =&gt; {
								window.addEventListener("beforeunload", () =&gt; {
									resolve();
								}, {
									once: true,
								});
							});
						});
						lock = false;
						console.log(`Released lock`);
						await new Promise((resolve) =&gt; {
							window.addEventListener("pagehide", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
						await new Promise((resolve) =&gt;{
							window.addEventListener("pageshow", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
					}
				})();
				await promise;
				if (session == null) {
					const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
					input.type = "checkbox";
					input.autocomplete = "off";
					input.disabled = true;
					input.indeterminate = true;
					progress.replaceWith(input);
					span.textContent = "Unavailable names";
					return;
				}
				const {players, leaderboards} = session;
				const hasPlayerRoot = rootTitleContent.includes(" for player");
				const hasLeaderboardRoot = rootTitleContent.includes(" for leaderboard");
				const rootTitle = {
					element: rootTitleElement,
					contentWithIds: rootTitleContent,
					contentWithNames: hasPlayerRoot ? rootTitleContent.replace(/ for player ([0-9_a-z]+)/, ($0, $1) =&gt; {
						return ` for player ${players[$1] ?? $1}`;
					}) : hasLeaderboardRoot ? rootTitleContent.replace(/ for leaderboard ((?:l_[0-9_a-z]+-)?[0-9_a-z]+(-[0-9_a-z]+\.[0-9_a-z]+)*)/, ($0, $1) =&gt; {
						return ` for leaderboard ${leaderboards[$1] ?? $1}`;
					}) : rootTitleContent,
				};
				const hasPlayerPaths = rootTitleContent.includes(" by player");
				const hasLeaderboardPaths = rootTitleContent.includes(" by leaderboard");
				const pathTitles = pathTitleElements.map((pathTitleElement, k) =&gt; {
					const pathTitleContent = pathTitleContents[k];
					const pathTitle = {
						element: pathTitleElement,
						contentWithIds: pathTitleContent,
						contentWithNames: hasPlayerPaths ? players[pathTitleContent] ?? pathTitleContent : hasLeaderboardPaths ? leaderboards[pathTitleContent] ?? pathTitleContent : pathTitleContent,
					};
					return pathTitle;
				});
				const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
				input.type = "checkbox";
				input.autocomplete = "off";
				input.addEventListener("change", () =&gt; {
					input.disabled = true;
					if (input.checked) {
						rootTitle.element.textContent = rootTitle.contentWithNames;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithNames;
						}
					} else {
						rootTitle.element.textContent = rootTitle.contentWithIds;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithIds;
						}
					}
					input.disabled = false;
				});
				progress.replaceWith(input);
				span.textContent = "Reveal names";
			}, {
				once: true,
			});
		}
	</script>
	<script>
		"use strict";
		{
			document.addEventListener("DOMContentLoaded", (event) =&gt; {
				const minDateText = document.querySelector("foreignObject &gt; svg:first-of-type &gt; text");
				const maxDateText = document.querySelector("foreignObject &gt; svg:first-of-type + svg &gt; text");
				const startX = Math.round(Date.parse(minDateText.textContent) / 86400000);
				function xToDate(x) {
					const datetime = new Date((startX + x) * 86400000);
					const year = `${datetime.getUTCFullYear()}`.padStart(4, "0");
					const month = `${datetime.getUTCMonth() + 1}`.padStart(2, "0");
					const day = `${datetime.getUTCDate()}`.padStart(2, "0");
					const date = `${year}-${month}-${day}`;
					const size = date.length * 10;
					return {date, size};
				}
				function setMinDate(x) {
					const {date, size} = xToDate(Math.floor(x));
					minDateText.textLength.baseVal.value = size;
					minDateText.textContent = date;
				}
				function setMaxDate(x) {
					const {date, size} = xToDate(Math.ceil(x));
					maxDateText.textLength.baseVal.value = size;
					maxDateText.textContent = date;
				}
				const minValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg &gt; text");
				const maxValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text");
				const timed = minValueText.textContent.includes(":");
				function yToValue(y) {
					if (timed) {
						const minutes = `${(y - y % 6000) / 6000}`.padStart(2, "0");
						const seconds = `${(y - y % 100) / 100 % 60}`.padStart(2, "0");
						const centiseconds = `${y % 100}`.padStart(2, "0");
						const value = `${minutes}:${seconds}.${centiseconds}`;
						const size = value.length * 10;
						return {value, size};
					} else {
						const value = `${y}`;
						const size = value.length * 10;
						return {value, size};
					}
				}
				function setMinValue(y) {
					const {value, size} = yToValue(Math.floor(y));
					minValueText.textLength.baseVal.value = size;
					minValueText.textContent = value;
				}
				function setMaxValue(y) {
					const {value, size} = yToValue(Math.ceil(y));
					maxValueText.textLength.baseVal.value = size;
					maxValueText.textContent = value;
				}
				const svg = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg + svg");
				svg.tabIndex = -1;
				svg.style.setProperty("outline", "0");
				if (CSS.supports("overflow-clip-margin", "8px")) {
					svg.style.setProperty("overflow", "clip");
					svg.style.setProperty("overflow-clip-margin", "8px");
				}
				svg.style.setProperty("touch-action", "none");
				const {x: baseX, y: baseY, width: baseWidth, height: baseHeight} = svg.viewBox.baseVal;
				let pointerCount = 0;
				const pointers = Object.create(null);
				const xPointerIds = [];
				const yPointerIds = [];
				let x = null;
				let y = null;
				let width = null;
				let height = null;
				svg.addEventListener("pointerdown", (event) =&gt; {
					const {pointerId} = event;
					if (pointerId in pointers) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.setPointerCapture(pointerId);
					++pointerCount;
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId] = {
						offsetX,
						offsetY,
					};
					xPointerIds.splice(xPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetX &lt;= offsetX;
					}) + 1, 0, pointerId);
					yPointerIds.splice(yPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetY &lt;= offsetY;
					}) + 1, 0, pointerId);
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					width = Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth);
					height = Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight);
					x = Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX);
					y = Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY);
				});
				svg.addEventListener("pointerup", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.releasePointerCapture(pointerId);
					--pointerCount;
					delete pointers[pointerId];
					xPointerIds.splice(xPointerIds.lastIndexOf(pointerId), 1);
					yPointerIds.splice(yPointerIds.lastIndexOf(pointerId), 1);
					const minOffsetX = pointerCount !== 0 ? pointers[xPointerIds[0]].offsetX : null;
					const minOffsetY = pointerCount !== 0 ? pointers[yPointerIds[0]].offsetY : null;
					const maxClientWidth = pointerCount !== 0 ? pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX : null;
					const maxClientHeight = pointerCount !== 0 ? pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY : null;
					width = pointerCount !== 0 ? Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth) : null;
					height = pointerCount !== 0 ? Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight) : null;
					x = pointerCount !== 0 ? Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX) : null;
					y = pointerCount !== 0 ? Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY) : null;
				});
				svg.addEventListener("pointermove", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					event.preventDefault();
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId].offsetX = offsetX;
					pointers[pointerId].offsetY = offsetY;
					const oldXIndex = xPointerIds.lastIndexOf(pointerId);
					let newXIndex = oldXIndex;
					while (newXIndex &gt; 0 &amp;&amp; pointers[xPointerIds[newXIndex - 1]].offsetX &gt; offsetX) {
						--newXIndex;
					}
					xPointerIds.copyWithin(newXIndex + 1, newXIndex, oldXIndex);
					xPointerIds[newXIndex] = pointerId;
					while (newXIndex &lt; pointerCount - 1 &amp;&amp; pointers[xPointerIds[newXIndex + 1]].offsetX &lt; offsetX) {
						++newXIndex;
					}
					xPointerIds.copyWithin(oldXIndex, oldXIndex + 1, newXIndex + 1);
					xPointerIds[newXIndex] = pointerId;
					const oldYIndex = yPointerIds.lastIndexOf(pointerId);
					let newYIndex = oldYIndex;
					while (newYIndex &gt; 0 &amp;&amp; pointers[yPointerIds[newYIndex - 1]].offsetY &gt; offsetY) {
						--newYIndex;
					}
					yPointerIds.copyWithin(newYIndex + 1, newYIndex, oldYIndex);
					yPointerIds[newYIndex] = pointerId;
					while (newYIndex &lt; pointerCount - 1 &amp;&amp; pointers[yPointerIds[newYIndex + 1]].offsetY &lt; offsetY) {
						++newYIndex;
					}
					yPointerIds.copyWithin(oldYIndex, oldYIndex + 1, newYIndex + 1);
					yPointerIds[newYIndex] = pointerId;
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					animWidth = width === 0 ? animWidth : maxClientWidth === 0 ? baseWidth : Math.min(svg.clientWidth / maxClientWidth * width, baseWidth);
					animHeight = height === 0 ? animHeight : maxClientHeight === 0 ? baseHeight : Math.min(svg.clientHeight / maxClientHeight * height, baseHeight);
					animX = Math.max(Math.min(x - minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(y - minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
				const zoomIntensity = 1.25;
				svg.addEventListener("wheel", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					if (!ctrlKey) {
						const vectorX = (shiftKey ? event.deltaY : event.deltaX) / svg.clientWidth * animWidth;
						const vectorY = (shiftKey ? 0 : event.deltaY) / svg.clientHeight * animHeight;
						animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
						animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
						svg.viewBox.baseVal.x = animX;
						svg.viewBox.baseVal.y = animY;
						setMinDate(animX);
						setMaxDate(animX + animWidth);
						setMinValue(baseY * 2 + baseHeight - animHeight - animY);
						setMaxValue(baseY * 2 + baseHeight - animY);
						return;
					}
					const ratioX = zoomIntensity ** Math.sign(shiftKey ? event.deltaY : event.deltaX);
					const ratioY = zoomIntensity ** Math.sign(shiftKey ? 0 : event.deltaY);
					const positionX = Math.max(0, Math.min(event.offsetX / svg.clientWidth, 1)) * animWidth;
					const positionY = Math.max(0, Math.min(event.offsetY / svg.clientHeight, 1)) * animHeight;
					animWidth = Math.min(animWidth * ratioX, baseWidth);
					animHeight = Math.min(animHeight * ratioY, baseHeight);
					animX = Math.max(Math.min(animX + positionX * (1 - ratioX), baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(animY + positionY * (1 - ratioY), baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				}, {
					passive: false,
				});
				svg.addEventListener("keydown", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					switch (event.code) {
						case "Space": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "Equal":
						case "NumpadAdd":
						case "Minus":
						case "NumpadSubtract": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.code === "Minus" || event.code === "NumpadSubtract" ? zoomIntensity : 1 / zoomIntensity;
							if (!shiftKey) {
								animHeight = Math.min(animHeight * ratio, baseHeight);
								animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "Digit0":
						case "Numpad0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							if (!shiftKey) {
								animY = baseY;
								animHeight = baseHeight;
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animX = baseX;
							animWidth = baseWidth;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
					}
					switch (event.key) {
						case "ArrowRight": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = 50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowLeft": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = -50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowDown": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = 50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "End": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY + baseHeight - animHeight;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "ArrowUp": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = -50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "Home": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "PageDown":
						case "PageUp":
						case " ": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = event.key === "PageUp" || event.key === " " &amp;&amp; shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "+":
						case "-": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.key === "-" ? 1 / zoomIntensity : zoomIntensity;
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animHeight = Math.min(animHeight * ratio, baseHeight);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animX = baseX;
							animY = baseY;
							animWidth = baseWidth;
							animHeight = baseHeight;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
					}
				});
				svg.addEventListener("focusin", (event) =&gt; {
					if (!event.target.matches(":focus-visible")) {
						return;
					}
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					let {x, y, width, height} = event.target.getBBox();
					width = Math.round(width);
					height = Math.round(height);
					x = Math.round(x);
					y = baseY * 2 + baseHeight - height - Math.round(y);
					if (x + width &lt; animX) {
						animX = x;
						if (width &gt; animWidth) {
							animX += (width - animWidth) / 2;
						}
					} else if (x &gt; animX + animWidth) {
						animX = x + width - animWidth;
						if (width &gt; animWidth) {
							animX -= (width - animWidth) / 2;
						}
					}
					if (y + height &lt; animY) {
						animY = y;
						if (height &gt; animHeight) {
							animY += (height - animHeight) / 2;
						}
					} else if (y &gt; animY + animHeight) {
						animY = y + height - animHeight;
						if (height &gt; animHeight) {
							animY -= (height - animHeight) / 2;
						}
					}
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
			}, {
				once: true,
			});
		}
	</script>
	<foreignObject x="0" y="0" width="100%" height="100%" style="--date-size: 100; --value-size: 30;">
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2018-01-09</text>
		</svg>
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2025-04-20</text>
		</svg>
		<svg viewBox="0 0 30 20">
			<text x="15" y="10" dx="0" dy="2" textLength="10" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">0</text>
		</svg>
		<svg viewBox="0 0 30 20">
			<text x="15" y="10" dx="0" dy="2" textLength="30" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">112</text>
		</svg>
		<svg viewBox="0 0 2658 112" preserveAspectRatio="none" overflow="visible">
			<g transform="translate(0 112) scale(1 -1)" style="--count: 113;">
				<g>
					<rect x="0" y="0" width="2658" height="112"/>
				</g>
				<g style="--index: 0;">
					<path d="M0,0L0,0L0,0L4,0L4,1L10,1L10,3L17,3L17,2L26,2L26,3L29,3L29,0L93,0L93,1L100,1L100,2L642,2L642,3L842,3L842,4L856,4L856,5L918,5L918,6L1033,6L1033,7L1049,7L1049,8L1050,8L1050,9L1110,9L1110,10L1117,10L1117,11L1129,11L1129,12L1165,12L1165,13L1185,13L1185,14L1193,14L1193,15L1206,15L1206,16L1208,16L1208,17L1465,17L1465,18L1470,18L1470,19L1480,19L1480,20L1517,20L1517,22L1521,22L1521,23L1522,23L1522,24L1572,24L1572,25L1603,25L1603,26L1638,26L1638,27L1642,27L1642,28L1643,28L1643,29L1661,29L1661,30L1674,30L1674,31L1686,31L1686,32L1690,32L1690,33L1701,33L1701,34L1702,34L1702,35L1758,35L1758,36L1893,36L1893,37L1897,37L1897,38L1908,38L1908,39L1937,39L1937,41L1951,41L1951,42L1986,42L1986,43L1998,43L1998,44L2049,44L2049,45L2160,45L2160,46L2167,46L2167,47L2197,47L2197,48L2322,48L2322,49L2337,49L2337,50L2350,50L2350,51L2352,51L2352,52L2363,52L2363,53L2371,53L2371,55L2425,55L2425,56L2455,56L2455,57L2498,57L2498,58L2514,58L2514,59L2536,59L2536,60L2539,60L2539,61L2557,61L2557,63L2562,63L2562,64L2577,64L2577,65L2593,65L2593,67L2595,67L2595,68L2598,68L2598,69L2602,69L2602,70L2607,70L2607,71L2613,71L2613,72L2623,72L2623,73L2647,73L2647,74L2653,74L2653,75L2657,75L2657,77L2658,77L2658,78L2658,78" tabindex="0">
						<title>qj2pq1p8</title>
					</path>
				</g>
				<g style="--index: 1;">
					<path d="M0,1L4,1L4,0L10,0L10,1L17,1L17,3L26,3L26,4L72,4L72,6L93,6L93,7L100,7L100,8L582,8L582,9L642,9L642,10L842,10L842,11L856,11L856,12L918,12L918,13L1033,13L1033,14L1049,14L1049,15L1050,15L1050,16L1110,16L1110,17L1117,17L1117,18L1124,18L1124,19L1125,19L1125,20L1129,20L1129,21L1139,21L1139,22L1165,22L1165,23L1185,23L1185,24L1193,24L1193,25L1196,25L1196,26L1206,26L1206,27L1208,27L1208,28L1362,28L1362,29L1394,29L1394,30L1465,30L1465,31L1470,31L1470,32L1480,32L1480,33L1517,33L1517,35L1521,35L1521,36L1572,36L1572,37L1603,37L1603,38L1631,38L1631,39L1638,39L1638,40L1642,40L1642,41L1643,41L1643,42L1661,42L1661,43L1674,43L1674,44L1686,44L1686,45L1690,45L1690,46L1701,46L1701,47L1702,47L1702,48L1736,48L1736,49L1755,49L1755,50L1758,50L1758,51L1804,51L1804,52L1845,52L1845,53L1893,53L1893,54L1897,54L1897,55L1908,55L1908,56L1937,56L1937,58L1944,58L1944,59L1951,59L1951,60L1986,60L1986,61L1998,61L1998,62L2049,62L2049,63L2160,63L2160,64L2167,64L2167,65L2197,65L2197,66L2306,66L2306,67L2322,67L2322,68L2337,68L2337,69L2350,69L2350,70L2352,70L2352,71L2363,71L2363,72L2369,72L2369,73L2371,73L2371,75L2425,75L2425,76L2455,76L2455,77L2498,77L2498,78L2514,78L2514,79L2523,79L2523,80L2536,80L2536,81L2539,81L2539,83L2557,83L2557,85L2562,85L2562,86L2577,86L2577,87L2593,87L2593,89L2595,89L2595,90L2598,90L2598,91L2601,91L2601,92L2602,92L2602,93L2607,93L2607,94L2613,94L2613,95L2623,95L2623,96L2643,96L2643,97L2647,97L2647,98L2653,98L2653,99L2657,99L2657,101L2658,101L2658,102L2658,102" tabindex="0">
						<title>5j5gggn8</title>
					</path>
				</g>
				<g style="--index: 2;">
					<path d="M0,2L8,2L8,2L10,2L10,2L17,2L17,4L26,4L26,0L29,0L29,1L93,1L93,2L100,2L100,3L642,3L642,4L842,4L842,5L856,5L856,6L918,6L918,7L1033,7L1033,8L1049,8L1049,9L1050,9L1050,10L1110,10L1110,11L1117,11L1117,12L1125,12L1125,13L1129,13L1129,14L1139,14L1139,15L1165,15L1165,16L1185,16L1185,17L1193,17L1193,18L1206,18L1206,19L1208,19L1208,20L1394,20L1394,21L1465,21L1465,22L1470,22L1470,23L1480,23L1480,24L1517,24L1517,26L1521,26L1521,27L1572,27L1572,28L1603,28L1603,29L1638,29L1638,30L1642,30L1642,31L1643,31L1643,32L1661,32L1661,33L1674,33L1674,34L1686,34L1686,35L1690,35L1690,36L1701,36L1701,37L1702,37L1702,38L1758,38L1758,39L1893,39L1893,40L1897,40L1897,41L1908,41L1908,42L1937,42L1937,44L1951,44L1951,45L1986,45L1986,46L1998,46L1998,47L2049,47L2049,48L2160,48L2160,49L2167,49L2167,50L2197,50L2197,51L2322,51L2322,52L2337,52L2337,53L2350,53L2350,54L2352,54L2352,55L2363,55L2363,56L2371,56L2371,58L2425,58L2425,59L2455,59L2455,60L2498,60L2498,61L2514,61L2514,62L2536,62L2536,63L2539,63L2539,64L2557,64L2557,66L2562,66L2562,67L2577,67L2577,68L2593,68L2593,70L2595,70L2595,71L2598,71L2598,72L2602,72L2602,73L2607,73L2607,74L2613,74L2613,75L2623,75L2623,76L2647,76L2647,77L2653,77L2653,78L2657,78L2657,80L2658,80L2658,81L2658,81" tabindex="0">
						<title>kj9kz6r8</title>
					</path>
				</g>
				<g style="--index: 3;">
					<path d="M0,3L10,3L10,0L17,0L17,1L26,1L26,2L29,2L29,3L93,3L93,4L100,4L100,5L642,5L642,6L842,6L842,7L856,7L856,8L918,8L918,9L1033,9L1033,10L1049,10L1049,11L1050,11L1050,12L1110,12L1110,13L1117,13L1117,14L1125,14L1125,15L1129,15L1129,16L1139,16L1139,17L1165,17L1165,18L1185,18L1185,19L1193,19L1193,20L1206,20L1206,21L1208,21L1208,22L1394,22L1394,23L1465,23L1465,24L1470,24L1470,25L1480,25L1480,26L1517,26L1517,28L1521,28L1521,29L1572,29L1572,30L1603,30L1603,31L1638,31L1638,32L1642,32L1642,33L1643,33L1643,34L1661,34L1661,35L1674,35L1674,36L1686,36L1686,37L1690,37L1690,38L1701,38L1701,39L1702,39L1702,40L1758,40L1758,41L1893,41L1893,42L1897,42L1897,43L1908,43L1908,44L1937,44L1937,46L1951,46L1951,47L1986,47L1986,48L1998,48L1998,49L2049,49L2049,50L2160,50L2160,51L2167,51L2167,52L2197,52L2197,53L2322,53L2322,54L2337,54L2337,55L2350,55L2350,56L2352,56L2352,57L2363,57L2363,58L2371,58L2371,60L2425,60L2425,61L2455,61L2455,62L2498,62L2498,63L2514,63L2514,64L2536,64L2536,65L2539,65L2539,66L2557,66L2557,68L2562,68L2562,69L2577,69L2577,70L2593,70L2593,72L2595,72L2595,73L2598,73L2598,74L2602,74L2602,75L2607,75L2607,76L2613,76L2613,77L2623,77L2623,78L2647,78L2647,79L2653,79L2653,80L2657,80L2657,82L2658,82L2658,83L2658,83" tabindex="0">
						<title>0jm3onz8</title>
					</path>
				</g>
				<g style="--index: 4;">
					<path d="M0,4L17,4L17,0L26,0L26,1L29,1L29,2L93,2L93,3L100,3L100,4L642,4L642,5L842,5L842,6L856,6L856,7L918,7L918,8L1033,8L1033,9L1049,9L1049,10L1050,10L1050,11L1110,11L1110,12L1117,12L1117,13L1125,13L1125,14L1129,14L1129,15L1139,15L1139,16L1165,16L1165,17L1185,17L1185,18L1193,18L1193,19L1206,19L1206,20L1208,20L1208,21L1394,21L1394,22L1465,22L1465,23L1470,23L1470,24L1480,24L1480,25L1517,25L1517,27L1521,27L1521,28L1572,28L1572,29L1603,29L1603,30L1638,30L1638,31L1642,31L1642,32L1643,32L1643,33L1661,33L1661,34L1674,34L1674,35L1686,35L1686,36L1690,36L1690,37L1701,37L1701,38L1702,38L1702,39L1758,39L1758,40L1893,40L1893,41L1897,41L1897,42L1908,42L1908,43L1937,43L1937,45L1951,45L1951,46L1986,46L1986,47L1998,47L1998,48L2049,48L2049,49L2160,49L2160,50L2167,50L2167,51L2197,51L2197,52L2322,52L2322,53L2337,53L2337,54L2350,54L2350,55L2352,55L2352,56L2363,56L2363,57L2371,57L2371,59L2425,59L2425,60L2455,60L2455,61L2498,61L2498,62L2514,62L2514,63L2536,63L2536,64L2539,64L2539,65L2557,65L2557,67L2562,67L2562,68L2577,68L2577,69L2593,69L2593,71L2595,71L2595,72L2598,72L2598,73L2602,73L2602,74L2607,74L2607,75L2613,75L2613,76L2623,76L2623,77L2647,77L2647,78L2653,78L2653,79L2657,79L2657,81L2658,81L2658,82L2658,82" tabindex="0">
						<title>48grel1x</title>
					</path>
				</g>
				<g style="--index: 5;">
					<path d="M0,5L72,5L72,4L93,4L93,5L100,5L100,6L582,6L582,7L642,7L642,8L842,8L842,9L856,9L856,10L918,10L918,11L1033,11L1033,12L1049,12L1049,13L1050,13L1050,14L1110,14L1110,15L1117,15L1117,16L1125,16L1125,17L1129,17L1129,18L1139,18L1139,19L1165,19L1165,20L1185,20L1185,21L1193,21L1193,22L1206,22L1206,23L1208,23L1208,24L1362,24L1362,25L1394,25L1394,26L1465,26L1465,27L1470,27L1470,28L1480,28L1480,29L1517,29L1517,31L1521,31L1521,32L1572,32L1572,33L1603,33L1603,34L1638,34L1638,35L1642,35L1642,36L1643,36L1643,37L1661,37L1661,38L1674,38L1674,39L1686,39L1686,40L1690,40L1690,41L1701,41L1701,42L1702,42L1702,43L1758,43L1758,44L1804,44L1804,45L1893,45L1893,46L1897,46L1897,47L1908,47L1908,48L1937,48L1937,50L1944,50L1944,51L1951,51L1951,52L1986,52L1986,53L1998,53L1998,54L2049,54L2049,55L2160,55L2160,56L2167,56L2167,57L2197,57L2197,58L2322,58L2322,59L2337,59L2337,60L2350,60L2350,61L2352,61L2352,62L2363,62L2363,63L2371,63L2371,65L2425,65L2425,66L2455,66L2455,67L2498,67L2498,68L2514,68L2514,69L2536,69L2536,70L2539,70L2539,71L2557,71L2557,73L2562,73L2562,74L2577,74L2577,75L2593,75L2593,77L2595,77L2595,78L2598,78L2598,79L2602,79L2602,80L2607,80L2607,81L2613,81L2613,82L2623,82L2623,83L2647,83L2647,84L2653,84L2653,85L2657,85L2657,87L2658,87L2658,88L2658,88" tabindex="0">
						<title>zx7eerr8</title>
					</path>
				</g>
				<g style="--index: 6;">
					<path d="M0,6L72,6L72,5L93,5L93,6L100,6L100,7L582,7L582,8L642,8L642,9L842,9L842,10L856,10L856,11L918,11L918,12L1033,12L1033,13L1049,13L1049,14L1050,14L1050,15L1110,15L1110,16L1117,16L1117,17L1125,17L1125,18L1129,18L1129,19L1139,19L1139,20L1165,20L1165,21L1185,21L1185,22L1193,22L1193,23L1206,23L1206,24L1208,24L1208,25L1362,25L1362,26L1394,26L1394,27L1465,27L1465,28L1470,28L1470,29L1480,29L1480,30L1517,30L1517,32L1521,32L1521,33L1572,33L1572,34L1603,34L1603,35L1638,35L1638,36L1642,36L1642,37L1643,37L1643,38L1661,38L1661,39L1674,39L1674,40L1686,40L1686,41L1690,41L1690,42L1701,42L1701,43L1702,43L1702,44L1758,44L1758,45L1804,45L1804,46L1893,46L1893,47L1897,47L1897,48L1908,48L1908,49L1937,49L1937,51L1944,51L1944,52L1951,52L1951,53L1986,53L1986,54L1998,54L1998,55L2049,55L2049,56L2160,56L2160,57L2167,57L2167,58L2197,58L2197,59L2322,59L2322,60L2337,60L2337,61L2350,61L2350,62L2352,62L2352,63L2363,63L2363,64L2371,64L2371,66L2425,66L2425,67L2455,67L2455,68L2498,68L2498,69L2514,69L2514,70L2536,70L2536,71L2539,71L2539,72L2557,72L2557,74L2562,74L2562,75L2577,75L2577,76L2593,76L2593,78L2595,78L2595,79L2598,79L2598,80L2602,80L2602,81L2607,81L2607,82L2613,82L2613,83L2623,83L2623,84L2647,84L2647,85L2653,85L2653,86L2657,86L2657,88L2658,88L2658,89L2658,89" tabindex="0">
						<title>18qg9ndx</title>
					</path>
				</g>
				<g style="--index: 7;">
					<path d="M0,7L93,7L93,0L100,0L100,1L642,1L642,2L842,2L842,3L856,3L856,4L918,4L918,5L1033,5L1033,6L1049,6L1049,7L1117,7L1117,8L1165,8L1165,9L1185,9L1185,10L1193,10L1193,11L1208,11L1208,12L1465,12L1465,13L1470,13L1470,14L1480,14L1480,15L1517,15L1517,17L1521,17L1521,18L1572,18L1572,19L1638,19L1638,20L1642,20L1642,21L1643,21L1643,22L1690,22L1690,23L1699,23L1699,24L1758,24L1758,25L1893,25L1893,26L1998,26L1998,27L2160,27L2160,28L2167,28L2167,29L2197,29L2197,30L2322,30L2322,31L2337,31L2337,32L2350,32L2350,33L2352,33L2352,34L2363,34L2363,35L2371,35L2371,37L2425,37L2425,38L2455,38L2455,39L2498,39L2498,40L2514,40L2514,41L2539,41L2539,42L2562,42L2562,43L2577,43L2577,44L2598,44L2598,45L2602,45L2602,46L2607,46L2607,47L2613,47L2613,48L2623,48L2623,49L2647,49L2647,50L2657,50L2657,52L2658,52L2658,53L2658,53" tabindex="0">
						<title>e8e935oj</title>
					</path>
				</g>
				<g style="--index: 8;">
					<path d="M0,8L100,8L100,0L642,0L642,1L842,1L842,2L856,2L856,3L918,3L918,4L958,4L958,0L1054,0L1054,0L1110,0L1110,1L1117,1L1117,2L1185,2L1185,3L1893,3L1893,4L2556,4L2556,5L2647,5L2647,6L2648,6L2648,7L2657,7L2657,8L2658,8" tabindex="0">
						<title>y8dgoe98</title>
					</path>
				</g>
				<g style="--index: 9;">
					<path d="M0,9L582,9L582,6L642,6L642,7L842,7L842,8L856,8L856,9L918,9L918,10L1033,10L1033,11L1049,11L1049,12L1050,12L1050,13L1110,13L1110,14L1117,14L1117,15L1125,15L1125,16L1129,16L1129,17L1139,17L1139,18L1165,18L1165,19L1185,19L1185,20L1193,20L1193,21L1206,21L1206,22L1208,22L1208,23L1394,23L1394,24L1465,24L1465,25L1470,25L1470,26L1480,26L1480,27L1517,27L1517,29L1521,29L1521,30L1572,30L1572,31L1603,31L1603,32L1638,32L1638,33L1642,33L1642,34L1643,34L1643,35L1661,35L1661,36L1674,36L1674,37L1686,37L1686,38L1690,38L1690,39L1701,39L1701,40L1702,40L1702,41L1758,41L1758,42L1893,42L1893,43L1897,43L1897,44L1908,44L1908,45L1937,45L1937,47L1951,47L1951,48L1986,48L1986,49L1998,49L1998,50L2049,50L2049,51L2160,51L2160,52L2167,52L2167,53L2197,53L2197,54L2322,54L2322,55L2337,55L2337,56L2350,56L2350,57L2352,57L2352,58L2363,58L2363,59L2371,59L2371,61L2425,61L2425,62L2455,62L2455,63L2498,63L2498,64L2514,64L2514,65L2536,65L2536,66L2539,66L2539,67L2557,67L2557,69L2562,69L2562,70L2577,70L2577,71L2593,71L2593,73L2595,73L2595,74L2598,74L2598,75L2602,75L2602,76L2607,76L2607,77L2613,77L2613,78L2623,78L2623,79L2647,79L2647,80L2653,80L2653,81L2657,81L2657,83L2658,83L2658,84L2658,84" tabindex="0">
						<title>j9rlkzoj</title>
					</path>
				</g>
				<g style="--index: 10;">
					<path d="M0,10L642,10L642,0L713,0L713,0L856,0L856,1L918,1L918,2L958,2L958,3L1049,3L1049,4L1117,4L1117,5L1185,5L1185,6L1208,6L1208,7L1517,7L1517,9L1638,9L1638,10L1690,10L1690,11L1828,11L1828,12L1893,12L1893,13L2197,13L2197,14L2219,14L2219,15L2322,15L2322,16L2339,16L2339,17L2350,17L2350,18L2352,18L2352,19L2371,19L2371,20L2455,20L2455,21L2498,21L2498,22L2601,22L2601,23L2602,23L2602,24L2607,24L2607,25L2613,25L2613,26L2623,26L2623,27L2647,27L2647,28L2657,28L2657,30L2658,30L2658,31L2658,31" tabindex="0">
						<title>7j4y0zmj</title>
					</path>
				</g>
				<g style="--index: 11;">
					<path d="M0,11L842,11L842,1L856,1L856,2L918,2L918,3L958,3L958,4L1033,4L1033,5L1049,5L1049,6L1117,6L1117,7L1185,7L1185,8L1208,8L1208,9L1470,9L1470,10L1472,10L1472,11L1517,11L1517,13L1638,13L1638,14L1690,14L1690,15L1828,15L1828,16L1893,16L1893,17L2197,17L2197,18L2219,18L2219,19L2322,19L2322,20L2339,20L2339,21L2350,21L2350,22L2352,22L2352,23L2371,23L2371,24L2455,24L2455,25L2498,25L2498,26L2601,26L2601,27L2602,27L2602,28L2607,28L2607,29L2613,29L2613,30L2623,30L2623,31L2647,31L2647,32L2657,32L2657,34L2658,34L2658,35L2658,35" tabindex="0">
						<title>8146r4r8</title>
					</path>
				</g>
				<g style="--index: 12;">
					<path d="M0,12L856,12L856,0L958,0L958,1L1110,1L1110,2L1117,2L1117,3L1185,3L1185,4L1893,4L1893,5L2219,5L2219,6L2352,6L2352,7L2626,7L2626,8L2647,8L2647,9L2657,9L2657,10L2658,10" tabindex="0">
						<title>x356nrej</title>
					</path>
				</g>
				<g style="--index: 13;">
					<path d="M0,13L918,13L918,1L958,1L958,2L1049,2L1049,3L1110,3L1110,0L1117,0L1117,1L1118,1L1118,0L1124,0L1124,1L1130,1L1130,0L1131,0L1131,1L1133,1L1133,0L1185,0L1185,1L1893,1L1893,2L2556,2L2556,3L2658,3" tabindex="0">
						<title>xkon93k8</title>
					</path>
				</g>
				<g style="--index: 14;">
					<path d="M0,14L1033,14L1033,4L1049,4L1049,5L1117,5L1117,6L1185,6L1185,7L1208,7L1208,8L1517,8L1517,10L1638,10L1638,11L1690,11L1690,12L1828,12L1828,13L1893,13L1893,14L2197,14L2197,15L2219,15L2219,16L2322,16L2322,17L2339,17L2339,18L2350,18L2350,19L2352,19L2352,20L2371,20L2371,21L2455,21L2455,22L2498,22L2498,23L2601,23L2601,24L2602,24L2602,25L2607,25L2607,26L2613,26L2613,27L2623,27L2623,28L2647,28L2647,29L2657,29L2657,31L2658,31L2658,32L2658,32" tabindex="0">
						<title>j0np7or8</title>
					</path>
				</g>
				<g style="--index: 15;">
					<path d="M0,15L1049,15L1049,2L1056,2L1056,2L1110,2L1110,3L1117,3L1117,4L1185,4L1185,5L1517,5L1517,6L1893,6L1893,7L2219,7L2219,8L2352,8L2352,9L2455,9L2455,10L2607,10L2607,11L2613,11L2613,12L2623,12L2623,13L2647,13L2647,14L2657,14L2657,15L2658,15" tabindex="0">
						<title>x7q00668</title>
					</path>
				</g>
				<g style="--index: 16;">
					<path d="M0,16L1050,16L1050,8L1117,8L1117,9L1165,9L1165,10L1185,10L1185,11L1193,11L1193,12L1206,12L1206,13L1208,13L1208,14L1465,14L1465,15L1470,15L1470,16L1480,16L1480,17L1517,17L1517,19L1521,19L1521,20L1572,20L1572,21L1638,21L1638,22L1642,22L1642,23L1643,23L1643,24L1674,24L1674,25L1690,25L1690,26L1699,26L1699,27L1702,27L1702,28L1758,28L1758,29L1893,29L1893,30L1897,30L1897,31L1908,31L1908,32L1951,32L1951,33L1986,33L1986,34L1998,34L1998,35L2160,35L2160,36L2167,36L2167,37L2197,37L2197,38L2322,38L2322,39L2337,39L2337,40L2350,40L2350,41L2352,41L2352,42L2363,42L2363,43L2371,43L2371,45L2425,45L2425,46L2455,46L2455,47L2498,47L2498,48L2514,48L2514,49L2539,49L2539,50L2557,50L2557,51L2562,51L2562,52L2577,52L2577,53L2598,53L2598,54L2602,54L2602,55L2607,55L2607,56L2613,56L2613,57L2623,57L2623,58L2647,58L2647,59L2657,59L2657,61L2658,61L2658,62L2658,62" tabindex="0">
						<title>jn3kw0wx</title>
					</path>
				</g>
				<g style="--index: 17;">
					<path d="M0,17L1110,17L1110,9L1117,9L1117,10L1165,10L1165,11L1185,11L1185,12L1193,12L1193,13L1206,13L1206,14L1208,14L1208,15L1465,15L1465,16L1470,16L1470,17L1480,17L1480,18L1517,18L1517,20L1521,20L1521,21L1572,21L1572,22L1638,22L1638,23L1642,23L1642,24L1643,24L1643,25L1674,25L1674,26L1690,26L1690,27L1699,27L1699,28L1702,28L1702,29L1758,29L1758,30L1893,30L1893,31L1897,31L1897,32L1908,32L1908,33L1951,33L1951,34L1986,34L1986,35L1998,35L1998,36L2160,36L2160,37L2167,37L2167,38L2197,38L2197,39L2322,39L2322,40L2337,40L2337,41L2350,41L2350,42L2352,42L2352,43L2363,43L2363,44L2371,44L2371,46L2425,46L2425,47L2455,47L2455,48L2498,48L2498,49L2514,49L2514,50L2539,50L2539,51L2557,51L2557,52L2562,52L2562,53L2577,53L2577,54L2598,54L2598,55L2602,55L2602,56L2607,56L2607,57L2613,57L2613,58L2623,58L2623,59L2647,59L2647,60L2657,60L2657,62L2658,62L2658,63L2658,63" tabindex="0">
						<title>8qr54wdj</title>
					</path>
				</g>
				<g style="--index: 18;">
					<path d="M0,18L1117,18L1117,0L1118,0L1118,1L1124,1L1124,0L1130,0L1130,1L1131,1L1131,0L1133,0L1133,1L1185,1L1185,2L1893,2L1893,3L2556,3L2556,4L2658,4" tabindex="0">
						<title>jnzg27dj</title>
					</path>
				</g>
				<g style="--index: 19;">
					<path d="M0,19L1124,19L1124,18L1125,18L1125,19L1129,19L1129,20L1139,20L1139,21L1165,21L1165,22L1185,22L1185,23L1193,23L1193,24L1196,24L1196,25L1206,25L1206,26L1208,26L1208,27L1362,27L1362,28L1394,28L1394,29L1465,29L1465,30L1470,30L1470,31L1480,31L1480,32L1517,32L1517,34L1521,34L1521,35L1572,35L1572,36L1603,36L1603,37L1638,37L1638,38L1642,38L1642,39L1643,39L1643,40L1661,40L1661,41L1674,41L1674,42L1686,42L1686,43L1690,43L1690,44L1701,44L1701,45L1702,45L1702,46L1758,46L1758,47L1804,47L1804,48L1893,48L1893,49L1897,49L1897,50L1908,50L1908,51L1937,51L1937,53L1944,53L1944,54L1951,54L1951,55L1986,55L1986,56L1998,56L1998,57L2049,57L2049,58L2160,58L2160,59L2167,59L2167,60L2197,60L2197,61L2322,61L2322,62L2337,62L2337,63L2350,63L2350,64L2352,64L2352,65L2363,65L2363,66L2371,66L2371,68L2425,68L2425,69L2455,69L2455,70L2498,70L2498,71L2514,71L2514,72L2536,72L2536,73L2539,73L2539,74L2557,74L2557,76L2562,76L2562,77L2577,77L2577,78L2593,78L2593,80L2595,80L2595,81L2598,81L2598,82L2601,82L2601,83L2602,83L2602,84L2607,84L2607,85L2613,85L2613,86L2623,86L2623,87L2647,87L2647,88L2653,88L2653,89L2657,89L2657,91L2658,91L2658,92L2658,92" tabindex="0">
						<title>j031913j</title>
					</path>
				</g>
				<g style="--index: 20;">
					<path d="M0,20L1125,20L1125,12L1129,12L1129,13L1165,13L1165,14L1185,14L1185,15L1193,15L1193,16L1206,16L1206,17L1208,17L1208,18L1465,18L1465,19L1470,19L1470,20L1480,20L1480,21L1517,21L1517,23L1521,23L1521,24L1522,24L1522,25L1572,25L1572,26L1603,26L1603,27L1638,27L1638,28L1642,28L1642,29L1643,29L1643,30L1661,30L1661,31L1674,31L1674,32L1686,32L1686,33L1690,33L1690,34L1701,34L1701,35L1702,35L1702,36L1758,36L1758,37L1893,37L1893,38L1897,38L1897,39L1908,39L1908,40L1937,40L1937,42L1951,42L1951,43L1986,43L1986,44L1998,44L1998,45L2049,45L2049,46L2160,46L2160,47L2167,47L2167,48L2197,48L2197,49L2322,49L2322,50L2337,50L2337,51L2350,51L2350,52L2352,52L2352,53L2363,53L2363,54L2371,54L2371,56L2425,56L2425,57L2455,57L2455,58L2498,58L2498,59L2514,59L2514,60L2536,60L2536,61L2539,61L2539,62L2557,62L2557,64L2562,64L2562,65L2577,65L2577,66L2593,66L2593,68L2595,68L2595,69L2598,69L2598,70L2602,70L2602,71L2607,71L2607,72L2613,72L2613,73L2623,73L2623,74L2647,74L2647,75L2653,75L2653,76L2657,76L2657,78L2658,78L2658,79L2658,79" tabindex="0">
						<title>8d3yw99x</title>
					</path>
				</g>
				<g style="--index: 21;">
					<path d="M0,21L1129,21L1129,11L1165,11L1165,12L1185,12L1185,13L1193,13L1193,14L1206,14L1206,15L1208,15L1208,16L1465,16L1465,17L1470,17L1470,18L1480,18L1480,19L1517,19L1517,21L1521,21L1521,22L1572,22L1572,23L1638,23L1638,24L1642,24L1642,25L1643,25L1643,26L1661,26L1661,27L1674,27L1674,28L1686,28L1686,29L1690,29L1690,30L1702,30L1702,31L1758,31L1758,32L1893,32L1893,33L1897,33L1897,34L1908,34L1908,35L1937,35L1937,36L1951,36L1951,37L1986,37L1986,38L1998,38L1998,39L2160,39L2160,40L2167,40L2167,41L2197,41L2197,42L2322,42L2322,43L2337,43L2337,44L2350,44L2350,45L2352,45L2352,46L2363,46L2363,47L2371,47L2371,49L2425,49L2425,50L2455,50L2455,51L2498,51L2498,52L2514,52L2514,53L2539,53L2539,54L2557,54L2557,55L2562,55L2562,56L2577,56L2577,57L2593,57L2593,59L2598,59L2598,60L2602,60L2602,61L2607,61L2607,62L2613,62L2613,63L2623,63L2623,64L2647,64L2647,65L2653,65L2653,66L2657,66L2657,68L2658,68L2658,69L2658,69" tabindex="0">
						<title>8l4kqm7j</title>
					</path>
				</g>
				<g style="--index: 22;">
					<path d="M0,22L1139,22L1139,14L1165,14L1165,15L1185,15L1185,16L1193,16L1193,17L1206,17L1206,18L1208,18L1208,19L1465,19L1465,20L1470,20L1470,21L1480,21L1480,22L1517,22L1517,24L1521,24L1521,25L1522,25L1522,26L1572,26L1572,27L1603,27L1603,28L1638,28L1638,29L1642,29L1642,30L1643,30L1643,31L1661,31L1661,32L1674,32L1674,33L1686,33L1686,34L1690,34L1690,35L1701,35L1701,36L1702,36L1702,37L1758,37L1758,38L1893,38L1893,39L1897,39L1897,40L1908,40L1908,41L1937,41L1937,43L1951,43L1951,44L1986,44L1986,45L1998,45L1998,46L2049,46L2049,47L2160,47L2160,48L2167,48L2167,49L2197,49L2197,50L2322,50L2322,51L2337,51L2337,52L2350,52L2350,53L2352,53L2352,54L2363,54L2363,55L2371,55L2371,57L2425,57L2425,58L2455,58L2455,59L2498,59L2498,60L2514,60L2514,61L2536,61L2536,62L2539,62L2539,63L2557,63L2557,65L2562,65L2562,66L2577,66L2577,67L2593,67L2593,69L2595,69L2595,70L2598,70L2598,71L2602,71L2602,72L2607,72L2607,73L2613,73L2613,74L2623,74L2623,75L2647,75L2647,76L2653,76L2653,77L2657,77L2657,79L2658,79L2658,80L2658,80" tabindex="0">
						<title>8qrgz37j</title>
					</path>
				</g>
				<g style="--index: 23;">
					<path d="M0,23L1148,23L1148,23L1165,23L1165,24L1185,24L1185,25L1193,25L1193,26L1196,26L1196,27L1206,27L1206,28L1208,28L1208,29L1362,29L1362,30L1394,30L1394,31L1465,31L1465,32L1470,32L1470,33L1480,33L1480,34L1481,34L1481,35L1517,35L1517,37L1521,37L1521,38L1572,38L1572,39L1603,39L1603,40L1631,40L1631,41L1638,41L1638,42L1642,42L1642,43L1643,43L1643,44L1661,44L1661,45L1674,45L1674,46L1686,46L1686,47L1690,47L1690,48L1701,48L1701,49L1702,49L1702,50L1736,50L1736,51L1755,51L1755,52L1758,52L1758,53L1804,53L1804,54L1845,54L1845,55L1893,55L1893,56L1897,56L1897,57L1908,57L1908,58L1937,58L1937,60L1944,60L1944,61L1951,61L1951,62L1986,62L1986,63L1998,63L1998,64L2049,64L2049,65L2054,65L2054,66L2160,66L2160,67L2167,67L2167,68L2197,68L2197,69L2306,69L2306,70L2322,70L2322,71L2337,71L2337,72L2350,72L2350,73L2352,73L2352,74L2363,74L2363,75L2369,75L2369,76L2371,76L2371,78L2425,78L2425,79L2455,79L2455,80L2469,80L2469,81L2498,81L2498,82L2514,82L2514,83L2523,83L2523,84L2536,84L2536,85L2539,85L2539,87L2557,87L2557,89L2562,89L2562,90L2577,90L2577,91L2593,91L2593,93L2595,93L2595,94L2598,94L2598,95L2601,95L2601,96L2602,96L2602,97L2607,97L2607,98L2613,98L2613,99L2623,99L2623,100L2643,100L2643,101L2647,101L2647,102L2653,102L2653,103L2657,103L2657,105L2658,105L2658,106L2658,106" tabindex="0">
						<title>8vkp092j</title>
					</path>
				</g>
				<g style="--index: 24;">
					<path d="M0,24L1165,24L1165,8L1166,8L1166,8L1185,8L1185,9L1208,9L1208,10L1470,10L1470,11L1472,11L1472,9L1517,9L1517,11L1638,11L1638,12L1690,12L1690,13L1828,13L1828,14L1893,14L1893,15L2197,15L2197,16L2219,16L2219,17L2322,17L2322,18L2339,18L2339,19L2350,19L2350,20L2352,20L2352,21L2371,21L2371,22L2455,22L2455,23L2498,23L2498,24L2601,24L2601,25L2602,25L2602,26L2607,26L2607,27L2613,27L2613,28L2623,28L2623,29L2647,29L2647,30L2657,30L2657,32L2658,32L2658,33L2658,33" tabindex="0">
						<title>xk4vgv7j</title>
					</path>
				</g>
				<g style="--index: 25;">
					<path d="M0,25L1185,25L1185,0L1893,0L1893,1L2658,1" tabindex="0">
						<title>j2yr9lp8</title>
					</path>
				</g>
				<g style="--index: 26;">
					<path d="M0,26L1193,26L1193,10L1208,10L1208,11L1465,11L1465,12L1470,12L1470,13L1480,13L1480,14L1517,14L1517,16L1521,16L1521,17L1638,17L1638,18L1643,18L1643,19L1690,19L1690,20L1699,20L1699,21L1828,21L1828,22L1893,22L1893,23L2160,23L2160,24L2197,24L2197,25L2322,25L2322,26L2337,26L2337,27L2350,27L2350,28L2352,28L2352,29L2371,29L2371,31L2455,31L2455,32L2498,32L2498,33L2514,33L2514,34L2602,34L2602,35L2607,35L2607,36L2613,36L2613,37L2623,37L2623,38L2647,38L2647,39L2657,39L2657,41L2658,41L2658,42L2658,42" tabindex="0">
						<title>jnzen32j</title>
					</path>
				</g>
				<g style="--index: 27;">
					<path d="M0,27L1196,27L1196,24L1206,24L1206,25L1208,25L1208,26L1362,26L1362,27L1394,27L1394,28L1465,28L1465,29L1470,29L1470,30L1480,30L1480,31L1517,31L1517,33L1521,33L1521,34L1572,34L1572,35L1603,35L1603,36L1638,36L1638,37L1642,37L1642,38L1643,38L1643,39L1661,39L1661,40L1674,40L1674,41L1686,41L1686,42L1690,42L1690,43L1701,43L1701,44L1702,44L1702,45L1758,45L1758,46L1804,46L1804,47L1893,47L1893,48L1897,48L1897,49L1908,49L1908,50L1937,50L1937,52L1944,52L1944,53L1951,53L1951,54L1986,54L1986,55L1998,55L1998,56L2049,56L2049,57L2160,57L2160,58L2167,58L2167,59L2197,59L2197,60L2322,60L2322,61L2337,61L2337,62L2350,62L2350,63L2352,63L2352,64L2363,64L2363,65L2371,65L2371,67L2425,67L2425,68L2455,68L2455,69L2498,69L2498,70L2514,70L2514,71L2536,71L2536,72L2539,72L2539,73L2557,73L2557,75L2562,75L2562,76L2577,76L2577,77L2593,77L2593,79L2595,79L2595,80L2598,80L2598,81L2602,81L2602,82L2607,82L2607,83L2613,83L2613,84L2623,84L2623,85L2647,85L2647,86L2653,86L2653,87L2657,87L2657,89L2658,89L2658,90L2658,90" tabindex="0">
						<title>8vkq15yj</title>
					</path>
				</g>
				<g style="--index: 28;">
					<path d="M0,28L1206,28L1206,12L1208,12L1208,13L1465,13L1465,14L1470,14L1470,15L1480,15L1480,16L1517,16L1517,18L1521,18L1521,19L1572,19L1572,20L1638,20L1638,21L1642,21L1642,22L1643,22L1643,23L1674,23L1674,24L1690,24L1690,25L1699,25L1699,26L1702,26L1702,27L1758,27L1758,28L1893,28L1893,29L1897,29L1897,30L1908,30L1908,31L1951,31L1951,32L1986,32L1986,33L1998,33L1998,34L2160,34L2160,35L2167,35L2167,36L2197,36L2197,37L2322,37L2322,38L2337,38L2337,39L2350,39L2350,40L2352,40L2352,41L2363,41L2363,42L2371,42L2371,44L2425,44L2425,45L2455,45L2455,46L2498,46L2498,47L2514,47L2514,48L2539,48L2539,49L2557,49L2557,50L2562,50L2562,51L2577,51L2577,52L2598,52L2598,53L2602,53L2602,54L2607,54L2607,55L2613,55L2613,56L2623,56L2623,57L2647,57L2647,58L2657,58L2657,60L2658,60L2658,61L2658,61" tabindex="0">
						<title>xk4w4k6j</title>
					</path>
				</g>
				<g style="--index: 29;">
					<path d="M0,29L1208,29L1208,6L1517,6L1517,8L1638,8L1638,9L1690,9L1690,10L1828,10L1828,11L1893,11L1893,12L2197,12L2197,13L2219,13L2219,14L2322,14L2322,15L2339,15L2339,16L2352,16L2352,17L2371,17L2371,18L2455,18L2455,19L2498,19L2498,20L2602,20L2602,21L2607,21L2607,22L2613,22L2613,23L2623,23L2623,24L2647,24L2647,25L2657,25L2657,27L2658,27L2658,28L2658,28" tabindex="0">
						<title>8rp0ezwj</title>
					</path>
				</g>
				<g style="--index: 30;">
					<path d="M0,30L1362,30L1362,24L1394,24L1394,25L1465,25L1465,26L1470,26L1470,27L1480,27L1480,28L1517,28L1517,30L1521,30L1521,31L1572,31L1572,32L1603,32L1603,33L1638,33L1638,34L1642,34L1642,35L1643,35L1643,36L1661,36L1661,37L1674,37L1674,38L1686,38L1686,39L1690,39L1690,40L1701,40L1701,41L1702,41L1702,42L1758,42L1758,43L1893,43L1893,44L1897,44L1897,45L1908,45L1908,46L1937,46L1937,48L1951,48L1951,49L1986,49L1986,50L1998,50L1998,51L2049,51L2049,52L2160,52L2160,53L2167,53L2167,54L2197,54L2197,55L2322,55L2322,56L2337,56L2337,57L2350,57L2350,58L2352,58L2352,59L2363,59L2363,60L2371,60L2371,62L2425,62L2425,63L2455,63L2455,64L2498,64L2498,65L2514,65L2514,66L2536,66L2536,67L2539,67L2539,68L2557,68L2557,70L2562,70L2562,71L2577,71L2577,72L2593,72L2593,74L2595,74L2595,75L2598,75L2598,76L2602,76L2602,77L2607,77L2607,78L2613,78L2613,79L2623,79L2623,80L2647,80L2647,81L2653,81L2653,82L2657,82L2657,84L2658,84L2658,85L2658,85" tabindex="0">
						<title>8vo9gyyx</title>
					</path>
				</g>
				<g style="--index: 31;">
					<path d="M0,31L1394,31L1394,20L1465,20L1465,21L1470,21L1470,22L1480,22L1480,23L1517,23L1517,25L1521,25L1521,26L1522,26L1522,23L1572,23L1572,24L1638,24L1638,25L1642,25L1642,26L1643,26L1643,27L1661,27L1661,28L1674,28L1674,29L1686,29L1686,30L1690,30L1690,31L1702,31L1702,32L1758,32L1758,33L1893,33L1893,34L1897,34L1897,35L1908,35L1908,36L1937,36L1937,37L1951,37L1951,38L1986,38L1986,39L1998,39L1998,40L2160,40L2160,41L2167,41L2167,42L2197,42L2197,43L2322,43L2322,44L2337,44L2337,45L2350,45L2350,46L2352,46L2352,47L2363,47L2363,48L2371,48L2371,50L2425,50L2425,51L2455,51L2455,52L2498,52L2498,53L2514,53L2514,54L2539,54L2539,55L2557,55L2557,56L2562,56L2562,57L2577,57L2577,58L2593,58L2593,60L2598,60L2598,61L2602,61L2602,62L2607,62L2607,63L2613,63L2613,64L2623,64L2623,65L2647,65L2647,66L2653,66L2653,67L2657,67L2657,69L2658,69L2658,70L2658,70" tabindex="0">
						<title>863mv638</title>
					</path>
				</g>
				<g style="--index: 32;">
					<path d="M0,32L1465,32L1465,11L1470,11L1470,12L1480,12L1480,13L1517,13L1517,15L1638,15L1638,16L1643,16L1643,17L1690,17L1690,18L1699,18L1699,19L1828,19L1828,20L1893,20L1893,21L2160,21L2160,22L2197,22L2197,23L2322,23L2322,24L2350,24L2350,25L2352,25L2352,26L2371,26L2371,28L2455,28L2455,29L2498,29L2498,30L2514,30L2514,31L2602,31L2602,32L2607,32L2607,33L2613,33L2613,34L2623,34L2623,35L2647,35L2647,36L2657,36L2657,38L2658,38L2658,39L2658,39" tabindex="0">
						<title>xyl625yj</title>
					</path>
				</g>
				<g style="--index: 33;">
					<path d="M0,33L1470,33L1470,9L1472,9L1472,10L1517,10L1517,12L1638,12L1638,13L1690,13L1690,14L1828,14L1828,15L1893,15L1893,16L2197,16L2197,17L2219,17L2219,18L2322,18L2322,19L2339,19L2339,20L2350,20L2350,21L2352,21L2352,22L2371,22L2371,23L2455,23L2455,24L2498,24L2498,25L2601,25L2601,26L2602,26L2602,27L2607,27L2607,28L2613,28L2613,29L2623,29L2623,30L2647,30L2647,31L2657,31L2657,33L2658,33L2658,34L2658,34" tabindex="0">
						<title>x3m9d3k8</title>
					</path>
				</g>
				<g style="--index: 34;">
					<path d="M0,34L1480,34L1480,12L1517,12L1517,14L1638,14L1638,15L1643,15L1643,16L1690,16L1690,17L1828,17L1828,18L1893,18L1893,19L2197,19L2197,20L2219,20L2219,21L2322,21L2322,22L2339,22L2339,23L2350,23L2350,24L2352,24L2352,25L2371,25L2371,27L2455,27L2455,28L2498,28L2498,29L2601,29L2601,30L2602,30L2602,31L2607,31L2607,32L2613,32L2613,33L2623,33L2623,34L2647,34L2647,35L2657,35L2657,37L2658,37L2658,38L2658,38" tabindex="0">
						<title>8g5g6g1j</title>
					</path>
				</g>
				<g style="--index: 35;">
					<path d="M0,35L1481,35L1481,34L1517,34L1517,36L1521,36L1521,37L1572,37L1572,38L1603,38L1603,39L1631,39L1631,40L1638,40L1638,41L1642,41L1642,42L1643,42L1643,43L1661,43L1661,44L1674,44L1674,45L1686,45L1686,46L1690,46L1690,47L1701,47L1701,48L1702,48L1702,49L1736,49L1736,50L1755,50L1755,51L1758,51L1758,52L1804,52L1804,53L1845,53L1845,54L1893,54L1893,55L1897,55L1897,56L1908,56L1908,57L1937,57L1937,59L1944,59L1944,60L1951,60L1951,61L1986,61L1986,62L1998,62L1998,63L2049,63L2049,64L2054,64L2054,65L2160,65L2160,66L2167,66L2167,67L2197,67L2197,68L2306,68L2306,69L2322,69L2322,70L2337,70L2337,71L2350,71L2350,72L2352,72L2352,73L2363,73L2363,74L2369,74L2369,75L2371,75L2371,77L2425,77L2425,78L2455,78L2455,79L2469,79L2469,80L2498,80L2498,81L2514,81L2514,82L2523,82L2523,83L2536,83L2536,84L2539,84L2539,86L2557,86L2557,88L2562,88L2562,89L2577,89L2577,90L2593,90L2593,92L2595,92L2595,93L2598,93L2598,94L2601,94L2601,95L2602,95L2602,96L2607,96L2607,97L2613,97L2613,98L2623,98L2623,99L2643,99L2643,100L2647,100L2647,101L2653,101L2653,102L2657,102L2657,104L2658,104L2658,105L2658,105" tabindex="0">
						<title>8q34rqdj</title>
					</path>
				</g>
				<g style="--index: 36;">
					<path d="M0,36L1501,36L1501,36L1517,36L1517,38L1521,38L1521,39L1523,39L1523,40L1572,40L1572,41L1603,41L1603,42L1631,42L1631,43L1638,43L1638,44L1642,44L1642,45L1643,45L1643,46L1661,46L1661,47L1674,47L1674,48L1686,48L1686,49L1690,49L1690,50L1701,50L1701,51L1702,51L1702,52L1736,52L1736,53L1755,53L1755,54L1758,54L1758,55L1804,55L1804,56L1845,56L1845,57L1893,57L1893,58L1897,58L1897,59L1908,59L1908,60L1937,60L1937,62L1944,62L1944,63L1951,63L1951,64L1986,64L1986,65L1998,65L1998,66L2043,66L2043,67L2049,67L2049,68L2054,68L2054,69L2160,69L2160,70L2167,70L2167,71L2197,71L2197,72L2306,72L2306,73L2317,73L2317,74L2322,74L2322,75L2337,75L2337,76L2350,76L2350,77L2352,77L2352,78L2363,78L2363,79L2369,79L2369,80L2371,80L2371,82L2425,82L2425,83L2455,83L2455,84L2469,84L2469,85L2498,85L2498,86L2514,86L2514,87L2523,87L2523,88L2536,88L2536,89L2539,89L2539,91L2557,91L2557,93L2562,93L2562,94L2577,94L2577,95L2585,95L2585,96L2592,96L2592,97L2593,97L2593,99L2595,99L2595,100L2598,100L2598,101L2601,101L2601,102L2602,102L2602,103L2607,103L2607,104L2613,104L2613,105L2623,105L2623,106L2643,106L2643,107L2647,107L2647,108L2653,108L2653,109L2657,109L2657,111L2658,111L2658,112L2658,112" tabindex="0">
						<title>8w14orqx</title>
					</path>
				</g>
				<g style="--index: 37;">
					<path d="M0,37L1517,37L1517,5L1893,5L1893,6L2219,6L2219,7L2352,7L2352,8L2607,8L2607,9L2626,9L2626,10L2647,10L2647,11L2657,11L2657,12L2658,12" tabindex="0">
						<title>81qlgylj</title>
					</path>
				</g>
				<g style="--index: 38;">
					<path d="M0,38L1517,38L1517,7L1690,7L1690,8L1828,8L1828,9L1893,9L1893,10L2197,10L2197,11L2219,11L2219,12L2322,12L2322,13L2339,13L2339,14L2352,14L2352,15L2371,15L2371,16L2455,16L2455,17L2498,17L2498,18L2602,18L2602,19L2607,19L2607,20L2613,20L2613,21L2623,21L2623,22L2647,22L2647,23L2657,23L2657,25L2658,25L2658,26L2658,26" tabindex="0">
						<title>8ende728</title>
					</path>
				</g>
				<g style="--index: 39;">
					<path d="M0,39L1521,39L1521,16L1638,16L1638,17L1643,17L1643,18L1690,18L1690,19L1699,19L1699,20L1828,20L1828,21L1893,21L1893,22L2160,22L2160,23L2197,23L2197,24L2322,24L2322,25L2337,25L2337,26L2350,26L2350,27L2352,27L2352,28L2371,28L2371,30L2455,30L2455,31L2498,31L2498,32L2514,32L2514,33L2602,33L2602,34L2607,34L2607,35L2613,35L2613,36L2623,36L2623,37L2647,37L2647,38L2657,38L2657,40L2658,40L2658,41L2658,41" tabindex="0">
						<title>866gn938</title>
					</path>
				</g>
				<g style="--index: 40;">
					<path d="M0,40L1523,40L1523,39L1572,39L1572,40L1603,40L1603,41L1631,41L1631,42L1638,42L1638,43L1642,43L1642,44L1643,44L1643,45L1661,45L1661,46L1674,46L1674,47L1686,47L1686,48L1690,48L1690,49L1701,49L1701,50L1702,50L1702,51L1736,51L1736,52L1755,52L1755,53L1758,53L1758,54L1804,54L1804,55L1845,55L1845,56L1893,56L1893,57L1897,57L1897,58L1908,58L1908,59L1937,59L1937,61L1944,61L1944,62L1951,62L1951,63L1986,63L1986,64L1998,64L1998,65L2049,65L2049,66L2054,66L2054,67L2160,67L2160,68L2167,68L2167,69L2197,69L2197,70L2306,70L2306,71L2317,71L2317,72L2322,72L2322,73L2337,73L2337,74L2350,74L2350,75L2352,75L2352,76L2363,76L2363,77L2369,77L2369,78L2371,78L2371,80L2425,80L2425,81L2455,81L2455,82L2469,82L2469,83L2498,83L2498,84L2514,84L2514,85L2523,85L2523,86L2536,86L2536,87L2539,87L2539,89L2557,89L2557,91L2562,91L2562,92L2577,92L2577,93L2592,93L2592,94L2593,94L2593,96L2595,96L2595,97L2598,97L2598,98L2601,98L2601,99L2602,99L2602,100L2607,100L2607,101L2613,101L2613,102L2623,102L2623,103L2643,103L2643,104L2647,104L2647,105L2653,105L2653,106L2657,106L2657,108L2658,108L2658,109L2658,109" tabindex="0">
						<title>8dglvzo8</title>
					</path>
				</g>
				<g style="--index: 41;">
					<path d="M0,41L1572,41L1572,18L1638,18L1638,19L1643,19L1643,20L1690,20L1690,21L1699,21L1699,22L1827,22L1827,23L1893,23L1893,24L2160,24L2160,25L2197,25L2197,26L2322,26L2322,27L2337,27L2337,28L2350,28L2350,29L2352,29L2352,30L2363,30L2363,31L2371,31L2371,33L2455,33L2455,34L2498,34L2498,35L2514,35L2514,36L2602,36L2602,37L2607,37L2607,38L2613,38L2613,39L2623,39L2623,40L2647,40L2647,41L2657,41L2657,43L2658,43L2658,44L2658,44" tabindex="0">
						<title>8w99243j</title>
					</path>
				</g>
				<g style="--index: 42;">
					<path d="M0,42L1603,42L1603,25L1638,25L1638,26L1642,26L1642,27L1643,27L1643,28L1661,28L1661,29L1674,29L1674,30L1686,30L1686,31L1690,31L1690,32L1702,32L1702,33L1758,33L1758,34L1893,34L1893,35L1897,35L1897,36L1908,36L1908,37L1937,37L1937,39L1951,39L1951,40L1986,40L1986,41L1998,41L1998,42L2160,42L2160,43L2167,43L2167,44L2197,44L2197,45L2322,45L2322,46L2337,46L2337,47L2350,47L2350,48L2352,48L2352,49L2363,49L2363,50L2371,50L2371,52L2425,52L2425,53L2455,53L2455,54L2498,54L2498,55L2514,55L2514,56L2539,56L2539,57L2557,57L2557,58L2562,58L2562,59L2577,59L2577,60L2593,60L2593,62L2598,62L2598,63L2602,63L2602,64L2607,64L2607,65L2613,65L2613,66L2623,66L2623,67L2647,67L2647,68L2653,68L2653,69L2657,69L2657,71L2658,71L2658,72L2658,72" tabindex="0">
						<title>8e645e6j</title>
					</path>
				</g>
				<g style="--index: 43;">
					<path d="M0,43L1631,43L1631,38L1638,38L1638,39L1642,39L1642,40L1643,40L1643,41L1661,41L1661,42L1674,42L1674,43L1686,43L1686,44L1690,44L1690,45L1701,45L1701,46L1702,46L1702,47L1755,47L1755,48L1758,48L1758,49L1804,49L1804,50L1845,50L1845,51L1893,51L1893,52L1897,52L1897,53L1908,53L1908,54L1937,54L1937,56L1944,56L1944,57L1951,57L1951,58L1986,58L1986,59L1998,59L1998,60L2049,60L2049,61L2160,61L2160,62L2167,62L2167,63L2197,63L2197,64L2306,64L2306,65L2322,65L2322,66L2337,66L2337,67L2350,67L2350,68L2352,68L2352,69L2363,69L2363,70L2371,70L2371,72L2425,72L2425,73L2455,73L2455,74L2498,74L2498,75L2514,75L2514,76L2536,76L2536,77L2539,77L2539,78L2557,78L2557,80L2562,80L2562,81L2577,81L2577,82L2593,82L2593,84L2595,84L2595,85L2598,85L2598,86L2601,86L2601,87L2602,87L2602,88L2607,88L2607,89L2613,89L2613,90L2623,90L2623,91L2647,91L2647,92L2653,92L2653,93L2657,93L2657,95L2658,95L2658,96L2658,96" tabindex="0">
						<title>8w9m16zj</title>
					</path>
				</g>
				<g style="--index: 44;">
					<path d="M0,44L1638,44L1638,8L1690,8L1690,9L1828,9L1828,10L1893,10L1893,11L2197,11L2197,12L2219,12L2219,13L2322,13L2322,14L2339,14L2339,15L2352,15L2352,16L2371,16L2371,17L2455,17L2455,18L2498,18L2498,19L2602,19L2602,20L2607,20L2607,21L2613,21L2613,22L2623,22L2623,23L2647,23L2647,24L2657,24L2657,26L2658,26L2658,27L2658,27" tabindex="0">
						<title>j4235d5x</title>
					</path>
				</g>
				<g style="--index: 45;">
					<path d="M0,45L1642,45L1642,20L1643,20L1643,21L1690,21L1690,22L1699,22L1699,23L1827,23L1827,24L1893,24L1893,25L2160,25L2160,26L2167,26L2167,27L2197,27L2197,28L2322,28L2322,29L2337,29L2337,30L2350,30L2350,31L2352,31L2352,32L2363,32L2363,33L2371,33L2371,35L2455,35L2455,36L2498,36L2498,37L2514,37L2514,38L2562,38L2562,39L2577,39L2577,40L2602,40L2602,41L2607,41L2607,42L2613,42L2613,43L2623,43L2623,44L2647,44L2647,45L2657,45L2657,47L2658,47L2658,48L2658,48" tabindex="0">
						<title>8gmvl418</title>
					</path>
				</g>
				<g style="--index: 46;">
					<path d="M0,46L1643,46L1643,15L1690,15L1690,16L1828,16L1828,17L1893,17L1893,18L2197,18L2197,19L2219,19L2219,20L2322,20L2322,21L2339,21L2339,22L2350,22L2350,23L2352,23L2352,24L2371,24L2371,25L2455,25L2455,26L2498,26L2498,27L2601,27L2601,28L2602,28L2602,29L2607,29L2607,30L2613,30L2613,31L2623,31L2623,32L2647,32L2647,33L2657,33L2657,35L2658,35L2658,36L2658,36" tabindex="0">
						<title>xk3knqk8</title>
					</path>
				</g>
				<g style="--index: 47;">
					<path d="M0,47L1661,47L1661,26L1674,26L1674,27L1686,27L1686,28L1690,28L1690,29L1702,29L1702,30L1758,30L1758,31L1893,31L1893,32L1897,32L1897,33L1908,33L1908,34L1951,34L1951,35L1986,35L1986,36L1998,36L1998,37L2160,37L2160,38L2167,38L2167,39L2197,39L2197,40L2322,40L2322,41L2337,41L2337,42L2350,42L2350,43L2352,43L2352,44L2363,44L2363,45L2371,45L2371,47L2425,47L2425,48L2455,48L2455,49L2498,49L2498,50L2514,50L2514,51L2539,51L2539,52L2557,52L2557,53L2562,53L2562,54L2577,54L2577,55L2598,55L2598,56L2602,56L2602,57L2607,57L2607,58L2613,58L2613,59L2623,59L2623,60L2647,60L2647,61L2653,61L2653,62L2657,62L2657,64L2658,64L2658,65L2658,65" tabindex="0">
						<title>j0grn39x</title>
					</path>
				</g>
				<g style="--index: 48;">
					<path d="M0,48L1674,48L1674,23L1690,23L1690,24L1699,24L1699,25L1702,25L1702,26L1758,26L1758,27L1893,27L1893,28L1897,28L1897,29L1908,29L1908,30L1998,30L1998,31L2160,31L2160,32L2167,32L2167,33L2197,33L2197,34L2322,34L2322,35L2337,35L2337,36L2350,36L2350,37L2352,37L2352,38L2363,38L2363,39L2371,39L2371,41L2425,41L2425,42L2455,42L2455,43L2498,43L2498,44L2514,44L2514,45L2539,45L2539,46L2557,46L2557,47L2562,47L2562,48L2577,48L2577,49L2598,49L2598,50L2602,50L2602,51L2607,51L2607,52L2613,52L2613,53L2623,53L2623,54L2647,54L2647,55L2657,55L2657,57L2658,57L2658,58L2658,58" tabindex="0">
						<title>j0gyr64x</title>
					</path>
				</g>
				<g style="--index: 49;">
					<path d="M0,49L1686,49L1686,27L1690,27L1690,28L1699,28L1699,18L1828,18L1828,19L1893,19L1893,20L2160,20L2160,21L2197,21L2197,22L2322,22L2322,23L2339,23L2339,9L2352,9L2352,10L2455,10L2455,11L2607,11L2607,12L2613,12L2613,13L2623,13L2623,14L2647,14L2647,15L2657,15L2657,16L2658,16" tabindex="0">
						<title>xk1oze6j</title>
					</path>
				</g>
				<g style="--index: 50;">
					<path d="M0,50L1690,50L1690,7L1828,7L1828,8L1893,8L1893,9L2197,9L2197,10L2219,10L2219,11L2322,11L2322,12L2339,12L2339,13L2352,13L2352,14L2371,14L2371,15L2455,15L2455,16L2498,16L2498,17L2602,17L2602,18L2607,18L2607,19L2613,19L2613,20L2623,20L2623,21L2647,21L2647,22L2657,22L2657,24L2658,24L2658,25L2658,25" tabindex="0">
						<title>xyo5kmwj</title>
					</path>
				</g>
				<g style="--index: 51;">
					<path d="M0,51L1701,51L1701,33L1702,33L1702,34L1758,34L1758,35L1893,35L1893,36L1897,36L1897,37L1908,37L1908,38L1937,38L1937,40L1951,40L1951,41L1986,41L1986,42L1998,42L1998,43L2049,43L2049,44L2160,44L2160,45L2167,45L2167,46L2197,46L2197,47L2322,47L2322,48L2337,48L2337,49L2350,49L2350,50L2352,50L2352,51L2363,51L2363,52L2371,52L2371,54L2425,54L2425,55L2455,55L2455,56L2498,56L2498,57L2514,57L2514,58L2536,58L2536,59L2539,59L2539,60L2557,60L2557,62L2562,62L2562,63L2577,63L2577,64L2593,64L2593,66L2595,66L2595,67L2598,67L2598,68L2602,68L2602,69L2607,69L2607,70L2613,70L2613,71L2623,71L2623,72L2647,72L2647,73L2653,73L2653,74L2657,74L2657,76L2658,76L2658,77L2658,77" tabindex="0">
						<title>810kqzlx</title>
					</path>
				</g>
				<g style="--index: 52;">
					<path d="M0,52L1702,52L1702,25L1758,25L1758,26L1893,26L1893,27L1908,27L1908,28L1998,28L1998,29L2160,29L2160,30L2167,30L2167,31L2197,31L2197,32L2322,32L2322,33L2337,33L2337,34L2350,34L2350,35L2352,35L2352,36L2363,36L2363,37L2371,37L2371,39L2425,39L2425,40L2455,40L2455,41L2498,41L2498,42L2514,42L2514,43L2539,43L2539,44L2562,44L2562,45L2577,45L2577,46L2598,46L2598,47L2602,47L2602,48L2607,48L2607,49L2613,49L2613,50L2623,50L2623,51L2647,51L2647,52L2657,52L2657,54L2658,54L2658,55L2658,55" tabindex="0">
						<title>8qom42wj</title>
					</path>
				</g>
				<g style="--index: 53;">
					<path d="M0,53L1736,53L1736,48L1755,48L1755,49L1758,49L1758,50L1804,50L1804,51L1845,51L1845,52L1893,52L1893,53L1897,53L1897,54L1908,54L1908,55L1937,55L1937,57L1944,57L1944,58L1951,58L1951,59L1986,59L1986,60L1998,60L1998,61L2049,61L2049,62L2160,62L2160,63L2167,63L2167,64L2197,64L2197,65L2306,65L2306,66L2322,66L2322,67L2337,67L2337,68L2350,68L2350,69L2352,69L2352,70L2363,70L2363,71L2371,71L2371,73L2425,73L2425,74L2455,74L2455,75L2498,75L2498,76L2514,76L2514,77L2523,77L2523,78L2536,78L2536,79L2539,79L2539,80L2557,80L2557,82L2562,82L2562,83L2577,83L2577,84L2593,84L2593,86L2595,86L2595,87L2598,87L2598,88L2601,88L2601,89L2602,89L2602,90L2607,90L2607,91L2613,91L2613,92L2623,92L2623,93L2647,93L2647,94L2653,94L2653,95L2657,95L2657,97L2658,97L2658,98L2658,98" tabindex="0">
						<title>8w07d2vj</title>
					</path>
				</g>
				<g style="--index: 54;">
					<path d="M0,54L1755,54L1755,47L1758,47L1758,48L1804,48L1804,49L1893,49L1893,50L1897,50L1897,51L1908,51L1908,52L1937,52L1937,54L1944,54L1944,55L1951,55L1951,56L1986,56L1986,57L1998,57L1998,58L2049,58L2049,59L2160,59L2160,60L2167,60L2167,61L2197,61L2197,62L2322,62L2322,63L2337,63L2337,64L2350,64L2350,65L2352,65L2352,66L2363,66L2363,67L2371,67L2371,69L2425,69L2425,70L2455,70L2455,71L2498,71L2498,72L2514,72L2514,73L2536,73L2536,74L2539,74L2539,75L2557,75L2557,77L2562,77L2562,78L2577,78L2577,79L2593,79L2593,81L2595,81L2595,82L2598,82L2598,83L2601,83L2601,84L2602,84L2602,85L2607,85L2607,86L2613,86L2613,87L2623,87L2623,88L2647,88L2647,89L2653,89L2653,90L2657,90L2657,92L2658,92L2658,93L2658,93" tabindex="0">
						<title>8ew519p8</title>
					</path>
				</g>
				<g style="--index: 55;">
					<path d="M0,55L1758,55L1758,24L1827,24L1827,22L1828,22L1828,7L1893,7L1893,8L2219,8L2219,9L2339,9L2339,10L2352,10L2352,11L2455,11L2455,12L2498,12L2498,13L2607,13L2607,14L2613,14L2613,15L2623,15L2623,16L2647,16L2647,17L2657,17L2657,18L2658,18" tabindex="0">
						<title>j9pl5nwx</title>
					</path>
				</g>
				<g style="--index: 56;">
					<path d="M0,56L1804,56L1804,44L1893,44L1893,45L1897,45L1897,46L1908,46L1908,47L1937,47L1937,49L1951,49L1951,50L1986,50L1986,51L1998,51L1998,52L2049,52L2049,53L2160,53L2160,54L2167,54L2167,55L2197,55L2197,56L2322,56L2322,57L2337,57L2337,58L2350,58L2350,59L2352,59L2352,60L2363,60L2363,61L2371,61L2371,63L2425,63L2425,64L2455,64L2455,65L2498,65L2498,66L2514,66L2514,67L2536,67L2536,68L2539,68L2539,69L2557,69L2557,71L2562,71L2562,72L2577,72L2577,73L2593,73L2593,75L2595,75L2595,76L2598,76L2598,77L2602,77L2602,78L2607,78L2607,79L2613,79L2613,80L2623,80L2623,81L2647,81L2647,82L2653,82L2653,83L2657,83L2657,85L2658,85L2658,86L2658,86" tabindex="0">
						<title>8d0rdwgx</title>
					</path>
				</g>
				<g style="--index: 57;">
					<path d="M0,57L1845,57L1845,50L1893,50L1893,51L1897,51L1897,52L1908,52L1908,53L1937,53L1937,55L1944,55L1944,56L1951,56L1951,57L1986,57L1986,58L1998,58L1998,59L2049,59L2049,60L2160,60L2160,61L2167,61L2167,62L2197,62L2197,63L2322,63L2322,64L2337,64L2337,65L2350,65L2350,66L2352,66L2352,67L2363,67L2363,68L2371,68L2371,70L2425,70L2425,71L2455,71L2455,72L2498,72L2498,73L2514,73L2514,74L2536,74L2536,75L2539,75L2539,76L2557,76L2557,78L2562,78L2562,79L2577,79L2577,80L2593,80L2593,82L2595,82L2595,83L2598,83L2598,84L2601,84L2601,85L2602,85L2602,86L2607,86L2607,87L2613,87L2613,88L2623,88L2623,89L2647,89L2647,90L2653,90L2653,91L2657,91L2657,93L2658,93L2658,94L2658,94" tabindex="0">
						<title>8w0z5mqj</title>
					</path>
				</g>
				<g style="--index: 58;">
					<path d="M0,58L1893,58L1893,0L2537,0L2537,0L2658,0" tabindex="0">
						<title>jn2m23wj</title>
					</path>
				</g>
				<g style="--index: 59;">
					<path d="M0,59L1897,59L1897,28L1908,28L1908,29L1998,29L1998,30L2160,30L2160,31L2167,31L2167,32L2197,32L2197,33L2322,33L2322,34L2337,34L2337,35L2350,35L2350,36L2352,36L2352,37L2363,37L2363,38L2371,38L2371,40L2425,40L2425,41L2455,41L2455,42L2498,42L2498,43L2514,43L2514,44L2539,44L2539,45L2557,45L2557,46L2562,46L2562,47L2577,47L2577,48L2598,48L2598,49L2602,49L2602,50L2607,50L2607,51L2613,51L2613,52L2623,52L2623,53L2647,53L2647,54L2657,54L2657,56L2658,56L2658,57L2658,57" tabindex="0">
						<title>810z203x</title>
					</path>
				</g>
				<g style="--index: 60;">
					<path d="M0,60L1908,60L1908,27L1998,27L1998,28L2160,28L2160,29L2167,29L2167,30L2197,30L2197,31L2322,31L2322,32L2337,32L2337,33L2350,33L2350,34L2352,34L2352,35L2363,35L2363,36L2371,36L2371,38L2425,38L2425,39L2455,39L2455,40L2498,40L2498,41L2514,41L2514,42L2539,42L2539,43L2562,43L2562,44L2577,44L2577,45L2598,45L2598,46L2602,46L2602,47L2607,47L2607,48L2613,48L2613,49L2623,49L2623,50L2647,50L2647,51L2657,51L2657,53L2658,53L2658,54L2658,54" tabindex="0">
						<title>j20zyvpx</title>
					</path>
				</g>
				<g style="--index: 61;">
					<path d="M0,61L1937,61L1937,38L1951,38L1951,39L1986,39L1986,40L1998,40L1998,41L2160,41L2160,42L2167,42L2167,43L2197,43L2197,44L2322,44L2322,45L2337,45L2337,46L2350,46L2350,47L2352,47L2352,48L2363,48L2363,49L2371,49L2371,51L2425,51L2425,52L2455,52L2455,53L2498,53L2498,54L2514,54L2514,55L2539,55L2539,56L2557,56L2557,57L2562,57L2562,58L2577,58L2577,59L2593,59L2593,61L2598,61L2598,62L2602,62L2602,63L2607,63L2607,64L2613,64L2613,65L2623,65L2623,66L2647,66L2647,67L2653,67L2653,68L2657,68L2657,70L2658,70L2658,71L2658,71" tabindex="0">
						<title>8w0wk0zj</title>
					</path>
				</g>
				<g style="--index: 62;">
					<path d="M0,62L1937,62L1937,35L1951,35L1951,36L1986,36L1986,37L1998,37L1998,38L2160,38L2160,39L2167,39L2167,40L2197,40L2197,41L2322,41L2322,42L2337,42L2337,43L2350,43L2350,44L2352,44L2352,45L2363,45L2363,46L2371,46L2371,48L2425,48L2425,49L2455,49L2455,50L2498,50L2498,51L2514,51L2514,52L2539,52L2539,53L2557,53L2557,54L2562,54L2562,55L2577,55L2577,56L2593,56L2593,57L2598,57L2598,58L2602,58L2602,59L2607,59L2607,60L2613,60L2613,61L2623,61L2623,62L2647,62L2647,63L2653,63L2653,64L2657,64L2657,66L2658,66L2658,67L2658,67" tabindex="0">
						<title>x76nqwrj</title>
					</path>
				</g>
				<g style="--index: 63;">
					<path d="M0,63L1944,63L1944,50L1951,50L1951,51L1986,51L1986,52L1998,52L1998,53L2049,53L2049,54L2160,54L2160,55L2167,55L2167,56L2197,56L2197,57L2322,57L2322,58L2337,58L2337,59L2350,59L2350,60L2352,60L2352,61L2363,61L2363,62L2371,62L2371,64L2425,64L2425,65L2455,65L2455,66L2498,66L2498,67L2514,67L2514,68L2536,68L2536,69L2539,69L2539,70L2557,70L2557,72L2562,72L2562,73L2577,73L2577,74L2593,74L2593,76L2595,76L2595,77L2598,77L2598,78L2602,78L2602,79L2607,79L2607,80L2613,80L2613,81L2623,81L2623,82L2647,82L2647,83L2653,83L2653,84L2657,84L2657,86L2658,86L2658,87L2658,87" tabindex="0">
						<title>8q6r1noj</title>
					</path>
				</g>
				<g style="--index: 64;">
					<path d="M0,64L1951,64L1951,31L1986,31L1986,32L1998,32L1998,33L2160,33L2160,34L2167,34L2167,35L2197,35L2197,36L2322,36L2322,37L2337,37L2337,38L2350,38L2350,39L2352,39L2352,40L2363,40L2363,41L2371,41L2371,43L2425,43L2425,44L2455,44L2455,45L2498,45L2498,46L2514,46L2514,47L2539,47L2539,48L2557,48L2557,49L2562,49L2562,50L2577,50L2577,51L2598,51L2598,52L2602,52L2602,53L2607,53L2607,54L2613,54L2613,55L2623,55L2623,56L2647,56L2647,57L2657,57L2657,59L2658,59L2658,60L2658,60" tabindex="0">
						<title>xk1wl26j</title>
					</path>
				</g>
				<g style="--index: 65;">
					<path d="M0,65L1986,65L1986,31L1998,31L1998,32L2160,32L2160,33L2167,33L2167,34L2197,34L2197,35L2322,35L2322,36L2337,36L2337,37L2350,37L2350,38L2352,38L2352,39L2363,39L2363,40L2371,40L2371,42L2425,42L2425,43L2455,43L2455,44L2498,44L2498,45L2514,45L2514,46L2539,46L2539,47L2557,47L2557,48L2562,48L2562,49L2577,49L2577,50L2598,50L2598,51L2602,51L2602,52L2607,52L2607,53L2613,53L2613,54L2623,54L2623,55L2647,55L2647,56L2657,56L2657,58L2658,58L2658,59L2658,59" tabindex="0">
						<title>8v2lo3vj</title>
					</path>
				</g>
				<g style="--index: 66;">
					<path d="M0,66L1998,66L1998,26L2160,26L2160,27L2167,27L2167,28L2197,28L2197,29L2322,29L2322,30L2337,30L2337,31L2350,31L2350,32L2352,32L2352,33L2363,33L2363,34L2371,34L2371,36L2455,36L2455,37L2498,37L2498,38L2514,38L2514,39L2562,39L2562,40L2577,40L2577,41L2602,41L2602,42L2607,42L2607,43L2613,43L2613,44L2623,44L2623,45L2647,45L2647,46L2657,46L2657,48L2658,48L2658,49L2658,49" tabindex="0">
						<title>8q573kw8</title>
					</path>
				</g>
				<g style="--index: 67;">
					<path d="M0,67L2043,67L2043,66L2049,66L2049,67L2054,67L2054,68L2160,68L2160,69L2167,69L2167,70L2197,70L2197,71L2306,71L2306,72L2317,72L2317,73L2322,73L2322,74L2337,74L2337,75L2350,75L2350,76L2352,76L2352,77L2363,77L2363,78L2369,78L2369,79L2371,79L2371,81L2425,81L2425,82L2455,82L2455,83L2469,83L2469,84L2498,84L2498,85L2514,85L2514,86L2523,86L2523,87L2536,87L2536,88L2539,88L2539,90L2557,90L2557,92L2562,92L2562,93L2577,93L2577,94L2592,94L2592,95L2593,95L2593,97L2595,97L2595,98L2598,98L2598,99L2601,99L2601,100L2602,100L2602,101L2607,101L2607,102L2613,102L2613,103L2623,103L2623,104L2643,104L2643,105L2647,105L2647,106L2653,106L2653,107L2657,107L2657,109L2658,109L2658,110L2658,110" tabindex="0">
						<title>jon6e378</title>
					</path>
				</g>
				<g style="--index: 68;">
					<path d="M0,68L2049,68L2049,43L2160,43L2160,44L2167,44L2167,45L2197,45L2197,46L2322,46L2322,47L2337,47L2337,48L2350,48L2350,49L2352,49L2352,50L2363,50L2363,51L2371,51L2371,53L2425,53L2425,54L2455,54L2455,55L2498,55L2498,56L2514,56L2514,57L2536,57L2536,58L2539,58L2539,59L2557,59L2557,61L2562,61L2562,62L2577,62L2577,63L2593,63L2593,65L2595,65L2595,66L2598,66L2598,67L2602,67L2602,68L2607,68L2607,69L2613,69L2613,70L2623,70L2623,71L2647,71L2647,72L2653,72L2653,73L2657,73L2657,75L2658,75L2658,76L2658,76" tabindex="0">
						<title>8ew371p8</title>
					</path>
				</g>
				<g style="--index: 69;">
					<path d="M0,69L2054,69L2054,64L2160,64L2160,65L2167,65L2167,66L2197,66L2197,67L2306,67L2306,68L2322,68L2322,69L2337,69L2337,70L2350,70L2350,71L2352,71L2352,72L2363,72L2363,73L2369,73L2369,74L2371,74L2371,76L2425,76L2425,77L2455,77L2455,78L2469,78L2469,79L2498,79L2498,80L2514,80L2514,81L2523,81L2523,82L2536,82L2536,83L2539,83L2539,85L2557,85L2557,87L2562,87L2562,88L2577,88L2577,89L2593,89L2593,91L2595,91L2595,92L2598,92L2598,93L2601,93L2601,94L2602,94L2602,95L2607,95L2607,96L2613,96L2613,97L2623,97L2623,98L2643,98L2643,99L2647,99L2647,100L2653,100L2653,101L2657,101L2657,103L2658,103L2658,104L2658,104" tabindex="0">
						<title>8w3439qj</title>
					</path>
				</g>
				<g style="--index: 70;">
					<path d="M0,70L2160,70L2160,20L2197,20L2197,21L2219,21L2219,5L2352,5L2352,6L2456,6L2456,5L2556,5L2556,6L2647,6L2647,7L2648,7L2648,8L2657,8L2657,9L2658,9" tabindex="0">
						<title>8w3l21qj</title>
					</path>
				</g>
				<g style="--index: 71;">
					<path d="M0,71L2167,71L2167,26L2197,26L2197,27L2322,27L2322,28L2337,28L2337,29L2350,29L2350,30L2352,30L2352,31L2363,31L2363,32L2371,32L2371,34L2455,34L2455,35L2498,35L2498,36L2514,36L2514,37L2562,37L2562,38L2602,38L2602,39L2607,39L2607,40L2613,40L2613,41L2623,41L2623,42L2647,42L2647,43L2657,43L2657,45L2658,45L2658,46L2658,46" tabindex="0">
						<title>jokgmv78</title>
					</path>
				</g>
				<g style="--index: 72;">
					<path d="M0,72L2197,72L2197,9L2219,9L2219,10L2339,10L2339,11L2352,11L2352,12L2371,12L2371,13L2455,13L2455,14L2498,14L2498,15L2602,15L2602,16L2607,16L2607,17L2613,17L2613,18L2623,18L2623,19L2647,19L2647,20L2657,20L2657,21L2658,21L2658,22L2658,22" tabindex="0">
						<title>81mw6wq8</title>
					</path>
				</g>
				<g style="--index: 73;">
					<path d="M0,73L2306,73L2306,64L2322,64L2322,65L2337,65L2337,66L2350,66L2350,67L2352,67L2352,68L2363,68L2363,69L2371,69L2371,71L2425,71L2425,72L2455,72L2455,73L2498,73L2498,74L2514,74L2514,75L2536,75L2536,76L2539,76L2539,77L2557,77L2557,79L2562,79L2562,80L2577,80L2577,81L2593,81L2593,83L2595,83L2595,84L2598,84L2598,85L2601,85L2601,86L2602,86L2602,87L2607,87L2607,88L2613,88L2613,89L2623,89L2623,90L2647,90L2647,91L2653,91L2653,92L2657,92L2657,94L2658,94L2658,95L2658,95" tabindex="0">
						<title>j465mqd8</title>
					</path>
				</g>
				<g style="--index: 74;">
					<path d="M0,74L2317,74L2317,71L2322,71L2322,72L2337,72L2337,73L2350,73L2350,74L2352,74L2352,75L2363,75L2363,76L2369,76L2369,77L2371,77L2371,79L2425,79L2425,80L2455,80L2455,81L2469,81L2469,82L2498,82L2498,83L2514,83L2514,84L2523,84L2523,85L2536,85L2536,86L2539,86L2539,88L2557,88L2557,90L2562,90L2562,91L2577,91L2577,92L2592,92L2592,93L2593,93L2593,95L2595,95L2595,96L2598,96L2598,97L2601,97L2601,98L2602,98L2602,99L2607,99L2607,100L2613,100L2613,101L2623,101L2623,102L2643,102L2643,103L2647,103L2647,104L2653,104L2653,105L2657,105L2657,107L2658,107L2658,108L2658,108" tabindex="0">
						<title>8rmoq33j</title>
					</path>
				</g>
				<g style="--index: 75;">
					<path d="M0,75L2322,75L2322,11L2339,11L2339,12L2352,12L2352,13L2371,13L2371,14L2455,14L2455,15L2498,15L2498,16L2602,16L2602,17L2607,17L2607,18L2613,18L2613,19L2623,19L2623,20L2647,20L2647,21L2657,21L2657,22L2658,22L2658,23L2658,23" tabindex="0">
						<title>8q544708</title>
					</path>
				</g>
				<g style="--index: 76;">
					<path d="M0,76L2337,76L2337,25L2350,25L2350,26L2352,26L2352,27L2371,27L2371,29L2455,29L2455,30L2498,30L2498,31L2514,31L2514,32L2602,32L2602,33L2607,33L2607,34L2613,34L2613,35L2623,35L2623,36L2647,36L2647,37L2657,37L2657,39L2658,39L2658,40L2658,40" tabindex="0">
						<title>jpy55y0j</title>
					</path>
				</g>
				<g style="--index: 77;">
					<path d="M0,77L2350,77L2350,17L2352,17L2352,18L2371,18L2371,19L2455,19L2455,20L2498,20L2498,21L2601,21L2601,22L2602,22L2602,23L2607,23L2607,24L2613,24L2613,25L2623,25L2623,26L2647,26L2647,27L2657,27L2657,29L2658,29L2658,30L2658,30" tabindex="0">
						<title>xk6yny28</title>
					</path>
				</g>
				<g style="--index: 78;">
					<path d="M0,78L2352,78L2352,5L2456,5L2456,6L2556,6L2556,2L2658,2" tabindex="0">
						<title>8v0mryvx</title>
					</path>
				</g>
				<g style="--index: 79;">
					<path d="M0,79L2363,79L2363,30L2371,30L2371,32L2455,32L2455,33L2498,33L2498,34L2514,34L2514,35L2602,35L2602,36L2607,36L2607,37L2613,37L2613,38L2623,38L2623,39L2647,39L2647,40L2657,40L2657,42L2658,42L2658,43L2658,43" tabindex="0">
						<title>j9v103nx</title>
					</path>
				</g>
				<g style="--index: 80;">
					<path d="M0,80L2369,80L2369,72L2371,72L2371,74L2425,74L2425,75L2455,75L2455,76L2498,76L2498,77L2514,77L2514,78L2523,78L2523,79L2536,79L2536,80L2539,80L2539,81L2557,81L2557,83L2562,83L2562,84L2577,84L2577,85L2593,85L2593,87L2595,87L2595,88L2598,88L2598,89L2601,89L2601,90L2602,90L2602,91L2607,91L2607,92L2613,92L2613,93L2623,93L2623,94L2647,94L2647,95L2653,95L2653,96L2657,96L2657,98L2658,98L2658,99L2658,99" tabindex="0">
						<title>j9v19kox</title>
					</path>
				</g>
				<g style="--index: 81;">
					<path d="M0,81L2371,81L2371,26L2455,26L2455,27L2498,27L2498,28L2601,28L2601,29L2602,29L2602,30L2607,30L2607,31L2613,31L2613,32L2623,32L2623,33L2647,33L2647,34L2657,34L2657,36L2658,36L2658,37L2658,37" tabindex="0">
						<title>81p4yml8</title>
					</path>
				</g>
				<g style="--index: 82;">
					<path d="M0,82L2371,82L2371,12L2455,12L2455,13L2498,13L2498,14L2607,14L2607,15L2613,15L2613,16L2623,16L2623,17L2647,17L2647,18L2657,18L2657,19L2658,19L2658,20L2658,20" tabindex="0">
						<title>jm62e748</title>
					</path>
				</g>
				<g style="--index: 83;">
					<path d="M0,83L2425,83L2425,37L2455,37L2455,38L2498,38L2498,39L2514,39L2514,40L2562,40L2562,41L2577,41L2577,42L2598,42L2598,43L2602,43L2602,44L2607,44L2607,45L2613,45L2613,46L2623,46L2623,47L2647,47L2647,48L2657,48L2657,50L2658,50L2658,51L2658,51" tabindex="0">
						<title>8depw29j</title>
					</path>
				</g>
				<g style="--index: 84;">
					<path d="M0,84L2455,84L2455,9L2607,9L2607,10L2613,10L2613,11L2623,11L2623,12L2647,12L2647,13L2657,13L2657,14L2658,14" tabindex="0">
						<title>0jmw6wex</title>
					</path>
				</g>
				<g style="--index: 85;">
					<path d="M0,85L2469,85L2469,78L2498,78L2498,79L2514,79L2514,80L2523,80L2523,81L2536,81L2536,82L2539,82L2539,84L2557,84L2557,86L2562,86L2562,87L2577,87L2577,88L2593,88L2593,90L2595,90L2595,91L2598,91L2598,92L2601,92L2601,93L2602,93L2602,94L2607,94L2607,95L2613,95L2613,96L2623,96L2623,97L2643,97L2643,98L2647,98L2647,99L2653,99L2653,100L2657,100L2657,102L2658,102L2658,103L2658,103" tabindex="0">
						<title>8q60k5qj</title>
					</path>
				</g>
				<g style="--index: 86;">
					<path d="M0,86L2498,86L2498,12L2607,12L2607,13L2613,13L2613,14L2623,14L2623,15L2647,15L2647,16L2657,16L2657,17L2658,17" tabindex="0">
						<title>jpz7kp0x</title>
					</path>
				</g>
				<g style="--index: 87;">
					<path d="M0,87L2514,87L2514,30L2601,30L2601,21L2602,21L2602,22L2607,22L2607,23L2613,23L2613,24L2623,24L2623,25L2647,25L2647,26L2657,26L2657,28L2658,28L2658,29L2658,29" tabindex="0">
						<title>81m6y738</title>
					</path>
				</g>
				<g style="--index: 88;">
					<path d="M0,88L2523,88L2523,77L2536,77L2536,78L2539,78L2539,79L2557,79L2557,81L2562,81L2562,82L2577,82L2577,83L2593,83L2593,85L2595,85L2595,86L2598,86L2598,87L2601,87L2601,88L2602,88L2602,89L2607,89L2607,90L2613,90L2613,91L2623,91L2623,92L2647,92L2647,93L2653,93L2653,94L2657,94L2657,96L2658,96L2658,97L2658,97" tabindex="0">
						<title>xzypmkej</title>
					</path>
				</g>
				<g style="--index: 89;">
					<path d="M0,89L2536,89L2536,57L2539,57L2539,58L2557,58L2557,60L2562,60L2562,61L2577,61L2577,62L2593,62L2593,64L2598,64L2598,65L2602,65L2602,66L2607,66L2607,67L2613,67L2613,68L2623,68L2623,69L2647,69L2647,70L2653,70L2653,71L2657,71L2657,73L2658,73L2658,74L2658,74" tabindex="0">
						<title>xykgqew8</title>
					</path>
				</g>
				<g style="--index: 90;">
					<path d="M0,90L2539,90L2539,82L2557,82L2557,84L2562,84L2562,85L2577,85L2577,86L2593,86L2593,88L2595,88L2595,89L2598,89L2598,90L2601,90L2601,91L2602,91L2602,92L2607,92L2607,93L2613,93L2613,94L2623,94L2623,95L2643,95L2643,96L2647,96L2647,97L2653,97L2653,98L2657,98L2657,100L2658,100L2658,101L2658,101" tabindex="0">
						<title>8r10qq6j</title>
					</path>
				</g>
				<g style="--index: 91;">
					<path d="M0,91L2539,91L2539,41L2562,41L2562,42L2577,42L2577,43L2598,43L2598,44L2602,44L2602,45L2607,45L2607,46L2613,46L2613,47L2623,47L2623,48L2647,48L2647,49L2657,49L2657,51L2658,51L2658,52L2658,52" tabindex="0">
						<title>j0wm7v98</title>
					</path>
				</g>
				<g style="--index: 92;">
					<path d="M0,92L2557,92L2557,59L2562,59L2562,60L2577,60L2577,61L2593,61L2593,63L2598,63L2598,64L2602,64L2602,65L2607,65L2607,66L2613,66L2613,67L2623,67L2623,68L2647,68L2647,69L2653,69L2653,70L2657,70L2657,72L2658,72L2658,73L2658,73" tabindex="0">
						<title>j2pzwgn8</title>
					</path>
				</g>
				<g style="--index: 93;">
					<path d="M0,93L2557,93L2557,45L2562,45L2562,46L2577,46L2577,47L2598,47L2598,48L2602,48L2602,49L2607,49L2607,50L2613,50L2613,51L2623,51L2623,52L2647,52L2647,53L2657,53L2657,55L2658,55L2658,56L2658,56" tabindex="0">
						<title>8l6epv48</title>
					</path>
				</g>
				<g style="--index: 94;">
					<path d="M0,94L2562,94L2562,37L2602,37L2602,38L2607,38L2607,39L2613,39L2613,40L2623,40L2623,41L2647,41L2647,42L2657,42L2657,44L2658,44L2658,45L2658,45" tabindex="0">
						<title>x7zr11y8</title>
					</path>
				</g>
				<g style="--index: 95;">
					<path d="M0,95L2577,95L2577,39L2602,39L2602,40L2607,40L2607,41L2613,41L2613,42L2623,42L2623,43L2647,43L2647,44L2657,44L2657,46L2658,46L2658,47L2658,47" tabindex="0">
						<title>8dez3kmj</title>
					</path>
				</g>
				<g style="--index: 96;">
					<path d="M0,96L2585,96L2585,95L2592,95L2592,96L2593,96L2593,98L2595,98L2595,99L2598,99L2598,100L2601,100L2601,101L2602,101L2602,102L2607,102L2607,103L2613,103L2613,104L2623,104L2623,105L2643,105L2643,106L2647,106L2647,107L2653,107L2653,108L2657,108L2657,110L2658,110L2658,111L2658,111" tabindex="0">
						<title>8vrwoyyx</title>
					</path>
				</g>
				<g style="--index: 97;">
					<path d="M0,97L2592,97L2592,92L2593,92L2593,94L2595,94L2595,95L2598,95L2598,96L2601,96L2601,97L2602,97L2602,98L2607,98L2607,99L2613,99L2613,100L2623,100L2623,101L2643,101L2643,102L2647,102L2647,103L2653,103L2653,104L2657,104L2657,106L2658,106L2658,107L2658,107" tabindex="0">
						<title>8l6wq0r8</title>
					</path>
				</g>
				<g style="--index: 98;">
					<path d="M0,98L2593,98L2593,56L2598,56L2598,57L2602,57L2602,58L2607,58L2607,59L2613,59L2613,60L2623,60L2623,61L2647,61L2647,62L2653,62L2653,63L2657,63L2657,65L2658,65L2658,66L2658,66" tabindex="0">
						<title>8deok9lj</title>
					</path>
				</g>
				<g style="--index: 99;">
					<path d="M0,99L2593,99L2593,58L2598,58L2598,59L2602,59L2602,60L2607,60L2607,61L2613,61L2613,62L2623,62L2623,63L2647,63L2647,64L2653,64L2653,65L2657,65L2657,67L2658,67L2658,68L2658,68" tabindex="0">
						<title>8w7wz94x</title>
					</path>
				</g>
				<g style="--index: 100;">
					<path d="M0,100L2595,100L2595,65L2598,65L2598,66L2602,66L2602,67L2607,67L2607,68L2613,68L2613,69L2623,69L2623,70L2647,70L2647,71L2653,71L2653,72L2657,72L2657,74L2658,74L2658,75L2658,75" tabindex="0">
						<title>j2p56qp8</title>
					</path>
				</g>
				<g style="--index: 101;">
					<path d="M0,101L2598,101L2598,42L2602,42L2602,43L2607,43L2607,44L2613,44L2613,45L2623,45L2623,46L2647,46L2647,47L2657,47L2657,49L2658,49L2658,50L2658,50" tabindex="0">
						<title>8w7pk9zx</title>
					</path>
				</g>
				<g style="--index: 102;">
					<path d="M0,102L2601,102L2601,82L2602,82L2602,83L2607,83L2607,84L2613,84L2613,85L2623,85L2623,86L2647,86L2647,87L2653,87L2653,88L2657,88L2657,90L2658,90L2658,91L2658,91" tabindex="0">
						<title>xk6l35m8</title>
					</path>
				</g>
				<g style="--index: 103;">
					<path d="M0,103L2602,103L2602,15L2607,15L2607,16L2613,16L2613,17L2623,17L2623,18L2647,18L2647,19L2657,19L2657,20L2658,20L2658,21L2658,21" tabindex="0">
						<title>j5p15ez8</title>
					</path>
				</g>
				<g style="--index: 104;">
					<path d="M0,104L2607,104L2607,8L2626,8L2626,9L2647,9L2647,10L2657,10L2657,11L2658,11" tabindex="0">
						<title>8eor5y7j</title>
					</path>
				</g>
				<g style="--index: 105;">
					<path d="M0,105L2613,105L2613,10L2623,10L2623,11L2625,11L2625,10L2626,10L2626,7L2647,7L2647,8L2648,8L2648,6L2658,6" tabindex="0">
						<title>j2pzvvp8</title>
					</path>
				</g>
				<g style="--index: 106;">
					<path d="M0,106L2623,106L2623,10L2625,10L2625,11L2647,11L2647,12L2657,12L2657,13L2658,13" tabindex="0">
						<title>8qplrmdx</title>
					</path>
				</g>
				<g style="--index: 107;">
					<path d="M0,107L2643,107L2643,95L2647,95L2647,96L2653,96L2653,97L2657,97L2657,99L2658,99L2658,100L2658,100" tabindex="0">
						<title>8rmwgpqj</title>
					</path>
				</g>
				<g style="--index: 108;">
					<path d="M0,108L2647,108L2647,5L2658,5" tabindex="0">
						<title>8gop7k2x</title>
					</path>
				</g>
				<g style="--index: 109;">
					<path d="M0,109L2653,109L2653,61L2657,61L2657,63L2658,63L2658,64L2658,64" tabindex="0">
						<title>81pg9mr8</title>
					</path>
				</g>
				<g style="--index: 110;">
					<path d="M0,110L2657,110L2657,7L2658,7" tabindex="0">
						<title>xz59wp0x</title>
					</path>
				</g>
				<g style="--index: 111;">
					<path d="M0,111L2657,111L2657,23L2658,23L2658,24L2658,24" tabindex="0">
						<title>8d93gq9x</title>
					</path>
				</g>
				<g style="--index: 112;">
					<path d="M0,112L2658,112L2658,19L2658,19" tabindex="0">
						<title>8r6739q8</title>
					</path>
				</g>
			</g>
		</svg>
	</foreignObject>
</svg>
