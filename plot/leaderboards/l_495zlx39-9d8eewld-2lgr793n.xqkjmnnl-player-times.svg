<svg xmlns="http://www.w3.org/2000/svg" lang="en" style="color-scheme: dark light;">
	<title>Time by player for leaderboard l_495zlx39-9d8eewld-2lgr793n.xqkjmnnl</title>
	<style>
		*,
		::before,
		::after {
			box-sizing: border-box;
		}
		:root {
			background: var(--canvas-background);
			color: var(--canvas-foreground);
			fill: var(--canvas-background);
			stroke: var(--canvas-foreground);
			stroke-linejoin: round;
			stroke-linecap: round;
		}
		foreignObject {
			pointer-events: none;
		}
		foreignObject &gt; div {
			position: absolute;
			inset: 0 auto auto 0;
			margin: 20px;
			border: 1px solid var(--canvas-foreground);
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			transition: opacity 1s;
			pointer-events: auto;
		}
		foreignObject:is(:hover, :focus-within) &gt; div:not(:hover, :focus-within) {
			opacity: 0;
			pointer-events: none;
		}
		foreignObject &gt; div &gt; p {
			margin: 0;
		}
		label {
			display: table;
			border-collapse: separate;
			border-spacing: 10px;
		}
		progress,
		input[type="checkbox"] {
			display: table-cell;
			width: 16px;
			height: 16px;
			margin: 2px;
			accent-color: var(--canvas-foreground);
			vertical-align: top;
		}
		progress + span,
		input[type="checkbox"] + span {
			display: table-cell;
			vertical-align: top;
		}
		input[type="checkbox"]:not(:disabled):is(:hover, :focus-within) + span {
			text-decoration: underline;
		}
		foreignObject &gt; svg {
			width: calc(100% - 40px);
			height: calc(100% - 40px);
			margin: 20px;
			padding: 10px;
			border: 1px dashed var(--canvas-foreground);
			background: var(--canvas-background);
			pointer-events: auto;
		}
		g &gt; path[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: hsl(calc(var(--index) / var(--count) * 360), 50%, 50%);
			cursor: help;
		}
		g:is(:hover, :focus-within) &gt; path[tabindex] {
			stroke: var(--canvas-foreground);
		}
		g &gt; path[tabindex]:is(:hover, :focus-within) {
			outline: 0;
		}
		g &gt; path[tabindex]:first-of-type {
			stroke-width: 2;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) {
			stroke-width: 4;
		}
		g &gt; path[tabindex]:first-of-type:not(:last-of-type) {
			stroke-dasharray: 4 8;
		}
		g &gt; rect {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect {
			fill: var(--highlighted);
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] {
			stroke-width: 8;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) {
			stroke-width: 16;
		}
		g &gt; line {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			stroke-width: 2;
			stroke-dasharray: 4 8;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line + line {
			stroke: var(--faded);
		}
		@media (prefers-color-scheme: dark) {
			:root {
				--canvas-background: #000;
				--canvas-foreground: #ccc;
				--highlighted: #6663;
				--faded: #9993;
			}
		}
		@media (prefers-color-scheme: light) {
			:root {
				--canvas-background: #fff;
				--canvas-foreground: #333;
				--highlighted: #9993;
				--faded: #6663;
			}
		}
	</style>
	<script>
		"use strict";
		{
			const script = document.currentScript;
			const documentUrl = location.href;
			const scope = new URL("../../", documentUrl).pathname;
			const playersKey = `${scope}#players`;
			const leaderboardsKey = `${scope}#leaderboards`;
			async function importDataScript(dataScriptUrl) {
				if (documentUrl.protocol !== "file:") {
					const response = await fetch(dataScriptUrl);
					if (!response.ok) {
						throw new Error(response.statusText);
					}
					const data = await response.json();
					return data;
				}
				return await new Promise((resolve, reject) =&gt; {
					const name = `callback${Math.random() * 2 ** 53}`;
					let called = false;
					let data = null;
					function callback(value) {
						if (!called) {
							called = true;
							data = value;
						}
					}
					window[name] = callback;
					const dataScript = document.createElementNS("http://www.w3.org/2000/svg", "script");
					dataScript.href = `${dataScriptUrl}&amp;callback=${name}`;
					function handleError(event) {
						delete window[name];
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const error = event.error;
						reject(error);
					}
					function handleLoad(event) {
						delete window[name];
						dataScript.removeEventListener("error", handleError);
						dataScript.remove();
						resolve(data);
					}
					dataScript.addEventListener("error", handleError, {
						once: true,
					});
					dataScript.addEventListener("load", handleLoad, {
						once: true,
					});
					script.after(dataScript);
				});
			}
			document.addEventListener("DOMContentLoaded", async (event) =&gt; {
				const rootTitleElement = document.querySelector("title");
				const rootTitleContent = rootTitleElement.textContent;
				const pathTitleElements = Array.from(document.querySelectorAll("g &gt; path[tabindex]:first-of-type &gt; title"));
				const pathTitleContents = pathTitleElements.map((pathTitleElement) =&gt; {
					const pathTitleContent = pathTitleElement.textContent;
					return pathTitleContent;
				});
				const foreignObject = document.querySelector("foreignObject");
				const div = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
				div.dir = "ltr";
				const p = document.createElementNS("http://www.w3.org/1999/xhtml", "p");
				const label = document.createElementNS("http://www.w3.org/1999/xhtml", "label");
				const progress = document.createElementNS("http://www.w3.org/1999/xhtml", "progress");
				label.append(progress);
				const span = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
				span.textContent = "Loading names";
				label.append(span);
				p.append(label);
				div.append(p);
				foreignObject.prepend(div);
				const {players, leaderboards} = await (async () =&gt; {
					try {
						const cachedPlayers = sessionStorage.getItem(playersKey);
						const cachedLeaderboards = sessionStorage.getItem(leaderboardsKey);
						if (cachedPlayers == null || cachedLeaderboards == null) {
							throw new Error();
						}
						const players = JSON.parse(cachedPlayers);
						const leaderboards = JSON.parse(cachedLeaderboards);
						return {players, leaderboards};
					} catch {}
					try {
						const players = Object.create(null);
						const leaderboards = Object.create(null);
						const games = ["9d3rrxyd", "w6jl2ned"];
						for (const gameId of games) {
							const {data} = await importDataScript(`https://www.speedrun.com/api/v1/games/${gameId}?embed=categories,levels,variables`);
							const versions = data.variables.data.find((variable) =&gt; {
								return variable.name === "Version";
							});
							const levels = Object.fromEntries(data.levels.data.map((level) =&gt; {
								return [level.id, level];
							}));
							const categories = Object.fromEntries(data.categories.data.map((category) =&gt; {
								return [category.id, category];
							}));
							const variables = Object.fromEntries(data.variables.data.map((variable) =&gt; {
								return [variable.id, variable];
							}));
							console.log(`Got game`);
							await new Promise((resolve) =&gt; {
								setTimeout(resolve, 800);
							});
							const slice = 200;
							for (let offset = 0;; offset += slice) {
								const {data, pagination} = await importDataScript(`https://www.speedrun.com/api/v1/runs?game=${gameId}&amp;orderby=date&amp;direction=asc&amp;embed=players&amp;offset=${offset}&amp;max=${slice}`);
								const {size} = pagination;
								if (size === 0) {
									break;
								}
								for (const run of data) {
									const status = run.status.status;
									if (status == null || status === "new") {
										continue;
									}
									const player = run.players.data[0].rel === "user" ? run.players.data[0].id : "814p2558";
									const playerName = run.players.data[0].rel === "user" ? run.players.data[0].names.international : "anonymous";
									players[player] ??= playerName;
									const level = run.level;
									const category = run.category;
									const values = Object.entries(run.values).filter(([variable]) =&gt; {
										return variables[variable]?.["is-subcategory"] ?? false;
									}).map(([variable, value]) =&gt; {
										return `-${variable}.${value}`;
									});
									const leaderboard = `${level != null ? `l_${level}-` : ""}${category}${values.join("")}`;
									const levelName = run.level != null ? levels[run.level]?.name ?? null : null;
									const categoryName = categories[run.category]?.name ?? null;
									const valueNames = Object.entries(run.values).filter(([variable]) =&gt; {
										return variables[variable]?.["is-subcategory"] ?? false;
									}).map(([variable, value]) =&gt; {
										return variables[variable]?.values.values[value]?.label ?? null;
									}).filter((valueName) =&gt; {
										return valueName != null;
									});
									const leaderboardName = `${levelName != null ? `${levelName}: ` : ""}${categoryName ?? ""}${values.length !== 0 ? ` - ${valueNames.join(", ")}` : ""}`;
									leaderboards[leaderboard] ??= leaderboardName;
								}
								console.log(`Got runs ${offset}-${offset + size - 1}`);
								await new Promise((resolve) =&gt; {
									setTimeout(resolve, 800);
								});
							}
						}
						try {
							const cachedPlayers = JSON.stringify(players);
							const cachedLeaderboards = JSON.stringify(leaderboards);
							sessionStorage.setItem(playersKey, cachedPlayers);
							sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
						} catch {}
						return {players, leaderboards};
					} catch {}
					const players = null;
					const leaderboards = null;
					return {players, leaderboards};
				})();
				if (players == null || leaderboards == null) {
					const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
					input.type = "checkbox";
					input.autocomplete = "off";
					input.disabled = true;
					input.indeterminate = true;
					progress.replaceWith(input);
					span.textContent = "Unavailable names";
					return;
				}
				const hasPlayerRoot = rootTitleContent.includes(" for player");
				const hasLeaderboardRoot = rootTitleContent.includes(" for leaderboard");
				const rootTitle = {
					element: rootTitleElement,
					contentWithIds: rootTitleContent,
					contentWithNames: hasPlayerRoot ? rootTitleContent.replace(/ for player ([0-9_a-z]+)/, ($0, $1) =&gt; {
						return ` for player ${players[$1] ?? $1}`;
					}) : hasLeaderboardRoot ? rootTitleContent.replace(/ for leaderboard ((?:l_[0-9_a-z]+-)?[0-9_a-z]+(-[0-9_a-z]+\.[0-9_a-z]+)*)/, ($0, $1) =&gt; {
						return ` for leaderboard ${leaderboards[$1] ?? $1}`;
					}) : rootTitleContent,
				};
				const hasPlayerPaths = rootTitleContent.includes(" by player");
				const hasLeaderboardPaths = rootTitleContent.includes(" by leaderboard");
				const pathTitles = pathTitleElements.map((pathTitleElement, k) =&gt; {
					const pathTitleContent = pathTitleContents[k];
					const pathTitle = {
						element: pathTitleElement,
						contentWithIds: pathTitleContent,
						contentWithNames: hasPlayerPaths ? players[pathTitleContent] ?? pathTitleContent : hasLeaderboardPaths ? leaderboards[pathTitleContent] ?? pathTitleContent : pathTitleContent,
					};
					return pathTitle;
				});
				const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
				input.type = "checkbox";
				input.autocomplete = "off";
				input.addEventListener("change", () =&gt; {
					input.disabled = true;
					if (input.checked) {
						rootTitle.element.textContent = rootTitle.contentWithNames;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithNames;
						}
					} else {
						rootTitle.element.textContent = rootTitle.contentWithIds;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithIds;
						}
					}
					input.disabled = false;
				});
				progress.replaceWith(input);
				span.textContent = "Reveal names";
			}, {
				once: true,
			});
		}
	</script>
	<foreignObject x="0" y="0" width="100%" height="100%">
		<svg viewBox="0 0 2122 3963" preserveAspectRatio="none" overflow="visible">
			<g transform="scale(1 -1)" transform-origin="center center" style="--count: 14;">
				<g style="--index: 0;">
					<path d="M0,3404" tabindex="0">
						<title>18qg9ndx</title>
					</path>
					<rect x="0" y="3404" width="0" height="0"/>
					<path d="M0,3404L0,3404" tabindex="0">
						<title>00:34.04 on 2018-04-11</title>
					</path>
					<line x1="0" y1="3404" x2="2122" y2="3404"/>
					<line x1="0" y1="0" x2="0" y2="3963"/>
				</g>
				<g style="--index: 1;">
					<path d="M7,3233L159,3233L159,2561" tabindex="0">
						<title>y8dgoe98</title>
					</path>
					<rect x="7" y="2561" width="152" height="672"/>
					<path d="M7,3233L7,3233" tabindex="0">
						<title>00:32.33 on 2018-04-18</title>
					</path>
					<line x1="0" y1="3233" x2="2122" y2="3233"/>
					<line x1="7" y1="0" x2="7" y2="3963"/>
					<path d="M159,2561L159,2561" tabindex="0">
						<title>00:25.61 on 2018-09-17</title>
					</path>
					<line x1="0" y1="2561" x2="2122" y2="2561"/>
					<line x1="159" y1="0" x2="159" y2="3963"/>
				</g>
				<g style="--index: 2;">
					<path d="M760,2498L922,2498L922,2258" tabindex="0">
						<title>x356nrej</title>
					</path>
					<rect x="760" y="2258" width="162" height="240"/>
					<path d="M760,2498L760,2498" tabindex="0">
						<title>00:24.98 on 2020-05-10</title>
					</path>
					<line x1="0" y1="2498" x2="2122" y2="2498"/>
					<line x1="760" y1="0" x2="760" y2="3963"/>
					<path d="M922,2258L922,2258" tabindex="0">
						<title>00:22.58 on 2020-10-19</title>
					</path>
					<line x1="0" y1="2258" x2="2122" y2="2258"/>
					<line x1="922" y1="0" x2="922" y2="3963"/>
				</g>
				<g style="--index: 3;">
					<path d="M868,3206" tabindex="0">
						<title>8dwnyqoj</title>
					</path>
					<rect x="868" y="3206" width="0" height="0"/>
					<path d="M868,3206L868,3206" tabindex="0">
						<title>00:32.06 on 2020-08-26</title>
					</path>
					<line x1="0" y1="3206" x2="2122" y2="3206"/>
					<line x1="868" y1="0" x2="868" y2="3963"/>
				</g>
				<g style="--index: 4;">
					<path d="M955,2516L998,2516L998,2011" tabindex="0">
						<title>x7q00668</title>
					</path>
					<rect x="955" y="2011" width="43" height="505"/>
					<path d="M955,2516L955,2516" tabindex="0">
						<title>00:25.16 on 2020-11-21</title>
					</path>
					<line x1="0" y1="2516" x2="2122" y2="2516"/>
					<line x1="955" y1="0" x2="955" y2="3963"/>
					<path d="M998,2011L998,2011" tabindex="0">
						<title>00:20.11 on 2021-01-03</title>
					</path>
					<line x1="0" y1="2011" x2="2122" y2="2011"/>
					<line x1="998" y1="0" x2="998" y2="3963"/>
				</g>
				<g style="--index: 5;">
					<path d="M983,2202L989,2202L989,2172L999,2172L999,1970" tabindex="0">
						<title>xkon93k8</title>
					</path>
					<rect x="983" y="1970" width="16" height="232"/>
					<path d="M983,2202L983,2202" tabindex="0">
						<title>00:22.02 on 2020-12-19</title>
					</path>
					<line x1="0" y1="2202" x2="2122" y2="2202"/>
					<line x1="983" y1="0" x2="983" y2="3963"/>
					<path d="M989,2172L989,2172" tabindex="0">
						<title>00:21.72 on 2020-12-25</title>
					</path>
					<line x1="0" y1="2172" x2="2122" y2="2172"/>
					<line x1="989" y1="0" x2="989" y2="3963"/>
					<path d="M999,1970L999,1970" tabindex="0">
						<title>00:19.70 on 2021-01-04</title>
					</path>
					<line x1="0" y1="1970" x2="2122" y2="1970"/>
					<line x1="999" y1="0" x2="999" y2="3963"/>
				</g>
				<g style="--index: 6;">
					<path d="M1006,2672" tabindex="0">
						<title>j0np7or8</title>
					</path>
					<rect x="1006" y="2672" width="0" height="0"/>
					<path d="M1006,2672L1006,2672" tabindex="0">
						<title>00:26.72 on 2021-01-11</title>
					</path>
					<line x1="0" y1="2672" x2="2122" y2="2672"/>
					<line x1="1006" y1="0" x2="1006" y2="3963"/>
				</g>
				<g style="--index: 7;">
					<path d="M1106,1897" tabindex="0">
						<title>j2yr9lp8</title>
					</path>
					<rect x="1106" y="1897" width="0" height="0"/>
					<path d="M1106,1897L1106,1897" tabindex="0">
						<title>00:18.97 on 2021-04-21</title>
					</path>
					<line x1="0" y1="1897" x2="2122" y2="1897"/>
					<line x1="1106" y1="0" x2="1106" y2="3963"/>
				</g>
				<g style="--index: 8;">
					<path d="M1704,3089" tabindex="0">
						<title>8g0ezgyx</title>
					</path>
					<rect x="1704" y="3089" width="0" height="0"/>
					<path d="M1704,3089L1704,3089" tabindex="0">
						<title>00:30.89 on 2022-12-10</title>
					</path>
					<line x1="0" y1="3089" x2="2122" y2="3089"/>
					<line x1="1704" y1="0" x2="1704" y2="3963"/>
				</g>
				<g style="--index: 9;">
					<path d="M1705,2601" tabindex="0">
						<title>8lonqn28</title>
					</path>
					<rect x="1705" y="2601" width="0" height="0"/>
					<path d="M1705,2601L1705,2601" tabindex="0">
						<title>00:26.01 on 2022-12-11</title>
					</path>
					<line x1="0" y1="2601" x2="2122" y2="2601"/>
					<line x1="1705" y1="0" x2="1705" y2="3963"/>
				</g>
				<g style="--index: 10;">
					<path d="M1784,3686" tabindex="0">
						<title>x3w99yqj</title>
					</path>
					<rect x="1784" y="3686" width="0" height="0"/>
					<path d="M1784,3686L1784,3686" tabindex="0">
						<title>00:36.86 on 2023-02-28</title>
					</path>
					<line x1="0" y1="3686" x2="2122" y2="3686"/>
					<line x1="1784" y1="0" x2="1784" y2="3963"/>
				</g>
				<g style="--index: 11;">
					<path d="M1855,1773L1984,1773L1984,1729" tabindex="0">
						<title>jn2m23wj</title>
					</path>
					<rect x="1855" y="1729" width="129" height="44"/>
					<path d="M1855,1773L1855,1773" tabindex="0">
						<title>00:17.73 on 2023-05-10</title>
					</path>
					<line x1="0" y1="1773" x2="2122" y2="1773"/>
					<line x1="1855" y1="0" x2="1855" y2="3963"/>
					<path d="M1984,1729L1984,1729" tabindex="0">
						<title>00:17.29 on 2023-09-16</title>
					</path>
					<line x1="0" y1="1729" x2="2122" y2="1729"/>
					<line x1="1984" y1="0" x2="1984" y2="3963"/>
				</g>
				<g style="--index: 12;">
					<path d="M1855,2228" tabindex="0">
						<title>x3wdlvkj</title>
					</path>
					<rect x="1855" y="2228" width="0" height="0"/>
					<path d="M1855,2228L1855,2228" tabindex="0">
						<title>00:22.28 on 2023-05-10</title>
					</path>
					<line x1="0" y1="2228" x2="2122" y2="2228"/>
					<line x1="1855" y1="0" x2="1855" y2="3963"/>
				</g>
				<g style="--index: 13;">
					<path d="M2122,3963" tabindex="0">
						<title>81mov058</title>
					</path>
					<rect x="2122" y="3963" width="0" height="0"/>
					<path d="M2122,3963L2122,3963" tabindex="0">
						<title>00:39.63 on 2024-02-01</title>
					</path>
					<line x1="0" y1="3963" x2="2122" y2="3963"/>
					<line x1="2122" y1="0" x2="2122" y2="3963"/>
				</g>
			</g>
		</svg>
	</foreignObject>
</svg>
