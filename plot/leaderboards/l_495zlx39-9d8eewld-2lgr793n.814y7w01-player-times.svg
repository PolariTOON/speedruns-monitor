<svg xmlns="http://www.w3.org/2000/svg" lang="en" style="color-scheme: dark light;">
	<title>Time by player for leaderboard l_495zlx39-9d8eewld-2lgr793n.814y7w01</title>
	<style>
		*,
		::before,
		::after {
			box-sizing: border-box;
		}
		:root {
			background: var(--canvas-background);
			color: var(--canvas-foreground);
			fill: var(--canvas-background);
			stroke: var(--canvas-foreground);
			stroke-linejoin: round;
			stroke-linecap: round;
		}
		foreignObject {
			pointer-events: none;
		}
		foreignObject &gt; div {
			position: absolute;
			left: 0;
			top: 0;
			margin: 20px;
			border: 1px solid var(--canvas-foreground);
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			transition: opacity 1s;
			pointer-events: auto;
		}
		foreignObject:is(:hover, :focus-within) &gt; div:not(:hover, :focus-within) {
			opacity: 0;
			pointer-events: none;
		}
		foreignObject &gt; div &gt; p {
			margin: 0;
		}
		label {
			display: table;
			border-collapse: separate;
			border-spacing: 10px;
		}
		progress,
		input[type="checkbox"] {
			display: table-cell;
			width: 16px;
			height: 16px;
			margin: 2px;
			accent-color: var(--canvas-foreground);
			vertical-align: top;
		}
		progress + span,
		input[type="checkbox"] + span {
			display: table-cell;
			vertical-align: top;
		}
		input[type="checkbox"]:not(:disabled):is(:hover, :focus-within) + span {
			text-decoration: underline;
		}
		foreignObject &gt; svg {
			width: calc(100% - 40px);
			height: calc(100% - 40px);
			margin: 20px;
			padding: 10px;
			border: 1px dashed var(--canvas-foreground);
			background: var(--canvas-background);
			pointer-events: auto;
		}
		g &gt; rect[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: var(--tier, #0000);
			stroke: none;
			cursor: help;
		}
		g &gt; rect[tabindex][data-tier="diamond"] {
			--tier: var(--diamond);
		}
		g &gt; rect[tabindex][data-tier="gold"] {
			--tier: var(--gold);
		}
		g &gt; rect[tabindex][data-tier="silver"] {
			--tier: var(--silver);
		}
		g &gt; rect[tabindex][data-tier="bronze"] {
			--tier: var(--bronze);
		}
		g &gt; path[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: hsl(calc(var(--index) / var(--count) * 360), 50%, 50%);
			cursor: help;
		}
		g:is(:hover, :focus-within) &gt; path[tabindex] {
			stroke: var(--canvas-foreground);
		}
		g &gt; path[tabindex]:is(:hover, :focus-within) {
			outline: 0;
		}
		g &gt; path[tabindex]:first-of-type {
			stroke-width: 2;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) {
			stroke-width: 4;
		}
		g &gt; path[tabindex]:first-of-type:not(:last-of-type) {
			stroke-dasharray: 4 8;
		}
		g &gt; path[tabindex]:first-of-type + rect {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect {
			fill: var(--highlighted);
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] {
			stroke-width: 8;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) {
			stroke-width: 16;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line + line {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			stroke-width: 2;
			stroke-dasharray: 4 8;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line + line {
			stroke: var(--faded);
		}
		@media (prefers-color-scheme: dark) {
			:root {
				--canvas-background: #000;
				--canvas-foreground: #ccc;
				--diamond: #0363;
				--gold: #6303;
				--silver: #3633;
				--bronze: #6363;
				--highlighted: #6663;
				--faded: #9993;
			}
		}
		@media (prefers-color-scheme: light) {
			:root {
				--canvas-background: #fff;
				--canvas-foreground: #333;
				--diamond: #9cf3;
				--gold: #fc93;
				--silver: #9c93;
				--bronze: #c9c3;
				--highlighted: #9993;
				--faded: #6663;
			}
		}
	</style>
	<script>
		"use strict";
		{
			const script = document.currentScript;
			const documentUrl = location.href;
			const scope = new URL("../../", documentUrl).pathname;
			const playersKey = `${scope}#players`;
			const leaderboardsKey = `${scope}#leaderboards`;
			const sessionKey = `${scope}#session`;
			const lockKey = `${scope}#lock`;
			async function importDataScript(dataScriptUrl, signal) {
				signal.throwIfAborted();
				if (documentUrl.protocol !== "file:") {
					const response = await fetch(dataScriptUrl, {
						signal,
					});
					if (!response.ok) {
						throw new Error(response.statusText);
					}
					const data = await response.json();
					return data;
				}
				return await new Promise((resolve, reject) =&gt; {
					const name = `callback${Math.random() * 2 ** 53}`;
					let called = false;
					let data = null;
					function callback(value) {
						if (!called) {
							called = true;
							data = value;
						}
					}
					window[name] = callback;
					const dataScript = document.createElementNS("http://www.w3.org/2000/svg", "script");
					dataScript.href = `${dataScriptUrl}&amp;callback=${name}`;
					function handleAbort(event) {
						delete window[name];
						dataScript.removeEventListener("error", handleError);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const reason = signal.reason;
						reject(reason);
					}
					function handleError(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const error = event.error;
						reject(error);
					}
					function handleLoad(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("error", handleError);
						dataScript.remove();
						resolve(data);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					dataScript.addEventListener("error", handleError, {
						once: true,
					});
					dataScript.addEventListener("load", handleLoad, {
						once: true,
					});
					script.after(dataScript);
				});
			}
			async function waitForTimeout(delay, signal) {
				signal.throwIfAborted();
				return await new Promise((resolve, reject) =&gt; {
					let timeout = null;
					function handleAbort() {
						clearTimeout(timeout);
						const reason = signal.reason;
						reject(reason);
					}
					function handleTimeout() {
						signal.removeEventListener("abort", handleAbort);
						resolve(delay);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					timeout = setTimeout(handleTimeout, delay);
				});
			}
			window.addEventListener("pageshow", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully restored page from cache`);
				} else {
					console.log(`Unsuccessfully restored page from cache`);
				}
			});
			window.addEventListener("pagehide", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully saved page to cache`);
				} else {
					console.log(`Unsuccessfully saved page to cache`);
				}
			});
			window.addEventListener("pageshow", async (event) =&gt; {
				const rootTitleElement = document.querySelector("title");
				const rootTitleContent = rootTitleElement.textContent;
				const pathTitleElements = Array.from(document.querySelectorAll("g &gt; path[tabindex]:first-of-type &gt; title"));
				const pathTitleContents = pathTitleElements.map((pathTitleElement) =&gt; {
					const pathTitleContent = pathTitleElement.textContent;
					return pathTitleContent;
				});
				const foreignObject = document.querySelector("foreignObject");
				const div = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
				div.dir = "ltr";
				const p = document.createElementNS("http://www.w3.org/1999/xhtml", "p");
				const label = document.createElementNS("http://www.w3.org/1999/xhtml", "label");
				const progress = document.createElementNS("http://www.w3.org/1999/xhtml", "progress");
				label.append(progress);
				const span = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
				span.textContent = "Loading names";
				label.append(span);
				p.append(label);
				div.append(p);
				foreignObject.prepend(div);
				let lock = false;
				let session = null;
				const broadcastChannel = new BroadcastChannel(sessionKey);
				const abortController = new AbortController();
				const signal = abortController.signal;
				const abort = abortController.abort.bind(abortController);
				const {promise, resolve} = Promise.withResolvers();
				broadcastChannel.addEventListener("message", (event) =&gt; {
					const data = event.data;
					const type = data.type;
					switch (type) {
						case "request": {
							if (lock &amp;&amp; signal.aborted) {
								broadcastChannel.postMessage({
									type: "response",
									session,
								});
							}
							break;
						}
						case "response": {
							if (!signal.aborted) {
								session = data.session;
								if (session != null) {
									const {players, leaderboards} = session;
									try {
										const cachedPlayers = JSON.stringify(players);
										const cachedLeaderboards = JSON.stringify(leaderboards);
										sessionStorage.setItem(playersKey, cachedPlayers);
										sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
									} catch {}
									console.log(`Successfully loaded names from peer`);
									abort();
									resolve();
								} else {
									console.log(`Unsuccessfully loaded names from peer`);
									abort();
									resolve();
								}
							}
							break;
						}
					}
				});
				try {
					const cachedPlayers = sessionStorage.getItem(playersKey);
					const cachedLeaderboards = sessionStorage.getItem(leaderboardsKey);
					if (cachedPlayers == null || cachedLeaderboards == null) {
						throw new Error();
					}
					const players = JSON.parse(cachedPlayers);
					const leaderboards = JSON.parse(cachedLeaderboards);
					session = {players, leaderboards};
				} catch {}
				if (session != null) {
					broadcastChannel.postMessage({
						type: "response",
						session,
					});
					console.log(`Successfully loaded names from local`);
					abort();
					resolve();
				} else {
					broadcastChannel.postMessage({
						type: "request",
					});
					console.log(`Unsuccessfully loaded names from local`);
				}
				(async () =&gt; {
					for (;;) {
						await navigator.locks.request(lockKey, async () =&gt; {
							lock = true;
							console.log(`Acquired lock`);
							if (!signal.aborted) {
								try {
									const players = Object.create(null);
									const leaderboards = Object.create(null);
									const games = ["9d3rrxyd", "w6jl2ned"];
									for (const gameId of games) {
										const {data} = await importDataScript(`https://www.speedrun.com/api/v1/games/${gameId}?embed=categories,levels,variables`, signal);
										const versions = data.variables.data.find((variable) =&gt; {
											return variable.name === "Version";
										});
										const levels = Object.fromEntries(data.levels.data.map((level) =&gt; {
											return [level.id, level];
										}));
										const categories = Object.fromEntries(data.categories.data.map((category) =&gt; {
											return [category.id, category];
										}));
										const variables = Object.fromEntries(data.variables.data.map((variable) =&gt; {
											return [variable.id, variable];
										}));
										console.log(`Got game`);
										await waitForTimeout(800, signal);
										const slice = 200;
										for (let offset = 0;; offset += slice) {
											const {data, pagination} = await importDataScript(`https://www.speedrun.com/api/v1/runs?game=${gameId}&amp;orderby=date&amp;direction=asc&amp;embed=players&amp;offset=${offset}&amp;max=${slice}`, signal);
											const {size} = pagination;
											if (size === 0) {
												break;
											}
											for (const run of data) {
												const status = run.status.status;
												if (status == null || status === "new") {
													continue;
												}
												const player = run.players.data[0].rel === "user" ? run.players.data[0].id : "814p2558";
												const playerName = run.players.data[0].rel === "user" ? run.players.data[0].names.international : "anonymous";
												players[player] ??= playerName;
												const level = run.level;
												const category = run.category;
												const values = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return `-${variable}.${value}`;
												});
												const leaderboard = `${level != null ? `l_${level}-` : ""}${category}${values.join("")}`;
												const levelName = run.level != null ? levels[run.level]?.name ?? null : null;
												const categoryName = categories[run.category]?.name ?? null;
												const valueNames = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return variables[variable]?.values.values[value]?.label ?? null;
												}).filter((valueName) =&gt; {
													return valueName != null;
												});
												const leaderboardName = `${levelName != null ? `${levelName}: ` : ""}${categoryName ?? ""}${values.length !== 0 ? ` - ${valueNames.join(", ")}` : ""}`;
												leaderboards[leaderboard] ??= leaderboardName;
											}
											console.log(`Got runs ${offset}-${offset + size - 1}`);
											await waitForTimeout(800, signal);
										}
									}
									session = {players, leaderboards};
								} catch {}
								if (!signal.aborted) {
									if (session != null) {
										const {players, leaderboards} = session;
										try {
											const cachedPlayers = JSON.stringify(players);
											const cachedLeaderboards = JSON.stringify(leaderboards);
											sessionStorage.setItem(playersKey, cachedPlayers);
											sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
										} catch {}
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Successfully loaded names from remote`);
										abort();
										resolve();
									} else {
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Unsuccessfully loaded names from remote`);
										abort();
										resolve();
									}
								}
							}
							await new Promise((resolve) =&gt; {
								window.addEventListener("beforeunload", () =&gt; {
									resolve();
								}, {
									once: true,
								});
							});
						});
						lock = false;
						console.log(`Released lock`);
						await new Promise((resolve) =&gt; {
							window.addEventListener("pagehide", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
						await new Promise((resolve) =&gt;{
							window.addEventListener("pageshow", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
					}
				})();
				await promise;
				if (session == null) {
					const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
					input.type = "checkbox";
					input.autocomplete = "off";
					input.disabled = true;
					input.indeterminate = true;
					progress.replaceWith(input);
					span.textContent = "Unavailable names";
					return;
				}
				const {players, leaderboards} = session;
				const hasPlayerRoot = rootTitleContent.includes(" for player");
				const hasLeaderboardRoot = rootTitleContent.includes(" for leaderboard");
				const rootTitle = {
					element: rootTitleElement,
					contentWithIds: rootTitleContent,
					contentWithNames: hasPlayerRoot ? rootTitleContent.replace(/ for player ([0-9_a-z]+)/, ($0, $1) =&gt; {
						return ` for player ${players[$1] ?? $1}`;
					}) : hasLeaderboardRoot ? rootTitleContent.replace(/ for leaderboard ((?:l_[0-9_a-z]+-)?[0-9_a-z]+(-[0-9_a-z]+\.[0-9_a-z]+)*)/, ($0, $1) =&gt; {
						return ` for leaderboard ${leaderboards[$1] ?? $1}`;
					}) : rootTitleContent,
				};
				const hasPlayerPaths = rootTitleContent.includes(" by player");
				const hasLeaderboardPaths = rootTitleContent.includes(" by leaderboard");
				const pathTitles = pathTitleElements.map((pathTitleElement, k) =&gt; {
					const pathTitleContent = pathTitleContents[k];
					const pathTitle = {
						element: pathTitleElement,
						contentWithIds: pathTitleContent,
						contentWithNames: hasPlayerPaths ? players[pathTitleContent] ?? pathTitleContent : hasLeaderboardPaths ? leaderboards[pathTitleContent] ?? pathTitleContent : pathTitleContent,
					};
					return pathTitle;
				});
				const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
				input.type = "checkbox";
				input.autocomplete = "off";
				input.addEventListener("change", () =&gt; {
					input.disabled = true;
					if (input.checked) {
						rootTitle.element.textContent = rootTitle.contentWithNames;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithNames;
						}
					} else {
						rootTitle.element.textContent = rootTitle.contentWithIds;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithIds;
						}
					}
					input.disabled = false;
				});
				progress.replaceWith(input);
				span.textContent = "Reveal names";
			}, {
				once: true,
			});
		}
	</script>
	<foreignObject x="0" y="0" width="100%" height="100%">
		<svg viewBox="0 0 2448 3714" preserveAspectRatio="none" overflow="visible">
			<g transform="scale(1 -1)" transform-origin="center center" style="--count: 30;">
				<g>
					<rect x="0" y="0" width="2448" height="2000" tabindex="0" data-tier="diamond"><title>00:20.00 for diamond</title></rect>
					<rect x="0" y="2000" width="2448" height="1500" tabindex="0" data-tier="gold"><title>00:35.00 for gold</title></rect>
					<rect x="0" y="3500" width="2448" height="214" tabindex="0" data-tier="silver"><title>00:47.00 for silver</title></rect>
					<rect x="0" y="3714" width="2448" height="0" tabindex="0" data-tier="bronze"><title>01:10.00 for bronze</title></rect>
				</g>
				<g style="--index: 0;">
					<path d="M0,3347" tabindex="0">
						<title>18qg9ndx</title>
					</path>
					<rect x="0" y="3347" width="0" height="0"/>
					<path d="M0,3347L0,3347" tabindex="0">
						<title>00:33.47 on 2018-04-11</title>
					</path>
					<line x1="0" y1="3347" x2="2448" y2="3347"/>
					<line x1="0" y1="0" x2="0" y2="3714"/>
				</g>
				<g style="--index: 1;">
					<path d="M8,2454L89,2454L89,1916L870,1916L870,1483L966,1483L966,1384" tabindex="0">
						<title>y8dgoe98</title>
					</path>
					<rect x="8" y="1384" width="958" height="1070"/>
					<path d="M8,2454L8,2454" tabindex="0">
						<title>00:24.54 on 2018-04-19</title>
					</path>
					<line x1="0" y1="2454" x2="2448" y2="2454"/>
					<line x1="8" y1="0" x2="8" y2="3714"/>
					<path d="M89,1916L89,1916" tabindex="0">
						<title>00:19.16 on 2018-07-09</title>
					</path>
					<line x1="0" y1="1916" x2="2448" y2="1916"/>
					<line x1="89" y1="0" x2="89" y2="3714"/>
					<path d="M870,1483L870,1483" tabindex="0">
						<title>00:14.83 on 2020-08-28</title>
					</path>
					<line x1="0" y1="1483" x2="2448" y2="1483"/>
					<line x1="870" y1="0" x2="870" y2="3714"/>
					<path d="M966,1384L966,1384" tabindex="0">
						<title>00:13.84 on 2020-12-02</title>
					</path>
					<line x1="0" y1="1384" x2="2448" y2="1384"/>
					<line x1="966" y1="0" x2="966" y2="3714"/>
				</g>
				<g style="--index: 2;">
					<path d="M88,1951" tabindex="0">
						<title>qj2pq1p8</title>
					</path>
					<rect x="88" y="1951" width="0" height="0"/>
					<path d="M88,1951L88,1951" tabindex="0">
						<title>00:19.51 on 2018-07-08</title>
					</path>
					<line x1="0" y1="1951" x2="2448" y2="1951"/>
					<line x1="88" y1="0" x2="88" y2="3714"/>
				</g>
				<g style="--index: 3;">
					<path d="M764,1561L961,1561L961,1443" tabindex="0">
						<title>x356nrej</title>
					</path>
					<rect x="764" y="1443" width="197" height="118"/>
					<path d="M764,1561L764,1561" tabindex="0">
						<title>00:15.61 on 2020-05-14</title>
					</path>
					<line x1="0" y1="1561" x2="2448" y2="1561"/>
					<line x1="764" y1="0" x2="764" y2="3714"/>
					<path d="M961,1443L961,1443" tabindex="0">
						<title>00:14.43 on 2020-11-27</title>
					</path>
					<line x1="0" y1="1443" x2="2448" y2="1443"/>
					<line x1="961" y1="0" x2="961" y2="3714"/>
				</g>
				<g style="--index: 4;">
					<path d="M772,1485" tabindex="0">
						<title>8rp1o2qj</title>
					</path>
					<rect x="772" y="1485" width="0" height="0"/>
					<path d="M772,1485L772,1485" tabindex="0">
						<title>00:14.85 on 2020-05-22</title>
					</path>
					<line x1="0" y1="1485" x2="2448" y2="1485"/>
					<line x1="772" y1="0" x2="772" y2="3714"/>
				</g>
				<g style="--index: 5;">
					<path d="M955,1609L986,1609L986,1439" tabindex="0">
						<title>x7q00668</title>
					</path>
					<rect x="955" y="1439" width="31" height="170"/>
					<path d="M955,1609L955,1609" tabindex="0">
						<title>00:16.09 on 2020-11-21</title>
					</path>
					<line x1="0" y1="1609" x2="2448" y2="1609"/>
					<line x1="955" y1="0" x2="955" y2="3714"/>
					<path d="M986,1439L986,1439" tabindex="0">
						<title>00:14.39 on 2020-12-22</title>
					</path>
					<line x1="0" y1="1439" x2="2448" y2="1439"/>
					<line x1="986" y1="0" x2="986" y2="3714"/>
				</g>
				<g style="--index: 6;">
					<path d="M955,1452L1061,1452L1061,1364L1527,1364L1527,1336" tabindex="0">
						<title>j2yr9lp8</title>
					</path>
					<rect x="955" y="1336" width="572" height="116"/>
					<path d="M955,1452L955,1452" tabindex="0">
						<title>00:14.52 on 2020-11-21</title>
					</path>
					<line x1="0" y1="1452" x2="2448" y2="1452"/>
					<line x1="955" y1="0" x2="955" y2="3714"/>
					<path d="M1061,1364L1061,1364" tabindex="0">
						<title>00:13.64 on 2021-03-07</title>
					</path>
					<line x1="0" y1="1364" x2="2448" y2="1364"/>
					<line x1="1061" y1="0" x2="1061" y2="3714"/>
					<path d="M1527,1336L1527,1336" tabindex="0">
						<title>00:13.36 on 2022-06-16</title>
					</path>
					<line x1="0" y1="1336" x2="2448" y2="1336"/>
					<line x1="1527" y1="0" x2="1527" y2="3714"/>
				</g>
				<g style="--index: 7;">
					<path d="M958,1614" tabindex="0">
						<title>jn3kw0wx</title>
					</path>
					<rect x="958" y="1614" width="0" height="0"/>
					<path d="M958,1614L958,1614" tabindex="0">
						<title>00:16.14 on 2020-11-24</title>
					</path>
					<line x1="0" y1="1614" x2="2448" y2="1614"/>
					<line x1="958" y1="0" x2="958" y2="3714"/>
				</g>
				<g style="--index: 8;">
					<path d="M959,1473" tabindex="0">
						<title>j0np7or8</title>
					</path>
					<rect x="959" y="1473" width="0" height="0"/>
					<path d="M959,1473L959,1473" tabindex="0">
						<title>00:14.73 on 2020-11-25</title>
					</path>
					<line x1="0" y1="1473" x2="2448" y2="1473"/>
					<line x1="959" y1="0" x2="959" y2="3714"/>
				</g>
				<g style="--index: 9;">
					<path d="M961,1450" tabindex="0">
						<title>xkon93k8</title>
					</path>
					<rect x="961" y="1450" width="0" height="0"/>
					<path d="M961,1450L961,1450" tabindex="0">
						<title>00:14.50 on 2020-11-27</title>
					</path>
					<line x1="0" y1="1450" x2="2448" y2="1450"/>
					<line x1="961" y1="0" x2="961" y2="3714"/>
				</g>
				<g style="--index: 10;">
					<path d="M980,1414L985,1414L985,1370" tabindex="0">
						<title>0jmw6wex</title>
					</path>
					<rect x="980" y="1370" width="5" height="44"/>
					<path d="M980,1414L980,1414" tabindex="0">
						<title>00:14.14 on 2020-12-16</title>
					</path>
					<line x1="0" y1="1414" x2="2448" y2="1414"/>
					<line x1="980" y1="0" x2="980" y2="3714"/>
					<path d="M985,1370L985,1370" tabindex="0">
						<title>00:13.70 on 2020-12-21</title>
					</path>
					<line x1="0" y1="1370" x2="2448" y2="1370"/>
					<line x1="985" y1="0" x2="985" y2="3714"/>
				</g>
				<g style="--index: 11;">
					<path d="M1163,2987" tabindex="0">
						<title>x7mk3z6x</title>
					</path>
					<rect x="1163" y="2987" width="0" height="0"/>
					<path d="M1163,2987L1163,2987" tabindex="0">
						<title>00:29.87 on 2021-06-17</title>
					</path>
					<line x1="0" y1="2987" x2="2448" y2="2987"/>
					<line x1="1163" y1="0" x2="1163" y2="3714"/>
				</g>
				<g style="--index: 12;">
					<path d="M1434,3714" tabindex="0">
						<title>jpo3e9y8</title>
					</path>
					<rect x="1434" y="3714" width="0" height="0"/>
					<path d="M1434,3714L1434,3714" tabindex="0">
						<title>00:37.14 on 2022-03-15</title>
					</path>
					<line x1="0" y1="3714" x2="2448" y2="3714"/>
					<line x1="1434" y1="0" x2="1434" y2="3714"/>
				</g>
				<g style="--index: 13;">
					<path d="M1526,1344L1537,1344L1537,1336" tabindex="0">
						<title>xk3m6d68</title>
					</path>
					<rect x="1526" y="1336" width="11" height="8"/>
					<path d="M1526,1344L1526,1344" tabindex="0">
						<title>00:13.44 on 2022-06-15</title>
					</path>
					<line x1="0" y1="1344" x2="2448" y2="1344"/>
					<line x1="1526" y1="0" x2="1526" y2="3714"/>
					<path d="M1537,1336L1537,1336" tabindex="0">
						<title>00:13.36 on 2022-06-26</title>
					</path>
					<line x1="0" y1="1336" x2="2448" y2="1336"/>
					<line x1="1537" y1="0" x2="1537" y2="3714"/>
				</g>
				<g style="--index: 14;">
					<path d="M1609,1367L1800,1367L1800,1332L1809,1332L1809,1328" tabindex="0">
						<title>jn2m23wj</title>
					</path>
					<rect x="1609" y="1328" width="200" height="39"/>
					<path d="M1609,1367L1609,1367" tabindex="0">
						<title>00:13.67 on 2022-09-06</title>
					</path>
					<line x1="0" y1="1367" x2="2448" y2="1367"/>
					<line x1="1609" y1="0" x2="1609" y2="3714"/>
					<path d="M1800,1332L1800,1332" tabindex="0">
						<title>00:13.32 on 2023-03-16</title>
					</path>
					<line x1="0" y1="1332" x2="2448" y2="1332"/>
					<line x1="1800" y1="0" x2="1800" y2="3714"/>
					<path d="M1809,1328L1809,1328" tabindex="0">
						<title>00:13.28 on 2023-03-25</title>
					</path>
					<line x1="0" y1="1328" x2="2448" y2="1328"/>
					<line x1="1809" y1="0" x2="1809" y2="3714"/>
				</g>
				<g style="--index: 15;">
					<path d="M1704,1763" tabindex="0">
						<title>8g0ezgyx</title>
					</path>
					<rect x="1704" y="1763" width="0" height="0"/>
					<path d="M1704,1763L1704,1763" tabindex="0">
						<title>00:17.63 on 2022-12-10</title>
					</path>
					<line x1="0" y1="1763" x2="2448" y2="1763"/>
					<line x1="1704" y1="0" x2="1704" y2="3714"/>
				</g>
				<g style="--index: 16;">
					<path d="M1705,1707" tabindex="0">
						<title>8lonqn28</title>
					</path>
					<rect x="1705" y="1707" width="0" height="0"/>
					<path d="M1705,1707L1705,1707" tabindex="0">
						<title>00:17.07 on 2022-12-11</title>
					</path>
					<line x1="0" y1="1707" x2="2448" y2="1707"/>
					<line x1="1705" y1="0" x2="1705" y2="3714"/>
				</g>
				<g style="--index: 17;">
					<path d="M1749,3522" tabindex="0">
						<title>8ewm6dd8</title>
					</path>
					<rect x="1749" y="3522" width="0" height="0"/>
					<path d="M1749,3522L1749,3522" tabindex="0">
						<title>00:35.22 on 2023-01-24</title>
					</path>
					<line x1="0" y1="3522" x2="2448" y2="3522"/>
					<line x1="1749" y1="0" x2="1749" y2="3714"/>
				</g>
				<g style="--index: 18;">
					<path d="M1820,1620" tabindex="0">
						<title>j20zyvpx</title>
					</path>
					<rect x="1820" y="1620" width="0" height="0"/>
					<path d="M1820,1620L1820,1620" tabindex="0">
						<title>00:16.20 on 2023-04-05</title>
					</path>
					<line x1="0" y1="1620" x2="2448" y2="1620"/>
					<line x1="1820" y1="0" x2="1820" y2="3714"/>
				</g>
				<g style="--index: 19;">
					<path d="M2121,1622" tabindex="0">
						<title>jokvnml8</title>
					</path>
					<rect x="2121" y="1622" width="0" height="0"/>
					<path d="M2121,1622L2121,1622" tabindex="0">
						<title>00:16.22 on 2024-01-31</title>
					</path>
					<line x1="0" y1="1622" x2="2448" y2="1622"/>
					<line x1="2121" y1="0" x2="2121" y2="3714"/>
				</g>
				<g style="--index: 20;">
					<path d="M2212,1664" tabindex="0">
						<title>j46k93w8</title>
					</path>
					<rect x="2212" y="1664" width="0" height="0"/>
					<path d="M2212,1664L2212,1664" tabindex="0">
						<title>00:16.64 on 2024-05-01</title>
					</path>
					<line x1="0" y1="1664" x2="2448" y2="1664"/>
					<line x1="2212" y1="0" x2="2212" y2="3714"/>
				</g>
				<g style="--index: 21;">
					<path d="M2213,2858" tabindex="0">
						<title>j465mqd8</title>
					</path>
					<rect x="2213" y="2858" width="0" height="0"/>
					<path d="M2213,2858L2213,2858" tabindex="0">
						<title>00:28.58 on 2024-05-02</title>
					</path>
					<line x1="0" y1="2858" x2="2448" y2="2858"/>
					<line x1="2213" y1="0" x2="2213" y2="3714"/>
				</g>
				<g style="--index: 22;">
					<path d="M2222,1566" tabindex="0">
						<title>8dpl6o58</title>
					</path>
					<rect x="2222" y="1566" width="0" height="0"/>
					<path d="M2222,1566L2222,1566" tabindex="0">
						<title>00:15.66 on 2024-05-11</title>
					</path>
					<line x1="0" y1="1566" x2="2448" y2="1566"/>
					<line x1="2222" y1="0" x2="2222" y2="3714"/>
				</g>
				<g style="--index: 23;">
					<path d="M2260,1506L2309,1506L2309,1390" tabindex="0">
						<title>8v0mryvx</title>
					</path>
					<rect x="2260" y="1390" width="49" height="116"/>
					<path d="M2260,1506L2260,1506" tabindex="0">
						<title>00:15.06 on 2024-06-18</title>
					</path>
					<line x1="0" y1="1506" x2="2448" y2="1506"/>
					<line x1="2260" y1="0" x2="2260" y2="3714"/>
					<path d="M2309,1390L2309,1390" tabindex="0">
						<title>00:13.90 on 2024-08-06</title>
					</path>
					<line x1="0" y1="1390" x2="2448" y2="1390"/>
					<line x1="2309" y1="0" x2="2309" y2="3714"/>
				</g>
				<g style="--index: 24;">
					<path d="M2271,1597" tabindex="0">
						<title>j0gyekmx</title>
					</path>
					<rect x="2271" y="1597" width="0" height="0"/>
					<path d="M2271,1597L2271,1597" tabindex="0">
						<title>00:15.97 on 2024-06-29</title>
					</path>
					<line x1="0" y1="1597" x2="2448" y2="1597"/>
					<line x1="2271" y1="0" x2="2271" y2="3714"/>
				</g>
				<g style="--index: 25;">
					<path d="M2317,1929" tabindex="0">
						<title>x7zwrnq8</title>
					</path>
					<rect x="2317" y="1929" width="0" height="0"/>
					<path d="M2317,1929L2317,1929" tabindex="0">
						<title>00:19.29 on 2024-08-14</title>
					</path>
					<line x1="0" y1="1929" x2="2448" y2="1929"/>
					<line x1="2317" y1="0" x2="2317" y2="3714"/>
				</g>
				<g style="--index: 26;">
					<path d="M2327,1371" tabindex="0">
						<title>x3wdlvkj</title>
					</path>
					<rect x="2327" y="1371" width="0" height="0"/>
					<path d="M2327,1371L2327,1371" tabindex="0">
						<title>00:13.71 on 2024-08-24</title>
					</path>
					<line x1="0" y1="1371" x2="2448" y2="1371"/>
					<line x1="2327" y1="0" x2="2327" y2="3714"/>
				</g>
				<g style="--index: 27;">
					<path d="M2371,1508" tabindex="0">
						<title>8w3l21qj</title>
					</path>
					<rect x="2371" y="1508" width="0" height="0"/>
					<path d="M2371,1508L2371,1508" tabindex="0">
						<title>00:15.08 on 2024-10-07</title>
					</path>
					<line x1="0" y1="1508" x2="2448" y2="1508"/>
					<line x1="2371" y1="0" x2="2371" y2="3714"/>
				</g>
				<g style="--index: 28;">
					<path d="M2447,1910" tabindex="0">
						<title>j0wm7v98</title>
					</path>
					<rect x="2447" y="1910" width="0" height="0"/>
					<path d="M2447,1910L2447,1910" tabindex="0">
						<title>00:19.10 on 2024-12-22</title>
					</path>
					<line x1="0" y1="1910" x2="2448" y2="1910"/>
					<line x1="2447" y1="0" x2="2447" y2="3714"/>
				</g>
				<g style="--index: 29;">
					<path d="M2448,1493" tabindex="0">
						<title>8gok6dpx</title>
					</path>
					<rect x="2448" y="1493" width="0" height="0"/>
					<path d="M2448,1493L2448,1493" tabindex="0">
						<title>00:14.93 on 2024-12-23</title>
					</path>
					<line x1="0" y1="1493" x2="2448" y2="1493"/>
					<line x1="2448" y1="0" x2="2448" y2="3714"/>
				</g>
			</g>
		</svg>
	</foreignObject>
</svg>
