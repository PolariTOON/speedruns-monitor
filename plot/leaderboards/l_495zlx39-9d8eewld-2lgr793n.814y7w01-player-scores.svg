<svg xmlns="http://www.w3.org/2000/svg" lang="en">
	<title>Score by player for leaderboard l_495zlx39-9d8eewld-2lgr793n.814y7w01</title>
	<metadata>
		<meta xmlns="http://www.w3.org/1999/xhtml" charset="utf-8" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="viewport" content="width=device-width" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="color-scheme" content="dark light" />
	</metadata>
	<style>
		*,
		::before,
		::after {
			box-sizing: border-box;
		}
		:root {
			background: var(--canvas-background);
			color: var(--canvas-foreground);
			fill: var(--canvas-background);
			stroke: var(--canvas-foreground);
			stroke-linejoin: round;
			stroke-linecap: round;
		}
		foreignObject {
			pointer-events: none;
		}
		foreignObject::before,
		foreignObject::after {
			content: "";
			position: absolute;
			z-index: 1;
			left: 20px;
			bottom: 20px;
			pointer-events: auto;
		}
		foreignObject::before {
			width: calc(100% - 40px);
			height: calc(20px + var(--date-size) * 1px);
		}
		foreignObject::after {
			width: calc(20px + var(--value-size) * 1px);
			height: calc(100% - 40px);
		}
		foreignObject &gt; div {
			position: absolute;
			z-index: 4;
			right: 0;
			top: 0;
			margin: 20px;
			border: 1px solid var(--canvas-foreground);
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			transition: opacity 1s;
			pointer-events: auto;
		}
		foreignObject:is(:hover, :focus-within) &gt; div:not(:hover, :focus-within) {
			opacity: 0;
			pointer-events: none;
		}
		foreignObject &gt; div &gt; p {
			margin: 0;
		}
		label {
			display: table;
			border-collapse: separate;
			border-spacing: 10px;
			direction: rtl;
		}
		progress,
		input[type="checkbox"] {
			display: table-cell;
			width: 16px;
			height: 16px;
			margin: 2px;
			accent-color: var(--canvas-foreground);
			vertical-align: top;
			direction: ltr;
		}
		progress + span,
		input[type="checkbox"] + span {
			display: table-cell;
			vertical-align: top;
			direction: ltr;
		}
		input[type="checkbox"]:not(:disabled):is(:hover, :focus-within) + span {
			text-decoration: underline;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			position: absolute;
			z-index: 2;
			margin: 0;
			padding: 10px;
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			font-weight: bold;
			pointer-events: auto;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg + svg {
			border-top: 1px solid #0000;
			border-bottom: 1px solid var(--canvas-foreground);
		}
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px dashed #0000;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg {
			width: calc(20px + var(--date-size) * 1px);
			height: 42px;
			bottom: 20px;
		}
		foreignObject &gt; svg:first-of-type {
			left: calc(40px + var(--value-size) * 1px);
			transform: rotate(90deg) translate(-100%, 0);
			transform-origin: left bottom;
		}
		foreignObject &gt; svg:first-of-type + svg {
			right: 20px;
			transform: rotate(90deg) translate(0, 100%);
			transform-origin: right bottom;
		}
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			width: calc(20px + var(--value-size) * 1px);
			height: 42px;
			left: 20px;
		}
		foreignObject &gt; svg:first-of-type + svg + svg {
			bottom: calc(40px + var(--date-size) * 1px);
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			top: 20px;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text {
			fill: var(--canvas-foreground);
			stroke: none;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text {
			cursor: vertical-text;
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg + svg {
			position: relative;
			z-index: 3;
			width: calc(100% - 60px - var(--value-size) * 1px);
			height: calc(100% - 60px - var(--date-size) * 1px);
			margin: 20px 20px calc(40px + var(--date-size) * 1px) calc(40px + var(--value-size) * 1px);
			border-left: 1px solid var(--canvas-foreground);
			border-right: 1px dashed var(--canvas-foreground);
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px solid var(--canvas-foreground);
			background: var(--canvas-background);
			pointer-events: auto;
		}
		g &gt; rect {
			vector-effect: non-scaling-stroke;
			fill: var(--highlighted);
			stroke: none;
		}
		g &gt; rect[tabindex] {
			fill: var(--tier, #0000);
			cursor: help;
		}
		g &gt; rect[tabindex][data-tier="diamond"] {
			--tier: var(--diamond);
		}
		g &gt; rect[tabindex][data-tier="gold"] {
			--tier: var(--gold);
		}
		g &gt; rect[tabindex][data-tier="silver"] {
			--tier: var(--silver);
		}
		g &gt; rect[tabindex][data-tier="bronze"] {
			--tier: var(--bronze);
		}
		g &gt; path[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: hsl(calc(var(--index) / var(--count) * 360), 50%, 50%);
			cursor: help;
		}
		g:is(:hover, :focus-within) &gt; path[tabindex] {
			stroke: var(--canvas-foreground);
		}
		g &gt; path[tabindex]:is(:hover, :focus-within) {
			outline: 0;
		}
		g &gt; path[tabindex]:first-of-type {
			stroke-width: 2;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) {
			stroke-width: 4;
		}
		g &gt; path[tabindex]:first-of-type:not(:last-of-type) {
			stroke-dasharray: 4 8;
		}
		g &gt; path[tabindex]:first-of-type + rect {
			fill: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect {
			fill: var(--highlighted);
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] {
			stroke-width: 8;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) {
			stroke-width: 16;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line + line {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			stroke-width: 2;
			stroke-dasharray: 4 8;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line + line {
			stroke: var(--faded);
		}
		@media (prefers-color-scheme: dark) {
			:root {
				--canvas-background: #000;
				--canvas-foreground: #ccc;
				--diamond: #0363;
				--gold: #6303;
				--silver: #3633;
				--bronze: #6363;
				--highlighted: #6663;
				--faded: #9993;
			}
		}
		@media (prefers-color-scheme: light) {
			:root {
				--canvas-background: #fff;
				--canvas-foreground: #333;
				--diamond: #9cf3;
				--gold: #fc93;
				--silver: #9c93;
				--bronze: #c9c3;
				--highlighted: #9993;
				--faded: #6663;
			}
		}
	</style>
	<script>
		"use strict";
		{
			const script = document.currentScript;
			const documentUrl = location.href;
			const scope = new URL("../../", documentUrl).pathname;
			const playersKey = `${scope}#players`;
			const leaderboardsKey = `${scope}#leaderboards`;
			const sessionKey = `${scope}#session`;
			const lockKey = `${scope}#lock`;
			async function importDataScript(dataScriptUrl, signal) {
				signal.throwIfAborted();
				if (documentUrl.protocol !== "file:") {
					const response = await fetch(dataScriptUrl, {
						signal,
					});
					if (!response.ok) {
						throw new Error(response.statusText);
					}
					const data = await response.json();
					return data;
				}
				return await new Promise((resolve, reject) =&gt; {
					const name = `callback${Math.random() * 2 ** 53}`;
					let called = false;
					let data = null;
					function callback(value) {
						if (!called) {
							called = true;
							data = value;
						}
					}
					window[name] = callback;
					const dataScript = document.createElementNS("http://www.w3.org/2000/svg", "script");
					dataScript.href = `${dataScriptUrl}&amp;callback=${name}`;
					function handleAbort(event) {
						delete window[name];
						dataScript.removeEventListener("error", handleError);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const reason = signal.reason;
						reject(reason);
					}
					function handleError(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const error = event.error;
						reject(error);
					}
					function handleLoad(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("error", handleError);
						dataScript.remove();
						resolve(data);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					dataScript.addEventListener("error", handleError, {
						once: true,
					});
					dataScript.addEventListener("load", handleLoad, {
						once: true,
					});
					script.after(dataScript);
				});
			}
			async function waitForTimeout(delay, signal) {
				signal.throwIfAborted();
				return await new Promise((resolve, reject) =&gt; {
					let timeout = null;
					function handleAbort() {
						clearTimeout(timeout);
						const reason = signal.reason;
						reject(reason);
					}
					function handleTimeout() {
						signal.removeEventListener("abort", handleAbort);
						resolve(delay);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					timeout = setTimeout(handleTimeout, delay);
				});
			}
			window.addEventListener("pageshow", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully restored page from cache`);
				} else {
					console.log(`Unsuccessfully restored page from cache`);
				}
			});
			window.addEventListener("pagehide", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully saved page to cache`);
				} else {
					console.log(`Unsuccessfully saved page to cache`);
				}
			});
			window.addEventListener("pageshow", async (event) =&gt; {
				const rootTitleElement = document.querySelector("title");
				const rootTitleContent = rootTitleElement.textContent;
				const pathTitleElements = Array.from(document.querySelectorAll("g &gt; path[tabindex]:first-of-type &gt; title"));
				const pathTitleContents = pathTitleElements.map((pathTitleElement) =&gt; {
					const pathTitleContent = pathTitleElement.textContent;
					return pathTitleContent;
				});
				const foreignObject = document.querySelector("foreignObject");
				const div = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
				div.dir = "ltr";
				const p = document.createElementNS("http://www.w3.org/1999/xhtml", "p");
				const label = document.createElementNS("http://www.w3.org/1999/xhtml", "label");
				const progress = document.createElementNS("http://www.w3.org/1999/xhtml", "progress");
				label.append(progress);
				const span = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
				span.textContent = "Loading names";
				label.append(span);
				p.append(label);
				div.append(p);
				foreignObject.prepend(div);
				let lock = false;
				let session = null;
				const broadcastChannel = new BroadcastChannel(sessionKey);
				const abortController = new AbortController();
				const signal = abortController.signal;
				const abort = abortController.abort.bind(abortController);
				const {promise, resolve} = Promise.withResolvers();
				broadcastChannel.addEventListener("message", (event) =&gt; {
					const data = event.data;
					const type = data.type;
					switch (type) {
						case "request": {
							if (lock &amp;&amp; signal.aborted) {
								broadcastChannel.postMessage({
									type: "response",
									session,
								});
							}
							break;
						}
						case "response": {
							if (!signal.aborted) {
								session = data.session;
								if (session != null) {
									const {players, leaderboards} = session;
									try {
										const cachedPlayers = JSON.stringify(players);
										const cachedLeaderboards = JSON.stringify(leaderboards);
										sessionStorage.setItem(playersKey, cachedPlayers);
										sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
									} catch {}
									console.log(`Successfully loaded names from peer`);
									abort();
									resolve();
								} else {
									console.log(`Unsuccessfully loaded names from peer`);
									abort();
									resolve();
								}
							}
							break;
						}
					}
				});
				try {
					const cachedPlayers = sessionStorage.getItem(playersKey);
					const cachedLeaderboards = sessionStorage.getItem(leaderboardsKey);
					if (cachedPlayers == null || cachedLeaderboards == null) {
						throw new Error();
					}
					const players = JSON.parse(cachedPlayers);
					const leaderboards = JSON.parse(cachedLeaderboards);
					session = {players, leaderboards};
				} catch {}
				if (session != null) {
					broadcastChannel.postMessage({
						type: "response",
						session,
					});
					console.log(`Successfully loaded names from local`);
					abort();
					resolve();
				} else {
					broadcastChannel.postMessage({
						type: "request",
					});
					console.log(`Unsuccessfully loaded names from local`);
				}
				(async () =&gt; {
					for (;;) {
						await navigator.locks.request(lockKey, async () =&gt; {
							lock = true;
							console.log(`Acquired lock`);
							if (!signal.aborted) {
								try {
									const players = Object.create(null);
									const leaderboards = Object.create(null);
									const games = ["9d3rrxyd", "w6jl2ned"];
									for (const gameId of games) {
										const {data} = await importDataScript(`https://www.speedrun.com/api/v1/games/${gameId}?embed=categories,levels,variables`, signal);
										const versions = data.variables.data.find((variable) =&gt; {
											return variable.name === "Version";
										});
										const levels = Object.fromEntries(data.levels.data.map((level) =&gt; {
											return [level.id, level];
										}));
										const categories = Object.fromEntries(data.categories.data.map((category) =&gt; {
											return [category.id, category];
										}));
										const variables = Object.fromEntries(data.variables.data.map((variable) =&gt; {
											return [variable.id, variable];
										}));
										console.log(`Got game`);
										await waitForTimeout(800, signal);
										const slice = 200;
										for (let offset = 0;; offset += slice) {
											const {data, pagination} = await importDataScript(`https://www.speedrun.com/api/v1/runs?game=${gameId}&amp;orderby=date&amp;direction=asc&amp;embed=players&amp;offset=${offset}&amp;max=${slice}`, signal);
											const {size} = pagination;
											if (size === 0) {
												break;
											}
											for (const run of data) {
												const status = run.status.status;
												if (status == null || status === "new") {
													continue;
												}
												const player = run.players.data[0].rel === "user" ? run.players.data[0].id : "814p2558";
												const playerName = run.players.data[0].rel === "user" ? run.players.data[0].names.international : "anonymous";
												players[player] ??= playerName;
												const level = run.level;
												const category = run.category;
												const values = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return `-${variable}.${value}`;
												});
												const leaderboard = `${level != null ? `l_${level}-` : ""}${category}${values.join("")}`;
												const levelName = run.level != null ? levels[run.level]?.name ?? null : null;
												const categoryName = categories[run.category]?.name ?? null;
												const valueNames = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return variables[variable]?.values.values[value]?.label ?? null;
												}).filter((valueName) =&gt; {
													return valueName != null;
												});
												const leaderboardName = `${levelName != null ? `${levelName}: ` : ""}${categoryName ?? ""}${values.length !== 0 ? ` - ${valueNames.join(", ")}` : ""}`;
												leaderboards[leaderboard] ??= leaderboardName;
											}
											console.log(`Got runs ${offset}-${offset + size - 1}`);
											await waitForTimeout(800, signal);
										}
									}
									session = {players, leaderboards};
								} catch {}
								if (!signal.aborted) {
									if (session != null) {
										const {players, leaderboards} = session;
										try {
											const cachedPlayers = JSON.stringify(players);
											const cachedLeaderboards = JSON.stringify(leaderboards);
											sessionStorage.setItem(playersKey, cachedPlayers);
											sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
										} catch {}
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Successfully loaded names from remote`);
										abort();
										resolve();
									} else {
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Unsuccessfully loaded names from remote`);
										abort();
										resolve();
									}
								}
							}
							await new Promise((resolve) =&gt; {
								window.addEventListener("beforeunload", () =&gt; {
									resolve();
								}, {
									once: true,
								});
							});
						});
						lock = false;
						console.log(`Released lock`);
						await new Promise((resolve) =&gt; {
							window.addEventListener("pagehide", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
						await new Promise((resolve) =&gt;{
							window.addEventListener("pageshow", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
					}
				})();
				await promise;
				if (session == null) {
					const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
					input.type = "checkbox";
					input.autocomplete = "off";
					input.disabled = true;
					input.indeterminate = true;
					progress.replaceWith(input);
					span.textContent = "Unavailable names";
					return;
				}
				const {players, leaderboards} = session;
				const hasPlayerRoot = rootTitleContent.includes(" for player");
				const hasLeaderboardRoot = rootTitleContent.includes(" for leaderboard");
				const rootTitle = {
					element: rootTitleElement,
					contentWithIds: rootTitleContent,
					contentWithNames: hasPlayerRoot ? rootTitleContent.replace(/ for player ([0-9_a-z]+)/, ($0, $1) =&gt; {
						return ` for player ${players[$1] ?? $1}`;
					}) : hasLeaderboardRoot ? rootTitleContent.replace(/ for leaderboard ((?:l_[0-9_a-z]+-)?[0-9_a-z]+(-[0-9_a-z]+\.[0-9_a-z]+)*)/, ($0, $1) =&gt; {
						return ` for leaderboard ${leaderboards[$1] ?? $1}`;
					}) : rootTitleContent,
				};
				const hasPlayerPaths = rootTitleContent.includes(" by player");
				const hasLeaderboardPaths = rootTitleContent.includes(" by leaderboard");
				const pathTitles = pathTitleElements.map((pathTitleElement, k) =&gt; {
					const pathTitleContent = pathTitleContents[k];
					const pathTitle = {
						element: pathTitleElement,
						contentWithIds: pathTitleContent,
						contentWithNames: hasPlayerPaths ? players[pathTitleContent] ?? pathTitleContent : hasLeaderboardPaths ? leaderboards[pathTitleContent] ?? pathTitleContent : pathTitleContent,
					};
					return pathTitle;
				});
				const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
				input.type = "checkbox";
				input.autocomplete = "off";
				input.addEventListener("change", () =&gt; {
					input.disabled = true;
					if (input.checked) {
						rootTitle.element.textContent = rootTitle.contentWithNames;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithNames;
						}
					} else {
						rootTitle.element.textContent = rootTitle.contentWithIds;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithIds;
						}
					}
					input.disabled = false;
				});
				progress.replaceWith(input);
				span.textContent = "Reveal names";
			}, {
				once: true,
			});
		}
	</script>
	<script>
		"use strict";
		{
			document.addEventListener("DOMContentLoaded", (event) =&gt; {
				const minDateText = document.querySelector("foreignObject &gt; svg:first-of-type &gt; text");
				const maxDateText = document.querySelector("foreignObject &gt; svg:first-of-type + svg &gt; text");
				const startX = Math.round(Date.parse(minDateText.textContent) / 86400000);
				function xToDate(x) {
					const datetime = new Date((startX + x) * 86400000);
					const year = `${datetime.getUTCFullYear()}`.padStart(4, "0");
					const month = `${datetime.getUTCMonth() + 1}`.padStart(2, "0");
					const day = `${datetime.getUTCDate()}`.padStart(2, "0");
					const date = `${year}-${month}-${day}`;
					const size = date.length * 10;
					return {date, size};
				}
				function setMinDate(x) {
					const {date, size} = xToDate(Math.floor(x));
					minDateText.textLength.baseVal.value = size;
					minDateText.textContent = date;
				}
				function setMaxDate(x) {
					const {date, size} = xToDate(Math.ceil(x));
					maxDateText.textLength.baseVal.value = size;
					maxDateText.textContent = date;
				}
				const minValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg &gt; text");
				const maxValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text");
				const timed = minValueText.textContent.includes(":");
				function yToValue(y) {
					if (timed) {
						const minutes = `${(y - y % 6000) / 6000}`.padStart(2, "0");
						const seconds = `${(y - y % 100) / 100 % 60}`.padStart(2, "0");
						const centiseconds = `${y % 100}`.padStart(2, "0");
						const value = `${minutes}:${seconds}.${centiseconds}`;
						const size = value.length * 10;
						return {value, size};
					} else {
						const value = `${y}`;
						const size = value.length * 10;
						return {value, size};
					}
				}
				function setMinValue(y) {
					const {value, size} = yToValue(Math.floor(y));
					minValueText.textLength.baseVal.value = size;
					minValueText.textContent = value;
				}
				function setMaxValue(y) {
					const {value, size} = yToValue(Math.ceil(y));
					maxValueText.textLength.baseVal.value = size;
					maxValueText.textContent = value;
				}
				const svg = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg + svg");
				svg.tabIndex = -1;
				svg.style.setProperty("outline", "0");
				if (CSS.supports("overflow-clip-margin", "8px")) {
					svg.style.setProperty("overflow", "clip");
					svg.style.setProperty("overflow-clip-margin", "8px");
				}
				svg.style.setProperty("touch-action", "none");
				const {x: baseX, y: baseY, width: baseWidth, height: baseHeight} = svg.viewBox.baseVal;
				let pointerCount = 0;
				const pointers = Object.create(null);
				const xPointerIds = [];
				const yPointerIds = [];
				let x = null;
				let y = null;
				let width = null;
				let height = null;
				svg.addEventListener("pointerdown", (event) =&gt; {
					const {pointerId} = event;
					if (pointerId in pointers) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.setPointerCapture(pointerId);
					++pointerCount;
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId] = {
						offsetX,
						offsetY,
					};
					xPointerIds.splice(xPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetX &lt;= offsetX;
					}) + 1, 0, pointerId);
					yPointerIds.splice(yPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetY &lt;= offsetY;
					}) + 1, 0, pointerId);
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					width = Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth);
					height = Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight);
					x = Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX);
					y = Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY);
				});
				svg.addEventListener("pointerup", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.releasePointerCapture(pointerId);
					--pointerCount;
					delete pointers[pointerId];
					xPointerIds.splice(xPointerIds.lastIndexOf(pointerId), 1);
					yPointerIds.splice(yPointerIds.lastIndexOf(pointerId), 1);
					const minOffsetX = pointerCount !== 0 ? pointers[xPointerIds[0]].offsetX : null;
					const minOffsetY = pointerCount !== 0 ? pointers[yPointerIds[0]].offsetY : null;
					const maxClientWidth = pointerCount !== 0 ? pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX : null;
					const maxClientHeight = pointerCount !== 0 ? pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY : null;
					width = pointerCount !== 0 ? Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth) : null;
					height = pointerCount !== 0 ? Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight) : null;
					x = pointerCount !== 0 ? Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX) : null;
					y = pointerCount !== 0 ? Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY) : null;
				});
				svg.addEventListener("pointermove", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					event.preventDefault();
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId].offsetX = offsetX;
					pointers[pointerId].offsetY = offsetY;
					const oldXIndex = xPointerIds.lastIndexOf(pointerId);
					let newXIndex = oldXIndex;
					while (newXIndex &gt; 0 &amp;&amp; pointers[xPointerIds[newXIndex - 1]].offsetX &gt; offsetX) {
						--newXIndex;
					}
					xPointerIds.copyWithin(newXIndex + 1, newXIndex, oldXIndex);
					xPointerIds[newXIndex] = pointerId;
					while (newXIndex &lt; pointerCount - 1 &amp;&amp; pointers[xPointerIds[newXIndex + 1]].offsetX &lt; offsetX) {
						++newXIndex;
					}
					xPointerIds.copyWithin(oldXIndex, oldXIndex + 1, newXIndex + 1);
					xPointerIds[newXIndex] = pointerId;
					const oldYIndex = yPointerIds.lastIndexOf(pointerId);
					let newYIndex = oldYIndex;
					while (newYIndex &gt; 0 &amp;&amp; pointers[yPointerIds[newYIndex - 1]].offsetY &gt; offsetY) {
						--newYIndex;
					}
					yPointerIds.copyWithin(newYIndex + 1, newYIndex, oldYIndex);
					yPointerIds[newYIndex] = pointerId;
					while (newYIndex &lt; pointerCount - 1 &amp;&amp; pointers[yPointerIds[newYIndex + 1]].offsetY &lt; offsetY) {
						++newYIndex;
					}
					yPointerIds.copyWithin(oldYIndex, oldYIndex + 1, newYIndex + 1);
					yPointerIds[newYIndex] = pointerId;
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					animWidth = width === 0 ? animWidth : maxClientWidth === 0 ? baseWidth : Math.min(svg.clientWidth / maxClientWidth * width, baseWidth);
					animHeight = height === 0 ? animHeight : maxClientHeight === 0 ? baseHeight : Math.min(svg.clientHeight / maxClientHeight * height, baseHeight);
					animX = Math.max(Math.min(x - minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(y - minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
				const zoomIntensity = 1.25;
				svg.addEventListener("wheel", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					if (!ctrlKey) {
						const vectorX = (shiftKey ? event.deltaY : event.deltaX) / svg.clientWidth * animWidth;
						const vectorY = (shiftKey ? 0 : event.deltaY) / svg.clientHeight * animHeight;
						animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
						animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
						svg.viewBox.baseVal.x = animX;
						svg.viewBox.baseVal.y = animY;
						setMinDate(animX);
						setMaxDate(animX + animWidth);
						setMinValue(baseY * 2 + baseHeight - animHeight - animY);
						setMaxValue(baseY * 2 + baseHeight - animY);
						return;
					}
					const ratioX = zoomIntensity ** Math.sign(shiftKey ? event.deltaY : event.deltaX);
					const ratioY = zoomIntensity ** Math.sign(shiftKey ? 0 : event.deltaY);
					const positionX = Math.max(0, Math.min(event.offsetX / svg.clientWidth, 1)) * animWidth;
					const positionY = Math.max(0, Math.min(event.offsetY / svg.clientHeight, 1)) * animHeight;
					animWidth = Math.min(animWidth * ratioX, baseWidth);
					animHeight = Math.min(animHeight * ratioY, baseHeight);
					animX = Math.max(Math.min(animX + positionX * (1 - ratioX), baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(animY + positionY * (1 - ratioY), baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				}, {
					passive: false,
				});
				svg.addEventListener("keydown", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					switch (event.code) {
						case "Space": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "Equal":
						case "NumpadAdd":
						case "Minus":
						case "NumpadSubtract": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.code === "Minus" || event.code === "NumpadSubtract" ? zoomIntensity : 1 / zoomIntensity;
							if (!shiftKey) {
								animHeight = Math.min(animHeight * ratio, baseHeight);
								animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "Digit0":
						case "Numpad0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							if (!shiftKey) {
								animY = baseY;
								animHeight = baseHeight;
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animX = baseX;
							animWidth = baseWidth;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
					}
					switch (event.key) {
						case "ArrowRight": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = 50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowLeft": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = -50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowDown": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = 50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "End": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY + baseHeight - animHeight;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "ArrowUp": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = -50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "Home": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "PageDown":
						case "PageUp":
						case " ": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = event.key === "PageUp" || event.key === " " &amp;&amp; shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "+":
						case "-": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.key === "-" ? 1 / zoomIntensity : zoomIntensity;
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animHeight = Math.min(animHeight * ratio, baseHeight);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animX = baseX;
							animY = baseY;
							animWidth = baseWidth;
							animHeight = baseHeight;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
					}
				});
				svg.addEventListener("focusin", (event) =&gt; {
					if (!event.target.matches(":focus-visible")) {
						return;
					}
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					let {x, y, width, height} = event.target.getBBox();
					width = Math.round(width);
					height = Math.round(height);
					x = Math.round(x);
					y = baseY * 2 + baseHeight - height - Math.round(y);
					if (x + width &lt; animX) {
						animX = x;
						if (width &gt; animWidth) {
							animX += (width - animWidth) / 2;
						}
					} else if (x &gt; animX + animWidth) {
						animX = x + width - animWidth;
						if (width &gt; animWidth) {
							animX -= (width - animWidth) / 2;
						}
					}
					if (y + height &lt; animY) {
						animY = y;
						if (height &gt; animHeight) {
							animY += (height - animHeight) / 2;
						}
					} else if (y &gt; animY + animHeight) {
						animY = y + height - animHeight;
						if (height &gt; animHeight) {
							animY -= (height - animHeight) / 2;
						}
					}
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
			}, {
				once: true,
			});
		}
	</script>
	<foreignObject x="0" y="0" width="100%" height="100%" style="--date-size: 100; --value-size: 20;">
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2018-04-11</text>
		</svg>
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2025-08-30</text>
		</svg>
		<svg viewBox="0 0 20 20">
			<text x="10" y="10" dx="0" dy="2" textLength="10" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">0</text>
		</svg>
		<svg viewBox="0 0 20 20">
			<text x="10" y="10" dx="0" dy="2" textLength="20" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">74</text>
		</svg>
		<svg viewBox="0 0 2698 74" preserveAspectRatio="none" overflow="visible">
			<g transform="translate(0 74) scale(1 -1)" style="--count: 74;">
				<g>
					<rect x="0" y="0" width="2698" height="74"/>
				</g>
				<g style="--index: 0;">
					<path d="M0,0L0,0L0,1L8,1L8,1L88,1L88,1L764,1L764,1L772,1L772,1L955,1L955,1L958,1L958,1L959,1L959,1L961,1L961,1L980,1L980,1L1163,1L1163,1L1434,1L1434,2L1526,2L1526,2L1609,2L1609,2L1704,2L1704,2L1705,2L1705,2L1749,2L1749,3L1820,3L1820,3L2121,3L2121,3L2212,3L2212,3L2213,3L2213,3L2222,3L2222,3L2260,3L2260,3L2271,3L2271,3L2317,3L2317,3L2327,3L2327,3L2371,3L2371,3L2447,3L2447,3L2448,3L2448,3L2474,3L2474,3L2478,3L2478,3L2480,3L2480,3L2481,3L2481,3L2483,3L2483,3L2489,3L2489,3L2496,3L2496,3L2500,3L2500,3L2515,3L2515,3L2524,3L2524,3L2530,3L2530,3L2533,3L2533,3L2535,3L2535,3L2548,3L2548,3L2549,3L2549,3L2555,3L2555,3L2574,3L2574,3L2579,3L2579,3L2582,3L2582,3L2592,3L2592,3L2620,3L2620,3L2641,3L2641,3L2643,3L2643,3L2644,3L2644,3L2646,3L2646,3L2647,3L2647,3L2648,3L2648,3L2649,3L2649,3L2654,3L2654,3L2657,3L2657,3L2660,3L2660,3L2661,3L2661,3L2662,3L2662,3L2663,3L2663,3L2676,3L2676,3L2681,3L2681,3L2684,3L2684,3L2685,3L2685,3L2686,3L2686,3L2692,3L2692,3L2695,3L2695,3L2697,3L2697,3L2698,3L2698,3L2698,3" tabindex="0">
						<title>18qg9ndx</title>
					</path>
				</g>
				<g style="--index: 1;">
					<path d="M0,0L8,0L8,2L88,2L88,2L89,2L89,3L764,3L764,3L772,3L772,3L870,3L870,5L955,5L955,6L958,6L958,7L959,7L959,7L961,7L961,6L966,6L966,10L980,10L980,11L985,11L985,10L1061,10L1061,9L1163,9L1163,10L1434,10L1434,11L1526,11L1526,11L1609,11L1609,11L1704,11L1704,12L1705,12L1705,13L1749,13L1749,14L1820,14L1820,15L2121,15L2121,16L2212,16L2212,17L2213,17L2213,18L2222,18L2222,19L2260,19L2260,20L2271,20L2271,21L2317,21L2317,22L2327,22L2327,22L2371,22L2371,23L2447,23L2447,24L2448,24L2448,25L2474,25L2474,26L2478,26L2478,27L2480,27L2480,28L2481,28L2481,29L2483,29L2483,30L2489,30L2489,31L2496,31L2496,32L2500,32L2500,33L2515,33L2515,34L2524,34L2524,35L2530,35L2530,36L2533,36L2533,37L2535,37L2535,38L2548,38L2548,38L2549,38L2549,38L2555,38L2555,39L2574,39L2574,40L2579,40L2579,41L2582,41L2582,42L2592,42L2592,43L2620,43L2620,43L2632,43L2632,42L2641,42L2641,43L2643,43L2643,43L2644,43L2644,43L2646,43L2646,44L2647,44L2647,45L2648,45L2648,46L2649,46L2649,47L2654,47L2654,47L2657,47L2657,48L2660,48L2660,50L2661,50L2661,51L2662,51L2662,52L2663,52L2663,52L2665,52L2665,51L2676,51L2676,52L2681,52L2681,53L2684,53L2684,54L2685,54L2685,55L2686,55L2686,56L2690,56L2690,55L2692,55L2692,56L2695,56L2695,57L2697,57L2697,58L2698,58L2698,59L2698,59" tabindex="0">
						<title>y8dgoe98</title>
					</path>
				</g>
				<g style="--index: 2;">
					<path d="M0,0L88,0L88,3L89,3L89,2L764,2L764,2L772,2L772,2L955,2L955,2L958,2L958,2L959,2L959,2L961,2L961,2L980,2L980,2L1163,2L1163,3L1434,3L1434,4L1526,4L1526,4L1609,4L1609,4L1704,4L1704,4L1705,4L1705,4L1749,4L1749,5L1820,5L1820,5L2121,5L2121,5L2212,5L2212,5L2213,5L2213,6L2222,6L2222,6L2260,6L2260,6L2271,6L2271,6L2317,6L2317,6L2327,6L2327,6L2371,6L2371,6L2447,6L2447,6L2448,6L2448,6L2474,6L2474,6L2478,6L2478,6L2480,6L2480,6L2481,6L2481,6L2483,6L2483,6L2489,6L2489,6L2496,6L2496,6L2500,6L2500,6L2515,6L2515,6L2524,6L2524,6L2530,6L2530,7L2533,7L2533,7L2535,7L2535,7L2548,7L2548,7L2549,7L2549,7L2555,7L2555,7L2574,7L2574,7L2579,7L2579,7L2582,7L2582,7L2592,7L2592,7L2620,7L2620,7L2641,7L2641,7L2643,7L2643,7L2644,7L2644,7L2646,7L2646,7L2647,7L2647,7L2648,7L2648,7L2649,7L2649,7L2654,7L2654,7L2657,7L2657,7L2660,7L2660,8L2661,8L2661,8L2662,8L2662,8L2663,8L2663,8L2676,8L2676,8L2681,8L2681,8L2684,8L2684,8L2685,8L2685,8L2686,8L2686,8L2692,8L2692,8L2695,8L2695,8L2697,8L2697,8L2698,8L2698,8L2698,8" tabindex="0">
						<title>qj2pq1p8</title>
					</path>
				</g>
				<g style="--index: 3;">
					<path d="M0,0L764,0L764,4L772,4L772,4L870,4L870,3L955,3L955,4L958,4L958,5L959,5L959,5L961,5L961,10L966,10L966,9L980,9L980,9L986,9L986,8L1061,8L1061,7L1163,7L1163,8L1434,8L1434,9L1526,9L1526,9L1609,9L1609,9L1704,9L1704,10L1705,10L1705,11L1749,11L1749,12L1820,12L1820,13L2121,13L2121,14L2212,14L2212,15L2213,15L2213,16L2222,16L2222,17L2260,17L2260,18L2271,18L2271,19L2309,19L2309,18L2317,18L2317,19L2327,19L2327,19L2371,19L2371,20L2447,20L2447,21L2448,21L2448,22L2474,22L2474,23L2478,23L2478,24L2480,24L2480,25L2481,25L2481,26L2483,26L2483,27L2489,27L2489,28L2496,28L2496,29L2500,29L2500,30L2515,30L2515,31L2524,31L2524,32L2530,32L2530,33L2533,33L2533,34L2535,34L2535,34L2548,34L2548,34L2549,34L2549,34L2555,34L2555,33L2574,33L2574,33L2579,33L2579,33L2582,33L2582,33L2592,33L2592,34L2620,34L2620,34L2635,34L2635,39L2641,39L2641,40L2643,40L2643,40L2644,40L2644,41L2646,41L2646,42L2647,42L2647,43L2648,43L2648,44L2649,44L2649,45L2654,45L2654,45L2657,45L2657,46L2660,46L2660,48L2661,48L2661,49L2662,49L2662,50L2663,50L2663,50L2665,50L2665,49L2676,49L2676,50L2681,50L2681,51L2684,51L2684,52L2685,52L2685,53L2686,53L2686,54L2690,54L2690,53L2692,53L2692,54L2695,54L2695,55L2697,55L2697,56L2698,56L2698,57L2698,57" tabindex="0">
						<title>x356nrej</title>
					</path>
				</g>
				<g style="--index: 4;">
					<path d="M0,0L772,0L772,5L870,5L870,4L955,4L955,5L958,5L958,6L959,6L959,6L961,6L961,5L980,5L980,5L986,5L986,4L1163,4L1163,5L1434,5L1434,6L1526,6L1526,6L1609,6L1609,6L1704,6L1704,7L1705,7L1705,8L1749,8L1749,9L1820,9L1820,10L2121,10L2121,11L2212,11L2212,12L2213,12L2213,13L2222,13L2222,14L2260,14L2260,15L2271,15L2271,16L2309,16L2309,15L2317,15L2317,16L2327,16L2327,16L2371,16L2371,17L2447,17L2447,18L2448,18L2448,19L2474,19L2474,20L2478,20L2478,21L2480,21L2480,22L2481,22L2481,23L2483,23L2483,23L2489,23L2489,24L2496,24L2496,25L2500,25L2500,26L2515,26L2515,27L2524,27L2524,28L2530,28L2530,29L2533,29L2533,30L2535,30L2535,30L2541,30L2541,29L2548,29L2548,29L2549,29L2549,29L2555,29L2555,28L2574,28L2574,28L2579,28L2579,28L2582,28L2582,28L2592,28L2592,29L2620,29L2620,29L2641,29L2641,30L2643,30L2643,30L2644,30L2644,31L2646,31L2646,32L2647,32L2647,33L2648,33L2648,34L2649,34L2649,34L2654,34L2654,34L2657,34L2657,35L2660,35L2660,35L2661,35L2661,36L2662,36L2662,37L2663,37L2663,37L2676,37L2676,37L2679,37L2679,36L2681,36L2681,37L2684,37L2684,37L2685,37L2685,38L2686,38L2686,38L2692,38L2692,39L2695,39L2695,40L2697,40L2697,41L2698,41L2698,42L2698,42" tabindex="0">
						<title>8rp1o2qj</title>
					</path>
				</g>
				<g style="--index: 5;">
					<path d="M0,0L955,0L955,3L958,3L958,4L959,4L959,4L961,4L961,4L980,4L980,4L986,4L986,9L1061,9L1061,8L1163,8L1163,9L1434,9L1434,10L1526,10L1526,10L1609,10L1609,10L1704,10L1704,11L1705,11L1705,12L1749,12L1749,13L1820,13L1820,14L2121,14L2121,15L2212,15L2212,16L2213,16L2213,17L2222,17L2222,18L2260,18L2260,19L2271,19L2271,20L2309,20L2309,19L2317,19L2317,20L2327,20L2327,20L2371,20L2371,21L2447,21L2447,22L2448,22L2448,23L2474,23L2474,24L2478,24L2478,25L2480,25L2480,26L2481,26L2481,27L2483,27L2483,28L2489,28L2489,29L2496,29L2496,30L2500,30L2500,31L2515,31L2515,32L2524,32L2524,33L2530,33L2530,34L2533,34L2533,35L2535,35L2535,35L2548,35L2548,35L2549,35L2549,35L2555,35L2555,34L2574,34L2574,35L2579,35L2579,35L2582,35L2582,35L2592,35L2592,36L2620,36L2620,36L2635,36L2635,35L2641,35L2641,36L2643,36L2643,36L2644,36L2644,37L2646,37L2646,38L2647,38L2647,39L2648,39L2648,40L2649,40L2649,41L2654,41L2654,41L2657,41L2657,42L2660,42L2660,42L2661,42L2661,43L2662,43L2662,44L2663,44L2663,44L2676,44L2676,44L2681,44L2681,45L2684,45L2684,46L2685,46L2685,47L2686,47L2686,48L2692,48L2692,49L2695,49L2695,50L2697,50L2697,51L2698,51L2698,52L2698,52" tabindex="0">
						<title>x7q00668</title>
					</path>
				</g>
				<g style="--index: 6;">
					<path d="M0,0L955,0L955,7L958,7L958,8L959,8L959,9L961,9L961,8L966,8L966,7L980,7L980,7L986,7L986,6L1061,6L1061,11L1163,11L1163,12L1434,12L1434,13L1526,13L1526,13L1527,13L1527,14L1609,14L1609,15L1704,15L1704,16L1705,16L1705,17L1749,17L1749,18L1800,18L1800,17L1820,17L1820,18L2121,18L2121,19L2212,19L2212,20L2213,20L2213,21L2222,21L2222,22L2260,22L2260,23L2271,23L2271,24L2317,24L2317,25L2327,25L2327,26L2371,26L2371,27L2447,27L2447,28L2448,28L2448,29L2474,29L2474,30L2478,30L2478,31L2480,31L2480,32L2481,32L2481,33L2483,33L2483,34L2489,34L2489,35L2496,35L2496,36L2500,36L2500,37L2515,37L2515,38L2524,38L2524,39L2530,39L2530,40L2533,40L2533,41L2535,41L2535,42L2548,42L2548,42L2549,42L2549,42L2555,42L2555,43L2574,43L2574,44L2579,44L2579,45L2582,45L2582,46L2592,46L2592,47L2620,47L2620,47L2634,47L2634,46L2641,46L2641,47L2643,47L2643,47L2644,47L2644,47L2646,47L2646,48L2647,48L2647,49L2648,49L2648,50L2649,50L2649,51L2654,51L2654,51L2657,51L2657,52L2660,52L2660,53L2661,53L2661,54L2662,54L2662,55L2663,55L2663,55L2665,55L2665,54L2676,54L2676,55L2681,55L2681,56L2684,56L2684,57L2685,57L2685,58L2686,58L2686,59L2692,59L2692,60L2695,60L2695,61L2697,61L2697,62L2698,62L2698,63L2698,63" tabindex="0">
						<title>j2yr9lp8</title>
					</path>
				</g>
				<g style="--index: 7;">
					<path d="M0,0L958,0L958,3L959,3L959,3L961,3L961,3L980,3L980,3L1163,3L1163,4L1434,4L1434,5L1526,5L1526,5L1609,5L1609,5L1704,5L1704,6L1705,6L1705,7L1749,7L1749,8L1820,8L1820,9L2121,9L2121,10L2212,10L2212,11L2213,11L2213,12L2222,12L2222,12L2260,12L2260,12L2271,12L2271,12L2317,12L2317,13L2327,13L2327,13L2371,13L2371,13L2447,13L2447,14L2448,14L2448,14L2474,14L2474,14L2478,14L2478,15L2480,15L2480,15L2481,15L2481,16L2483,16L2483,16L2489,16L2489,17L2496,17L2496,18L2500,18L2500,18L2515,18L2515,18L2524,18L2524,18L2530,18L2530,19L2533,19L2533,20L2535,20L2535,20L2548,20L2548,20L2549,20L2549,20L2555,20L2555,20L2574,20L2574,20L2579,20L2579,20L2582,20L2582,20L2592,20L2592,20L2620,20L2620,20L2641,20L2641,20L2643,20L2643,20L2644,20L2644,20L2646,20L2646,20L2647,20L2647,21L2648,21L2648,22L2649,22L2649,22L2654,22L2654,22L2657,22L2657,22L2660,22L2660,23L2661,23L2661,24L2662,24L2662,25L2663,25L2663,25L2676,25L2676,25L2681,25L2681,25L2684,25L2684,26L2685,26L2685,27L2686,27L2686,27L2692,27L2692,27L2695,27L2695,27L2697,27L2697,27L2698,27L2698,27L2698,27" tabindex="0">
						<title>jn3kw0wx</title>
					</path>
				</g>
				<g style="--index: 8;">
					<path d="M0,0L959,0L959,8L961,8L961,7L966,7L966,6L980,6L980,6L986,6L986,5L1163,5L1163,6L1434,6L1434,7L1526,7L1526,7L1609,7L1609,7L1704,7L1704,8L1705,8L1705,9L1749,9L1749,10L1820,10L1820,11L2121,11L2121,12L2212,12L2212,13L2213,13L2213,14L2222,14L2222,15L2260,15L2260,16L2271,16L2271,17L2309,17L2309,16L2317,16L2317,17L2327,17L2327,17L2371,17L2371,18L2447,18L2447,19L2448,19L2448,20L2474,20L2474,21L2478,21L2478,22L2480,22L2480,23L2481,23L2481,24L2483,24L2483,25L2489,25L2489,26L2496,26L2496,27L2500,27L2500,28L2515,28L2515,29L2524,29L2524,30L2530,30L2530,31L2533,31L2533,32L2535,32L2535,32L2541,32L2541,31L2548,31L2548,31L2549,31L2549,31L2555,31L2555,30L2574,30L2574,30L2579,30L2579,30L2582,30L2582,30L2592,30L2592,31L2620,31L2620,31L2641,31L2641,32L2643,32L2643,32L2644,32L2644,33L2646,33L2646,34L2647,34L2647,35L2648,35L2648,36L2649,36L2649,36L2654,36L2654,36L2657,36L2657,37L2660,37L2660,37L2661,37L2661,38L2662,38L2662,39L2663,39L2663,39L2676,39L2676,39L2679,39L2679,38L2681,38L2681,39L2684,39L2684,40L2685,40L2685,41L2686,41L2686,42L2692,42L2692,43L2695,43L2695,44L2697,44L2697,45L2698,45L2698,46L2698,46" tabindex="0">
						<title>j0np7or8</title>
					</path>
				</g>
				<g style="--index: 9;">
					<path d="M0,0L961,0L961,9L966,9L966,8L980,8L980,8L986,8L986,7L1061,7L1061,6L1163,6L1163,7L1434,7L1434,8L1526,8L1526,8L1609,8L1609,8L1704,8L1704,9L1705,9L1705,10L1749,10L1749,11L1820,11L1820,12L2121,12L2121,13L2212,13L2212,14L2213,14L2213,15L2222,15L2222,16L2260,16L2260,17L2271,17L2271,18L2309,18L2309,17L2317,17L2317,18L2327,18L2327,18L2371,18L2371,19L2447,19L2447,20L2448,20L2448,21L2474,21L2474,22L2478,22L2478,23L2480,23L2480,24L2481,24L2481,25L2483,25L2483,26L2489,26L2489,27L2496,27L2496,28L2500,28L2500,29L2515,29L2515,30L2524,30L2524,31L2530,31L2530,32L2533,32L2533,33L2535,33L2535,33L2548,33L2548,33L2549,33L2549,33L2555,33L2555,32L2574,32L2574,32L2579,32L2579,32L2582,32L2582,32L2592,32L2592,33L2620,33L2620,33L2641,33L2641,34L2643,34L2643,34L2644,34L2644,35L2646,35L2646,36L2647,36L2647,37L2648,37L2648,38L2649,38L2649,39L2654,39L2654,39L2657,39L2657,40L2660,40L2660,40L2661,40L2661,41L2662,41L2662,42L2663,42L2663,42L2676,42L2676,42L2679,42L2679,41L2681,41L2681,42L2684,42L2684,43L2685,43L2685,44L2686,44L2686,45L2692,45L2692,46L2695,46L2695,47L2697,47L2697,48L2698,48L2698,49L2698,49" tabindex="0">
						<title>xkon93k8</title>
					</path>
				</g>
				<g style="--index: 10;">
					<path d="M0,0L980,0L980,10L985,10L985,11L1061,11L1061,10L1163,10L1163,11L1434,11L1434,12L1526,12L1526,12L1609,12L1609,12L1704,12L1704,13L1705,13L1705,14L1749,14L1749,15L1820,15L1820,16L2121,16L2121,17L2212,17L2212,18L2213,18L2213,19L2222,19L2222,20L2260,20L2260,21L2271,21L2271,22L2317,22L2317,23L2327,23L2327,24L2371,24L2371,25L2447,25L2447,26L2448,26L2448,27L2474,27L2474,28L2478,28L2478,29L2480,29L2480,30L2481,30L2481,31L2483,31L2483,32L2489,32L2489,33L2496,33L2496,34L2500,34L2500,35L2515,35L2515,36L2524,36L2524,37L2530,37L2530,38L2533,38L2533,39L2535,39L2535,40L2548,40L2548,40L2549,40L2549,40L2555,40L2555,41L2574,41L2574,42L2579,42L2579,43L2582,43L2582,44L2592,44L2592,45L2620,45L2620,45L2632,45L2632,44L2641,44L2641,45L2643,45L2643,45L2644,45L2644,45L2646,45L2646,46L2647,46L2647,47L2648,47L2648,48L2649,48L2649,49L2654,49L2654,49L2657,49L2657,50L2660,50L2660,51L2661,51L2661,52L2662,52L2662,53L2663,53L2663,53L2665,53L2665,52L2676,52L2676,53L2681,53L2681,54L2684,54L2684,55L2685,55L2685,56L2686,56L2686,57L2692,57L2692,58L2695,58L2695,59L2697,59L2697,60L2698,60L2698,61L2698,61" tabindex="0">
						<title>0jmw6wex</title>
					</path>
				</g>
				<g style="--index: 11;">
					<path d="M0,0L1163,0L1163,2L1434,2L1434,3L1526,3L1526,3L1609,3L1609,3L1704,3L1704,3L1705,3L1705,3L1749,3L1749,4L1820,4L1820,4L2121,4L2121,4L2212,4L2212,4L2213,4L2213,4L2222,4L2222,4L2260,4L2260,4L2271,4L2271,4L2317,4L2317,4L2327,4L2327,4L2371,4L2371,4L2447,4L2447,4L2448,4L2448,4L2474,4L2474,4L2478,4L2478,4L2480,4L2480,4L2481,4L2481,4L2483,4L2483,4L2489,4L2489,4L2496,4L2496,4L2500,4L2500,4L2515,4L2515,4L2524,4L2524,4L2530,4L2530,4L2533,4L2533,4L2535,4L2535,4L2548,4L2548,4L2549,4L2549,4L2555,4L2555,4L2574,4L2574,4L2579,4L2579,4L2582,4L2582,4L2592,4L2592,4L2620,4L2620,4L2641,4L2641,4L2643,4L2643,4L2644,4L2644,4L2646,4L2646,4L2647,4L2647,4L2648,4L2648,4L2649,4L2649,4L2654,4L2654,4L2657,4L2657,4L2660,4L2660,4L2661,4L2661,4L2662,4L2662,4L2663,4L2663,4L2676,4L2676,4L2681,4L2681,4L2684,4L2684,4L2685,4L2685,4L2686,4L2686,4L2692,4L2692,4L2695,4L2695,4L2697,4L2697,4L2698,4L2698,4L2698,4" tabindex="0">
						<title>x7mk3z6x</title>
					</path>
				</g>
				<g style="--index: 12;">
					<path d="M0,0L1434,0L1434,1L1526,1L1526,1L1609,1L1609,1L1704,1L1704,1L1705,1L1705,1L1749,1L1749,1L1820,1L1820,1L2121,1L2121,1L2212,1L2212,1L2213,1L2213,1L2222,1L2222,1L2260,1L2260,1L2271,1L2271,1L2317,1L2317,1L2327,1L2327,1L2371,1L2371,1L2447,1L2447,1L2448,1L2448,1L2474,1L2474,1L2478,1L2478,1L2480,1L2480,1L2481,1L2481,1L2483,1L2483,1L2489,1L2489,1L2496,1L2496,1L2500,1L2500,1L2515,1L2515,1L2524,1L2524,1L2530,1L2530,1L2533,1L2533,1L2535,1L2535,1L2548,1L2548,1L2549,1L2549,1L2555,1L2555,1L2574,1L2574,1L2579,1L2579,1L2582,1L2582,1L2592,1L2592,1L2620,1L2620,1L2641,1L2641,1L2643,1L2643,1L2644,1L2644,1L2646,1L2646,1L2647,1L2647,1L2648,1L2648,1L2649,1L2649,1L2654,1L2654,1L2657,1L2657,1L2660,1L2660,1L2661,1L2661,1L2662,1L2662,1L2663,1L2663,1L2676,1L2676,1L2681,1L2681,1L2684,1L2684,1L2685,1L2685,1L2686,1L2686,1L2692,1L2692,1L2695,1L2695,1L2697,1L2697,1L2698,1L2698,1L2698,1" tabindex="0">
						<title>jpo3e9y8</title>
					</path>
				</g>
				<g style="--index: 13;">
					<path d="M0,0L1526,0L1526,14L1527,14L1527,13L1537,13L1537,13L1609,13L1609,14L1704,14L1704,15L1705,15L1705,16L1749,16L1749,17L1800,17L1800,16L1820,16L1820,17L2121,17L2121,18L2212,18L2212,19L2213,19L2213,20L2222,20L2222,21L2260,21L2260,22L2271,22L2271,23L2317,23L2317,24L2327,24L2327,25L2371,25L2371,26L2447,26L2447,27L2448,27L2448,28L2474,28L2474,29L2478,29L2478,30L2480,30L2480,31L2481,31L2481,32L2483,32L2483,33L2489,33L2489,34L2496,34L2496,35L2500,35L2500,36L2515,36L2515,37L2524,37L2524,38L2530,38L2530,39L2533,39L2533,40L2535,40L2535,41L2548,41L2548,41L2549,41L2549,41L2555,41L2555,42L2574,42L2574,43L2579,43L2579,44L2582,44L2582,45L2592,45L2592,46L2620,46L2620,46L2634,46L2634,45L2641,45L2641,46L2643,46L2643,46L2644,46L2644,46L2646,46L2646,47L2647,47L2647,48L2648,48L2648,49L2649,49L2649,50L2654,50L2654,50L2657,50L2657,51L2660,51L2660,52L2661,52L2661,53L2662,53L2662,54L2663,54L2663,54L2665,54L2665,53L2676,53L2676,54L2681,54L2681,55L2684,55L2684,56L2685,56L2685,57L2686,57L2686,58L2692,58L2692,59L2695,59L2695,60L2697,60L2697,61L2698,61L2698,62L2698,62" tabindex="0">
						<title>xk3m6d68</title>
					</path>
				</g>
				<g style="--index: 14;">
					<path d="M0,0L1609,0L1609,13L1704,13L1704,14L1705,14L1705,15L1749,15L1749,16L1800,16L1800,18L1809,18L1809,18L1820,18L1820,19L2121,19L2121,20L2212,20L2212,21L2213,21L2213,22L2222,22L2222,23L2260,23L2260,24L2271,24L2271,25L2317,25L2317,26L2327,26L2327,27L2371,27L2371,28L2447,28L2447,29L2448,29L2448,30L2474,30L2474,31L2478,31L2478,32L2480,32L2480,33L2481,33L2481,34L2483,34L2483,35L2489,35L2489,36L2496,36L2496,37L2500,37L2500,38L2515,38L2515,39L2524,39L2524,40L2530,40L2530,41L2533,41L2533,42L2535,42L2535,43L2548,43L2548,44L2549,44L2549,44L2553,44L2553,45L2555,45L2555,46L2574,46L2574,47L2579,47L2579,48L2582,48L2582,49L2592,49L2592,50L2620,50L2620,51L2641,51L2641,50L2642,50L2642,49L2643,49L2643,49L2644,49L2644,49L2646,49L2646,50L2647,50L2647,51L2648,51L2648,52L2649,52L2649,53L2654,53L2654,53L2657,53L2657,54L2660,54L2660,62L2661,62L2661,63L2662,63L2662,64L2663,64L2663,65L2676,65L2676,66L2681,66L2681,67L2684,67L2684,68L2685,68L2685,69L2686,69L2686,70L2692,70L2692,71L2695,71L2695,72L2697,72L2697,73L2698,73L2698,74L2698,74" tabindex="0">
						<title>jn2m23wj</title>
					</path>
				</g>
				<g style="--index: 15;">
					<path d="M0,0L1704,0L1704,5L1705,5L1705,5L1749,5L1749,6L1820,6L1820,6L2121,6L2121,6L2212,6L2212,6L2213,6L2213,7L2222,7L2222,7L2260,7L2260,7L2271,7L2271,7L2317,7L2317,8L2327,8L2327,8L2371,8L2371,8L2447,8L2447,9L2448,9L2448,9L2474,9L2474,9L2478,9L2478,9L2480,9L2480,9L2481,9L2481,10L2483,10L2483,10L2489,10L2489,10L2496,10L2496,11L2500,11L2500,11L2515,11L2515,11L2524,11L2524,11L2530,11L2530,12L2533,12L2533,12L2535,12L2535,12L2548,12L2548,12L2549,12L2549,12L2555,12L2555,12L2574,12L2574,12L2579,12L2579,12L2582,12L2582,12L2592,12L2592,12L2620,12L2620,12L2641,12L2641,12L2643,12L2643,12L2644,12L2644,12L2646,12L2646,12L2647,12L2647,12L2648,12L2648,13L2649,13L2649,13L2654,13L2654,13L2657,13L2657,13L2660,13L2660,14L2661,14L2661,15L2662,15L2662,16L2663,16L2663,16L2676,16L2676,16L2681,16L2681,16L2684,16L2684,17L2685,17L2685,17L2686,17L2686,17L2692,17L2692,17L2695,17L2695,17L2697,17L2697,17L2698,17L2698,17L2698,17" tabindex="0">
						<title>8g0ezgyx</title>
					</path>
				</g>
				<g style="--index: 16;">
					<path d="M0,0L1705,0L1705,6L1749,6L1749,7L1820,7L1820,7L2121,7L2121,7L2212,7L2212,7L2213,7L2213,8L2222,8L2222,8L2260,8L2260,8L2271,8L2271,8L2317,8L2317,9L2327,9L2327,9L2371,9L2371,9L2447,9L2447,10L2448,10L2448,10L2474,10L2474,10L2478,10L2478,10L2480,10L2480,10L2481,10L2481,11L2483,11L2483,11L2489,11L2489,11L2496,11L2496,12L2500,12L2500,12L2515,12L2515,12L2524,12L2524,12L2530,12L2530,13L2533,13L2533,14L2535,14L2535,14L2548,14L2548,14L2549,14L2549,14L2555,14L2555,14L2574,14L2574,14L2579,14L2579,14L2582,14L2582,14L2592,14L2592,14L2620,14L2620,14L2641,14L2641,14L2643,14L2643,14L2644,14L2644,14L2646,14L2646,14L2647,14L2647,14L2648,14L2648,15L2649,15L2649,15L2654,15L2654,15L2657,15L2657,15L2660,15L2660,16L2661,16L2661,17L2662,17L2662,18L2663,18L2663,18L2676,18L2676,18L2681,18L2681,18L2684,18L2684,19L2685,19L2685,20L2686,20L2686,20L2692,20L2692,20L2695,20L2695,20L2697,20L2697,20L2698,20L2698,20L2698,20" tabindex="0">
						<title>8lonqn28</title>
					</path>
				</g>
				<g style="--index: 17;">
					<path d="M0,0L1749,0L1749,2L1820,2L1820,2L2121,2L2121,2L2212,2L2212,2L2213,2L2213,2L2222,2L2222,2L2260,2L2260,2L2271,2L2271,2L2317,2L2317,2L2327,2L2327,2L2371,2L2371,2L2447,2L2447,2L2448,2L2448,2L2474,2L2474,2L2478,2L2478,2L2480,2L2480,2L2481,2L2481,2L2483,2L2483,2L2489,2L2489,2L2496,2L2496,2L2500,2L2500,2L2515,2L2515,2L2524,2L2524,2L2530,2L2530,2L2533,2L2533,2L2535,2L2535,2L2548,2L2548,2L2549,2L2549,2L2555,2L2555,2L2574,2L2574,2L2579,2L2579,2L2582,2L2582,2L2592,2L2592,2L2620,2L2620,2L2641,2L2641,2L2643,2L2643,2L2644,2L2644,2L2646,2L2646,2L2647,2L2647,2L2648,2L2648,2L2649,2L2649,2L2654,2L2654,2L2657,2L2657,2L2660,2L2660,2L2661,2L2661,2L2662,2L2662,2L2663,2L2663,2L2676,2L2676,2L2681,2L2681,2L2684,2L2684,2L2685,2L2685,2L2686,2L2686,2L2692,2L2692,2L2695,2L2695,2L2697,2L2697,2L2698,2L2698,2L2698,2" tabindex="0">
						<title>8ewm6dd8</title>
					</path>
				</g>
				<g style="--index: 18;">
					<path d="M0,0L1820,0L1820,8L2121,8L2121,9L2212,9L2212,10L2213,10L2213,11L2222,11L2222,11L2260,11L2260,11L2271,11L2271,11L2317,11L2317,12L2327,12L2327,12L2371,12L2371,12L2447,12L2447,13L2448,13L2448,13L2474,13L2474,13L2478,13L2478,14L2480,14L2480,14L2481,14L2481,15L2483,15L2483,15L2489,15L2489,16L2496,16L2496,17L2500,17L2500,17L2515,17L2515,17L2524,17L2524,17L2530,17L2530,18L2533,18L2533,19L2535,19L2535,19L2548,19L2548,19L2549,19L2549,19L2555,19L2555,19L2574,19L2574,19L2579,19L2579,19L2582,19L2582,19L2592,19L2592,19L2620,19L2620,19L2641,19L2641,19L2643,19L2643,19L2644,19L2644,19L2646,19L2646,19L2647,19L2647,19L2648,19L2648,20L2649,20L2649,20L2654,20L2654,20L2657,20L2657,20L2660,20L2660,21L2661,21L2661,22L2662,22L2662,23L2663,23L2663,23L2676,23L2676,23L2681,23L2681,23L2684,23L2684,24L2685,24L2685,25L2686,25L2686,25L2692,25L2692,25L2695,25L2695,25L2697,25L2697,25L2698,25L2698,25L2698,25" tabindex="0">
						<title>j20zyvpx</title>
					</path>
				</g>
				<g style="--index: 19;">
					<path d="M0,0L2121,0L2121,8L2212,8L2212,9L2213,9L2213,10L2222,10L2222,10L2260,10L2260,10L2271,10L2271,10L2317,10L2317,11L2327,11L2327,11L2371,11L2371,11L2447,11L2447,12L2448,12L2448,12L2474,12L2474,12L2478,12L2478,13L2480,13L2480,13L2481,13L2481,14L2483,14L2483,14L2489,14L2489,15L2496,15L2496,16L2500,16L2500,16L2515,16L2515,16L2524,16L2524,16L2530,16L2530,17L2533,17L2533,18L2535,18L2535,18L2548,18L2548,18L2549,18L2549,18L2555,18L2555,18L2574,18L2574,18L2579,18L2579,18L2582,18L2582,18L2592,18L2592,18L2620,18L2620,18L2641,18L2641,18L2643,18L2643,18L2644,18L2644,18L2646,18L2646,18L2647,18L2647,18L2648,18L2648,19L2649,19L2649,19L2654,19L2654,19L2657,19L2657,19L2660,19L2660,20L2661,20L2661,21L2662,21L2662,22L2663,22L2663,22L2676,22L2676,22L2681,22L2681,22L2684,22L2684,23L2685,23L2685,24L2686,24L2686,24L2692,24L2692,24L2695,24L2695,24L2697,24L2697,24L2698,24L2698,24L2698,24" tabindex="0">
						<title>jokvnml8</title>
					</path>
				</g>
				<g style="--index: 20;">
					<path d="M0,0L2212,0L2212,8L2213,8L2213,9L2222,9L2222,9L2260,9L2260,9L2271,9L2271,9L2317,9L2317,10L2327,10L2327,10L2371,10L2371,10L2447,10L2447,11L2448,11L2448,11L2474,11L2474,11L2478,11L2478,12L2480,12L2480,12L2481,12L2481,13L2483,13L2483,13L2489,13L2489,14L2496,14L2496,15L2500,15L2500,15L2515,15L2515,15L2524,15L2524,15L2530,15L2530,16L2533,16L2533,17L2535,17L2535,17L2548,17L2548,17L2549,17L2549,17L2555,17L2555,17L2574,17L2574,17L2579,17L2579,17L2582,17L2582,17L2592,17L2592,17L2620,17L2620,17L2641,17L2641,17L2643,17L2643,17L2644,17L2644,17L2646,17L2646,17L2647,17L2647,17L2648,17L2648,18L2649,18L2649,18L2654,18L2654,18L2657,18L2657,18L2660,18L2660,19L2661,19L2661,20L2662,20L2662,21L2663,21L2663,21L2676,21L2676,21L2681,21L2681,21L2684,21L2684,22L2685,22L2685,23L2686,23L2686,23L2692,23L2692,23L2695,23L2695,23L2697,23L2697,23L2698,23L2698,23L2698,23" tabindex="0">
						<title>j46k93w8</title>
					</path>
				</g>
				<g style="--index: 21;">
					<path d="M0,0L2213,0L2213,5L2222,5L2222,5L2260,5L2260,5L2271,5L2271,5L2317,5L2317,5L2327,5L2327,5L2371,5L2371,5L2447,5L2447,5L2448,5L2448,5L2474,5L2474,5L2478,5L2478,5L2480,5L2480,5L2481,5L2481,5L2483,5L2483,5L2489,5L2489,5L2496,5L2496,5L2500,5L2500,5L2515,5L2515,5L2524,5L2524,5L2530,5L2530,5L2533,5L2533,5L2535,5L2535,5L2548,5L2548,5L2549,5L2549,5L2555,5L2555,5L2574,5L2574,5L2579,5L2579,5L2582,5L2582,5L2592,5L2592,5L2620,5L2620,5L2641,5L2641,5L2643,5L2643,5L2644,5L2644,5L2646,5L2646,5L2647,5L2647,5L2648,5L2648,5L2649,5L2649,5L2654,5L2654,5L2657,5L2657,5L2660,5L2660,5L2661,5L2661,5L2662,5L2662,5L2663,5L2663,5L2676,5L2676,5L2681,5L2681,5L2684,5L2684,5L2685,5L2685,5L2686,5L2686,5L2692,5L2692,5L2695,5L2695,5L2697,5L2697,5L2698,5L2698,5L2698,5" tabindex="0">
						<title>j465mqd8</title>
					</path>
				</g>
				<g style="--index: 22;">
					<path d="M0,0L2222,0L2222,13L2260,13L2260,13L2271,13L2271,14L2317,14L2317,15L2327,15L2327,15L2371,15L2371,15L2447,15L2447,16L2448,16L2448,16L2474,16L2474,16L2478,16L2478,17L2480,17L2480,17L2481,17L2481,18L2483,18L2483,18L2489,18L2489,19L2496,19L2496,20L2500,20L2500,21L2515,21L2515,21L2524,21L2524,21L2530,21L2530,22L2533,22L2533,23L2535,23L2535,23L2548,23L2548,23L2549,23L2549,23L2555,23L2555,23L2574,23L2574,23L2579,23L2579,23L2582,23L2582,23L2592,23L2592,23L2620,23L2620,23L2641,23L2641,24L2643,24L2643,24L2644,24L2644,24L2646,24L2646,24L2647,24L2647,25L2648,25L2648,26L2649,26L2649,26L2654,26L2654,26L2657,26L2657,26L2660,26L2660,27L2661,27L2661,28L2662,28L2662,29L2663,29L2663,29L2676,29L2676,29L2681,29L2681,30L2683,30L2683,29L2684,29L2684,30L2685,30L2685,31L2686,31L2686,31L2692,31L2692,32L2695,32L2695,32L2697,32L2697,33L2698,33L2698,33L2698,33" tabindex="0">
						<title>8dpl6o58</title>
					</path>
				</g>
				<g style="--index: 23;">
					<path d="M0,0L2260,0L2260,14L2271,14L2271,15L2309,15L2309,20L2317,20L2317,21L2327,21L2327,21L2371,21L2371,22L2447,22L2447,23L2448,23L2448,24L2474,24L2474,25L2478,25L2478,26L2480,26L2480,27L2481,27L2481,28L2483,28L2483,29L2489,29L2489,30L2496,30L2496,31L2500,31L2500,32L2515,32L2515,33L2524,33L2524,34L2530,34L2530,35L2533,35L2533,36L2535,36L2535,36L2548,36L2548,36L2549,36L2549,36L2555,36L2555,37L2574,37L2574,38L2579,38L2579,39L2582,39L2582,39L2592,39L2592,40L2620,40L2620,40L2632,40L2632,39L2635,39L2635,38L2641,38L2641,39L2643,39L2643,39L2644,39L2644,40L2646,40L2646,41L2647,41L2647,42L2648,42L2648,43L2649,43L2649,44L2654,44L2654,44L2657,44L2657,45L2660,45L2660,47L2661,47L2661,48L2662,48L2662,49L2663,49L2663,49L2665,49L2665,48L2676,48L2676,49L2681,49L2681,50L2684,50L2684,51L2685,51L2685,52L2686,52L2686,53L2690,53L2690,52L2692,52L2692,53L2695,53L2695,54L2697,54L2697,55L2698,55L2698,56L2698,56" tabindex="0">
						<title>8v0mryvx</title>
					</path>
				</g>
				<g style="--index: 24;">
					<path d="M0,0L2271,0L2271,13L2317,13L2317,14L2327,14L2327,14L2371,14L2371,14L2447,14L2447,15L2448,15L2448,15L2474,15L2474,15L2478,15L2478,16L2480,16L2480,16L2481,16L2481,17L2483,17L2483,17L2489,17L2489,18L2496,18L2496,19L2500,19L2500,20L2515,20L2515,20L2524,20L2524,20L2530,20L2530,21L2533,21L2533,22L2535,22L2535,22L2548,22L2548,22L2549,22L2549,22L2555,22L2555,22L2574,22L2574,22L2579,22L2579,22L2582,22L2582,22L2592,22L2592,22L2620,22L2620,22L2641,22L2641,23L2643,23L2643,23L2644,23L2644,23L2646,23L2646,23L2647,23L2647,24L2648,24L2648,25L2649,25L2649,25L2654,25L2654,25L2657,25L2657,25L2660,25L2660,26L2661,26L2661,27L2662,27L2662,28L2663,28L2663,28L2676,28L2676,28L2681,28L2681,28L2684,28L2684,29L2685,29L2685,30L2686,30L2686,30L2692,30L2692,30L2695,30L2695,30L2697,30L2697,31L2698,31L2698,31L2698,31" tabindex="0">
						<title>j0gyekmx</title>
					</path>
				</g>
				<g style="--index: 25;">
					<path d="M0,0L2317,0L2317,7L2327,7L2327,7L2371,7L2371,7L2447,7L2447,7L2448,7L2448,7L2474,7L2474,7L2478,7L2478,7L2480,7L2480,7L2481,7L2481,7L2483,7L2483,7L2489,7L2489,7L2496,7L2496,7L2500,7L2500,7L2515,7L2515,7L2524,7L2524,7L2530,7L2530,8L2533,8L2533,8L2535,8L2535,8L2548,8L2548,8L2549,8L2549,8L2555,8L2555,8L2574,8L2574,8L2579,8L2579,8L2582,8L2582,8L2592,8L2592,8L2620,8L2620,8L2641,8L2641,8L2643,8L2643,8L2644,8L2644,8L2646,8L2646,8L2647,8L2647,8L2648,8L2648,8L2649,8L2649,8L2654,8L2654,8L2657,8L2657,8L2660,8L2660,9L2661,9L2661,9L2662,9L2662,9L2663,9L2663,9L2676,9L2676,9L2681,9L2681,9L2684,9L2684,10L2685,10L2685,10L2686,10L2686,10L2692,10L2692,10L2695,10L2695,10L2697,10L2697,10L2698,10L2698,10L2698,10" tabindex="0">
						<title>x7zwrnq8</title>
					</path>
				</g>
				<g style="--index: 26;">
					<path d="M0,0L2327,0L2327,23L2371,23L2371,24L2447,24L2447,25L2448,25L2448,26L2474,26L2474,27L2478,27L2478,28L2480,28L2480,29L2481,29L2481,30L2483,30L2483,31L2489,31L2489,32L2496,32L2496,33L2500,33L2500,34L2515,34L2515,35L2524,35L2524,36L2530,36L2530,37L2533,37L2533,38L2535,38L2535,39L2548,39L2548,39L2549,39L2549,39L2555,39L2555,40L2574,40L2574,41L2579,41L2579,42L2582,42L2582,43L2592,43L2592,44L2620,44L2620,44L2632,44L2632,43L2641,43L2641,44L2643,44L2643,44L2644,44L2644,44L2646,44L2646,45L2647,45L2647,46L2648,46L2648,47L2649,47L2649,48L2654,48L2654,48L2657,48L2657,49L2660,49L2660,56L2661,56L2661,57L2662,57L2662,58L2663,58L2663,59L2676,59L2676,60L2681,60L2681,61L2684,61L2684,62L2685,62L2685,63L2686,63L2686,64L2692,64L2692,65L2695,65L2695,66L2697,66L2697,67L2698,67L2698,68L2698,68" tabindex="0">
						<title>x3wdlvkj</title>
					</path>
				</g>
				<g style="--index: 27;">
					<path d="M0,0L2371,0L2371,16L2447,16L2447,17L2448,17L2448,17L2474,17L2474,18L2478,18L2478,19L2480,19L2480,20L2481,20L2481,21L2483,21L2483,21L2489,21L2489,22L2496,22L2496,23L2500,23L2500,24L2515,24L2515,24L2524,24L2524,24L2530,24L2530,25L2533,25L2533,26L2535,26L2535,26L2548,26L2548,26L2549,26L2549,26L2555,26L2555,35L2574,35L2574,36L2579,36L2579,36L2582,36L2582,36L2592,36L2592,37L2620,37L2620,37L2635,37L2635,36L2641,36L2641,37L2643,37L2643,37L2644,37L2644,38L2646,38L2646,39L2647,39L2647,40L2648,40L2648,41L2649,41L2649,42L2654,42L2654,42L2657,42L2657,43L2660,43L2660,43L2661,43L2661,46L2662,46L2662,47L2663,47L2663,47L2665,47L2665,46L2676,46L2676,47L2681,47L2681,48L2684,48L2684,49L2685,49L2685,50L2686,50L2686,51L2690,51L2690,50L2692,50L2692,51L2695,51L2695,52L2697,52L2697,53L2698,53L2698,54L2698,54" tabindex="0">
						<title>8w3l21qj</title>
					</path>
				</g>
				<g style="--index: 28;">
					<path d="M0,0L2447,0L2447,8L2448,8L2448,8L2474,8L2474,8L2478,8L2478,8L2480,8L2480,8L2481,8L2481,8L2483,8L2483,8L2489,8L2489,8L2496,8L2496,8L2500,8L2500,8L2515,8L2515,8L2524,8L2524,8L2530,8L2530,9L2533,9L2533,9L2535,9L2535,9L2548,9L2548,9L2549,9L2549,9L2555,9L2555,9L2574,9L2574,9L2579,9L2579,9L2582,9L2582,9L2592,9L2592,9L2620,9L2620,9L2641,9L2641,9L2643,9L2643,9L2644,9L2644,9L2646,9L2646,9L2647,9L2647,9L2648,9L2648,9L2649,9L2649,9L2654,9L2654,9L2657,9L2657,9L2660,9L2660,10L2661,10L2661,10L2662,10L2662,10L2663,10L2663,10L2676,10L2676,10L2681,10L2681,10L2684,10L2684,11L2685,11L2685,11L2686,11L2686,11L2692,11L2692,11L2695,11L2695,11L2697,11L2697,11L2698,11L2698,11L2698,11" tabindex="0">
						<title>j0wm7v98</title>
					</path>
				</g>
				<g style="--index: 29;">
					<path d="M0,0L2448,0L2448,18L2474,18L2474,19L2478,19L2478,20L2480,20L2480,21L2481,21L2481,22L2483,22L2483,22L2489,22L2489,23L2496,23L2496,24L2500,24L2500,25L2515,25L2515,26L2524,26L2524,27L2530,27L2530,28L2533,28L2533,29L2535,29L2535,29L2541,29L2541,28L2548,28L2548,28L2549,28L2549,28L2555,28L2555,27L2574,27L2574,27L2579,27L2579,27L2582,27L2582,27L2592,27L2592,28L2620,28L2620,28L2641,28L2641,29L2643,29L2643,29L2644,29L2644,29L2646,29L2646,29L2647,29L2647,30L2648,30L2648,31L2649,31L2649,31L2654,31L2654,31L2657,31L2657,32L2660,32L2660,33L2661,33L2661,34L2662,34L2662,35L2663,35L2663,35L2676,35L2676,35L2681,35L2681,36L2684,36L2684,36L2685,36L2685,37L2686,37L2686,37L2692,37L2692,38L2695,38L2695,39L2697,39L2697,40L2698,40L2698,41L2698,41" tabindex="0">
						<title>8gok6dpx</title>
					</path>
				</g>
				<g style="--index: 30;">
					<path d="M0,0L2474,0L2474,17L2478,17L2478,18L2480,18L2480,19L2481,19L2481,20L2483,20L2483,20L2489,20L2489,21L2496,21L2496,22L2500,22L2500,23L2515,23L2515,23L2524,23L2524,23L2530,23L2530,24L2533,24L2533,25L2535,25L2535,25L2548,25L2548,25L2549,25L2549,25L2555,25L2555,25L2574,25L2574,25L2579,25L2579,25L2582,25L2582,25L2592,25L2592,25L2620,25L2620,25L2641,25L2641,26L2643,26L2643,26L2644,26L2644,26L2646,26L2646,26L2647,26L2647,27L2648,27L2648,28L2649,28L2649,28L2654,28L2654,28L2657,28L2657,29L2660,29L2660,30L2661,30L2661,31L2662,31L2662,32L2663,32L2663,32L2676,32L2676,32L2681,32L2681,33L2684,33L2684,33L2685,33L2685,34L2686,34L2686,34L2692,34L2692,35L2695,35L2695,36L2697,36L2697,37L2698,37L2698,38L2698,38" tabindex="0">
						<title>8l6l0k78</title>
					</path>
				</g>
				<g style="--index: 31;">
					<path d="M0,0L2478,0L2478,11L2480,11L2480,11L2481,11L2481,12L2483,12L2483,12L2489,12L2489,12L2496,12L2496,13L2500,13L2500,13L2515,13L2515,13L2524,13L2524,13L2530,13L2530,14L2533,14L2533,15L2535,15L2535,15L2548,15L2548,15L2549,15L2549,15L2555,15L2555,15L2574,15L2574,15L2579,15L2579,15L2582,15L2582,15L2592,15L2592,15L2620,15L2620,15L2641,15L2641,15L2643,15L2643,15L2644,15L2644,15L2646,15L2646,15L2647,15L2647,15L2648,15L2648,16L2649,16L2649,16L2654,16L2654,16L2657,16L2657,16L2660,16L2660,17L2661,17L2661,18L2662,18L2662,19L2663,19L2663,19L2676,19L2676,19L2681,19L2681,19L2684,19L2684,20L2685,20L2685,21L2686,21L2686,21L2692,21L2692,21L2695,21L2695,21L2697,21L2697,21L2698,21L2698,21L2698,21" tabindex="0">
						<title>8r1dyodj</title>
					</path>
				</g>
				<g style="--index: 32;">
					<path d="M0,0L2480,0L2480,18L2481,18L2481,19L2483,19L2483,19L2489,19L2489,20L2496,20L2496,21L2500,21L2500,22L2515,22L2515,22L2524,22L2524,22L2530,22L2530,23L2533,23L2533,24L2535,24L2535,24L2548,24L2548,24L2549,24L2549,24L2555,24L2555,24L2574,24L2574,24L2579,24L2579,24L2582,24L2582,24L2592,24L2592,24L2620,24L2620,24L2641,24L2641,25L2643,25L2643,25L2644,25L2644,25L2646,25L2646,25L2647,25L2647,26L2648,26L2648,27L2649,27L2649,27L2654,27L2654,27L2657,27L2657,27L2660,27L2660,28L2661,28L2661,29L2662,29L2662,30L2663,30L2663,30L2676,30L2676,30L2681,30L2681,31L2683,31L2683,30L2684,30L2684,31L2685,31L2685,32L2686,32L2686,32L2692,32L2692,33L2695,33L2695,33L2697,33L2697,34L2698,34L2698,34L2698,34" tabindex="0">
						<title>8go710rx</title>
					</path>
				</g>
				<g style="--index: 33;">
					<path d="M0,0L2481,0L2481,9L2483,9L2483,9L2489,9L2489,9L2496,9L2496,10L2500,10L2500,10L2515,10L2515,10L2524,10L2524,10L2530,10L2530,11L2533,11L2533,11L2535,11L2535,11L2548,11L2548,11L2549,11L2549,11L2555,11L2555,11L2574,11L2574,11L2579,11L2579,11L2582,11L2582,11L2592,11L2592,11L2620,11L2620,11L2641,11L2641,11L2643,11L2643,11L2644,11L2644,11L2646,11L2646,11L2647,11L2647,11L2648,11L2648,12L2649,12L2649,12L2654,12L2654,12L2657,12L2657,12L2660,12L2660,13L2661,13L2661,14L2662,14L2662,15L2663,15L2663,15L2676,15L2676,15L2681,15L2681,15L2684,15L2684,16L2685,16L2685,16L2686,16L2686,16L2692,16L2692,16L2695,16L2695,16L2697,16L2697,16L2698,16L2698,16L2698,16" tabindex="0">
						<title>x3pk7pk8</title>
					</path>
				</g>
				<g style="--index: 34;">
					<path d="M0,0L2483,0L2483,24L2489,24L2489,25L2496,25L2496,26L2500,26L2500,27L2515,27L2515,28L2524,28L2524,29L2530,29L2530,30L2533,30L2533,31L2535,31L2535,31L2541,31L2541,30L2548,30L2548,30L2549,30L2549,30L2555,30L2555,29L2574,29L2574,29L2579,29L2579,29L2582,29L2582,29L2592,29L2592,30L2620,30L2620,30L2641,30L2641,31L2643,31L2643,31L2644,31L2644,32L2646,32L2646,33L2647,33L2647,34L2648,34L2648,35L2649,35L2649,35L2654,35L2654,35L2657,35L2657,36L2660,36L2660,36L2661,36L2661,37L2662,37L2662,38L2663,38L2663,38L2676,38L2676,38L2679,38L2679,37L2681,37L2681,38L2684,38L2684,39L2685,39L2685,40L2686,40L2686,41L2692,41L2692,42L2695,42L2695,43L2697,43L2697,44L2698,44L2698,45L2698,45" tabindex="0">
						<title>8w3vrkvj</title>
					</path>
				</g>
				<g style="--index: 35;">
					<path d="M0,0L2489,0L2489,13L2496,13L2496,14L2500,14L2500,14L2515,14L2515,14L2524,14L2524,14L2530,14L2530,15L2533,15L2533,16L2535,16L2535,16L2548,16L2548,16L2549,16L2549,16L2555,16L2555,16L2574,16L2574,16L2579,16L2579,16L2582,16L2582,16L2592,16L2592,16L2620,16L2620,16L2641,16L2641,16L2643,16L2643,16L2644,16L2644,16L2646,16L2646,16L2647,16L2647,16L2648,16L2648,17L2649,17L2649,17L2654,17L2654,17L2657,17L2657,17L2660,17L2660,18L2661,18L2661,19L2662,19L2662,20L2663,20L2663,20L2676,20L2676,20L2681,20L2681,20L2684,20L2684,21L2685,21L2685,22L2686,22L2686,22L2692,22L2692,22L2695,22L2695,22L2697,22L2697,22L2698,22L2698,22L2698,22" tabindex="0">
						<title>jo15gylx</title>
					</path>
				</g>
				<g style="--index: 36;">
					<path d="M0,0L2496,0L2496,9L2500,9L2500,9L2515,9L2515,9L2524,9L2524,9L2530,9L2530,10L2533,10L2533,10L2535,10L2535,10L2548,10L2548,10L2549,10L2549,10L2555,10L2555,10L2574,10L2574,10L2579,10L2579,10L2582,10L2582,10L2592,10L2592,10L2620,10L2620,10L2641,10L2641,10L2643,10L2643,10L2644,10L2644,10L2646,10L2646,10L2647,10L2647,10L2648,10L2648,10L2649,10L2649,10L2654,10L2654,10L2657,10L2657,10L2660,10L2660,11L2661,11L2661,11L2662,11L2662,11L2663,11L2663,11L2676,11L2676,11L2681,11L2681,11L2684,11L2684,12L2685,12L2685,12L2686,12L2686,12L2692,12L2692,12L2695,12L2695,12L2697,12L2697,12L2698,12L2698,12L2698,12" tabindex="0">
						<title>8goqrd2x</title>
					</path>
				</g>
				<g style="--index: 37;">
					<path d="M0,0L2500,0L2500,19L2515,19L2515,19L2524,19L2524,19L2530,19L2530,20L2533,20L2533,21L2535,21L2535,21L2548,21L2548,21L2549,21L2549,21L2555,21L2555,21L2574,21L2574,21L2579,21L2579,21L2582,21L2582,21L2592,21L2592,21L2620,21L2620,21L2641,21L2641,21L2643,21L2643,21L2644,21L2644,21L2646,21L2646,21L2647,21L2647,22L2648,22L2648,23L2649,23L2649,23L2654,23L2654,23L2657,23L2657,23L2660,23L2660,24L2661,24L2661,25L2662,25L2662,26L2663,26L2663,26L2676,26L2676,26L2681,26L2681,26L2684,26L2684,27L2685,27L2685,28L2686,28L2686,28L2692,28L2692,28L2695,28L2695,28L2697,28L2697,29L2698,29L2698,29L2698,29" tabindex="0">
						<title>8eod20oj</title>
					</path>
				</g>
				<g style="--index: 38;">
					<path d="M0,0L2515,0L2515,25L2524,25L2524,25L2530,25L2530,26L2533,26L2533,27L2535,27L2535,27L2541,27L2541,32L2548,32L2548,32L2549,32L2549,32L2555,32L2555,31L2574,31L2574,31L2579,31L2579,31L2582,31L2582,31L2592,31L2592,32L2620,32L2620,32L2641,32L2641,33L2643,33L2643,33L2644,33L2644,34L2646,34L2646,35L2647,35L2647,36L2648,36L2648,37L2649,37L2649,38L2654,38L2654,38L2657,38L2657,39L2660,39L2660,39L2661,39L2661,40L2662,40L2662,41L2663,41L2663,41L2676,41L2676,41L2679,41L2679,40L2681,40L2681,41L2684,41L2684,42L2685,42L2685,43L2686,43L2686,44L2692,44L2692,45L2695,45L2695,46L2697,46L2697,47L2698,47L2698,48L2698,48" tabindex="0">
						<title>j2pzvvp8</title>
					</path>
				</g>
				<g style="--index: 39;">
					<path d="M0,0L2524,0L2524,26L2530,26L2530,27L2533,27L2533,28L2535,28L2535,28L2541,28L2541,27L2548,27L2548,27L2549,27L2549,27L2555,27L2555,26L2574,26L2574,26L2579,26L2579,26L2582,26L2582,26L2592,26L2592,27L2620,27L2620,27L2641,27L2641,28L2643,28L2643,28L2644,28L2644,28L2646,28L2646,28L2647,28L2647,29L2648,29L2648,30L2649,30L2649,30L2654,30L2654,30L2657,30L2657,31L2660,31L2660,32L2661,32L2661,33L2662,33L2662,34L2663,34L2663,34L2676,34L2676,34L2681,34L2681,35L2684,35L2684,35L2685,35L2685,36L2686,36L2686,36L2692,36L2692,37L2695,37L2695,38L2697,38L2697,39L2698,39L2698,40L2698,40" tabindex="0">
						<title>j9v0qvrx</title>
					</path>
				</g>
				<g style="--index: 40;">
					<path d="M0,0L2530,0L2530,6L2533,6L2533,6L2535,6L2535,6L2548,6L2548,6L2549,6L2549,6L2555,6L2555,6L2574,6L2574,6L2579,6L2579,6L2582,6L2582,6L2592,6L2592,6L2620,6L2620,6L2641,6L2641,6L2643,6L2643,6L2644,6L2644,6L2646,6L2646,6L2647,6L2647,6L2648,6L2648,6L2649,6L2649,6L2654,6L2654,6L2657,6L2657,6L2660,6L2660,7L2661,7L2661,7L2662,7L2662,7L2663,7L2663,7L2676,7L2676,7L2681,7L2681,7L2684,7L2684,7L2685,7L2685,7L2686,7L2686,7L2692,7L2692,7L2695,7L2695,7L2697,7L2697,7L2698,7L2698,7L2698,7" tabindex="0">
						<title>j9ve5wox</title>
					</path>
				</g>
				<g style="--index: 41;">
					<path d="M0,0L2533,0L2533,13L2535,13L2535,13L2548,13L2548,13L2549,13L2549,13L2555,13L2555,13L2574,13L2574,13L2579,13L2579,13L2582,13L2582,13L2592,13L2592,13L2620,13L2620,13L2641,13L2641,13L2643,13L2643,13L2644,13L2644,13L2646,13L2646,13L2647,13L2647,13L2648,13L2648,14L2649,14L2649,14L2654,14L2654,14L2657,14L2657,14L2660,14L2660,15L2661,15L2661,16L2662,16L2662,17L2663,17L2663,17L2676,17L2676,17L2681,17L2681,17L2684,17L2684,18L2685,18L2685,18L2686,18L2686,18L2692,18L2692,18L2695,18L2695,18L2697,18L2697,18L2698,18L2698,18L2698,18" tabindex="0">
						<title>8l6m01r8</title>
					</path>
				</g>
				<g style="--index: 42;">
					<path d="M0,0L2535,0L2535,37L2548,37L2548,37L2549,37L2549,37L2555,37L2555,38L2574,38L2574,39L2579,39L2579,40L2582,40L2582,40L2592,40L2592,41L2620,41L2620,41L2632,41L2632,40L2641,40L2641,41L2643,41L2643,41L2644,41L2644,51L2646,51L2646,52L2647,52L2647,53L2648,53L2648,54L2649,54L2649,55L2654,55L2654,56L2657,56L2657,57L2660,57L2660,58L2661,58L2661,59L2662,59L2662,60L2663,60L2663,61L2676,61L2676,62L2681,62L2681,63L2684,63L2684,64L2685,64L2685,65L2686,65L2686,66L2692,66L2692,67L2695,67L2695,68L2697,68L2697,69L2698,69L2698,70L2698,70" tabindex="0">
						<title>8gop7k2x</title>
					</path>
				</g>
				<g style="--index: 43;">
					<path d="M0,0L2548,0L2548,43L2549,43L2549,43L2555,43L2555,44L2574,44L2574,45L2579,45L2579,46L2582,46L2582,47L2592,47L2592,48L2620,48L2620,48L2641,48L2641,49L2642,49L2642,48L2643,48L2643,48L2644,48L2644,48L2646,48L2646,49L2647,49L2647,50L2648,50L2648,51L2649,51L2649,52L2654,52L2654,52L2657,52L2657,53L2660,53L2660,54L2661,54L2661,55L2662,55L2662,56L2663,56L2663,56L2665,56L2665,55L2676,55L2676,56L2681,56L2681,57L2684,57L2684,58L2685,58L2685,59L2686,59L2686,60L2692,60L2692,61L2695,61L2695,62L2697,62L2697,63L2698,63L2698,64L2698,64" tabindex="0">
						<title>86rpw3p8</title>
					</path>
				</g>
				<g style="--index: 44;">
					<path d="M0,0L2549,0L2549,45L2553,45L2553,44L2555,44L2555,45L2574,45L2574,46L2579,46L2579,47L2582,47L2582,48L2592,48L2592,49L2620,49L2620,50L2641,50L2641,51L2642,51L2642,50L2643,50L2643,51L2644,51L2644,52L2646,52L2646,53L2647,53L2647,54L2648,54L2648,55L2649,55L2649,56L2654,56L2654,57L2657,57L2657,58L2660,58L2660,59L2661,59L2661,60L2662,60L2662,61L2663,61L2663,62L2676,62L2676,63L2681,63L2681,64L2684,64L2684,65L2685,65L2685,66L2686,66L2686,67L2692,67L2692,68L2695,68L2695,69L2697,69L2697,70L2698,70L2698,71L2698,71" tabindex="0">
						<title>jo19m63x</title>
					</path>
				</g>
				<g style="--index: 45;">
					<path d="M0,0L2555,0L2555,36L2574,36L2574,37L2579,37L2579,38L2582,38L2582,38L2592,38L2592,39L2620,39L2620,39L2632,39L2632,38L2635,38L2635,37L2641,37L2641,38L2643,38L2643,38L2644,38L2644,39L2646,39L2646,40L2647,40L2647,41L2648,41L2648,42L2649,42L2649,43L2654,43L2654,43L2657,43L2657,44L2660,44L2660,46L2661,46L2661,47L2662,47L2662,48L2663,48L2663,48L2665,48L2665,47L2676,47L2676,48L2681,48L2681,49L2684,49L2684,50L2685,50L2685,51L2686,51L2686,52L2690,52L2690,51L2692,51L2692,52L2695,52L2695,53L2697,53L2697,54L2698,54L2698,55L2698,55" tabindex="0">
						<title>jn6mlgqx</title>
					</path>
				</g>
				<g style="--index: 46;">
					<path d="M0,0L2574,0L2574,34L2579,34L2579,34L2582,34L2582,34L2592,34L2592,35L2620,35L2620,35L2635,35L2635,34L2641,34L2641,35L2643,35L2643,35L2644,35L2644,36L2646,36L2646,37L2647,37L2647,38L2648,38L2648,39L2649,39L2649,40L2654,40L2654,40L2657,40L2657,41L2660,41L2660,41L2661,41L2661,42L2662,42L2662,43L2663,43L2663,43L2676,43L2676,43L2681,43L2681,44L2684,44L2684,45L2685,45L2685,46L2686,46L2686,47L2692,47L2692,48L2695,48L2695,49L2697,49L2697,50L2698,50L2698,51L2698,51" tabindex="0">
						<title>x3149n68</title>
					</path>
				</g>
				<g style="--index: 47;">
					<path d="M0,0L2579,0L2579,37L2582,37L2582,37L2592,37L2592,38L2620,38L2620,38L2632,38L2632,45L2634,45L2634,47L2641,47L2641,48L2642,48L2642,51L2643,51L2643,52L2644,52L2644,53L2646,53L2646,54L2647,54L2647,55L2648,55L2648,56L2649,56L2649,57L2654,57L2654,58L2657,58L2657,59L2660,59L2660,61L2661,61L2661,62L2662,62L2662,63L2663,63L2663,64L2676,64L2676,65L2681,65L2681,66L2684,66L2684,67L2685,67L2685,68L2686,68L2686,69L2692,69L2692,70L2695,70L2695,71L2697,71L2697,72L2698,72L2698,73L2698,73" tabindex="0">
						<title>j2p4pel8</title>
					</path>
				</g>
				<g style="--index: 48;">
					<path d="M0,0L2582,0L2582,41L2592,41L2592,42L2620,42L2620,42L2632,42L2632,41L2641,41L2641,42L2643,42L2643,42L2644,42L2644,42L2646,42L2646,43L2647,43L2647,44L2648,44L2648,45L2649,45L2649,46L2654,46L2654,46L2657,46L2657,47L2660,47L2660,49L2661,49L2661,50L2662,50L2662,51L2663,51L2663,51L2665,51L2665,50L2676,50L2676,51L2681,51L2681,52L2684,52L2684,53L2685,53L2685,54L2686,54L2686,55L2690,55L2690,54L2692,54L2692,55L2695,55L2695,56L2697,56L2697,57L2698,57L2698,58L2698,58" tabindex="0">
						<title>xkzm042x</title>
					</path>
				</g>
				<g style="--index: 49;">
					<path d="M0,0L2592,0L2592,26L2620,26L2620,26L2641,26L2641,27L2643,27L2643,27L2644,27L2644,27L2646,27L2646,27L2647,27L2647,28L2648,28L2648,29L2649,29L2649,29L2654,29L2654,29L2657,29L2657,30L2660,30L2660,31L2661,31L2661,32L2662,32L2662,33L2663,33L2663,33L2676,33L2676,33L2681,33L2681,34L2684,34L2684,34L2685,34L2685,35L2686,35L2686,35L2692,35L2692,36L2695,36L2695,37L2697,37L2697,38L2698,38L2698,39L2698,39" tabindex="0">
						<title>j4v29mdj</title>
					</path>
				</g>
				<g style="--index: 50;">
					<path d="M0,0L2620,0L2620,49L2641,49L2641,52L2642,52L2642,52L2643,52L2643,53L2644,53L2644,54L2646,54L2646,55L2647,55L2647,56L2648,56L2648,57L2649,57L2649,58L2654,58L2654,59L2657,59L2657,60L2660,60L2660,60L2661,60L2661,61L2662,61L2662,62L2663,62L2663,63L2676,63L2676,64L2681,64L2681,65L2684,65L2684,66L2685,66L2685,67L2686,67L2686,68L2692,68L2692,69L2695,69L2695,70L2697,70L2697,71L2698,71L2698,72L2698,72" tabindex="0">
						<title>81pdyqq8</title>
					</path>
				</g>
				<g style="--index: 51;">
					<path d="M0,0L2641,0L2641,22L2643,22L2643,22L2644,22L2644,22L2646,22L2646,22L2647,22L2647,23L2648,23L2648,24L2649,24L2649,24L2654,24L2654,24L2657,24L2657,24L2660,24L2660,25L2661,25L2661,26L2662,26L2662,27L2663,27L2663,27L2676,27L2676,27L2681,27L2681,27L2684,27L2684,28L2685,28L2685,29L2686,29L2686,29L2692,29L2692,29L2695,29L2695,29L2697,29L2697,30L2698,30L2698,30L2698,30" tabindex="0">
						<title>8v776vy8</title>
					</path>
				</g>
				<g style="--index: 52;">
					<path d="M0,0L2643,0L2643,50L2644,50L2644,50L2646,50L2646,51L2647,51L2647,52L2648,52L2648,53L2649,53L2649,54L2654,54L2654,54L2657,54L2657,56L2660,56L2660,57L2661,57L2661,58L2662,58L2662,59L2663,59L2663,60L2676,60L2676,61L2681,61L2681,62L2684,62L2684,63L2685,63L2685,64L2686,64L2686,65L2692,65L2692,66L2695,66L2695,67L2697,67L2697,68L2698,68L2698,69L2698,69" tabindex="0">
						<title>8qpl62dx</title>
					</path>
				</g>
				<g style="--index: 53;">
					<path d="M0,0L2644,0L2644,30L2646,30L2646,31L2647,31L2647,32L2648,32L2648,33L2649,33L2649,33L2654,33L2654,33L2657,33L2657,34L2660,34L2660,45L2661,45L2661,45L2662,45L2662,46L2663,46L2663,46L2665,46L2665,45L2676,45L2676,45L2681,45L2681,46L2684,46L2684,47L2685,47L2685,48L2686,48L2686,49L2690,49L2690,56L2692,56L2692,57L2695,57L2695,58L2697,58L2697,59L2698,59L2698,60L2698,60" tabindex="0">
						<title>j2pmdqp8</title>
					</path>
				</g>
				<g style="--index: 54;">
					<path d="M0,0L2646,0L2646,30L2647,30L2647,31L2648,31L2648,32L2649,32L2649,32L2654,32L2654,32L2657,32L2657,33L2660,33L2660,34L2661,34L2661,35L2662,35L2662,36L2663,36L2663,36L2676,36L2676,36L2679,36L2679,42L2681,42L2681,43L2684,43L2684,44L2685,44L2685,45L2686,45L2686,46L2692,46L2692,47L2695,47L2695,48L2697,48L2697,49L2698,49L2698,50L2698,50" tabindex="0">
						<title>x7ggd6rx</title>
					</path>
				</g>
				<g style="--index: 55;">
					<path d="M0,0L2647,0L2647,20L2648,20L2648,21L2649,21L2649,21L2654,21L2654,21L2657,21L2657,21L2660,21L2660,22L2661,22L2661,23L2662,23L2662,24L2663,24L2663,24L2676,24L2676,24L2681,24L2681,24L2684,24L2684,25L2685,25L2685,26L2686,26L2686,26L2692,26L2692,26L2695,26L2695,26L2697,26L2697,26L2698,26L2698,26L2698,26" tabindex="0">
						<title>j2119m68</title>
					</path>
				</g>
				<g style="--index: 56;">
					<path d="M0,0L2648,0L2648,11L2649,11L2649,11L2654,11L2654,11L2657,11L2657,11L2660,11L2660,12L2661,12L2661,12L2662,12L2662,12L2663,12L2663,12L2676,12L2676,12L2681,12L2681,12L2684,12L2684,13L2685,13L2685,13L2686,13L2686,13L2692,13L2692,13L2695,13L2695,13L2697,13L2697,13L2698,13L2698,13L2698,13" tabindex="0">
						<title>xz55p24x</title>
					</path>
				</g>
				<g style="--index: 57;">
					<path d="M0,0L2649,0L2649,37L2654,37L2654,37L2657,37L2657,38L2660,38L2660,38L2661,38L2661,39L2662,39L2662,40L2663,40L2663,40L2676,40L2676,40L2679,40L2679,39L2681,39L2681,40L2684,40L2684,41L2685,41L2685,42L2686,42L2686,43L2692,43L2692,44L2695,44L2695,45L2697,45L2697,46L2698,46L2698,47L2698,47" tabindex="0">
						<title>8v09p45x</title>
					</path>
				</g>
				<g style="--index: 58;">
					<path d="M0,0L2654,0L2654,55L2657,55L2657,55L2660,55L2660,55L2661,55L2661,56L2662,56L2662,57L2663,57L2663,58L2676,58L2676,59L2681,59L2681,60L2684,60L2684,61L2685,61L2685,62L2686,62L2686,63L2692,63L2692,64L2695,64L2695,65L2697,65L2697,66L2698,66L2698,67L2698,67" tabindex="0">
						<title>8r617k38</title>
					</path>
				</g>
				<g style="--index: 59;">
					<path d="M0,0L2657,0L2657,28L2660,28L2660,29L2661,29L2661,30L2662,30L2662,31L2663,31L2663,31L2676,31L2676,31L2681,31L2681,32L2683,32L2683,31L2684,31L2684,32L2685,32L2685,33L2686,33L2686,33L2692,33L2692,34L2695,34L2695,34L2697,34L2697,35L2698,35L2698,35L2698,35" tabindex="0">
						<title>8wg52dlx</title>
					</path>
				</g>
				<g style="--index: 60;">
					<path d="M0,0L2660,0L2660,44L2661,44L2661,44L2662,44L2662,45L2663,45L2663,45L2665,45L2665,57L2676,57L2676,58L2681,58L2681,59L2684,59L2684,60L2685,60L2685,61L2686,61L2686,62L2692,62L2692,63L2695,63L2695,64L2697,64L2697,65L2698,65L2698,66L2698,66" tabindex="0">
						<title>86pek6wj</title>
					</path>
				</g>
				<g style="--index: 61;">
					<path d="M0,0L2660,0L2660,6L2661,6L2661,6L2662,6L2662,6L2663,6L2663,6L2676,6L2676,6L2681,6L2681,6L2684,6L2684,6L2685,6L2685,6L2686,6L2686,6L2692,6L2692,6L2695,6L2695,6L2697,6L2697,6L2698,6L2698,6L2698,6" tabindex="0">
						<title>867k5q5j</title>
					</path>
				</g>
				<g style="--index: 62;">
					<path d="M0,0L2661,0L2661,13L2662,13L2662,13L2663,13L2663,13L2676,13L2676,13L2681,13L2681,13L2684,13L2684,14L2685,14L2685,14L2686,14L2686,14L2692,14L2692,14L2695,14L2695,14L2697,14L2697,14L2698,14L2698,14L2698,14" tabindex="0">
						<title>jn15mm18</title>
					</path>
				</g>
				<g style="--index: 63;">
					<path d="M0,0L2662,0L2662,14L2663,14L2663,14L2676,14L2676,14L2681,14L2681,14L2684,14L2684,15L2685,15L2685,15L2686,15L2686,15L2692,15L2692,15L2695,15L2695,15L2697,15L2697,15L2698,15L2698,15L2698,15" tabindex="0">
						<title>j0164l3x</title>
					</path>
				</g>
				<g style="--index: 64;">
					<path d="M0,0L2663,0L2663,57L2665,57L2665,56L2676,56L2676,57L2681,57L2681,58L2684,58L2684,59L2685,59L2685,60L2686,60L2686,61L2692,61L2692,62L2695,62L2695,63L2697,63L2697,64L2698,64L2698,65L2698,65" tabindex="0">
						<title>jo1zrpnx</title>
					</path>
				</g>
				<g style="--index: 65;">
					<path d="M0,0L2676,0L2676,46L2681,46L2681,47L2684,47L2684,48L2685,48L2685,49L2686,49L2686,50L2690,50L2690,49L2692,49L2692,50L2695,50L2695,51L2697,51L2697,52L2698,52L2698,53L2698,53" tabindex="0">
						<title>8eeod1p8</title>
					</path>
				</g>
				<g style="--index: 66;">
					<path d="M0,0L2681,0L2681,29L2683,29L2683,32L2684,32L2684,38L2685,38L2685,39L2686,39L2686,40L2692,40L2692,41L2695,41L2695,42L2697,42L2697,43L2698,43L2698,44L2698,44" tabindex="0">
						<title>81v3d938</title>
					</path>
				</g>
				<g style="--index: 67;">
					<path d="M0,0L2684,0L2684,9L2685,9L2685,9L2686,9L2686,9L2692,9L2692,9L2695,9L2695,9L2697,9L2697,9L2698,9L2698,9L2698,9" tabindex="0">
						<title>xz5zw2nx</title>
					</path>
				</g>
				<g style="--index: 68;">
					<path d="M0,0L2685,0L2685,19L2686,19L2686,19L2692,19L2692,19L2695,19L2695,19L2697,19L2697,19L2698,19L2698,19L2698,19" tabindex="0">
						<title>8gzkpr2j</title>
					</path>
				</g>
				<g style="--index: 69;">
					<path d="M0,0L2686,0L2686,39L2692,39L2692,40L2695,40L2695,41L2697,41L2697,42L2698,42L2698,43L2698,43" tabindex="0">
						<title>jppqrz4j</title>
					</path>
				</g>
				<g style="--index: 70;">
					<path d="M0,0L2692,0L2692,31L2695,31L2695,31L2697,31L2697,32L2698,32L2698,32L2698,32" tabindex="0">
						<title>8gzn56rj</title>
					</path>
				</g>
				<g style="--index: 71;">
					<path d="M0,0L2695,0L2695,35L2697,35L2697,36L2698,36L2698,36L2698,36" tabindex="0">
						<title>j4wdz2lx</title>
					</path>
				</g>
				<g style="--index: 72;">
					<path d="M0,0L2697,0L2697,28L2698,28L2698,28L2698,28" tabindex="0">
						<title>8v7p6328</title>
					</path>
				</g>
				<g style="--index: 73;">
					<path d="M0,0L2698,0L2698,37L2698,37" tabindex="0">
						<title>xkzy0d7x</title>
					</path>
				</g>
			</g>
		</svg>
	</foreignObject>
</svg>
