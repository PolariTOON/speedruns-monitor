<svg xmlns="http://www.w3.org/2000/svg" lang="en">
	<title>Rank by player for leaderboard l_r9gn1qpd-9d8eewld-0nwoqwkl.klr25nj1</title>
	<metadata>
		<meta xmlns="http://www.w3.org/1999/xhtml" charset="utf-8" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="viewport" content="width=device-width" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="color-scheme" content="dark light" />
	</metadata>
	<style>
		*,
		::before,
		::after {
			box-sizing: border-box;
		}
		:root {
			background: var(--canvas-background);
			color: var(--canvas-foreground);
			fill: var(--canvas-background);
			stroke: var(--canvas-foreground);
			stroke-linejoin: round;
			stroke-linecap: round;
		}
		foreignObject {
			pointer-events: none;
		}
		foreignObject::before,
		foreignObject::after {
			content: "";
			position: absolute;
			z-index: 1;
			left: 20px;
			bottom: 20px;
			pointer-events: auto;
		}
		foreignObject::before {
			width: calc(100% - 40px);
			height: calc(20px + var(--date-size) * 1px);
		}
		foreignObject::after {
			width: calc(20px + var(--value-size) * 1px);
			height: calc(100% - 40px);
		}
		foreignObject &gt; div {
			position: absolute;
			z-index: 4;
			right: 0;
			top: 0;
			margin: 20px;
			border: 1px solid var(--canvas-foreground);
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			transition: opacity 1s;
			pointer-events: auto;
		}
		foreignObject:is(:hover, :focus-within) &gt; div:not(:hover, :focus-within) {
			opacity: 0;
			pointer-events: none;
		}
		foreignObject &gt; div &gt; p {
			margin: 0;
		}
		label {
			display: table;
			border-collapse: separate;
			border-spacing: 10px;
			direction: rtl;
		}
		progress,
		input[type="checkbox"] {
			display: table-cell;
			width: 16px;
			height: 16px;
			margin: 2px;
			accent-color: var(--canvas-foreground);
			vertical-align: top;
			direction: ltr;
		}
		progress + span,
		input[type="checkbox"] + span {
			display: table-cell;
			vertical-align: top;
			direction: ltr;
		}
		input[type="checkbox"]:not(:disabled):is(:hover, :focus-within) + span {
			text-decoration: underline;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			position: absolute;
			z-index: 2;
			margin: 0;
			padding: 10px;
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			font-weight: bold;
			pointer-events: auto;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg + svg {
			border-top: 1px solid #0000;
			border-bottom: 1px solid var(--canvas-foreground);
		}
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px dashed #0000;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg {
			width: calc(20px + var(--date-size) * 1px);
			height: 42px;
			bottom: 20px;
		}
		foreignObject &gt; svg:first-of-type {
			left: calc(40px + var(--value-size) * 1px);
			transform: rotate(90deg) translate(-100%, 0);
			transform-origin: left bottom;
		}
		foreignObject &gt; svg:first-of-type + svg {
			right: 20px;
			transform: rotate(90deg) translate(0, 100%);
			transform-origin: right bottom;
		}
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			width: calc(20px + var(--value-size) * 1px);
			height: 42px;
			left: 20px;
		}
		foreignObject &gt; svg:first-of-type + svg + svg {
			bottom: calc(40px + var(--date-size) * 1px);
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			top: 20px;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text {
			fill: var(--canvas-foreground);
			stroke: none;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text {
			cursor: vertical-text;
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg + svg {
			position: relative;
			z-index: 3;
			width: calc(100% - 60px - var(--value-size) * 1px);
			height: calc(100% - 60px - var(--date-size) * 1px);
			margin: 20px 20px calc(40px + var(--date-size) * 1px) calc(40px + var(--value-size) * 1px);
			border-left: 1px solid var(--canvas-foreground);
			border-right: 1px dashed var(--canvas-foreground);
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px solid var(--canvas-foreground);
			background: var(--canvas-background);
			pointer-events: auto;
		}
		g &gt; rect {
			vector-effect: non-scaling-stroke;
			fill: var(--highlighted);
			stroke: none;
		}
		g &gt; rect[tabindex] {
			fill: var(--tier, #0000);
			cursor: help;
		}
		g &gt; rect[tabindex][data-tier="diamond"] {
			--tier: var(--diamond);
		}
		g &gt; rect[tabindex][data-tier="gold"] {
			--tier: var(--gold);
		}
		g &gt; rect[tabindex][data-tier="silver"] {
			--tier: var(--silver);
		}
		g &gt; rect[tabindex][data-tier="bronze"] {
			--tier: var(--bronze);
		}
		g &gt; path[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: hsl(calc(var(--index) / var(--count) * 360), 50%, 50%);
			cursor: help;
		}
		g:is(:hover, :focus-within) &gt; path[tabindex] {
			stroke: var(--canvas-foreground);
		}
		g &gt; path[tabindex]:is(:hover, :focus-within) {
			outline: 0;
		}
		g &gt; path[tabindex]:first-of-type {
			stroke-width: 2;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) {
			stroke-width: 4;
		}
		g &gt; path[tabindex]:first-of-type:not(:last-of-type) {
			stroke-dasharray: 4 8;
		}
		g &gt; path[tabindex]:first-of-type + rect {
			fill: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect {
			fill: var(--highlighted);
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] {
			stroke-width: 8;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) {
			stroke-width: 16;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line + line {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			stroke-width: 2;
			stroke-dasharray: 4 8;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line + line {
			stroke: var(--faded);
		}
		@media (prefers-color-scheme: dark) {
			:root {
				--canvas-background: #000;
				--canvas-foreground: #ccc;
				--diamond: #0363;
				--gold: #6303;
				--silver: #3633;
				--bronze: #6363;
				--highlighted: #6663;
				--faded: #9993;
			}
		}
		@media (prefers-color-scheme: light) {
			:root {
				--canvas-background: #fff;
				--canvas-foreground: #333;
				--diamond: #9cf3;
				--gold: #fc93;
				--silver: #9c93;
				--bronze: #c9c3;
				--highlighted: #9993;
				--faded: #6663;
			}
		}
	</style>
	<script>
		"use strict";
		{
			const script = document.currentScript;
			const documentUrl = location.href;
			const scope = new URL("../../", documentUrl).pathname;
			const playersKey = `${scope}#players`;
			const leaderboardsKey = `${scope}#leaderboards`;
			const sessionKey = `${scope}#session`;
			const lockKey = `${scope}#lock`;
			async function importDataScript(dataScriptUrl, signal) {
				signal.throwIfAborted();
				if (documentUrl.protocol !== "file:") {
					const response = await fetch(dataScriptUrl, {
						signal,
					});
					if (!response.ok) {
						throw new Error(response.statusText);
					}
					const data = await response.json();
					return data;
				}
				return await new Promise((resolve, reject) =&gt; {
					const name = `callback${Math.random() * 2 ** 53}`;
					let called = false;
					let data = null;
					function callback(value) {
						if (!called) {
							called = true;
							data = value;
						}
					}
					window[name] = callback;
					const dataScript = document.createElementNS("http://www.w3.org/2000/svg", "script");
					dataScript.href = `${dataScriptUrl}&amp;callback=${name}`;
					function handleAbort(event) {
						delete window[name];
						dataScript.removeEventListener("error", handleError);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const reason = signal.reason;
						reject(reason);
					}
					function handleError(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const error = event.error;
						reject(error);
					}
					function handleLoad(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("error", handleError);
						dataScript.remove();
						resolve(data);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					dataScript.addEventListener("error", handleError, {
						once: true,
					});
					dataScript.addEventListener("load", handleLoad, {
						once: true,
					});
					script.after(dataScript);
				});
			}
			async function waitForTimeout(delay, signal) {
				signal.throwIfAborted();
				return await new Promise((resolve, reject) =&gt; {
					let timeout = null;
					function handleAbort() {
						clearTimeout(timeout);
						const reason = signal.reason;
						reject(reason);
					}
					function handleTimeout() {
						signal.removeEventListener("abort", handleAbort);
						resolve(delay);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					timeout = setTimeout(handleTimeout, delay);
				});
			}
			window.addEventListener("pageshow", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully restored page from cache`);
				} else {
					console.log(`Unsuccessfully restored page from cache`);
				}
			});
			window.addEventListener("pagehide", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully saved page to cache`);
				} else {
					console.log(`Unsuccessfully saved page to cache`);
				}
			});
			window.addEventListener("pageshow", async (event) =&gt; {
				const rootTitleElement = document.querySelector("title");
				const rootTitleContent = rootTitleElement.textContent;
				const pathTitleElements = Array.from(document.querySelectorAll("g &gt; path[tabindex]:first-of-type &gt; title"));
				const pathTitleContents = pathTitleElements.map((pathTitleElement) =&gt; {
					const pathTitleContent = pathTitleElement.textContent;
					return pathTitleContent;
				});
				const foreignObject = document.querySelector("foreignObject");
				const div = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
				div.dir = "ltr";
				const p = document.createElementNS("http://www.w3.org/1999/xhtml", "p");
				const label = document.createElementNS("http://www.w3.org/1999/xhtml", "label");
				const progress = document.createElementNS("http://www.w3.org/1999/xhtml", "progress");
				label.append(progress);
				const span = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
				span.textContent = "Loading names";
				label.append(span);
				p.append(label);
				div.append(p);
				foreignObject.prepend(div);
				let lock = false;
				let session = null;
				const broadcastChannel = new BroadcastChannel(sessionKey);
				const abortController = new AbortController();
				const signal = abortController.signal;
				const abort = abortController.abort.bind(abortController);
				const {promise, resolve} = Promise.withResolvers();
				broadcastChannel.addEventListener("message", (event) =&gt; {
					const data = event.data;
					const type = data.type;
					switch (type) {
						case "request": {
							if (lock &amp;&amp; signal.aborted) {
								broadcastChannel.postMessage({
									type: "response",
									session,
								});
							}
							break;
						}
						case "response": {
							if (!signal.aborted) {
								session = data.session;
								if (session != null) {
									const {players, leaderboards} = session;
									try {
										const cachedPlayers = JSON.stringify(players);
										const cachedLeaderboards = JSON.stringify(leaderboards);
										sessionStorage.setItem(playersKey, cachedPlayers);
										sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
									} catch {}
									console.log(`Successfully loaded names from peer`);
									abort();
									resolve();
								} else {
									console.log(`Unsuccessfully loaded names from peer`);
									abort();
									resolve();
								}
							}
							break;
						}
					}
				});
				try {
					const cachedPlayers = sessionStorage.getItem(playersKey);
					const cachedLeaderboards = sessionStorage.getItem(leaderboardsKey);
					if (cachedPlayers == null || cachedLeaderboards == null) {
						throw new Error();
					}
					const players = JSON.parse(cachedPlayers);
					const leaderboards = JSON.parse(cachedLeaderboards);
					session = {players, leaderboards};
				} catch {}
				if (session != null) {
					broadcastChannel.postMessage({
						type: "response",
						session,
					});
					console.log(`Successfully loaded names from local`);
					abort();
					resolve();
				} else {
					broadcastChannel.postMessage({
						type: "request",
					});
					console.log(`Unsuccessfully loaded names from local`);
				}
				(async () =&gt; {
					for (;;) {
						await navigator.locks.request(lockKey, async () =&gt; {
							lock = true;
							console.log(`Acquired lock`);
							if (!signal.aborted) {
								try {
									const players = Object.create(null);
									const leaderboards = Object.create(null);
									const games = ["9d3rrxyd", "w6jl2ned"];
									for (const gameId of games) {
										const {data} = await importDataScript(`https://www.speedrun.com/api/v1/games/${gameId}?embed=categories,levels,variables`, signal);
										const versions = data.variables.data.find((variable) =&gt; {
											return variable.name === "Version";
										});
										const levels = Object.fromEntries(data.levels.data.map((level) =&gt; {
											return [level.id, level];
										}));
										const categories = Object.fromEntries(data.categories.data.map((category) =&gt; {
											return [category.id, category];
										}));
										const variables = Object.fromEntries(data.variables.data.map((variable) =&gt; {
											return [variable.id, variable];
										}));
										console.log(`Got game`);
										await waitForTimeout(800, signal);
										const slice = 200;
										for (let offset = 0;; offset += slice) {
											const {data, pagination} = await importDataScript(`https://www.speedrun.com/api/v1/runs?game=${gameId}&amp;orderby=date&amp;direction=asc&amp;embed=players&amp;offset=${offset}&amp;max=${slice}`, signal);
											const {size} = pagination;
											if (size === 0) {
												break;
											}
											for (const run of data) {
												const status = run.status.status;
												if (status == null || status === "new") {
													continue;
												}
												const player = run.players.data[0].rel === "user" ? run.players.data[0].id : "814p2558";
												const playerName = run.players.data[0].rel === "user" ? run.players.data[0].names.international : "anonymous";
												players[player] ??= playerName;
												const level = run.level;
												const category = run.category;
												const values = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return `-${variable}.${value}`;
												});
												const leaderboard = `${level != null ? `l_${level}-` : ""}${category}${values.join("")}`;
												const levelName = run.level != null ? levels[run.level]?.name ?? null : null;
												const categoryName = categories[run.category]?.name ?? null;
												const valueNames = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return variables[variable]?.values.values[value]?.label ?? null;
												}).filter((valueName) =&gt; {
													return valueName != null;
												});
												const leaderboardName = `${levelName != null ? `${levelName}: ` : ""}${categoryName ?? ""}${values.length !== 0 ? ` - ${valueNames.join(", ")}` : ""}`;
												leaderboards[leaderboard] ??= leaderboardName;
											}
											console.log(`Got runs ${offset}-${offset + size - 1}`);
											await waitForTimeout(800, signal);
										}
									}
									session = {players, leaderboards};
								} catch {}
								if (!signal.aborted) {
									if (session != null) {
										const {players, leaderboards} = session;
										try {
											const cachedPlayers = JSON.stringify(players);
											const cachedLeaderboards = JSON.stringify(leaderboards);
											sessionStorage.setItem(playersKey, cachedPlayers);
											sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
										} catch {}
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Successfully loaded names from remote`);
										abort();
										resolve();
									} else {
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Unsuccessfully loaded names from remote`);
										abort();
										resolve();
									}
								}
							}
							await new Promise((resolve) =&gt; {
								window.addEventListener("beforeunload", () =&gt; {
									resolve();
								}, {
									once: true,
								});
							});
						});
						lock = false;
						console.log(`Released lock`);
						await new Promise((resolve) =&gt; {
							window.addEventListener("pagehide", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
						await new Promise((resolve) =&gt;{
							window.addEventListener("pageshow", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
					}
				})();
				await promise;
				if (session == null) {
					const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
					input.type = "checkbox";
					input.autocomplete = "off";
					input.disabled = true;
					input.indeterminate = true;
					progress.replaceWith(input);
					span.textContent = "Unavailable names";
					return;
				}
				const {players, leaderboards} = session;
				const hasPlayerRoot = rootTitleContent.includes(" for player");
				const hasLeaderboardRoot = rootTitleContent.includes(" for leaderboard");
				const rootTitle = {
					element: rootTitleElement,
					contentWithIds: rootTitleContent,
					contentWithNames: hasPlayerRoot ? rootTitleContent.replace(/ for player ([0-9_a-z]+)/, ($0, $1) =&gt; {
						return ` for player ${players[$1] ?? $1}`;
					}) : hasLeaderboardRoot ? rootTitleContent.replace(/ for leaderboard ((?:l_[0-9_a-z]+-)?[0-9_a-z]+(-[0-9_a-z]+\.[0-9_a-z]+)*)/, ($0, $1) =&gt; {
						return ` for leaderboard ${leaderboards[$1] ?? $1}`;
					}) : rootTitleContent,
				};
				const hasPlayerPaths = rootTitleContent.includes(" by player");
				const hasLeaderboardPaths = rootTitleContent.includes(" by leaderboard");
				const pathTitles = pathTitleElements.map((pathTitleElement, k) =&gt; {
					const pathTitleContent = pathTitleContents[k];
					const pathTitle = {
						element: pathTitleElement,
						contentWithIds: pathTitleContent,
						contentWithNames: hasPlayerPaths ? players[pathTitleContent] ?? pathTitleContent : hasLeaderboardPaths ? leaderboards[pathTitleContent] ?? pathTitleContent : pathTitleContent,
					};
					return pathTitle;
				});
				const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
				input.type = "checkbox";
				input.autocomplete = "off";
				input.addEventListener("change", () =&gt; {
					input.disabled = true;
					if (input.checked) {
						rootTitle.element.textContent = rootTitle.contentWithNames;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithNames;
						}
					} else {
						rootTitle.element.textContent = rootTitle.contentWithIds;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithIds;
						}
					}
					input.disabled = false;
				});
				progress.replaceWith(input);
				span.textContent = "Reveal names";
			}, {
				once: true,
			});
		}
	</script>
	<script>
		"use strict";
		{
			document.addEventListener("DOMContentLoaded", (event) =&gt; {
				const minDateText = document.querySelector("foreignObject &gt; svg:first-of-type &gt; text");
				const maxDateText = document.querySelector("foreignObject &gt; svg:first-of-type + svg &gt; text");
				const startX = Math.round(Date.parse(minDateText.textContent) / 86400000);
				function xToDate(x) {
					const datetime = new Date((startX + x) * 86400000);
					const year = `${datetime.getUTCFullYear()}`.padStart(4, "0");
					const month = `${datetime.getUTCMonth() + 1}`.padStart(2, "0");
					const day = `${datetime.getUTCDate()}`.padStart(2, "0");
					const date = `${year}-${month}-${day}`;
					const size = date.length * 10;
					return {date, size};
				}
				function setMinDate(x) {
					const {date, size} = xToDate(Math.floor(x));
					minDateText.textLength.baseVal.value = size;
					minDateText.textContent = date;
				}
				function setMaxDate(x) {
					const {date, size} = xToDate(Math.ceil(x));
					maxDateText.textLength.baseVal.value = size;
					maxDateText.textContent = date;
				}
				const minValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg &gt; text");
				const maxValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text");
				const timed = minValueText.textContent.includes(":");
				function yToValue(y) {
					if (timed) {
						const minutes = `${(y - y % 6000) / 6000}`.padStart(2, "0");
						const seconds = `${(y - y % 100) / 100 % 60}`.padStart(2, "0");
						const centiseconds = `${y % 100}`.padStart(2, "0");
						const value = `${minutes}:${seconds}.${centiseconds}`;
						const size = value.length * 10;
						return {value, size};
					} else {
						const value = `${y}`;
						const size = value.length * 10;
						return {value, size};
					}
				}
				function setMinValue(y) {
					const {value, size} = yToValue(Math.floor(y));
					minValueText.textLength.baseVal.value = size;
					minValueText.textContent = value;
				}
				function setMaxValue(y) {
					const {value, size} = yToValue(Math.ceil(y));
					maxValueText.textLength.baseVal.value = size;
					maxValueText.textContent = value;
				}
				const svg = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg + svg");
				svg.tabIndex = -1;
				svg.style.setProperty("outline", "0");
				if (CSS.supports("overflow-clip-margin", "8px")) {
					svg.style.setProperty("overflow", "clip");
					svg.style.setProperty("overflow-clip-margin", "8px");
				}
				svg.style.setProperty("touch-action", "none");
				const {x: baseX, y: baseY, width: baseWidth, height: baseHeight} = svg.viewBox.baseVal;
				let pointerCount = 0;
				const pointers = Object.create(null);
				const xPointerIds = [];
				const yPointerIds = [];
				let x = null;
				let y = null;
				let width = null;
				let height = null;
				svg.addEventListener("pointerdown", (event) =&gt; {
					const {pointerId} = event;
					if (pointerId in pointers) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.setPointerCapture(pointerId);
					++pointerCount;
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId] = {
						offsetX,
						offsetY,
					};
					xPointerIds.splice(xPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetX &lt;= offsetX;
					}) + 1, 0, pointerId);
					yPointerIds.splice(yPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetY &lt;= offsetY;
					}) + 1, 0, pointerId);
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					width = Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth);
					height = Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight);
					x = Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX);
					y = Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY);
				});
				svg.addEventListener("pointerup", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.releasePointerCapture(pointerId);
					--pointerCount;
					delete pointers[pointerId];
					xPointerIds.splice(xPointerIds.lastIndexOf(pointerId), 1);
					yPointerIds.splice(yPointerIds.lastIndexOf(pointerId), 1);
					const minOffsetX = pointerCount !== 0 ? pointers[xPointerIds[0]].offsetX : null;
					const minOffsetY = pointerCount !== 0 ? pointers[yPointerIds[0]].offsetY : null;
					const maxClientWidth = pointerCount !== 0 ? pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX : null;
					const maxClientHeight = pointerCount !== 0 ? pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY : null;
					width = pointerCount !== 0 ? Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth) : null;
					height = pointerCount !== 0 ? Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight) : null;
					x = pointerCount !== 0 ? Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX) : null;
					y = pointerCount !== 0 ? Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY) : null;
				});
				svg.addEventListener("pointermove", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					event.preventDefault();
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId].offsetX = offsetX;
					pointers[pointerId].offsetY = offsetY;
					const oldXIndex = xPointerIds.lastIndexOf(pointerId);
					let newXIndex = oldXIndex;
					while (newXIndex &gt; 0 &amp;&amp; pointers[xPointerIds[newXIndex - 1]].offsetX &gt; offsetX) {
						--newXIndex;
					}
					xPointerIds.copyWithin(newXIndex + 1, newXIndex, oldXIndex);
					xPointerIds[newXIndex] = pointerId;
					while (newXIndex &lt; pointerCount - 1 &amp;&amp; pointers[xPointerIds[newXIndex + 1]].offsetX &lt; offsetX) {
						++newXIndex;
					}
					xPointerIds.copyWithin(oldXIndex, oldXIndex + 1, newXIndex + 1);
					xPointerIds[newXIndex] = pointerId;
					const oldYIndex = yPointerIds.lastIndexOf(pointerId);
					let newYIndex = oldYIndex;
					while (newYIndex &gt; 0 &amp;&amp; pointers[yPointerIds[newYIndex - 1]].offsetY &gt; offsetY) {
						--newYIndex;
					}
					yPointerIds.copyWithin(newYIndex + 1, newYIndex, oldYIndex);
					yPointerIds[newYIndex] = pointerId;
					while (newYIndex &lt; pointerCount - 1 &amp;&amp; pointers[yPointerIds[newYIndex + 1]].offsetY &lt; offsetY) {
						++newYIndex;
					}
					yPointerIds.copyWithin(oldYIndex, oldYIndex + 1, newYIndex + 1);
					yPointerIds[newYIndex] = pointerId;
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					animWidth = width === 0 ? animWidth : maxClientWidth === 0 ? baseWidth : Math.min(svg.clientWidth / maxClientWidth * width, baseWidth);
					animHeight = height === 0 ? animHeight : maxClientHeight === 0 ? baseHeight : Math.min(svg.clientHeight / maxClientHeight * height, baseHeight);
					animX = Math.max(Math.min(x - minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(y - minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
				const zoomIntensity = 1.25;
				svg.addEventListener("wheel", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					if (!ctrlKey) {
						const vectorX = (shiftKey ? event.deltaY : event.deltaX) / svg.clientWidth * animWidth;
						const vectorY = (shiftKey ? 0 : event.deltaY) / svg.clientHeight * animHeight;
						animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
						animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
						svg.viewBox.baseVal.x = animX;
						svg.viewBox.baseVal.y = animY;
						setMinDate(animX);
						setMaxDate(animX + animWidth);
						setMinValue(baseY * 2 + baseHeight - animHeight - animY);
						setMaxValue(baseY * 2 + baseHeight - animY);
						return;
					}
					const ratioX = zoomIntensity ** Math.sign(shiftKey ? event.deltaY : event.deltaX);
					const ratioY = zoomIntensity ** Math.sign(shiftKey ? 0 : event.deltaY);
					const positionX = Math.max(0, Math.min(event.offsetX / svg.clientWidth, 1)) * animWidth;
					const positionY = Math.max(0, Math.min(event.offsetY / svg.clientHeight, 1)) * animHeight;
					animWidth = Math.min(animWidth * ratioX, baseWidth);
					animHeight = Math.min(animHeight * ratioY, baseHeight);
					animX = Math.max(Math.min(animX + positionX * (1 - ratioX), baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(animY + positionY * (1 - ratioY), baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				}, {
					passive: false,
				});
				svg.addEventListener("keydown", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					switch (event.code) {
						case "Space": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "Equal":
						case "NumpadAdd":
						case "Minus":
						case "NumpadSubtract": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.code === "Minus" || event.code === "NumpadSubtract" ? zoomIntensity : 1 / zoomIntensity;
							if (!shiftKey) {
								animHeight = Math.min(animHeight * ratio, baseHeight);
								animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "Digit0":
						case "Numpad0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							if (!shiftKey) {
								animY = baseY;
								animHeight = baseHeight;
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animX = baseX;
							animWidth = baseWidth;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
					}
					switch (event.key) {
						case "ArrowRight": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = 50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowLeft": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = -50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowDown": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = 50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "End": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY + baseHeight - animHeight;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "ArrowUp": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = -50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "Home": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "PageDown":
						case "PageUp":
						case " ": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = event.key === "PageUp" || event.key === " " &amp;&amp; shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "+":
						case "-": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.key === "-" ? 1 / zoomIntensity : zoomIntensity;
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animHeight = Math.min(animHeight * ratio, baseHeight);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animX = baseX;
							animY = baseY;
							animWidth = baseWidth;
							animHeight = baseHeight;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
					}
				});
				svg.addEventListener("focusin", (event) =&gt; {
					if (!event.target.matches(":focus-visible")) {
						return;
					}
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					let {x, y, width, height} = event.target.getBBox();
					width = Math.round(width);
					height = Math.round(height);
					x = Math.round(x);
					y = baseY * 2 + baseHeight - height - Math.round(y);
					if (x + width &lt; animX) {
						animX = x;
						if (width &gt; animWidth) {
							animX += (width - animWidth) / 2;
						}
					} else if (x &gt; animX + animWidth) {
						animX = x + width - animWidth;
						if (width &gt; animWidth) {
							animX -= (width - animWidth) / 2;
						}
					}
					if (y + height &lt; animY) {
						animY = y;
						if (height &gt; animHeight) {
							animY += (height - animHeight) / 2;
						}
					} else if (y &gt; animY + animHeight) {
						animY = y + height - animHeight;
						if (height &gt; animHeight) {
							animY -= (height - animHeight) / 2;
						}
					}
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
			}, {
				once: true,
			});
		}
	</script>
	<foreignObject x="0" y="0" width="100%" height="100%" style="--date-size: 100; --value-size: 30;">
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2022-11-13</text>
		</svg>
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2025-04-27</text>
		</svg>
		<svg viewBox="0 0 30 20">
			<text x="15" y="10" dx="0" dy="2" textLength="10" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">0</text>
		</svg>
		<svg viewBox="0 0 30 20">
			<text x="15" y="10" dx="0" dy="2" textLength="30" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">122</text>
		</svg>
		<svg viewBox="0 0 896 122" preserveAspectRatio="none" overflow="visible">
			<g transform="translate(0 122) scale(1 -1)" style="--count: 123;">
				<g>
					<rect x="0" y="0" width="896" height="122"/>
				</g>
				<g style="--index: 0;">
					<path d="M0,0L0,0L0,0L17,0L17,1L21,1L21,2L25,2L25,3L29,3L29,4L35,4L35,5L48,5L48,6L53,6L53,8L66,8L66,9L67,9L67,10L72,10L72,11L85,11L85,12L90,12L90,13L92,13L92,15L96,15L96,17L97,17L97,18L106,18L106,19L114,19L114,20L119,20L119,21L124,21L124,22L128,22L128,23L139,23L139,24L140,24L140,25L144,25L144,26L148,26L148,27L150,27L150,28L153,28L153,29L154,29L154,30L174,30L174,31L182,31L182,32L189,32L189,33L196,33L196,34L197,34L197,35L199,35L199,36L209,36L209,37L210,37L210,38L223,38L223,39L230,39L230,40L233,40L233,41L253,41L253,42L305,42L305,43L316,43L316,44L323,44L323,45L338,45L338,46L350,46L350,48L356,48L356,49L364,49L364,50L391,50L391,51L420,51L420,52L445,52L445,53L484,53L484,54L487,54L487,55L508,55L508,56L511,56L511,57L518,57L518,58L543,58L543,59L553,59L553,60L555,60L555,61L561,61L561,62L591,62L591,63L617,63L617,65L624,65L624,66L632,66L632,67L645,67L645,68L646,68L646,69L653,69L653,70L658,70L658,71L662,71L662,72L664,72L664,73L686,73L686,74L694,74L694,75L714,75L714,76L719,76L719,77L720,77L720,79L735,79L735,80L747,80L747,81L753,81L753,82L756,82L756,83L762,83L762,84L765,84L765,85L801,85L801,86L811,86L811,87L812,87L812,88L822,88L822,90L824,90L824,91L827,91L827,92L832,92L832,93L841,93L841,94L848,94L848,95L850,95L850,97L855,97L855,98L856,98L856,100L859,100L859,101L862,101L862,102L866,102L866,103L879,103L879,104L880,104L880,106L882,106L882,107L883,107L883,108L884,108L884,109L888,109L888,110L889,110L889,111L891,111L891,112L896,112L896,113L896,113" tabindex="0">
						<title>jmzygrox</title>
					</path>
				</g>
				<g style="--index: 1;">
					<path d="M0,1L17,1L17,0L21,0L21,1L25,1L25,2L29,2L29,3L35,3L35,4L48,4L48,5L53,5L53,7L66,7L66,8L67,8L67,9L72,9L72,10L91,10L91,11L92,11L92,13L96,13L96,14L97,14L97,15L114,15L114,16L119,16L119,17L128,17L128,18L139,18L139,19L144,19L144,20L148,20L148,21L150,21L150,22L154,22L154,23L182,23L182,24L189,24L189,25L196,25L196,26L197,26L197,27L199,27L199,28L210,28L210,29L230,29L230,30L233,30L233,31L305,31L305,32L316,32L316,33L338,33L338,34L350,34L350,36L356,36L356,37L391,37L391,38L420,38L420,39L445,39L445,40L484,40L484,41L487,41L487,42L511,42L511,43L518,43L518,44L543,44L543,45L553,45L553,46L555,46L555,47L561,47L561,48L591,48L591,49L617,49L617,50L624,50L624,51L632,51L632,52L645,52L645,53L646,53L646,54L653,54L653,55L658,55L658,56L662,56L662,57L664,57L664,58L686,58L686,59L694,59L694,60L714,60L714,61L719,61L719,62L720,62L720,64L735,64L735,65L747,65L747,66L753,66L753,67L765,67L765,68L811,68L811,69L812,69L812,70L822,70L822,71L824,71L824,72L827,72L827,73L832,73L832,74L848,74L848,75L850,75L850,76L856,76L856,78L859,78L859,79L866,79L866,80L879,80L879,81L880,81L880,83L882,83L882,84L883,84L883,85L884,85L884,86L888,86L888,87L889,87L889,88L891,88L891,89L896,89L896,90L896,90" tabindex="0">
						<title>jp6k1558</title>
					</path>
				</g>
				<g style="--index: 2;">
					<path d="M0,2L21,2L21,0L35,0L35,1L48,1L48,2L53,2L53,3L67,3L67,4L72,4L72,5L96,5L96,6L114,6L114,7L124,7L124,8L144,8L144,9L148,9L148,10L182,10L182,11L197,11L197,12L199,12L199,13L210,13L210,14L233,14L233,15L316,15L316,16L350,16L350,17L407,17L407,18L520,18L520,19L555,19L555,20L591,20L591,21L594,21L594,22L632,22L632,23L645,23L645,24L646,24L646,25L658,25L658,26L686,26L686,27L714,27L714,28L719,28L719,29L720,29L720,31L735,31L735,32L774,32L774,33L822,33L822,34L824,34L824,35L827,35L827,36L832,36L832,37L848,37L848,38L859,38L859,39L866,39L866,40L877,40L877,41L879,41L879,42L880,42L880,43L882,43L882,44L884,44L884,45L889,45L889,46L896,46" tabindex="0">
						<title>x76omlvj</title>
					</path>
				</g>
				<g style="--index: 3;">
					<path d="M0,3L25,3L25,1L29,1L29,2L35,2L35,3L48,3L48,4L53,4L53,6L66,6L66,7L67,7L67,8L72,8L72,9L92,9L92,10L96,10L96,11L114,11L114,12L119,12L119,13L128,13L128,14L144,14L144,15L148,15L148,16L150,16L150,17L154,17L154,18L182,18L182,19L189,19L189,20L197,20L197,21L199,21L199,22L210,22L210,23L233,23L233,24L316,24L316,25L350,25L350,26L391,26L391,27L420,27L420,28L484,28L484,29L487,29L487,30L511,30L511,31L543,31L543,32L553,32L553,33L555,33L555,34L591,34L591,35L594,35L594,36L624,36L624,37L632,37L632,38L645,38L645,39L646,39L646,40L653,40L653,41L658,41L658,42L664,42L664,43L686,43L686,44L714,44L714,45L719,45L719,46L720,46L720,48L735,48L735,49L753,49L753,50L765,50L765,51L774,51L774,52L811,52L811,53L812,53L812,54L822,54L822,55L824,55L824,56L827,56L827,57L832,57L832,58L848,58L848,59L850,59L850,60L856,60L856,61L859,61L859,62L866,62L866,63L879,63L879,64L880,64L880,65L882,65L882,66L884,66L884,67L889,67L889,68L891,68L891,69L896,69L896,70L896,70" tabindex="0">
						<title>8g0ezgyx</title>
					</path>
				</g>
				<g style="--index: 4;">
					<path d="M0,4L29,4L29,1L35,1L35,2L48,2L48,3L53,3L53,4L67,4L67,5L72,5L72,6L96,6L96,7L114,7L114,8L124,8L124,9L144,9L144,10L148,10L148,11L182,11L182,12L197,12L197,13L199,13L199,14L210,14L210,15L233,15L233,16L316,16L316,17L350,17L350,18L407,18L407,19L520,19L520,20L555,20L555,21L591,21L591,22L594,22L594,23L624,23L624,24L632,24L632,25L645,25L645,26L646,26L646,27L658,27L658,28L686,28L686,29L714,29L714,30L719,30L719,31L720,31L720,33L735,33L735,34L774,34L774,35L822,35L822,36L824,36L824,37L827,37L827,38L832,38L832,39L848,39L848,40L859,40L859,41L866,41L866,42L877,42L877,43L879,43L879,44L880,44L880,45L882,45L882,46L884,46L884,47L889,47L889,48L891,48L891,49L896,49L896,50L896,50" tabindex="0">
						<title>8d0yd3gx</title>
					</path>
				</g>
				<g style="--index: 5;">
					<path d="M0,5L35,5L35,0L53,0L53,1L67,1L67,2L72,2L72,3L114,3L114,4L115,4L115,5L144,5L144,6L148,6L148,7L210,7L210,8L233,8L233,9L316,9L316,10L407,10L407,11L591,11L591,12L594,12L594,13L646,13L646,15L686,15L686,16L714,16L714,17L720,17L720,18L735,18L735,19L774,19L774,20L822,20L822,21L827,21L827,22L848,22L848,23L859,23L859,24L866,24L866,25L872,25L872,26L877,26L877,27L880,27L880,28L882,28L882,29L884,29L884,30L889,30L889,31L896,31" tabindex="0">
						<title>j4235d5x</title>
					</path>
				</g>
				<g style="--index: 6;">
					<path d="M0,6L48,6L48,1L53,1L53,2L67,2L67,3L72,3L72,4L114,4L114,5L115,5L115,6L124,6L124,7L144,7L144,8L148,8L148,9L182,9L182,10L197,10L197,11L199,11L199,12L210,12L210,13L233,13L233,14L316,14L316,15L350,15L350,16L407,16L407,17L520,17L520,18L555,18L555,19L591,19L591,20L594,20L594,21L632,21L632,22L645,22L645,23L646,23L646,24L658,24L658,25L686,25L686,26L714,26L714,27L719,27L719,28L720,28L720,30L735,30L735,31L774,31L774,32L822,32L822,33L824,33L824,34L827,34L827,35L832,35L832,36L848,36L848,37L859,37L859,38L866,38L866,39L877,39L877,40L879,40L879,41L880,41L880,42L882,42L882,43L884,43L884,44L889,44L889,45L896,45" tabindex="0">
						<title>8loqvyv8</title>
					</path>
				</g>
				<g style="--index: 7;">
					<path d="M0,7L53,7L53,5L66,5L66,6L67,6L67,7L72,7L72,8L96,8L96,9L114,9L114,10L119,10L119,11L128,11L128,12L144,12L144,13L148,13L148,14L150,14L150,15L182,15L182,16L189,16L189,17L197,17L197,18L199,18L199,19L210,19L210,20L233,20L233,21L316,21L316,22L350,22L350,23L391,23L391,24L420,24L420,25L484,25L484,26L487,26L487,27L511,27L511,28L543,28L543,29L553,29L553,30L555,30L555,31L591,31L591,32L594,32L594,33L624,33L624,34L632,34L632,35L645,35L645,36L646,36L646,37L658,37L658,38L664,38L664,39L686,39L686,40L714,40L714,41L719,41L719,42L720,42L720,44L735,44L735,45L753,45L753,46L774,46L774,47L811,47L811,48L812,48L812,49L822,49L822,50L824,50L824,51L827,51L827,52L832,52L832,53L848,53L848,54L850,54L850,55L856,55L856,56L859,56L859,57L866,57L866,58L879,58L879,59L880,59L880,60L882,60L882,61L884,61L884,62L889,62L889,63L891,63L891,64L896,64L896,65L896,65" tabindex="0">
						<title>x3w5592j</title>
					</path>
				</g>
				<g style="--index: 8;">
					<path d="M0,8L53,8L53,0L67,0L67,1L72,1L72,2L114,2L114,3L115,3L115,4L144,4L144,5L148,5L148,6L210,6L210,7L233,7L233,8L316,8L316,9L407,9L407,10L591,10L591,11L646,11L646,13L686,13L686,14L714,14L714,15L720,15L720,16L735,16L735,17L822,17L822,18L827,18L827,19L848,19L848,20L859,20L859,21L866,21L866,22L872,22L872,23L877,23L877,24L880,24L880,25L882,25L882,26L884,26L884,27L889,27L889,28L896,28" tabindex="0">
						<title>jmzpr4yx</title>
					</path>
				</g>
				<g style="--index: 9;">
					<path d="M0,9L58,9L58,9L66,9L66,10L67,10L67,11L72,11L72,12L85,12L85,13L90,13L90,14L92,14L92,16L96,16L96,18L97,18L97,19L106,19L106,20L114,20L114,21L119,21L119,22L124,22L124,23L128,23L128,24L139,24L139,25L140,25L140,26L144,26L144,27L148,27L148,28L150,28L150,29L153,29L153,30L154,30L154,31L174,31L174,32L175,32L175,33L182,33L182,34L184,34L184,35L189,35L189,36L196,36L196,37L197,37L197,38L199,38L199,39L209,39L209,40L210,40L210,41L223,41L223,42L230,42L230,43L233,43L233,44L253,44L253,45L264,45L264,46L305,46L305,47L316,47L316,48L323,48L323,49L338,49L338,50L344,50L344,51L350,51L350,53L356,53L356,54L364,54L364,55L391,55L391,56L420,56L420,57L445,57L445,58L484,58L484,59L487,59L487,60L488,60L488,61L508,61L508,62L511,62L511,63L518,63L518,64L543,64L543,65L553,65L553,66L555,66L555,67L561,67L561,68L591,68L591,69L617,69L617,71L624,71L624,72L632,72L632,73L645,73L645,74L646,74L646,75L653,75L653,76L658,76L658,77L662,77L662,78L664,78L664,79L674,79L674,80L686,80L686,81L694,81L694,82L714,82L714,83L719,83L719,84L720,84L720,86L735,86L735,87L747,87L747,88L753,88L753,89L756,89L756,90L762,90L762,91L765,91L765,92L799,92L799,93L801,93L801,94L811,94L811,95L812,95L812,96L816,96L816,97L822,97L822,99L824,99L824,100L827,100L827,101L832,101L832,102L841,102L841,103L848,103L848,104L850,104L850,106L855,106L855,107L856,107L856,109L859,109L859,110L862,110L862,111L866,111L866,112L879,112L879,113L880,113L880,115L882,115L882,116L883,116L883,117L884,117L884,118L888,118L888,119L889,119L889,120L891,120L891,121L896,121L896,122L896,122" tabindex="0">
						<title>8rlymed8</title>
					</path>
				</g>
				<g style="--index: 10;">
					<path d="M0,10L66,10L66,5L67,5L67,6L72,6L72,7L96,7L96,8L114,8L114,9L124,9L124,10L144,10L144,11L148,11L148,12L182,12L182,13L189,13L189,14L197,14L197,15L199,15L199,16L210,16L210,17L233,17L233,18L316,18L316,19L350,19L350,20L391,20L391,21L420,21L420,22L511,22L511,23L520,23L520,24L543,24L543,25L553,25L553,26L555,26L555,27L591,27L591,28L594,28L594,29L624,29L624,30L632,30L632,31L645,31L645,32L646,32L646,33L658,33L658,34L664,34L664,35L686,35L686,36L714,36L714,37L719,37L719,38L720,38L720,40L735,40L735,41L753,41L753,42L774,42L774,43L811,43L811,44L812,44L812,45L822,45L822,46L824,46L824,47L827,47L827,48L832,48L832,49L848,49L848,50L850,50L850,51L856,51L856,52L859,52L859,53L866,53L866,54L879,54L879,55L880,55L880,56L882,56L882,57L884,57L884,58L889,58L889,59L891,59L891,60L896,60L896,61L896,61" tabindex="0">
						<title>8lo1ge28</title>
					</path>
				</g>
				<g style="--index: 11;">
					<path d="M0,11L67,11L67,0L72,0L72,1L117,1L117,2L210,2L210,3L233,3L233,4L646,4L646,5L674,5L674,6L686,6L686,7L721,7L721,8L735,8L735,9L827,9L827,10L848,10L848,11L859,11L859,12L866,12L866,13L877,13L877,14L880,14L880,15L882,15L882,16L884,16L884,17L896,17" tabindex="0">
						<title>x3m3kle8</title>
					</path>
				</g>
				<g style="--index: 12;">
					<path d="M0,12L72,12L72,0L210,0L210,1L217,1L217,0L876,0L876,1L880,1L880,2L884,2L884,3L896,3" tabindex="0">
						<title>jn2m23wj</title>
					</path>
				</g>
				<g style="--index: 13;">
					<path d="M0,13L85,13L85,11L91,11L91,12L92,12L92,14L96,14L96,15L97,15L97,16L114,16L114,17L119,17L119,18L128,18L128,19L139,19L139,20L140,20L140,21L144,21L144,22L148,22L148,23L150,23L150,24L153,24L153,25L154,25L154,26L182,26L182,27L189,27L189,28L196,28L196,29L197,29L197,30L199,30L199,31L209,31L209,32L210,32L210,33L230,33L230,34L233,34L233,35L254,35L254,36L305,36L305,37L316,37L316,38L338,38L338,39L350,39L350,41L356,41L356,42L391,42L391,43L420,43L420,44L445,44L445,45L484,45L484,46L487,46L487,47L511,47L511,48L518,48L518,49L543,49L543,50L553,50L553,51L555,51L555,52L561,52L561,53L591,53L591,54L617,54L617,55L624,55L624,56L632,56L632,57L645,57L645,58L646,58L646,59L653,59L653,60L658,60L658,61L662,61L662,62L664,62L664,63L686,63L686,64L694,64L694,65L714,65L714,66L719,66L719,67L720,67L720,69L735,69L735,70L747,70L747,71L753,71L753,72L765,72L765,73L801,73L801,74L811,74L811,75L812,75L812,76L822,76L822,77L824,77L824,78L827,78L827,79L832,79L832,80L848,80L848,81L850,81L850,82L856,82L856,84L859,84L859,85L866,85L866,86L879,86L879,87L880,87L880,89L882,89L882,90L883,90L883,91L884,91L884,92L888,92L888,93L889,93L889,94L891,94L891,95L896,95L896,96L896,96" tabindex="0">
						<title>j062q69j</title>
					</path>
				</g>
				<g style="--index: 14;">
					<path d="M0,14L90,14L90,12L91,12L91,10L92,10L92,11L96,11L96,12L114,12L114,13L119,13L119,14L128,14L128,15L144,15L144,16L148,16L148,17L150,17L150,18L154,18L154,19L182,19L182,20L189,20L189,21L197,21L197,22L199,22L199,23L210,23L210,24L233,24L233,25L316,25L316,26L350,26L350,27L391,27L391,28L420,28L420,29L484,29L484,30L487,30L487,31L511,31L511,32L543,32L543,33L553,33L553,34L555,34L555,35L591,35L591,36L594,36L594,37L617,37L617,38L624,38L624,39L632,39L632,40L645,40L645,41L646,41L646,42L653,42L653,43L658,43L658,44L662,44L662,45L664,45L664,46L686,46L686,47L714,47L714,48L719,48L719,49L720,49L720,51L735,51L735,52L747,52L747,53L753,53L753,54L765,54L765,55L811,55L811,56L812,56L812,57L822,57L822,58L824,58L824,59L827,59L827,60L832,60L832,61L848,61L848,62L850,62L850,63L856,63L856,64L859,64L859,65L866,65L866,66L879,66L879,67L880,67L880,68L882,68L882,69L884,69L884,70L889,70L889,71L891,71L891,72L896,72L896,73L896,73" tabindex="0">
						<title>j9povr7x</title>
					</path>
				</g>
				<g style="--index: 15;">
					<path d="M0,15L92,15L92,9L96,9L96,10L114,10L114,11L119,11L119,12L128,12L128,13L144,13L144,14L148,14L148,15L150,15L150,16L154,16L154,17L182,17L182,18L189,18L189,19L197,19L197,20L199,20L199,21L210,21L210,22L233,22L233,23L316,23L316,24L350,24L350,25L391,25L391,26L420,26L420,27L484,27L484,28L487,28L487,29L511,29L511,30L543,30L543,31L553,31L553,32L555,32L555,33L591,33L591,34L594,34L594,35L624,35L624,36L632,36L632,37L645,37L645,38L646,38L646,39L653,39L653,40L658,40L658,41L664,41L664,42L686,42L686,43L714,43L714,44L719,44L719,45L720,45L720,47L735,47L735,48L753,48L753,49L765,49L765,50L774,50L774,51L811,51L811,52L812,52L812,53L822,53L822,54L824,54L824,55L827,55L827,56L832,56L832,57L848,57L848,58L850,58L850,59L856,59L856,60L859,60L859,61L866,61L866,62L879,62L879,63L880,63L880,64L882,64L882,65L884,65L884,66L889,66L889,67L891,67L891,68L896,68L896,69L896,69" tabindex="0">
						<title>8g0v947x</title>
					</path>
				</g>
				<g style="--index: 16;">
					<path d="M0,16L92,16L92,12L96,12L96,13L97,13L97,14L114,14L114,15L119,15L119,16L128,16L128,17L139,17L139,18L144,18L144,19L148,19L148,20L150,20L150,21L154,21L154,22L182,22L182,23L189,23L189,24L196,24L196,25L197,25L197,26L199,26L199,27L210,27L210,28L230,28L230,29L233,29L233,30L305,30L305,31L316,31L316,32L338,32L338,33L350,33L350,35L356,35L356,36L391,36L391,37L420,37L420,38L445,38L445,39L484,39L484,40L487,40L487,41L511,41L511,42L518,42L518,43L543,43L543,44L553,44L553,45L555,45L555,46L561,46L561,47L591,47L591,48L617,48L617,49L624,49L624,50L632,50L632,51L645,51L645,52L646,52L646,53L653,53L653,54L658,54L658,55L662,55L662,56L664,56L664,57L686,57L686,58L694,58L694,59L714,59L714,60L719,60L719,61L720,61L720,63L735,63L735,64L747,64L747,65L753,65L753,66L765,66L765,67L811,67L811,68L812,68L812,69L822,69L822,70L824,70L824,71L827,71L827,72L832,72L832,73L848,73L848,74L850,74L850,75L856,75L856,77L859,77L859,78L866,78L866,79L879,79L879,80L880,80L880,82L882,82L882,83L883,83L883,84L884,84L884,85L888,85L888,86L889,86L889,87L891,87L891,88L896,88L896,89L896,89" tabindex="0">
						<title>8qodlgdj</title>
					</path>
				</g>
				<g style="--index: 17;">
					<path d="M0,17L96,17L96,16L97,16L97,17L106,17L106,18L114,18L114,19L119,19L119,20L124,20L124,21L128,21L128,22L139,22L139,23L140,23L140,24L144,24L144,25L148,25L148,26L150,26L150,27L153,27L153,28L154,28L154,29L174,29L174,30L182,30L182,31L189,31L189,32L196,32L196,33L197,33L197,34L199,34L199,35L209,35L209,36L210,36L210,37L223,37L223,38L230,38L230,39L233,39L233,40L253,40L253,41L305,41L305,42L316,42L316,43L323,43L323,44L338,44L338,45L350,45L350,47L356,47L356,48L364,48L364,49L391,49L391,50L420,50L420,51L445,51L445,52L484,52L484,53L487,53L487,54L508,54L508,55L511,55L511,56L518,56L518,57L543,57L543,58L553,58L553,59L555,59L555,60L561,60L561,61L591,61L591,62L617,62L617,64L624,64L624,65L632,65L632,66L645,66L645,67L646,67L646,68L653,68L653,69L658,69L658,70L662,70L662,71L664,71L664,72L686,72L686,73L694,73L694,74L714,74L714,75L719,75L719,76L720,76L720,78L735,78L735,79L747,79L747,80L753,80L753,81L756,81L756,82L762,82L762,83L765,83L765,84L801,84L801,85L811,85L811,86L812,86L812,87L822,87L822,89L824,89L824,90L827,90L827,91L832,91L832,92L841,92L841,93L848,93L848,94L850,94L850,96L855,96L855,97L856,97L856,99L859,99L859,100L862,100L862,101L866,101L866,102L879,102L879,103L880,103L880,105L882,105L882,106L883,106L883,107L884,107L884,108L888,108L888,109L889,109L889,110L891,110L891,111L896,111L896,112L896,112" tabindex="0">
						<title>jp6nerk8</title>
					</path>
				</g>
				<g style="--index: 18;">
					<path d="M0,18L96,18L96,5L114,5L114,6L115,6L115,2L117,2L117,1L210,1L210,2L233,2L233,3L646,3L646,4L674,4L674,5L686,5L686,6L721,6L721,7L848,7L848,8L865,8L865,9L866,9L866,10L877,10L877,11L880,11L880,12L882,12L882,13L896,13" tabindex="0">
						<title>xz0kdm48</title>
					</path>
				</g>
				<g style="--index: 19;">
					<path d="M0,19L97,19L97,13L114,13L114,14L119,14L119,15L128,15L128,16L144,16L144,17L148,17L148,18L150,18L150,19L154,19L154,20L182,20L182,21L189,21L189,22L197,22L197,23L199,23L199,24L210,24L210,25L230,25L230,26L233,26L233,27L305,27L305,28L316,28L316,29L350,29L350,30L356,30L356,31L391,31L391,32L420,32L420,33L484,33L484,34L487,34L487,35L511,35L511,36L518,36L518,37L543,37L543,38L553,38L553,39L555,39L555,40L561,40L561,41L591,41L591,42L617,42L617,43L624,43L624,44L632,44L632,45L645,45L645,46L646,46L646,47L653,47L653,48L658,48L658,49L662,49L662,50L664,50L664,51L686,51L686,52L714,52L714,53L719,53L719,54L720,54L720,56L735,56L735,57L747,57L747,58L753,58L753,59L765,59L765,60L811,60L811,61L812,61L812,62L822,62L822,63L824,63L824,64L827,64L827,65L832,65L832,66L848,66L848,67L850,67L850,68L856,68L856,69L859,69L859,70L866,70L866,71L879,71L879,72L880,72L880,74L882,74L882,75L884,75L884,76L889,76L889,77L891,77L891,78L896,78L896,79L896,79" tabindex="0">
						<title>8q6m1w7j</title>
					</path>
				</g>
				<g style="--index: 20;">
					<path d="M0,20L106,20L106,17L114,17L114,18L119,18L119,19L124,19L124,20L128,20L128,21L139,21L139,22L140,22L140,23L144,23L144,24L148,24L148,25L150,25L150,26L153,26L153,27L154,27L154,28L174,28L174,29L182,29L182,30L189,30L189,31L196,31L196,32L197,32L197,33L199,33L199,34L209,34L209,35L210,35L210,36L223,36L223,37L230,37L230,38L233,38L233,39L253,39L253,40L305,40L305,41L316,41L316,42L323,42L323,43L338,43L338,44L350,44L350,46L356,46L356,47L364,47L364,48L391,48L391,49L420,49L420,50L445,50L445,51L484,51L484,52L487,52L487,53L508,53L508,54L511,54L511,55L518,55L518,56L543,56L543,57L553,57L553,58L555,58L555,59L561,59L561,60L591,60L591,61L617,61L617,63L624,63L624,64L632,64L632,65L645,65L645,66L646,66L646,67L653,67L653,68L658,68L658,69L662,69L662,70L664,70L664,71L686,71L686,72L694,72L694,73L714,73L714,74L719,74L719,75L720,75L720,77L735,77L735,78L747,78L747,79L753,79L753,80L756,80L756,81L762,81L762,82L765,82L765,83L801,83L801,84L811,84L811,85L812,85L812,86L822,86L822,88L824,88L824,89L827,89L827,90L832,90L832,91L848,91L848,92L850,92L850,93L851,93L851,94L855,94L855,95L856,95L856,97L859,97L859,98L862,98L862,99L866,99L866,100L879,100L879,101L880,101L880,103L882,103L882,104L883,104L883,105L884,105L884,106L888,106L888,107L889,107L889,108L891,108L891,109L896,109L896,110L896,110" tabindex="0">
						<title>8v2dy75j</title>
					</path>
				</g>
				<g style="--index: 21;">
					<path d="M0,21L114,21L114,2L115,2L115,3L144,3L144,4L148,4L148,5L173,5L173,4L210,4L210,5L233,5L233,6L646,6L646,7L674,7L674,8L686,8L686,9L714,9L714,10L720,10L720,11L735,11L735,12L827,12L827,13L848,13L848,14L859,14L859,15L866,15L866,16L872,16L872,17L877,17L877,18L880,18L880,19L882,19L882,20L884,20L884,21L896,21" tabindex="0">
						<title>x3wdlvkj</title>
					</path>
				</g>
				<g style="--index: 22;">
					<path d="M0,22L119,22L119,10L124,10L124,6L144,6L144,7L148,7L148,8L197,8L197,9L210,9L210,10L233,10L233,11L316,11L316,12L350,12L350,13L407,13L407,14L520,14L520,15L591,15L591,16L594,16L594,17L645,17L645,18L646,18L646,19L658,19L658,20L686,20L686,21L714,21L714,22L719,22L719,23L720,23L720,25L735,25L735,26L774,26L774,27L822,27L822,28L824,28L824,29L827,29L827,30L837,30L837,31L848,31L848,32L859,32L859,33L866,33L866,34L877,34L877,35L880,35L880,36L882,36L882,37L884,37L884,38L889,38L889,39L896,39" tabindex="0">
						<title>x7w44nr8</title>
					</path>
				</g>
				<g style="--index: 23;">
					<path d="M0,23L124,23L124,19L128,19L128,20L139,20L139,21L140,21L140,22L144,22L144,23L148,23L148,24L150,24L150,25L153,25L153,26L154,26L154,27L174,27L174,28L182,28L182,29L189,29L189,30L196,30L196,31L197,31L197,32L199,32L199,33L209,33L209,34L210,34L210,35L230,35L230,36L233,36L233,37L253,37L253,38L305,38L305,39L316,39L316,40L323,40L323,41L338,41L338,42L350,42L350,44L356,44L356,45L364,45L364,46L391,46L391,47L420,47L420,48L445,48L445,49L484,49L484,50L487,50L487,51L508,51L508,52L511,52L511,53L518,53L518,54L543,54L543,55L553,55L553,56L555,56L555,57L561,57L561,58L591,58L591,59L617,59L617,61L624,61L624,62L632,62L632,63L645,63L645,64L646,64L646,65L653,65L653,66L658,66L658,67L662,67L662,68L664,68L664,69L686,69L686,70L694,70L694,71L714,71L714,72L719,72L719,73L720,73L720,75L735,75L735,76L747,76L747,77L753,77L753,78L756,78L756,79L762,79L762,80L765,80L765,81L801,81L801,82L811,82L811,83L812,83L812,84L822,84L822,86L824,86L824,87L827,87L827,88L832,88L832,89L848,89L848,90L850,90L850,91L851,91L851,92L855,92L855,93L856,93L856,95L859,95L859,96L862,96L862,97L866,97L866,98L879,98L879,99L880,99L880,101L882,101L882,102L883,102L883,103L884,103L884,104L888,104L888,105L889,105L889,106L891,106L891,107L896,107L896,108L896,108" tabindex="0">
						<title>jmzer6ex</title>
					</path>
				</g>
				<g style="--index: 24;">
					<path d="M0,24L128,24L128,11L144,11L144,12L148,12L148,13L182,13L182,14L189,14L189,15L197,15L197,16L199,16L199,17L210,17L210,18L233,18L233,19L316,19L316,20L350,20L350,21L391,21L391,22L420,22L420,23L511,23L511,24L520,24L520,25L543,25L543,26L553,26L553,27L555,27L555,28L591,28L591,29L594,29L594,30L624,30L624,31L632,31L632,32L645,32L645,33L646,33L646,34L658,34L658,35L664,35L664,36L686,36L686,37L714,37L714,38L719,38L719,39L720,39L720,41L735,41L735,42L753,42L753,43L774,43L774,44L811,44L811,45L812,45L812,46L822,46L822,47L824,47L824,48L827,48L827,49L832,49L832,50L848,50L848,51L850,51L850,52L856,52L856,53L859,53L859,54L866,54L866,55L879,55L879,56L880,56L880,57L882,57L882,58L884,58L884,59L889,59L889,60L891,60L891,61L896,61L896,62L896,62" tabindex="0">
						<title>810z203x</title>
					</path>
				</g>
				<g style="--index: 25;">
					<path d="M0,25L139,25L139,17L144,17L144,18L148,18L148,19L150,19L150,20L154,20L154,21L182,21L182,22L189,22L189,23L197,23L197,24L199,24L199,25L210,25L210,26L230,26L230,27L233,27L233,28L305,28L305,29L316,29L316,30L338,30L338,31L350,31L350,33L356,33L356,34L391,34L391,35L420,35L420,36L445,36L445,37L484,37L484,38L487,38L487,39L511,39L511,40L518,40L518,41L543,41L543,42L553,42L553,43L555,43L555,44L561,44L561,45L591,45L591,46L617,46L617,47L624,47L624,48L632,48L632,49L645,49L645,50L646,50L646,51L653,51L653,52L658,52L658,53L662,53L662,54L664,54L664,55L686,55L686,56L714,56L714,57L719,57L719,58L720,58L720,60L735,60L735,61L747,61L747,62L753,62L753,63L765,63L765,64L811,64L811,65L812,65L812,66L822,66L822,67L824,67L824,68L827,68L827,69L832,69L832,70L848,70L848,71L850,71L850,72L856,72L856,74L859,74L859,75L866,75L866,76L879,76L879,77L880,77L880,79L882,79L882,80L883,80L883,81L884,81L884,82L888,82L888,83L889,83L889,84L891,84L891,85L896,85L896,86L896,86" tabindex="0">
						<title>j20g1oox</title>
					</path>
				</g>
				<g style="--index: 26;">
					<path d="M0,26L140,26L140,20L144,20L144,21L148,21L148,22L150,22L150,23L154,23L154,24L182,24L182,25L189,25L189,26L196,26L196,27L197,27L197,28L199,28L199,29L209,29L209,30L210,30L210,31L230,31L230,32L233,32L233,33L305,33L305,34L316,34L316,35L338,35L338,36L350,36L350,38L356,38L356,39L391,39L391,40L420,40L420,41L445,41L445,42L484,42L484,43L487,43L487,44L511,44L511,45L518,45L518,46L543,46L543,47L553,47L553,48L555,48L555,49L561,49L561,50L591,50L591,51L617,51L617,52L624,52L624,53L632,53L632,54L645,54L645,55L646,55L646,56L653,56L653,57L658,57L658,58L662,58L662,59L664,59L664,60L686,60L686,61L694,61L694,62L714,62L714,63L719,63L719,64L720,64L720,66L735,66L735,67L747,67L747,68L753,68L753,69L765,69L765,70L811,70L811,71L812,71L812,72L822,72L822,73L824,73L824,74L827,74L827,75L832,75L832,76L848,76L848,77L850,77L850,78L856,78L856,80L859,80L859,81L866,81L866,82L879,82L879,83L880,83L880,85L882,85L882,86L883,86L883,87L884,87L884,88L888,88L888,89L889,89L889,90L891,90L891,91L896,91L896,92L896,92" tabindex="0">
						<title>j20g2dox</title>
					</path>
				</g>
				<g style="--index: 27;">
					<path d="M0,27L144,27L144,3L165,3L165,4L173,4L173,5L210,5L210,6L233,6L233,7L316,7L316,8L646,8L646,10L674,10L674,11L686,11L686,12L714,12L714,13L720,13L720,14L735,14L735,15L827,15L827,16L848,16L848,17L859,17L859,18L866,18L866,19L872,19L872,20L877,20L877,21L880,21L880,22L882,22L882,23L884,23L884,24L896,24" tabindex="0">
						<title>j9pkl7vx</title>
					</path>
				</g>
				<g style="--index: 28;">
					<path d="M0,28L148,28L148,4L165,4L165,3L210,3L210,4L233,4L233,5L646,5L646,6L674,6L674,7L686,7L686,8L721,8L721,9L735,9L735,10L827,10L827,11L848,11L848,12L859,12L859,13L866,13L866,14L877,14L877,15L880,15L880,16L882,16L882,17L884,17L884,18L896,18" tabindex="0">
						<title>8g072p2x</title>
					</path>
				</g>
				<g style="--index: 29;">
					<path d="M0,29L150,29L150,14L182,14L182,15L189,15L189,16L197,16L197,17L199,17L199,18L210,18L210,19L233,19L233,20L316,20L316,21L350,21L350,22L391,22L391,23L420,23L420,24L511,24L511,25L520,25L520,26L543,26L543,27L553,27L553,28L555,28L555,29L591,29L591,30L594,30L594,31L624,31L624,32L632,32L632,33L645,33L645,34L646,34L646,35L658,35L658,36L664,36L664,37L686,37L686,38L714,38L714,39L719,39L719,40L720,40L720,42L735,42L735,43L753,43L753,44L774,44L774,45L811,45L811,46L812,46L812,47L822,47L822,48L824,48L824,49L827,49L827,50L832,50L832,51L848,51L848,52L850,52L850,53L856,53L856,54L859,54L859,55L866,55L866,56L879,56L879,57L880,57L880,58L882,58L882,59L884,59L884,60L889,60L889,61L891,61L891,62L896,62L896,63L896,63" tabindex="0">
						<title>jonm6ee8</title>
					</path>
				</g>
				<g style="--index: 30;">
					<path d="M0,30L153,30L153,24L154,24L154,25L182,25L182,26L189,26L189,27L196,27L196,28L197,28L197,29L199,29L199,30L209,30L209,31L210,31L210,32L230,32L230,33L233,33L233,34L305,34L305,35L316,35L316,36L338,36L338,37L350,37L350,39L356,39L356,40L391,40L391,41L420,41L420,42L445,42L445,43L484,43L484,44L487,44L487,45L511,45L511,46L518,46L518,47L543,47L543,48L553,48L553,49L555,49L555,50L561,50L561,51L591,51L591,52L617,52L617,53L624,53L624,54L632,54L632,55L645,55L645,56L646,56L646,57L653,57L653,58L658,58L658,59L662,59L662,60L664,60L664,61L686,61L686,62L694,62L694,63L714,63L714,64L719,64L719,65L720,65L720,67L735,67L735,68L747,68L747,69L753,69L753,70L765,70L765,71L801,71L801,72L811,72L811,73L812,73L812,74L822,74L822,75L824,75L824,76L827,76L827,77L832,77L832,78L848,78L848,79L850,79L850,80L856,80L856,82L859,82L859,83L866,83L866,84L879,84L879,85L880,85L880,87L882,87L882,88L883,88L883,89L884,89L884,90L888,90L888,91L889,91L889,92L891,92L891,93L896,93L896,94L896,94" tabindex="0">
						<title>j06pezwj</title>
					</path>
				</g>
				<g style="--index: 31;">
					<path d="M0,31L154,31L154,16L182,16L182,17L189,17L189,18L197,18L197,19L199,19L199,20L210,20L210,21L233,21L233,22L316,22L316,23L350,23L350,24L391,24L391,25L420,25L420,26L484,26L484,27L487,27L487,28L511,28L511,29L543,29L543,30L553,30L553,31L555,31L555,32L591,32L591,33L594,33L594,34L624,34L624,35L632,35L632,36L645,36L645,37L646,37L646,38L658,38L658,39L664,39L664,40L686,40L686,41L714,41L714,42L719,42L719,43L720,43L720,45L735,45L735,46L753,46L753,47L774,47L774,48L811,48L811,49L812,49L812,50L822,50L822,51L824,51L824,52L827,52L827,53L832,53L832,54L848,54L848,55L850,55L850,56L856,56L856,57L859,57L859,58L866,58L866,59L879,59L879,60L880,60L880,61L882,61L882,62L884,62L884,63L889,63L889,64L891,64L891,65L896,65L896,66L896,66" tabindex="0">
						<title>8ewdk0d8</title>
					</path>
				</g>
				<g style="--index: 32;">
					<path d="M0,32L174,32L174,27L182,27L182,28L189,28L189,29L196,29L196,30L197,30L197,31L199,31L199,32L209,32L209,33L210,33L210,34L230,34L230,35L233,35L233,36L254,36L254,37L305,37L305,38L316,38L316,39L338,39L338,40L350,40L350,42L356,42L356,43L391,43L391,44L420,44L420,45L445,45L445,46L484,46L484,47L487,47L487,48L511,48L511,49L518,49L518,50L543,50L543,51L553,51L553,52L555,52L555,53L561,53L561,54L591,54L591,55L617,55L617,56L624,56L624,57L632,57L632,58L645,58L645,59L646,59L646,60L653,60L653,61L658,61L658,62L662,62L662,63L664,63L664,64L686,64L686,65L694,65L694,66L714,66L714,67L719,67L719,68L720,68L720,70L735,70L735,71L747,71L747,72L753,72L753,73L756,73L756,74L765,74L765,75L801,75L801,76L811,76L811,77L812,77L812,78L822,78L822,79L824,79L824,80L827,80L827,81L832,81L832,82L848,82L848,83L850,83L850,84L856,84L856,86L859,86L859,87L866,87L866,88L879,88L879,89L880,89L880,91L882,91L882,92L883,92L883,93L884,93L884,94L888,94L888,95L889,95L889,96L891,96L891,97L896,97L896,98L896,98" tabindex="0">
						<title>jonwzw78</title>
					</path>
				</g>
				<g style="--index: 33;">
					<path d="M0,33L175,33L175,32L182,32L182,33L184,33L184,34L189,34L189,35L196,35L196,36L197,36L197,37L199,37L199,38L209,38L209,39L210,39L210,40L223,40L223,41L230,41L230,42L233,42L233,43L253,43L253,44L305,44L305,45L316,45L316,46L323,46L323,47L338,47L338,48L344,48L344,49L350,49L350,51L356,51L356,52L364,52L364,53L391,53L391,54L420,54L420,55L445,55L445,56L484,56L484,57L487,57L487,58L508,58L508,59L511,59L511,60L518,60L518,61L543,61L543,62L553,62L553,63L555,63L555,64L561,64L561,65L591,65L591,66L617,66L617,68L624,68L624,69L632,69L632,70L645,70L645,71L646,71L646,72L653,72L653,73L658,73L658,74L662,74L662,75L664,75L664,76L686,76L686,77L694,77L694,78L714,78L714,79L719,79L719,80L720,80L720,82L735,82L735,83L747,83L747,84L753,84L753,85L756,85L756,86L762,86L762,87L765,87L765,88L801,88L801,89L811,89L811,90L812,90L812,91L822,91L822,93L824,93L824,94L827,94L827,95L832,95L832,96L841,96L841,97L848,97L848,98L850,98L850,100L855,100L855,101L856,101L856,103L859,103L859,104L862,104L862,105L866,105L866,106L879,106L879,107L880,107L880,109L882,109L882,110L883,110L883,111L884,111L884,112L888,112L888,113L889,113L889,114L891,114L891,115L896,115L896,116L896,116" tabindex="0">
						<title>810g30rx</title>
					</path>
				</g>
				<g style="--index: 34;">
					<path d="M0,34L182,34L182,9L197,9L197,10L199,10L199,11L210,11L210,12L233,12L233,13L316,13L316,14L350,14L350,15L407,15L407,16L520,16L520,17L591,17L591,18L594,18L594,19L645,19L645,20L646,20L646,21L658,21L658,22L686,22L686,23L714,23L714,24L719,24L719,25L720,25L720,27L735,27L735,28L774,28L774,29L822,29L822,30L824,30L824,31L827,31L827,32L837,32L837,33L848,33L848,34L859,34L859,35L866,35L866,36L877,36L877,37L880,37L880,38L882,38L882,39L884,39L884,40L889,40L889,41L896,41" tabindex="0">
						<title>xk1wl26j</title>
					</path>
				</g>
				<g style="--index: 35;">
					<path d="M0,35L184,35L184,33L189,33L189,34L196,34L196,35L197,35L197,36L199,36L199,37L209,37L209,38L210,38L210,39L223,39L223,40L230,40L230,41L233,41L233,42L253,42L253,43L305,43L305,44L316,44L316,45L323,45L323,46L338,46L338,47L350,47L350,49L356,49L356,50L364,50L364,51L391,51L391,52L420,52L420,53L445,53L445,54L484,54L484,55L487,55L487,56L508,56L508,57L511,57L511,58L518,58L518,59L543,59L543,60L553,60L553,61L555,61L555,62L561,62L561,63L591,63L591,64L617,64L617,66L624,66L624,67L632,67L632,68L645,68L645,69L646,69L646,70L653,70L653,71L658,71L658,72L662,72L662,73L664,73L664,74L686,74L686,75L694,75L694,76L714,76L714,77L719,77L719,78L720,78L720,80L735,80L735,81L747,81L747,82L753,82L753,83L756,83L756,84L762,84L762,85L765,85L765,86L801,86L801,87L811,87L811,88L812,88L812,89L822,89L822,91L824,91L824,92L827,92L827,93L832,93L832,94L841,94L841,95L848,95L848,96L850,96L850,98L855,98L855,99L856,99L856,101L859,101L859,102L862,102L862,103L866,103L866,104L879,104L879,105L880,105L880,107L882,107L882,108L883,108L883,109L884,109L884,110L888,110L888,111L889,111L889,112L891,112L891,113L896,113L896,114L896,114" tabindex="0">
						<title>x3wo5m6j</title>
					</path>
				</g>
				<g style="--index: 36;">
					<path d="M0,36L189,36L189,13L197,13L197,14L199,14L199,15L210,15L210,16L233,16L233,17L316,17L316,18L350,18L350,19L391,19L391,20L420,20L420,21L511,21L511,22L520,22L520,23L543,23L543,24L553,24L553,25L555,25L555,26L591,26L591,27L594,27L594,28L624,28L624,29L632,29L632,30L645,30L645,31L646,31L646,32L658,32L658,33L664,33L664,34L686,34L686,35L714,35L714,36L719,36L719,37L720,37L720,39L735,39L735,40L753,40L753,41L774,41L774,42L811,42L811,43L812,43L812,44L822,44L822,45L824,45L824,46L827,46L827,47L832,47L832,48L848,48L848,49L850,49L850,50L856,50L856,51L859,51L859,52L866,52L866,53L879,53L879,54L880,54L880,55L882,55L882,56L884,56L884,57L889,57L889,58L891,58L891,59L896,59L896,60L896,60" tabindex="0">
						<title>8101pdpx</title>
					</path>
				</g>
				<g style="--index: 37;">
					<path d="M0,37L196,37L196,24L197,24L197,25L199,25L199,26L210,26L210,27L230,27L230,28L233,28L233,29L305,29L305,30L316,30L316,31L338,31L338,32L350,32L350,34L356,34L356,35L391,35L391,36L420,36L420,37L445,37L445,38L484,38L484,39L487,39L487,40L511,40L511,41L518,41L518,42L543,42L543,43L553,43L553,44L555,44L555,45L561,45L561,46L591,46L591,47L617,47L617,48L624,48L624,49L632,49L632,50L645,50L645,51L646,51L646,52L653,52L653,53L658,53L658,54L662,54L662,55L664,55L664,56L686,56L686,57L714,57L714,58L719,58L719,59L720,59L720,61L735,61L735,62L747,62L747,63L753,63L753,64L765,64L765,65L811,65L811,66L812,66L812,67L822,67L822,68L824,68L824,69L827,69L827,70L832,70L832,71L848,71L848,72L850,72L850,73L856,73L856,75L859,75L859,76L866,76L866,77L879,77L879,78L880,78L880,80L882,80L882,81L883,81L883,82L884,82L884,83L888,83L888,84L889,84L889,85L891,85L891,86L896,86L896,87L896,87" tabindex="0">
						<title>jon0m6l8</title>
					</path>
				</g>
				<g style="--index: 38;">
					<path d="M0,38L197,38L197,8L210,8L210,9L233,9L233,10L316,10L316,11L350,11L350,12L407,12L407,13L520,13L520,14L591,14L591,15L594,15L594,16L645,16L645,17L646,17L646,18L658,18L658,19L686,19L686,20L714,20L714,21L719,21L719,22L720,22L720,24L735,24L735,25L774,25L774,26L822,26L822,27L824,27L824,28L827,28L827,29L837,29L837,30L848,30L848,31L859,31L859,32L866,32L866,33L877,33L877,34L880,34L880,35L882,35L882,36L884,36L884,37L889,37L889,38L896,38" tabindex="0">
						<title>x76vn2vj</title>
					</path>
				</g>
				<g style="--index: 39;">
					<path d="M0,39L199,39L199,10L210,10L210,11L233,11L233,12L316,12L316,13L350,13L350,14L407,14L407,15L520,15L520,16L591,16L591,17L594,17L594,18L645,18L645,19L646,19L646,20L658,20L658,21L686,21L686,22L714,22L714,23L719,23L719,24L720,24L720,26L735,26L735,27L774,27L774,28L822,28L822,29L824,29L824,30L827,30L827,31L837,31L837,32L848,32L848,33L859,33L859,34L866,34L866,35L877,35L877,36L880,36L880,37L882,37L882,38L884,38L884,39L889,39L889,40L896,40" tabindex="0">
						<title>x3woy1kj</title>
					</path>
				</g>
				<g style="--index: 40;">
					<path d="M0,40L209,40L209,29L210,29L210,30L230,30L230,31L233,31L233,32L305,32L305,33L316,33L316,34L338,34L338,35L350,35L350,37L356,37L356,38L391,38L391,39L420,39L420,40L445,40L445,41L484,41L484,42L487,42L487,43L511,43L511,44L518,44L518,45L543,45L543,46L553,46L553,47L555,47L555,48L561,48L561,49L591,49L591,50L617,50L617,51L624,51L624,52L632,52L632,53L645,53L645,54L646,54L646,55L653,55L653,56L658,56L658,57L662,57L662,58L664,58L664,59L686,59L686,60L694,60L694,61L714,61L714,62L719,62L719,63L720,63L720,65L735,65L735,66L747,66L747,67L753,67L753,68L765,68L765,69L811,69L811,70L812,70L812,71L822,71L822,72L824,72L824,73L827,73L827,74L832,74L832,75L848,75L848,76L850,76L850,77L856,77L856,79L859,79L859,80L866,80L866,81L879,81L879,82L880,82L880,84L882,84L882,85L883,85L883,86L884,86L884,87L888,87L888,88L889,88L889,89L891,89L891,90L896,90L896,91L896,91" tabindex="0">
						<title>8v21onej</title>
					</path>
				</g>
				<g style="--index: 41;">
					<path d="M0,41L210,41L210,0L217,0L217,1L876,1L876,2L880,2L880,3L884,3L884,4L896,4" tabindex="0">
						<title>xkon93k8</title>
					</path>
				</g>
				<g style="--index: 42;">
					<path d="M0,42L223,42L223,36L230,36L230,37L233,37L233,38L253,38L253,39L305,39L305,40L316,40L316,41L323,41L323,42L338,42L338,43L350,43L350,45L356,45L356,46L364,46L364,47L391,47L391,48L420,48L420,49L445,49L445,50L484,50L484,51L487,51L487,52L508,52L508,53L511,53L511,54L518,54L518,55L543,55L543,56L553,56L553,57L555,57L555,58L561,58L561,59L591,59L591,60L617,60L617,62L624,62L624,63L632,63L632,64L645,64L645,65L646,65L646,66L653,66L653,67L658,67L658,68L662,68L662,69L664,69L664,70L686,70L686,71L694,71L694,72L714,72L714,73L719,73L719,74L720,74L720,76L735,76L735,77L747,77L747,78L753,78L753,79L756,79L756,80L762,80L762,81L765,81L765,82L801,82L801,83L811,83L811,84L812,84L812,85L822,85L822,87L824,87L824,88L827,88L827,89L832,89L832,90L848,90L848,91L850,91L850,92L851,92L851,93L855,93L855,94L856,94L856,96L859,96L859,97L862,97L862,98L866,98L866,99L879,99L879,100L880,100L880,102L882,102L882,103L883,103L883,104L884,104L884,105L888,105L888,106L889,106L889,107L891,107L891,108L896,108L896,109L896,109" tabindex="0">
						<title>xk19d0kj</title>
					</path>
				</g>
				<g style="--index: 43;">
					<path d="M0,43L230,43L230,25L233,25L233,26L316,26L316,27L350,27L350,28L391,28L391,29L420,29L420,30L484,30L484,31L487,31L487,32L511,32L511,33L543,33L543,34L553,34L553,35L555,35L555,36L561,36L561,37L591,37L591,38L617,38L617,39L624,39L624,40L632,40L632,41L645,41L645,42L646,42L646,43L653,43L653,44L658,44L658,45L662,45L662,46L664,46L664,47L686,47L686,48L714,48L714,49L719,49L719,50L720,50L720,52L735,52L735,53L747,53L747,54L753,54L753,55L765,55L765,56L811,56L811,57L812,57L812,58L822,58L822,59L824,59L824,60L827,60L827,61L832,61L832,62L848,62L848,63L850,63L850,64L856,64L856,65L859,65L859,66L866,66L866,67L879,67L879,68L880,68L880,70L882,70L882,71L884,71L884,72L889,72L889,73L891,73L891,74L896,74L896,75L896,75" tabindex="0">
						<title>j9k1keo8</title>
					</path>
				</g>
				<g style="--index: 44;">
					<path d="M0,44L233,44L233,2L646,2L646,3L729,3L729,4L848,4L848,5L880,5L880,6L882,6L882,8L884,8L884,9L891,9L891,10L896,10" tabindex="0">
						<title>8d0ml09x</title>
					</path>
				</g>
				<g style="--index: 45;">
					<path d="M0,45L253,45L253,37L254,37L254,35L305,35L305,36L316,36L316,37L338,37L338,38L350,38L350,40L356,40L356,41L391,41L391,42L420,42L420,43L445,43L445,44L484,44L484,45L487,45L487,46L511,46L511,47L518,47L518,48L543,48L543,49L553,49L553,50L555,50L555,51L561,51L561,52L591,52L591,53L617,53L617,54L624,54L624,55L632,55L632,56L645,56L645,57L646,57L646,58L653,58L653,59L658,59L658,60L662,60L662,61L664,61L664,62L686,62L686,63L694,63L694,64L714,64L714,65L719,65L719,66L720,66L720,68L735,68L735,69L747,69L747,70L753,70L753,71L765,71L765,72L801,72L801,73L811,73L811,74L812,74L812,75L822,75L822,76L824,76L824,77L827,77L827,78L832,78L832,79L848,79L848,80L850,80L850,81L856,81L856,83L859,83L859,84L866,84L866,85L879,85L879,86L880,86L880,88L882,88L882,89L883,89L883,90L884,90L884,91L888,91L888,92L889,92L889,93L891,93L891,94L896,94L896,95L896,95" tabindex="0">
						<title>jon6e378</title>
					</path>
				</g>
				<g style="--index: 46;">
					<path d="M0,46L264,46L264,45L305,45L305,46L316,46L316,47L323,47L323,48L338,48L338,49L344,49L344,50L350,50L350,52L356,52L356,53L364,53L364,54L391,54L391,55L420,55L420,56L445,56L445,57L484,57L484,58L487,58L487,59L488,59L488,60L508,60L508,61L511,61L511,62L518,62L518,63L543,63L543,64L553,64L553,65L555,65L555,66L561,66L561,67L591,67L591,68L617,68L617,70L624,70L624,71L632,71L632,72L645,72L645,73L646,73L646,74L653,74L653,75L658,75L658,76L662,76L662,77L664,77L664,78L674,78L674,79L686,79L686,80L694,80L694,81L714,81L714,82L719,82L719,83L720,83L720,85L735,85L735,86L747,86L747,87L753,87L753,88L756,88L756,89L762,89L762,90L765,90L765,91L801,91L801,92L811,92L811,93L812,93L812,94L822,94L822,96L824,96L824,97L827,97L827,98L832,98L832,99L841,99L841,100L848,100L848,101L850,101L850,103L855,103L855,104L856,104L856,106L859,106L859,107L862,107L862,108L866,108L866,109L879,109L879,110L880,110L880,112L882,112L882,113L883,113L883,114L884,114L884,115L888,115L888,116L889,116L889,117L891,117L891,118L896,118L896,119L896,119" tabindex="0">
						<title>j06451mj</title>
					</path>
				</g>
				<g style="--index: 47;">
					<path d="M0,47L305,47L305,27L316,27L316,28L350,28L350,29L356,29L356,30L391,30L391,31L420,31L420,32L484,32L484,33L487,33L487,34L511,34L511,35L518,35L518,36L543,36L543,37L553,37L553,38L555,38L555,39L561,39L561,40L591,40L591,41L617,41L617,42L624,42L624,43L632,43L632,44L645,44L645,45L646,45L646,46L653,46L653,47L658,47L658,48L662,48L662,49L664,49L664,50L686,50L686,51L714,51L714,52L719,52L719,53L720,53L720,55L735,55L735,56L747,56L747,57L753,57L753,58L765,58L765,59L811,59L811,60L812,60L812,61L822,61L822,62L824,62L824,63L827,63L827,64L832,64L832,65L848,65L848,66L850,66L850,67L856,67L856,68L859,68L859,69L866,69L866,70L879,70L879,71L880,71L880,73L882,73L882,74L884,74L884,75L889,75L889,76L891,76L891,77L896,77L896,78L896,78" tabindex="0">
						<title>xz20pvex</title>
					</path>
				</g>
				<g style="--index: 48;">
					<path d="M0,48L316,48L316,7L646,7L646,8L674,8L674,9L686,9L686,10L714,10L714,11L720,11L720,12L735,12L735,13L827,13L827,14L848,14L848,15L859,15L859,16L866,16L866,17L872,17L872,18L877,18L877,19L880,19L880,20L882,20L882,21L884,21L884,22L896,22" tabindex="0">
						<title>8v02q3nx</title>
					</path>
				</g>
				<g style="--index: 49;">
					<path d="M0,49L323,49L323,40L338,40L338,41L350,41L350,43L356,43L356,44L391,44L391,45L420,45L420,46L445,46L445,47L484,47L484,48L487,48L487,49L511,49L511,50L518,50L518,51L543,51L543,52L553,52L553,53L555,53L555,54L561,54L561,55L591,55L591,56L617,56L617,57L624,57L624,58L632,58L632,59L645,59L645,60L646,60L646,61L653,61L653,62L658,62L658,63L662,63L662,64L664,64L664,65L686,65L686,66L694,66L694,67L714,67L714,68L719,68L719,69L720,69L720,71L735,71L735,72L747,72L747,73L753,73L753,74L756,74L756,75L765,75L765,76L801,76L801,77L811,77L811,78L812,78L812,79L822,79L822,80L824,80L824,81L827,81L827,82L832,82L832,83L848,83L848,84L850,84L850,85L856,85L856,87L859,87L859,88L866,88L866,89L879,89L879,90L880,90L880,92L882,92L882,93L883,93L883,94L884,94L884,95L888,95L888,96L889,96L889,97L891,97L891,98L896,98L896,99L896,99" tabindex="0">
						<title>jonp4ge8</title>
					</path>
				</g>
				<g style="--index: 50;">
					<path d="M0,50L338,50L338,30L350,30L350,31L356,31L356,32L391,32L391,33L420,33L420,34L484,34L484,35L487,35L487,36L511,36L511,37L518,37L518,38L543,38L543,39L553,39L553,40L555,40L555,41L561,41L561,42L591,42L591,43L617,43L617,44L624,44L624,45L632,45L632,46L645,46L645,47L646,47L646,48L653,48L653,49L658,49L658,50L662,50L662,51L664,51L664,52L686,52L686,53L714,53L714,54L719,54L719,55L720,55L720,57L735,57L735,58L747,58L747,59L753,59L753,60L765,60L765,61L811,61L811,62L812,62L812,63L822,63L822,64L824,64L824,65L827,65L827,66L832,66L832,67L848,67L848,68L850,68L850,69L856,69L856,70L859,70L859,71L866,71L866,72L879,72L879,73L880,73L880,75L882,75L882,76L884,76L884,77L889,77L889,78L891,78L891,79L896,79L896,80L896,80" tabindex="0">
						<title>8eeolvp8</title>
					</path>
				</g>
				<g style="--index: 51;">
					<path d="M0,51L344,51L344,48L350,48L350,50L356,50L356,51L364,51L364,52L391,52L391,53L420,53L420,54L445,54L445,55L484,55L484,56L487,56L487,57L508,57L508,58L511,58L511,59L518,59L518,60L543,60L543,61L553,61L553,62L555,62L555,63L561,63L561,64L591,64L591,65L617,65L617,67L624,67L624,68L632,68L632,69L645,69L645,70L646,70L646,71L653,71L653,72L658,72L658,73L662,73L662,74L664,74L664,75L686,75L686,76L694,76L694,77L714,77L714,78L719,78L719,79L720,79L720,81L735,81L735,82L747,82L747,83L753,83L753,84L756,84L756,85L762,85L762,86L765,86L765,87L801,87L801,88L811,88L811,89L812,89L812,90L822,90L822,92L824,92L824,93L827,93L827,94L832,94L832,95L841,95L841,96L848,96L848,97L850,97L850,99L855,99L855,100L856,100L856,102L859,102L859,103L862,103L862,104L866,104L866,105L879,105L879,106L880,106L880,108L882,108L882,109L883,109L883,110L884,110L884,111L888,111L888,112L889,112L889,113L891,113L891,114L896,114L896,115L896,115" tabindex="0">
						<title>86rp2g58</title>
					</path>
				</g>
				<g style="--index: 52;">
					<path d="M0,52L350,52L350,32L356,32L356,33L391,33L391,34L420,34L420,35L445,35L445,36L484,36L484,37L487,37L487,38L511,38L511,39L518,39L518,40L543,40L543,41L553,41L553,42L555,42L555,43L561,43L561,44L591,44L591,45L617,45L617,46L624,46L624,47L632,47L632,48L645,48L645,49L646,49L646,50L653,50L653,51L658,51L658,52L662,52L662,53L664,53L664,54L686,54L686,55L714,55L714,56L719,56L719,57L720,57L720,59L735,59L735,60L747,60L747,61L753,61L753,62L765,62L765,63L811,63L811,64L812,64L812,65L822,65L822,66L824,66L824,67L827,67L827,68L832,68L832,69L848,69L848,70L850,70L850,71L856,71L856,72L859,72L859,73L866,73L866,74L879,74L879,75L880,75L880,77L882,77L882,78L883,78L883,79L884,79L884,80L889,80L889,81L891,81L891,82L896,82L896,83L896,83" tabindex="0">
						<title>86rpw3p8</title>
					</path>
				</g>
				<g style="--index: 53;">
					<path d="M0,53L350,53L350,11L407,11L407,12L591,12L591,13L594,13L594,14L645,14L645,15L646,15L646,16L686,16L686,17L714,17L714,18L720,18L720,19L735,19L735,20L774,20L774,21L822,21L822,22L824,22L824,23L827,23L827,24L848,24L848,25L859,25L859,26L866,26L866,27L872,27L872,28L877,28L877,29L880,29L880,30L882,30L882,31L884,31L884,32L889,32L889,33L896,33" tabindex="0">
						<title>8ew371p8</title>
					</path>
				</g>
				<g style="--index: 54;">
					<path d="M0,54L356,54L356,29L391,29L391,30L420,30L420,31L484,31L484,32L487,32L487,33L511,33L511,34L543,34L543,35L553,35L553,36L555,36L555,37L561,37L561,38L591,38L591,39L617,39L617,40L624,40L624,41L632,41L632,42L645,42L645,43L646,43L646,44L653,44L653,45L658,45L658,46L662,46L662,47L664,47L664,48L686,48L686,49L714,49L714,50L719,50L719,51L720,51L720,53L735,53L735,54L747,54L747,55L753,55L753,56L765,56L765,57L811,57L811,58L812,58L812,59L822,59L822,60L824,60L824,61L827,61L827,62L832,62L832,63L848,63L848,64L850,64L850,65L856,65L856,66L859,66L859,67L866,67L866,68L879,68L879,69L880,69L880,71L882,71L882,72L884,72L884,73L889,73L889,74L891,74L891,75L896,75L896,76L896,76" tabindex="0">
						<title>8v07p9ex</title>
					</path>
				</g>
				<g style="--index: 55;">
					<path d="M0,55L364,55L364,45L391,45L391,46L420,46L420,47L445,47L445,48L484,48L484,49L487,49L487,50L511,50L511,51L518,51L518,52L543,52L543,53L553,53L553,54L555,54L555,55L561,55L561,56L591,56L591,57L617,57L617,58L624,58L624,59L632,59L632,60L645,60L645,61L646,61L646,62L653,62L653,63L658,63L658,64L662,64L662,65L664,65L664,66L686,66L686,67L694,67L694,68L714,68L714,69L719,69L719,70L720,70L720,72L735,72L735,73L747,73L747,74L753,74L753,75L756,75L756,76L765,76L765,77L801,77L801,78L811,78L811,79L812,79L812,80L822,80L822,82L824,82L824,83L827,83L827,84L832,84L832,85L848,85L848,86L850,86L850,87L855,87L855,88L856,88L856,90L859,90L859,91L866,91L866,92L879,92L879,93L880,93L880,95L882,95L882,96L883,96L883,97L884,97L884,98L888,98L888,99L889,99L889,100L891,100L891,101L896,101L896,102L896,102" tabindex="0">
						<title>jpyp110j</title>
					</path>
				</g>
				<g style="--index: 56;">
					<path d="M0,56L391,56L391,19L407,19L407,9L591,9L591,10L646,10L646,12L674,12L674,4L724,4L724,5L848,5L848,6L872,6L872,7L880,7L880,8L882,8L882,10L884,10L884,11L891,11L891,9L896,9" tabindex="0">
						<title>8w3l21qj</title>
					</path>
				</g>
				<g style="--index: 57;">
					<path d="M0,57L420,57L420,20L520,20L520,21L543,21L543,22L555,22L555,23L591,23L591,24L594,24L594,25L624,25L624,26L632,26L632,27L645,27L645,28L646,28L646,29L658,29L658,30L686,30L686,31L714,31L714,32L719,32L719,33L720,33L720,35L735,35L735,36L753,36L753,37L774,37L774,38L811,38L811,39L812,39L812,40L822,40L822,41L824,41L824,42L827,42L827,43L832,43L832,44L848,44L848,45L856,45L856,46L859,46L859,47L866,47L866,48L877,48L877,49L879,49L879,50L880,50L880,51L882,51L882,52L884,52L884,53L889,53L889,54L891,54L891,55L896,55L896,56L896,56" tabindex="0">
						<title>jpyzgk2j</title>
					</path>
				</g>
				<g style="--index: 58;">
					<path d="M0,58L445,58L445,35L484,35L484,36L487,36L487,37L511,37L511,38L518,38L518,39L543,39L543,40L553,40L553,41L555,41L555,42L561,42L561,43L591,43L591,44L617,44L617,45L624,45L624,46L632,46L632,47L645,47L645,48L646,48L646,49L653,49L653,50L658,50L658,51L662,51L662,52L664,52L664,53L686,53L686,54L714,54L714,55L719,55L719,56L720,56L720,58L735,58L735,59L747,59L747,60L753,60L753,61L765,61L765,62L811,62L811,63L812,63L812,64L822,64L822,65L824,65L824,66L827,66L827,67L832,67L832,68L848,68L848,69L850,69L850,70L856,70L856,71L859,71L859,72L866,72L866,73L879,73L879,74L880,74L880,76L882,76L882,77L884,77L884,78L889,78L889,79L891,79L891,80L896,80L896,81L896,81" tabindex="0">
						<title>jokvnml8</title>
					</path>
				</g>
				<g style="--index: 59;">
					<path dtabindex="0">
						<title>jnp3yqw8</title>
					</path>
				</g>
				<g style="--index: 60;">
					<path d="M0,60L487,60L487,25L511,25L511,26L520,26L520,13L591,13L591,14L594,14L594,15L645,15L645,16L646,16L646,17L686,17L686,18L714,18L714,19L720,19L720,20L735,20L735,21L774,21L774,22L822,22L822,23L824,23L824,24L827,24L827,25L837,25L837,26L848,26L848,27L859,27L859,28L866,28L866,29L877,29L877,30L880,30L880,31L882,31L882,32L884,32L884,33L889,33L889,34L896,34" tabindex="0">
						<title>81mzm458</title>
					</path>
				</g>
				<g style="--index: 61;">
					<path d="M0,61L488,61L488,59L508,59L508,60L511,60L511,61L518,61L518,62L543,62L543,63L553,63L553,64L555,64L555,65L561,65L561,66L591,66L591,67L617,67L617,69L624,69L624,70L632,70L632,71L645,71L645,72L646,72L646,73L653,73L653,74L658,74L658,75L662,75L662,76L664,76L664,77L686,77L686,78L694,78L694,79L714,79L714,80L719,80L719,81L720,81L720,83L735,83L735,84L747,84L747,85L753,85L753,86L756,86L756,87L762,87L762,88L765,88L765,89L801,89L801,90L811,90L811,91L812,91L812,92L822,92L822,94L824,94L824,95L827,95L827,96L832,96L832,97L841,97L841,98L848,98L848,99L850,99L850,101L855,101L855,102L856,102L856,104L859,104L859,105L862,105L862,106L866,106L866,107L879,107L879,108L880,108L880,110L882,110L882,111L883,111L883,112L884,112L884,113L888,113L888,114L889,114L889,115L891,115L891,116L896,116L896,117L896,117" tabindex="0">
						<title>xkpegz2j</title>
					</path>
				</g>
				<g style="--index: 62;">
					<path d="M0,62L508,62L508,51L511,51L511,52L518,52L518,53L543,53L543,54L553,54L553,55L555,55L555,56L561,56L561,57L591,57L591,58L617,58L617,60L624,60L624,61L632,61L632,62L645,62L645,63L646,63L646,64L653,64L653,65L658,65L658,66L662,66L662,67L664,67L664,68L686,68L686,69L694,69L694,70L714,70L714,71L719,71L719,72L720,72L720,74L735,74L735,75L747,75L747,76L753,76L753,77L756,77L756,78L762,78L762,79L765,79L765,80L801,80L801,81L811,81L811,82L812,82L812,83L822,83L822,85L824,85L824,86L827,86L827,87L832,87L832,88L848,88L848,89L850,89L850,90L851,90L851,91L855,91L855,92L856,92L856,94L859,94L859,95L862,95L862,96L866,96L866,97L879,97L879,98L880,98L880,100L882,100L882,101L883,101L883,102L884,102L884,103L888,103L888,104L889,104L889,105L891,105L891,106L896,106L896,107L896,107" tabindex="0">
						<title>8w3vo0vj</title>
					</path>
				</g>
				<g style="--index: 63;">
					<path d="M0,63L511,63L511,21L520,21L520,22L543,22L543,23L555,23L555,24L591,24L591,25L594,25L594,26L624,26L624,27L632,27L632,28L645,28L645,29L646,29L646,30L658,30L658,31L664,31L664,32L686,32L686,33L714,33L714,34L719,34L719,35L720,35L720,37L735,37L735,38L753,38L753,39L774,39L774,40L811,40L811,41L812,41L812,42L822,42L822,43L824,43L824,44L827,44L827,45L832,45L832,46L848,46L848,47L856,47L856,48L859,48L859,49L866,49L866,50L877,50L877,51L879,51L879,52L880,52L880,53L882,53L882,54L884,54L884,55L889,55L889,56L891,56L891,57L896,57L896,58L896,58" tabindex="0">
						<title>xyq703n8</title>
					</path>
				</g>
				<g style="--index: 64;">
					<path d="M0,64L518,64L518,35L543,35L543,36L553,36L553,37L555,37L555,38L561,38L561,39L591,39L591,40L617,40L617,41L624,41L624,42L632,42L632,43L645,43L645,44L646,44L646,45L653,45L653,46L658,46L658,47L662,47L662,48L664,48L664,49L686,49L686,50L714,50L714,51L719,51L719,52L720,52L720,54L735,54L735,55L747,55L747,56L753,56L753,57L765,57L765,58L811,58L811,59L812,59L812,60L822,60L822,61L824,61L824,62L827,62L827,63L832,63L832,64L848,64L848,65L850,65L850,66L856,66L856,67L859,67L859,68L866,68L866,69L879,69L879,70L880,70L880,72L882,72L882,73L884,73L884,74L889,74L889,75L891,75L891,76L896,76L896,77L896,77" tabindex="0">
						<title>8lrg2nl8</title>
					</path>
				</g>
				<g style="--index: 65;">
					<path d="M0,65L543,65L543,21L555,21L555,22L591,22L591,23L594,23L594,24L624,24L624,25L632,25L632,26L645,26L645,27L646,27L646,28L658,28L658,29L686,29L686,30L714,30L714,31L719,31L719,32L720,32L720,34L735,34L735,35L774,35L774,36L812,36L812,37L822,37L822,38L824,38L824,39L827,39L827,40L832,40L832,41L848,41L848,42L859,42L859,43L866,43L866,44L877,44L877,45L879,45L879,46L880,46L880,47L882,47L882,48L884,48L884,49L889,49L889,50L891,50L891,51L896,51L896,52L896,52" tabindex="0">
						<title>86r26l58</title>
					</path>
				</g>
				<g style="--index: 66;">
					<path d="M0,66L553,66L553,24L555,24L555,25L591,25L591,26L594,26L594,27L624,27L624,28L632,28L632,29L645,29L645,30L646,30L646,31L658,31L658,32L664,32L664,33L686,33L686,34L714,34L714,35L719,35L719,36L720,36L720,38L735,38L735,39L753,39L753,40L774,40L774,41L811,41L811,42L812,42L812,43L822,43L822,44L824,44L824,45L827,45L827,46L832,46L832,47L848,47L848,48L850,48L850,49L856,49L856,50L859,50L859,51L866,51L866,52L879,52L879,53L880,53L880,54L882,54L882,55L884,55L884,56L889,56L889,57L891,57L891,58L896,58L896,59L896,59" tabindex="0">
						<title>8lr9gvv8</title>
					</path>
				</g>
				<g style="--index: 67;">
					<path d="M0,67L555,67L555,18L591,18L591,19L594,19L594,20L645,20L645,21L646,21L646,22L658,22L658,23L686,23L686,24L714,24L714,25L719,25L719,26L720,26L720,28L735,28L735,29L774,29L774,30L822,30L822,31L824,31L824,32L827,32L827,33L832,33L832,34L848,34L848,35L859,35L859,36L866,36L866,37L877,37L877,38L879,38L879,39L880,39L880,40L882,40L882,41L884,41L884,42L889,42L889,43L896,43" tabindex="0">
						<title>j2qmvl6j</title>
					</path>
				</g>
				<g style="--index: 68;">
					<path d="M0,68L561,68L561,36L591,36L591,37L594,37L594,12L646,12L646,14L686,14L686,15L714,15L714,16L720,16L720,17L735,17L735,18L822,18L822,19L827,19L827,20L848,20L848,21L859,21L859,22L866,22L866,23L872,23L872,24L877,24L877,25L880,25L880,26L882,26L882,27L884,27L884,28L889,28L889,29L896,29" tabindex="0">
						<title>jm7grvoj</title>
					</path>
				</g>
				<g style="--index: 69;">
					<path d="M0,69L591,69L591,9L646,9L646,11L674,11L674,12L686,12L686,13L714,13L714,14L720,14L720,15L735,15L735,16L827,16L827,17L848,17L848,18L859,18L859,19L866,19L866,20L872,20L872,21L877,21L877,22L880,22L880,23L882,23L882,24L884,24L884,25L896,25" tabindex="0">
						<title>8eeovoo8</title>
					</path>
				</g>
				<g style="--index: 70;">
					<path d="M0,70L617,70L617,37L624,37L624,38L632,38L632,39L645,39L645,40L646,40L646,41L653,41L653,42L658,42L658,43L664,43L664,44L686,44L686,45L714,45L714,46L719,46L719,47L720,47L720,49L735,49L735,50L747,50L747,51L753,51L753,52L765,52L765,53L811,53L811,54L812,54L812,55L822,55L822,56L824,56L824,57L827,57L827,58L832,58L832,59L848,59L848,60L850,60L850,61L856,61L856,62L859,62L859,63L866,63L866,64L879,64L879,65L880,65L880,66L882,66L882,67L884,67L884,68L889,68L889,69L891,69L891,70L896,70L896,71L896,71" tabindex="0">
						<title>8gor462x</title>
					</path>
				</g>
				<g style="--index: 71;">
					<path d="M0,71L617,71L617,59L624,59L624,60L632,60L632,61L645,61L645,62L646,62L646,63L653,63L653,64L658,64L658,65L662,65L662,66L664,66L664,67L686,67L686,68L694,68L694,69L714,69L714,70L719,70L719,71L720,71L720,73L735,73L735,74L747,74L747,75L753,75L753,76L756,76L756,77L765,77L765,78L801,78L801,79L811,79L811,80L812,80L812,81L822,81L822,83L824,83L824,84L827,84L827,85L832,85L832,86L848,86L848,87L850,87L850,88L855,88L855,89L856,89L856,91L859,91L859,92L862,92L862,93L866,93L866,94L879,94L879,95L880,95L880,97L882,97L882,98L883,98L883,99L884,99L884,100L888,100L888,101L889,101L889,102L891,102L891,103L896,103L896,104L896,104" tabindex="0">
						<title>j5p193z8</title>
					</path>
				</g>
				<g style="--index: 72;">
					<path d="M0,72L624,72L624,23L632,23L632,24L645,24L645,25L646,25L646,26L658,26L658,27L686,27L686,28L714,28L714,29L719,29L719,30L720,30L720,32L735,32L735,33L774,33L774,34L822,34L822,35L824,35L824,36L827,36L827,37L832,37L832,38L848,38L848,39L859,39L859,40L866,40L866,41L877,41L877,42L879,42L879,43L880,43L880,44L882,44L882,45L884,45L884,46L889,46L889,47L896,47" tabindex="0">
						<title>xzyl2k9j</title>
					</path>
				</g>
				<g style="--index: 73;">
					<path d="M0,73L632,73L632,21L645,21L645,22L646,22L646,23L658,23L658,24L686,24L686,25L714,25L714,26L719,26L719,27L720,27L720,29L735,29L735,30L774,30L774,31L822,31L822,32L824,32L824,33L827,33L827,34L832,34L832,35L848,35L848,36L859,36L859,37L866,37L866,38L877,38L877,39L879,39L879,40L880,40L880,41L882,41L882,42L884,42L884,43L889,43L889,44L896,44" tabindex="0">
						<title>j209wypx</title>
					</path>
				</g>
				<g style="--index: 74;">
					<path d="M0,74L645,74L645,14L646,14L646,9L674,9L674,10L686,10L686,11L714,11L714,12L720,12L720,13L735,13L735,14L827,14L827,15L848,15L848,16L859,16L859,17L866,17L866,18L872,18L872,19L877,19L877,20L880,20L880,21L882,21L882,22L884,22L884,23L896,23" tabindex="0">
						<title>j467y458</title>
					</path>
				</g>
				<g style="--index: 75;">
					<path d="M0,75L646,75L646,2L729,2L729,3L848,3L848,4L880,4L880,5L884,5L884,6L896,6" tabindex="0">
						<title>xyklwnm8</title>
					</path>
				</g>
				<g style="--index: 76;">
					<path d="M0,76L653,76L653,39L658,39L658,40L664,40L664,41L686,41L686,42L714,42L714,43L719,43L719,44L720,44L720,46L735,46L735,47L753,47L753,48L774,48L774,49L811,49L811,50L812,50L812,51L822,51L822,52L824,52L824,53L827,53L827,54L832,54L832,55L848,55L848,56L850,56L850,57L856,57L856,58L859,58L859,59L866,59L866,60L879,60L879,61L880,61L880,62L882,62L882,63L884,63L884,64L889,64L889,65L891,65L891,66L896,66L896,67L896,67" tabindex="0">
						<title>x7z6ly08</title>
					</path>
				</g>
				<g style="--index: 77;">
					<path d="M0,77L658,77L658,18L686,18L686,19L714,19L714,20L719,20L719,21L720,21L720,23L735,23L735,24L774,24L774,25L822,25L822,26L824,26L824,27L827,27L827,28L837,28L837,29L848,29L848,30L859,30L859,31L866,31L866,32L877,32L877,33L880,33L880,34L882,34L882,35L884,35L884,36L889,36L889,37L896,37" tabindex="0">
						<title>8grepr2x</title>
					</path>
				</g>
				<g style="--index: 78;">
					<path d="M0,78L662,78L662,44L664,44L664,45L686,45L686,46L714,46L714,47L719,47L719,48L720,48L720,50L735,50L735,51L747,51L747,52L753,52L753,53L765,53L765,54L811,54L811,55L812,55L812,56L822,56L822,57L824,57L824,58L827,58L827,59L832,59L832,60L848,60L848,61L850,61L850,62L856,62L856,63L859,63L859,64L866,64L866,65L879,65L879,66L880,66L880,67L882,67L882,68L884,68L884,69L889,69L889,70L891,70L891,71L896,71L896,72L896,72" tabindex="0">
						<title>jn6gqyqx</title>
					</path>
				</g>
				<g style="--index: 79;">
					<path d="M0,79L664,79L664,31L686,31L686,32L714,32L714,33L719,33L719,34L720,34L720,36L735,36L735,37L753,37L753,38L774,38L774,39L811,39L811,40L812,40L812,41L822,41L822,42L824,42L824,43L827,43L827,44L832,44L832,45L848,45L848,46L856,46L856,47L859,47L859,48L866,48L866,49L877,49L877,50L879,50L879,51L880,51L880,52L882,52L882,53L884,53L884,54L889,54L889,55L891,55L891,56L896,56L896,57L896,57" tabindex="0">
						<title>86pry10j</title>
					</path>
				</g>
				<g style="--index: 80;">
					<path dtabindex="0">
						<title>jm66qk48</title>
					</path>
				</g>
				<g style="--index: 81;">
					<path d="M0,81L686,81L686,5L721,5L721,6L848,6L848,7L865,7L865,8L866,8L866,9L877,9L877,10L880,10L880,11L882,11L882,12L896,12" tabindex="0">
						<title>0jmw6wex</title>
					</path>
				</g>
				<g style="--index: 82;">
					<path d="M0,82L694,82L694,58L714,58L714,59L719,59L719,60L720,60L720,62L735,62L735,63L747,63L747,64L753,64L753,65L765,65L765,66L811,66L811,67L812,67L812,68L822,68L822,69L824,69L824,70L827,70L827,71L832,71L832,72L848,72L848,73L850,73L850,74L856,74L856,76L859,76L859,77L866,77L866,78L879,78L879,79L880,79L880,81L882,81L882,82L883,82L883,83L884,83L884,84L888,84L888,85L889,85L889,86L891,86L891,87L896,87L896,88L896,88" tabindex="0">
						<title>8l6k44r8</title>
					</path>
				</g>
				<g style="--index: 83;">
					<path d="M0,83L714,83L714,9L721,9L721,10L735,10L735,11L827,11L827,12L848,12L848,13L859,13L859,14L866,14L866,15L877,15L877,16L880,16L880,17L882,17L882,18L884,18L884,19L896,19" tabindex="0">
						<title>xk6nq0m8</title>
					</path>
				</g>
				<g style="--index: 84;">
					<path d="M0,84L719,84L719,20L720,20L720,22L735,22L735,23L774,23L774,24L822,24L822,25L824,25L824,26L827,26L827,27L837,27L837,28L848,28L848,29L859,29L859,30L866,30L866,31L877,31L877,32L880,32L880,33L882,33L882,34L884,34L884,35L889,35L889,36L896,36" tabindex="0">
						<title>j2p224o8</title>
					</path>
				</g>
				<g style="--index: 85;">
					<path d="M0,85L720,85L720,21L735,21L735,22L774,22L774,23L822,23L822,24L824,24L824,25L827,25L827,26L837,26L837,27L848,27L848,28L859,28L859,29L866,29L866,30L877,30L877,31L880,31L880,32L882,32L882,33L884,33L884,34L889,34L889,35L896,35" tabindex="0">
						<title>jm6m29z8</title>
					</path>
				</g>
				<g style="--index: 86;">
					<path d="M0,86L720,86L720,10L721,10L721,5L724,5L724,4L729,4L729,2L848,2L848,3L880,3L880,4L884,4L884,5L896,5" tabindex="0">
						<title>8r2qz4gx</title>
					</path>
				</g>
				<g style="--index: 87;">
					<path d="M0,87L735,87L735,8L827,8L827,9L848,9L848,10L859,10L859,11L866,11L866,12L877,12L877,13L880,13L880,14L882,14L882,15L884,15L884,16L896,16" tabindex="0">
						<title>8rl97mw8</title>
					</path>
				</g>
				<g style="--index: 88;">
					<path d="M0,88L747,88L747,50L753,50L753,51L765,51L765,52L774,52L774,19L822,19L822,20L827,20L827,21L848,21L848,22L859,22L859,23L866,23L866,24L872,24L872,25L877,25L877,26L880,26L880,27L882,27L882,28L884,28L884,29L889,29L889,30L896,30" tabindex="0">
						<title>j595m2qx</title>
					</path>
				</g>
				<g style="--index: 89;">
					<path d="M0,89L753,89L753,36L774,36L774,37L812,37L812,38L822,38L822,39L824,39L824,40L827,40L827,41L832,41L832,42L848,42L848,43L859,43L859,44L866,44L866,45L877,45L877,46L879,46L879,47L880,47L880,48L882,48L882,49L884,49L884,50L889,50L889,51L891,51L891,52L896,52L896,53L896,53" tabindex="0">
						<title>8vrn4wvx</title>
					</path>
				</g>
				<g style="--index: 90;">
					<path d="M0,90L756,90L756,73L765,73L765,74L801,74L801,75L811,75L811,76L812,76L812,77L822,77L822,78L824,78L824,79L827,79L827,80L832,80L832,81L848,81L848,82L850,82L850,83L856,83L856,85L859,85L859,86L866,86L866,87L879,87L879,88L880,88L880,90L882,90L882,91L883,91L883,92L884,92L884,93L888,93L888,94L889,94L889,95L891,95L891,96L896,96L896,97L896,97" tabindex="0">
						<title>j0e46538</title>
					</path>
				</g>
				<g style="--index: 91;">
					<path d="M0,91L762,91L762,78L765,78L765,79L801,79L801,80L811,80L811,81L812,81L812,82L822,82L822,84L824,84L824,85L827,85L827,86L832,86L832,87L848,87L848,88L850,88L850,89L855,89L855,90L856,90L856,92L859,92L859,93L862,93L862,94L866,94L866,95L879,95L879,96L880,96L880,98L882,98L882,99L883,99L883,100L884,100L884,101L888,101L888,102L889,102L889,103L891,103L891,104L896,104L896,105L896,105" tabindex="0">
						<title>x3pqp4q8</title>
					</path>
				</g>
				<g style="--index: 92;">
					<path d="M0,92L765,92L765,49L774,49L774,50L811,50L811,51L812,51L812,52L822,52L822,53L824,53L824,54L827,54L827,55L832,55L832,56L848,56L848,57L850,57L850,58L856,58L856,59L859,59L859,60L866,60L866,61L879,61L879,62L880,62L880,63L882,63L882,64L884,64L884,65L889,65L889,66L891,66L891,67L896,67L896,68L896,68" tabindex="0">
						<title>j2plv6p8</title>
					</path>
				</g>
				<g style="--index: 93;">
					<path d="M0,93L799,93L799,92L801,92L801,93L811,93L811,94L812,94L812,95L822,95L822,97L824,97L824,98L827,98L827,99L832,99L832,100L841,100L841,101L848,101L848,102L850,102L850,104L855,104L855,105L856,105L856,107L859,107L859,108L862,108L862,109L866,109L866,110L879,110L879,111L880,111L880,113L882,113L882,114L883,114L883,115L884,115L884,116L888,116L888,117L889,117L889,118L891,118L891,119L896,119L896,120L896,120" tabindex="0">
						<title>j2pg3wp8</title>
					</path>
				</g>
				<g style="--index: 94;">
					<path d="M0,94L801,94L801,71L811,71L811,72L812,72L812,73L822,73L822,74L824,74L824,75L827,75L827,76L832,76L832,77L848,77L848,78L850,78L850,79L856,79L856,81L859,81L859,82L866,82L866,83L879,83L879,84L880,84L880,86L882,86L882,87L883,87L883,88L884,88L884,89L888,89L888,90L889,90L889,91L891,91L891,92L896,92L896,93L896,93" tabindex="0">
						<title>8eovz07j</title>
					</path>
				</g>
				<g style="--index: 95;">
					<path d="M0,95L811,95L811,38L812,38L812,39L822,39L822,40L824,40L824,41L827,41L827,42L832,42L832,43L848,43L848,44L859,44L859,45L866,45L866,46L877,46L877,47L879,47L879,48L880,48L880,49L882,49L882,50L884,50L884,51L889,51L889,52L891,52L891,53L896,53L896,54L896,54" tabindex="0">
						<title>x3pk7pk8</title>
					</path>
				</g>
				<g style="--index: 96;">
					<path d="M0,96L812,96L812,36L822,36L822,37L824,37L824,38L827,38L827,39L832,39L832,40L848,40L848,41L859,41L859,42L866,42L866,43L877,43L877,44L879,44L879,45L880,45L880,46L882,46L882,47L884,47L884,48L889,48L889,49L891,49L891,50L896,50L896,51L896,51" tabindex="0">
						<title>x7z9n168</title>
					</path>
				</g>
				<g style="--index: 97;">
					<path d="M0,97L816,97L816,96L822,96L822,98L824,98L824,99L827,99L827,100L832,100L832,101L841,101L841,102L848,102L848,103L850,103L850,105L855,105L855,106L856,106L856,108L859,108L859,109L862,109L862,110L866,110L866,111L879,111L879,112L880,112L880,114L882,114L882,115L883,115L883,116L884,116L884,117L888,117L888,118L889,118L889,119L891,119L891,120L896,120L896,121L896,121" tabindex="0">
						<title>8vrwoyyx</title>
					</path>
				</g>
				<g style="--index: 98;">
					<path d="M0,98L822,98L822,81L824,81L824,82L827,82L827,83L832,83L832,84L848,84L848,85L850,85L850,86L856,86L856,88L859,88L859,89L866,89L866,90L879,90L879,91L880,91L880,93L882,93L882,94L883,94L883,95L884,95L884,96L888,96L888,97L889,97L889,98L891,98L891,99L896,99L896,100L896,100" tabindex="0">
						<title>jo1wly7x</title>
					</path>
				</g>
				<g style="--index: 99;">
					<path d="M0,99L822,99L822,17L827,17L827,18L848,18L848,19L859,19L859,20L866,20L866,21L872,21L872,22L877,22L877,23L880,23L880,24L882,24L882,25L884,25L884,26L896,26" tabindex="0">
						<title>8l6w01r8</title>
					</path>
				</g>
				<g style="--index: 100;">
					<path d="M0,100L824,100L824,22L827,22L827,23L848,23L848,24L859,24L859,25L866,25L866,26L872,26L872,27L877,27L877,28L880,28L880,29L882,29L882,30L884,30L884,31L889,31L889,32L896,32" tabindex="0">
						<title>j4p575wj</title>
					</path>
				</g>
				<g style="--index: 101;">
					<path d="M0,101L827,101L827,8L848,8L848,9L865,9L865,10L866,10L866,11L877,11L877,12L880,12L880,13L882,13L882,14L896,14" tabindex="0">
						<title>8qp9kq7x</title>
					</path>
				</g>
				<g style="--index: 102;">
					<path d="M0,102L832,102L832,33L837,33L837,25L848,25L848,26L859,26L859,27L866,27L866,28L872,28L872,16L877,16L877,17L880,17L880,18L882,18L882,19L884,19L884,20L896,20" tabindex="0">
						<title>8dezzw5j</title>
					</path>
				</g>
				<g style="--index: 103;">
					<path d="M0,103L841,103L841,92L848,92L848,93L850,93L850,95L855,95L855,96L856,96L856,98L859,98L859,99L862,99L862,100L866,100L866,101L879,101L879,102L880,102L880,104L882,104L882,105L883,105L883,106L884,106L884,107L888,107L888,108L889,108L889,109L891,109L891,110L896,110L896,111L896,111" tabindex="0">
						<title>x7mnw5qx</title>
					</path>
				</g>
				<g style="--index: 104;">
					<path d="M0,104L848,104L848,2L876,2L876,0L880,0L880,1L881,1L881,0L896,0" tabindex="0">
						<title>81pdyqq8</title>
					</path>
				</g>
				<g style="--index: 105;">
					<path d="M0,105L850,105L850,94L851,94L851,90L855,90L855,91L856,91L856,93L859,93L859,94L862,94L862,95L866,95L866,96L879,96L879,97L880,97L880,99L882,99L882,100L883,100L883,101L884,101L884,102L888,102L888,103L889,103L889,104L891,104L891,105L896,105L896,106L896,106" tabindex="0">
						<title>8eop1w2j</title>
					</path>
				</g>
				<g style="--index: 106;">
					<path d="M0,106L850,106L850,48L856,48L856,49L859,49L859,50L866,50L866,51L877,51L877,8L880,8L880,9L882,9L882,11L884,11L884,8L896,8" tabindex="0">
						<title>j4p14gmj</title>
					</path>
				</g>
				<g style="--index: 107;">
					<path d="M0,107L855,107L855,87L856,87L856,89L859,89L859,90L866,90L866,91L879,91L879,92L880,92L880,94L882,94L882,95L883,95L883,96L884,96L884,97L888,97L888,98L889,98L889,99L891,99L891,100L896,100L896,101L896,101" tabindex="0">
						<title>81plmeq8</title>
					</path>
				</g>
				<g style="--index: 108;">
					<path d="M0,108L856,108L856,45L859,45L859,46L866,46L866,47L877,47L877,48L879,48L879,49L880,49L880,50L882,50L882,51L884,51L884,52L889,52L889,53L891,53L891,54L896,54L896,55L896,55" tabindex="0">
						<title>x7zp0gy8</title>
					</path>
				</g>
				<g style="--index: 109;">
					<path d="M0,109L856,109L856,73L859,73L859,74L866,74L866,75L879,75L879,76L880,76L880,78L882,78L882,79L883,79L883,80L884,80L884,81L889,81L889,82L891,82L891,83L896,83L896,84L896,84" tabindex="0">
						<title>81pg9mr8</title>
					</path>
				</g>
				<g style="--index: 110;">
					<path d="M0,110L859,110L859,10L865,10L865,7L866,7L866,8L872,8L872,6L880,6L880,7L882,7L882,9L884,9L884,10L891,10L891,11L896,11" tabindex="0">
						<title>j2pzvvp8</title>
					</path>
				</g>
				<g style="--index: 111;">
					<path d="M0,111L862,111L862,92L866,92L866,93L879,93L879,94L880,94L880,96L882,96L882,97L883,97L883,98L884,98L884,99L888,99L888,100L889,100L889,101L891,101L891,102L896,102L896,103L896,103" tabindex="0">
						<title>j9y117vx</title>
					</path>
				</g>
				<g style="--index: 112;">
					<path d="M0,112L866,112L866,7L872,7L872,8L877,8L877,9L880,9L880,10L882,10L882,7L896,7" tabindex="0">
						<title>8gop7k2x</title>
					</path>
				</g>
				<g style="--index: 113;">
					<path d="M0,113L879,113L879,38L880,38L880,39L882,39L882,40L884,40L884,41L889,41L889,42L896,42" tabindex="0">
						<title>j4wrenwx</title>
					</path>
				</g>
				<g style="--index: 114;">
					<path d="M0,114L880,114L880,69L882,69L882,70L884,70L884,71L889,71L889,72L891,72L891,73L896,73L896,74L896,74" tabindex="0">
						<title>867vroqj</title>
					</path>
				</g>
				<g style="--index: 115;">
					<path d="M0,115L880,115L880,0L881,0L881,1L896,1" tabindex="0">
						<title>jo19m63x</title>
					</path>
				</g>
				<g style="--index: 116;">
					<path d="M0,116L882,116L882,6L884,6L884,2L896,2" tabindex="0">
						<title>x361ozex</title>
					</path>
				</g>
				<g style="--index: 117;">
					<path d="M0,117L883,117L883,78L884,78L884,79L889,79L889,80L891,80L891,81L896,81L896,82L896,82" tabindex="0">
						<title>j4wry0mx</title>
					</path>
				</g>
				<g style="--index: 118;">
					<path d="M0,118L884,118L884,15L896,15" tabindex="0">
						<title>xz59wp0x</title>
					</path>
				</g>
				<g style="--index: 119;">
					<path d="M0,119L888,119L888,82L889,82L889,83L891,83L891,84L896,84L896,85L896,85" tabindex="0">
						<title>86p9noqj</title>
					</path>
				</g>
				<g style="--index: 120;">
					<path d="M0,120L889,120L889,27L896,27" tabindex="0">
						<title>8r6739q8</title>
					</path>
				</g>
				<g style="--index: 121;">
					<path d="M0,121L891,121L891,48L896,48L896,49L896,49" tabindex="0">
						<title>j9vnl0rx</title>
					</path>
				</g>
				<g style="--index: 122;">
					<path d="M0,122L896,122L896,48L896,48" tabindex="0">
						<title>8v7k4wy8</title>
					</path>
				</g>
			</g>
		</svg>
	</foreignObject>
</svg>
