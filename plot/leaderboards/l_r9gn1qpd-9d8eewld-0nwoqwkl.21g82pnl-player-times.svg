<svg xmlns="http://www.w3.org/2000/svg" lang="en">
	<title>Time by player for leaderboard l_r9gn1qpd-9d8eewld-0nwoqwkl.21g82pnl</title>
	<metadata>
		<meta xmlns="http://www.w3.org/1999/xhtml" charset="utf-8" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="viewport" content="width=device-width" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="color-scheme" content="dark light" />
	</metadata>
	<style>
		*,
		::before,
		::after {
			box-sizing: border-box;
		}
		:root {
			background: var(--canvas-background);
			color: var(--canvas-foreground);
			fill: var(--canvas-background);
			stroke: var(--canvas-foreground);
			stroke-linejoin: round;
			stroke-linecap: round;
		}
		foreignObject {
			pointer-events: none;
		}
		foreignObject::before,
		foreignObject::after {
			content: "";
			position: absolute;
			z-index: 1;
			left: 20px;
			bottom: 20px;
			pointer-events: auto;
		}
		foreignObject::before {
			width: calc(100% - 40px);
			height: calc(20px + var(--date-size) * 1px);
		}
		foreignObject::after {
			width: calc(20px + var(--value-size) * 1px);
			height: calc(100% - 40px);
		}
		foreignObject &gt; div {
			position: absolute;
			z-index: 4;
			right: 0;
			top: 0;
			margin: 20px;
			border: 1px solid var(--canvas-foreground);
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			transition: opacity 1s;
			pointer-events: auto;
		}
		foreignObject:is(:hover, :focus-within) &gt; div:not(:hover, :focus-within) {
			opacity: 0;
			pointer-events: none;
		}
		foreignObject &gt; div &gt; p {
			margin: 0;
		}
		label {
			display: table;
			border-collapse: separate;
			border-spacing: 10px;
			direction: rtl;
		}
		progress,
		input[type="checkbox"] {
			display: table-cell;
			width: 16px;
			height: 16px;
			margin: 2px;
			accent-color: var(--canvas-foreground);
			vertical-align: top;
			direction: ltr;
		}
		progress + span,
		input[type="checkbox"] + span {
			display: table-cell;
			vertical-align: top;
			direction: ltr;
		}
		input[type="checkbox"]:not(:disabled):is(:hover, :focus-within) + span {
			text-decoration: underline;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			position: absolute;
			z-index: 2;
			margin: 0;
			padding: 10px;
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			font-weight: bold;
			pointer-events: auto;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg + svg {
			border-top: 1px solid #0000;
			border-bottom: 1px solid var(--canvas-foreground);
		}
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px dashed #0000;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg {
			width: calc(20px + var(--date-size) * 1px);
			height: 42px;
			bottom: 20px;
		}
		foreignObject &gt; svg:first-of-type {
			left: calc(40px + var(--value-size) * 1px);
			transform: rotate(90deg) translate(-100%, 0);
			transform-origin: left bottom;
		}
		foreignObject &gt; svg:first-of-type + svg {
			right: 20px;
			transform: rotate(90deg) translate(0, 100%);
			transform-origin: right bottom;
		}
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			width: calc(20px + var(--value-size) * 1px);
			height: 42px;
			left: 20px;
		}
		foreignObject &gt; svg:first-of-type + svg + svg {
			bottom: calc(40px + var(--date-size) * 1px);
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			top: 20px;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text {
			fill: var(--canvas-foreground);
			stroke: none;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text {
			cursor: vertical-text;
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg + svg {
			position: relative;
			z-index: 3;
			width: calc(100% - 60px - var(--value-size) * 1px);
			height: calc(100% - 60px - var(--date-size) * 1px);
			margin: 20px 20px calc(40px + var(--date-size) * 1px) calc(40px + var(--value-size) * 1px);
			border-left: 1px solid var(--canvas-foreground);
			border-right: 1px dashed var(--canvas-foreground);
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px solid var(--canvas-foreground);
			background: var(--canvas-background);
			pointer-events: auto;
		}
		g &gt; rect {
			vector-effect: non-scaling-stroke;
			fill: var(--highlighted);
			stroke: none;
		}
		g &gt; rect[tabindex] {
			fill: var(--tier, #0000);
			cursor: help;
		}
		g &gt; rect[tabindex][data-tier="diamond"] {
			--tier: var(--diamond);
		}
		g &gt; rect[tabindex][data-tier="gold"] {
			--tier: var(--gold);
		}
		g &gt; rect[tabindex][data-tier="silver"] {
			--tier: var(--silver);
		}
		g &gt; rect[tabindex][data-tier="bronze"] {
			--tier: var(--bronze);
		}
		g &gt; path[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: hsl(calc(var(--index) / var(--count) * 360), 50%, 50%);
			cursor: help;
		}
		g:is(:hover, :focus-within) &gt; path[tabindex] {
			stroke: var(--canvas-foreground);
		}
		g &gt; path[tabindex]:is(:hover, :focus-within) {
			outline: 0;
		}
		g &gt; path[tabindex]:first-of-type {
			stroke-width: 2;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) {
			stroke-width: 4;
		}
		g &gt; path[tabindex]:first-of-type:not(:last-of-type) {
			stroke-dasharray: 4 8;
		}
		g &gt; path[tabindex]:first-of-type + rect {
			fill: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect {
			fill: var(--highlighted);
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] {
			stroke-width: 8;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) {
			stroke-width: 16;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line + line {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			stroke-width: 2;
			stroke-dasharray: 4 8;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line + line {
			stroke: var(--faded);
		}
		@media (prefers-color-scheme: dark) {
			:root {
				--canvas-background: #000;
				--canvas-foreground: #ccc;
				--diamond: #0363;
				--gold: #6303;
				--silver: #3633;
				--bronze: #6363;
				--highlighted: #6663;
				--faded: #9993;
			}
		}
		@media (prefers-color-scheme: light) {
			:root {
				--canvas-background: #fff;
				--canvas-foreground: #333;
				--diamond: #9cf3;
				--gold: #fc93;
				--silver: #9c93;
				--bronze: #c9c3;
				--highlighted: #9993;
				--faded: #6663;
			}
		}
	</style>
	<script>
		"use strict";
		{
			const script = document.currentScript;
			const documentUrl = location.href;
			const scope = new URL("../../", documentUrl).pathname;
			const playersKey = `${scope}#players`;
			const leaderboardsKey = `${scope}#leaderboards`;
			const sessionKey = `${scope}#session`;
			const lockKey = `${scope}#lock`;
			async function importDataScript(dataScriptUrl, signal) {
				signal.throwIfAborted();
				if (documentUrl.protocol !== "file:") {
					const response = await fetch(dataScriptUrl, {
						signal,
					});
					if (!response.ok) {
						throw new Error(response.statusText);
					}
					const data = await response.json();
					return data;
				}
				return await new Promise((resolve, reject) =&gt; {
					const name = `callback${Math.random() * 2 ** 53}`;
					let called = false;
					let data = null;
					function callback(value) {
						if (!called) {
							called = true;
							data = value;
						}
					}
					window[name] = callback;
					const dataScript = document.createElementNS("http://www.w3.org/2000/svg", "script");
					dataScript.href = `${dataScriptUrl}&amp;callback=${name}`;
					function handleAbort(event) {
						delete window[name];
						dataScript.removeEventListener("error", handleError);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const reason = signal.reason;
						reject(reason);
					}
					function handleError(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const error = event.error;
						reject(error);
					}
					function handleLoad(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("error", handleError);
						dataScript.remove();
						resolve(data);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					dataScript.addEventListener("error", handleError, {
						once: true,
					});
					dataScript.addEventListener("load", handleLoad, {
						once: true,
					});
					script.after(dataScript);
				});
			}
			async function waitForTimeout(delay, signal) {
				signal.throwIfAborted();
				return await new Promise((resolve, reject) =&gt; {
					let timeout = null;
					function handleAbort() {
						clearTimeout(timeout);
						const reason = signal.reason;
						reject(reason);
					}
					function handleTimeout() {
						signal.removeEventListener("abort", handleAbort);
						resolve(delay);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					timeout = setTimeout(handleTimeout, delay);
				});
			}
			window.addEventListener("pageshow", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully restored page from cache`);
				} else {
					console.log(`Unsuccessfully restored page from cache`);
				}
			});
			window.addEventListener("pagehide", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully saved page to cache`);
				} else {
					console.log(`Unsuccessfully saved page to cache`);
				}
			});
			window.addEventListener("pageshow", async (event) =&gt; {
				const rootTitleElement = document.querySelector("title");
				const rootTitleContent = rootTitleElement.textContent;
				const pathTitleElements = Array.from(document.querySelectorAll("g &gt; path[tabindex]:first-of-type &gt; title"));
				const pathTitleContents = pathTitleElements.map((pathTitleElement) =&gt; {
					const pathTitleContent = pathTitleElement.textContent;
					return pathTitleContent;
				});
				const foreignObject = document.querySelector("foreignObject");
				const div = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
				div.dir = "ltr";
				const p = document.createElementNS("http://www.w3.org/1999/xhtml", "p");
				const label = document.createElementNS("http://www.w3.org/1999/xhtml", "label");
				const progress = document.createElementNS("http://www.w3.org/1999/xhtml", "progress");
				label.append(progress);
				const span = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
				span.textContent = "Loading names";
				label.append(span);
				p.append(label);
				div.append(p);
				foreignObject.prepend(div);
				let lock = false;
				let session = null;
				const broadcastChannel = new BroadcastChannel(sessionKey);
				const abortController = new AbortController();
				const signal = abortController.signal;
				const abort = abortController.abort.bind(abortController);
				const {promise, resolve} = Promise.withResolvers();
				broadcastChannel.addEventListener("message", (event) =&gt; {
					const data = event.data;
					const type = data.type;
					switch (type) {
						case "request": {
							if (lock &amp;&amp; signal.aborted) {
								broadcastChannel.postMessage({
									type: "response",
									session,
								});
							}
							break;
						}
						case "response": {
							if (!signal.aborted) {
								session = data.session;
								if (session != null) {
									const {players, leaderboards} = session;
									try {
										const cachedPlayers = JSON.stringify(players);
										const cachedLeaderboards = JSON.stringify(leaderboards);
										sessionStorage.setItem(playersKey, cachedPlayers);
										sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
									} catch {}
									console.log(`Successfully loaded names from peer`);
									abort();
									resolve();
								} else {
									console.log(`Unsuccessfully loaded names from peer`);
									abort();
									resolve();
								}
							}
							break;
						}
					}
				});
				try {
					const cachedPlayers = sessionStorage.getItem(playersKey);
					const cachedLeaderboards = sessionStorage.getItem(leaderboardsKey);
					if (cachedPlayers == null || cachedLeaderboards == null) {
						throw new Error();
					}
					const players = JSON.parse(cachedPlayers);
					const leaderboards = JSON.parse(cachedLeaderboards);
					session = {players, leaderboards};
				} catch {}
				if (session != null) {
					broadcastChannel.postMessage({
						type: "response",
						session,
					});
					console.log(`Successfully loaded names from local`);
					abort();
					resolve();
				} else {
					broadcastChannel.postMessage({
						type: "request",
					});
					console.log(`Unsuccessfully loaded names from local`);
				}
				(async () =&gt; {
					for (;;) {
						await navigator.locks.request(lockKey, async () =&gt; {
							lock = true;
							console.log(`Acquired lock`);
							if (!signal.aborted) {
								try {
									const players = Object.create(null);
									const leaderboards = Object.create(null);
									const games = ["9d3rrxyd", "w6jl2ned"];
									for (const gameId of games) {
										const {data} = await importDataScript(`https://www.speedrun.com/api/v1/games/${gameId}?embed=categories,levels,variables`, signal);
										const versions = data.variables.data.find((variable) =&gt; {
											return variable.name === "Version";
										});
										const levels = Object.fromEntries(data.levels.data.map((level) =&gt; {
											return [level.id, level];
										}));
										const categories = Object.fromEntries(data.categories.data.map((category) =&gt; {
											return [category.id, category];
										}));
										const variables = Object.fromEntries(data.variables.data.map((variable) =&gt; {
											return [variable.id, variable];
										}));
										console.log(`Got game`);
										await waitForTimeout(800, signal);
										const slice = 200;
										for (let offset = 0;; offset += slice) {
											const {data, pagination} = await importDataScript(`https://www.speedrun.com/api/v1/runs?game=${gameId}&amp;orderby=date&amp;direction=asc&amp;embed=players&amp;offset=${offset}&amp;max=${slice}`, signal);
											const {size} = pagination;
											if (size === 0) {
												break;
											}
											for (const run of data) {
												const status = run.status.status;
												if (status == null || status === "new") {
													continue;
												}
												const player = run.players.data[0].rel === "user" ? run.players.data[0].id : "814p2558";
												const playerName = run.players.data[0].rel === "user" ? run.players.data[0].names.international : "anonymous";
												players[player] ??= playerName;
												const level = run.level;
												const category = run.category;
												const values = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return `-${variable}.${value}`;
												});
												const leaderboard = `${level != null ? `l_${level}-` : ""}${category}${values.join("")}`;
												const levelName = run.level != null ? levels[run.level]?.name ?? null : null;
												const categoryName = categories[run.category]?.name ?? null;
												const valueNames = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return variables[variable]?.values.values[value]?.label ?? null;
												}).filter((valueName) =&gt; {
													return valueName != null;
												});
												const leaderboardName = `${levelName != null ? `${levelName}: ` : ""}${categoryName ?? ""}${values.length !== 0 ? ` - ${valueNames.join(", ")}` : ""}`;
												leaderboards[leaderboard] ??= leaderboardName;
											}
											console.log(`Got runs ${offset}-${offset + size - 1}`);
											await waitForTimeout(800, signal);
										}
									}
									session = {players, leaderboards};
								} catch {}
								if (!signal.aborted) {
									if (session != null) {
										const {players, leaderboards} = session;
										try {
											const cachedPlayers = JSON.stringify(players);
											const cachedLeaderboards = JSON.stringify(leaderboards);
											sessionStorage.setItem(playersKey, cachedPlayers);
											sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
										} catch {}
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Successfully loaded names from remote`);
										abort();
										resolve();
									} else {
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Unsuccessfully loaded names from remote`);
										abort();
										resolve();
									}
								}
							}
							await new Promise((resolve) =&gt; {
								window.addEventListener("beforeunload", () =&gt; {
									resolve();
								}, {
									once: true,
								});
							});
						});
						lock = false;
						console.log(`Released lock`);
						await new Promise((resolve) =&gt; {
							window.addEventListener("pagehide", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
						await new Promise((resolve) =&gt;{
							window.addEventListener("pageshow", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
					}
				})();
				await promise;
				if (session == null) {
					const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
					input.type = "checkbox";
					input.autocomplete = "off";
					input.disabled = true;
					input.indeterminate = true;
					progress.replaceWith(input);
					span.textContent = "Unavailable names";
					return;
				}
				const {players, leaderboards} = session;
				const hasPlayerRoot = rootTitleContent.includes(" for player");
				const hasLeaderboardRoot = rootTitleContent.includes(" for leaderboard");
				const rootTitle = {
					element: rootTitleElement,
					contentWithIds: rootTitleContent,
					contentWithNames: hasPlayerRoot ? rootTitleContent.replace(/ for player ([0-9_a-z]+)/, ($0, $1) =&gt; {
						return ` for player ${players[$1] ?? $1}`;
					}) : hasLeaderboardRoot ? rootTitleContent.replace(/ for leaderboard ((?:l_[0-9_a-z]+-)?[0-9_a-z]+(-[0-9_a-z]+\.[0-9_a-z]+)*)/, ($0, $1) =&gt; {
						return ` for leaderboard ${leaderboards[$1] ?? $1}`;
					}) : rootTitleContent,
				};
				const hasPlayerPaths = rootTitleContent.includes(" by player");
				const hasLeaderboardPaths = rootTitleContent.includes(" by leaderboard");
				const pathTitles = pathTitleElements.map((pathTitleElement, k) =&gt; {
					const pathTitleContent = pathTitleContents[k];
					const pathTitle = {
						element: pathTitleElement,
						contentWithIds: pathTitleContent,
						contentWithNames: hasPlayerPaths ? players[pathTitleContent] ?? pathTitleContent : hasLeaderboardPaths ? leaderboards[pathTitleContent] ?? pathTitleContent : pathTitleContent,
					};
					return pathTitle;
				});
				const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
				input.type = "checkbox";
				input.autocomplete = "off";
				input.addEventListener("change", () =&gt; {
					input.disabled = true;
					if (input.checked) {
						rootTitle.element.textContent = rootTitle.contentWithNames;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithNames;
						}
					} else {
						rootTitle.element.textContent = rootTitle.contentWithIds;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithIds;
						}
					}
					input.disabled = false;
				});
				progress.replaceWith(input);
				span.textContent = "Reveal names";
			}, {
				once: true,
			});
		}
	</script>
	<script>
		"use strict";
		{
			document.addEventListener("DOMContentLoaded", (event) =&gt; {
				const minDateText = document.querySelector("foreignObject &gt; svg:first-of-type &gt; text");
				const maxDateText = document.querySelector("foreignObject &gt; svg:first-of-type + svg &gt; text");
				const startX = Math.round(Date.parse(minDateText.textContent) / 86400000);
				function xToDate(x) {
					const datetime = new Date((startX + x) * 86400000);
					const year = `${datetime.getUTCFullYear()}`.padStart(4, "0");
					const month = `${datetime.getUTCMonth() + 1}`.padStart(2, "0");
					const day = `${datetime.getUTCDate()}`.padStart(2, "0");
					const date = `${year}-${month}-${day}`;
					const size = date.length * 10;
					return {date, size};
				}
				function setMinDate(x) {
					const {date, size} = xToDate(Math.floor(x));
					minDateText.textLength.baseVal.value = size;
					minDateText.textContent = date;
				}
				function setMaxDate(x) {
					const {date, size} = xToDate(Math.ceil(x));
					maxDateText.textLength.baseVal.value = size;
					maxDateText.textContent = date;
				}
				const minValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg &gt; text");
				const maxValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text");
				const timed = minValueText.textContent.includes(":");
				function yToValue(y) {
					if (timed) {
						const minutes = `${(y - y % 6000) / 6000}`.padStart(2, "0");
						const seconds = `${(y - y % 100) / 100 % 60}`.padStart(2, "0");
						const centiseconds = `${y % 100}`.padStart(2, "0");
						const value = `${minutes}:${seconds}.${centiseconds}`;
						const size = value.length * 10;
						return {value, size};
					} else {
						const value = `${y}`;
						const size = value.length * 10;
						return {value, size};
					}
				}
				function setMinValue(y) {
					const {value, size} = yToValue(Math.floor(y));
					minValueText.textLength.baseVal.value = size;
					minValueText.textContent = value;
				}
				function setMaxValue(y) {
					const {value, size} = yToValue(Math.ceil(y));
					maxValueText.textLength.baseVal.value = size;
					maxValueText.textContent = value;
				}
				const svg = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg + svg");
				svg.tabIndex = -1;
				svg.style.setProperty("outline", "0");
				if (CSS.supports("overflow-clip-margin", "8px")) {
					svg.style.setProperty("overflow", "clip");
					svg.style.setProperty("overflow-clip-margin", "8px");
				}
				svg.style.setProperty("touch-action", "none");
				const {x: baseX, y: baseY, width: baseWidth, height: baseHeight} = svg.viewBox.baseVal;
				let pointerCount = 0;
				const pointers = Object.create(null);
				const xPointerIds = [];
				const yPointerIds = [];
				let x = null;
				let y = null;
				let width = null;
				let height = null;
				svg.addEventListener("pointerdown", (event) =&gt; {
					const {pointerId} = event;
					if (pointerId in pointers) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.setPointerCapture(pointerId);
					++pointerCount;
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId] = {
						offsetX,
						offsetY,
					};
					xPointerIds.splice(xPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetX &lt;= offsetX;
					}) + 1, 0, pointerId);
					yPointerIds.splice(yPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetY &lt;= offsetY;
					}) + 1, 0, pointerId);
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					width = Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth);
					height = Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight);
					x = Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX);
					y = Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY);
				});
				svg.addEventListener("pointerup", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.releasePointerCapture(pointerId);
					--pointerCount;
					delete pointers[pointerId];
					xPointerIds.splice(xPointerIds.lastIndexOf(pointerId), 1);
					yPointerIds.splice(yPointerIds.lastIndexOf(pointerId), 1);
					const minOffsetX = pointerCount !== 0 ? pointers[xPointerIds[0]].offsetX : null;
					const minOffsetY = pointerCount !== 0 ? pointers[yPointerIds[0]].offsetY : null;
					const maxClientWidth = pointerCount !== 0 ? pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX : null;
					const maxClientHeight = pointerCount !== 0 ? pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY : null;
					width = pointerCount !== 0 ? Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth) : null;
					height = pointerCount !== 0 ? Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight) : null;
					x = pointerCount !== 0 ? Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX) : null;
					y = pointerCount !== 0 ? Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY) : null;
				});
				svg.addEventListener("pointermove", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					event.preventDefault();
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId].offsetX = offsetX;
					pointers[pointerId].offsetY = offsetY;
					const oldXIndex = xPointerIds.lastIndexOf(pointerId);
					let newXIndex = oldXIndex;
					while (newXIndex &gt; 0 &amp;&amp; pointers[xPointerIds[newXIndex - 1]].offsetX &gt; offsetX) {
						--newXIndex;
					}
					xPointerIds.copyWithin(newXIndex + 1, newXIndex, oldXIndex);
					xPointerIds[newXIndex] = pointerId;
					while (newXIndex &lt; pointerCount - 1 &amp;&amp; pointers[xPointerIds[newXIndex + 1]].offsetX &lt; offsetX) {
						++newXIndex;
					}
					xPointerIds.copyWithin(oldXIndex, oldXIndex + 1, newXIndex + 1);
					xPointerIds[newXIndex] = pointerId;
					const oldYIndex = yPointerIds.lastIndexOf(pointerId);
					let newYIndex = oldYIndex;
					while (newYIndex &gt; 0 &amp;&amp; pointers[yPointerIds[newYIndex - 1]].offsetY &gt; offsetY) {
						--newYIndex;
					}
					yPointerIds.copyWithin(newYIndex + 1, newYIndex, oldYIndex);
					yPointerIds[newYIndex] = pointerId;
					while (newYIndex &lt; pointerCount - 1 &amp;&amp; pointers[yPointerIds[newYIndex + 1]].offsetY &lt; offsetY) {
						++newYIndex;
					}
					yPointerIds.copyWithin(oldYIndex, oldYIndex + 1, newYIndex + 1);
					yPointerIds[newYIndex] = pointerId;
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					animWidth = width === 0 ? animWidth : maxClientWidth === 0 ? baseWidth : Math.min(svg.clientWidth / maxClientWidth * width, baseWidth);
					animHeight = height === 0 ? animHeight : maxClientHeight === 0 ? baseHeight : Math.min(svg.clientHeight / maxClientHeight * height, baseHeight);
					animX = Math.max(Math.min(x - minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(y - minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
				const zoomIntensity = 1.25;
				svg.addEventListener("wheel", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					if (!ctrlKey) {
						const vectorX = (shiftKey ? event.deltaY : event.deltaX) / svg.clientWidth * animWidth;
						const vectorY = (shiftKey ? 0 : event.deltaY) / svg.clientHeight * animHeight;
						animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
						animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
						svg.viewBox.baseVal.x = animX;
						svg.viewBox.baseVal.y = animY;
						setMinDate(animX);
						setMaxDate(animX + animWidth);
						setMinValue(baseY * 2 + baseHeight - animHeight - animY);
						setMaxValue(baseY * 2 + baseHeight - animY);
						return;
					}
					const ratioX = zoomIntensity ** Math.sign(shiftKey ? event.deltaY : event.deltaX);
					const ratioY = zoomIntensity ** Math.sign(shiftKey ? 0 : event.deltaY);
					const positionX = Math.max(0, Math.min(event.offsetX / svg.clientWidth, 1)) * animWidth;
					const positionY = Math.max(0, Math.min(event.offsetY / svg.clientHeight, 1)) * animHeight;
					animWidth = Math.min(animWidth * ratioX, baseWidth);
					animHeight = Math.min(animHeight * ratioY, baseHeight);
					animX = Math.max(Math.min(animX + positionX * (1 - ratioX), baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(animY + positionY * (1 - ratioY), baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				}, {
					passive: false,
				});
				svg.addEventListener("keydown", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					switch (event.code) {
						case "Space": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "Equal":
						case "NumpadAdd":
						case "Minus":
						case "NumpadSubtract": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.code === "Minus" || event.code === "NumpadSubtract" ? zoomIntensity : 1 / zoomIntensity;
							if (!shiftKey) {
								animHeight = Math.min(animHeight * ratio, baseHeight);
								animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "Digit0":
						case "Numpad0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							if (!shiftKey) {
								animY = baseY;
								animHeight = baseHeight;
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animX = baseX;
							animWidth = baseWidth;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
					}
					switch (event.key) {
						case "ArrowRight": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = 50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowLeft": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = -50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowDown": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = 50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "End": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY + baseHeight - animHeight;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "ArrowUp": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = -50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "Home": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "PageDown":
						case "PageUp":
						case " ": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = event.key === "PageUp" || event.key === " " &amp;&amp; shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "+":
						case "-": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.key === "-" ? 1 / zoomIntensity : zoomIntensity;
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animHeight = Math.min(animHeight * ratio, baseHeight);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animX = baseX;
							animY = baseY;
							animWidth = baseWidth;
							animHeight = baseHeight;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
					}
				});
				svg.addEventListener("focusin", (event) =&gt; {
					if (!event.target.matches(":focus-visible")) {
						return;
					}
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					let {x, y, width, height} = event.target.getBBox();
					width = Math.round(width);
					height = Math.round(height);
					x = Math.round(x);
					y = baseY * 2 + baseHeight - height - Math.round(y);
					if (x + width &lt; animX) {
						animX = x;
						if (width &gt; animWidth) {
							animX += (width - animWidth) / 2;
						}
					} else if (x &gt; animX + animWidth) {
						animX = x + width - animWidth;
						if (width &gt; animWidth) {
							animX -= (width - animWidth) / 2;
						}
					}
					if (y + height &lt; animY) {
						animY = y;
						if (height &gt; animHeight) {
							animY += (height - animHeight) / 2;
						}
					} else if (y &gt; animY + animHeight) {
						animY = y + height - animHeight;
						if (height &gt; animHeight) {
							animY -= (height - animHeight) / 2;
						}
					}
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
			}, {
				once: true,
			});
		}
	</script>
	<foreignObject x="0" y="0" width="100%" height="100%" style="--date-size: 100; --value-size: 80;">
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2018-01-09</text>
		</svg>
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2025-09-28</text>
		</svg>
		<svg viewBox="0 0 80 20">
			<text x="40" y="10" dx="0" dy="2" textLength="80" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">00:00.00</text>
		</svg>
		<svg viewBox="0 0 80 20">
			<text x="40" y="10" dx="0" dy="2" textLength="80" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">01:50.78</text>
		</svg>
		<svg viewBox="0 0 2819 11078" preserveAspectRatio="none" overflow="visible">
			<g transform="translate(0 11078) scale(1 -1)" style="--count: 61;">
				<g>
					<rect x="0" y="0" width="2819" height="1500" tabindex="0" data-tier="diamond">
						<title>00:15.00 for diamond</title>
					</rect>
					<rect x="0" y="1500" width="2819" height="1000" tabindex="0" data-tier="gold">
						<title>00:25.00 for gold</title>
					</rect>
					<rect x="0" y="2500" width="2819" height="900" tabindex="0" data-tier="silver">
						<title>00:34.00 for silver</title>
					</rect>
					<rect x="0" y="3400" width="2819" height="1600" tabindex="0" data-tier="bronze">
						<title>00:50.00 for bronze</title>
					</rect>
				</g>
				<g style="--index: 0;">
					<path d="M0,2191L58,2191L58,1832" tabindex="0">
						<title>qj2pq1p8</title>
					</path>
					<rect x="0" y="1832" width="58" height="359"/>
					<path d="M0,2191L0,2191" tabindex="0">
						<title>00:21.91 on 2018-01-09</title>
					</path>
					<line x1="0" y1="2191" x2="2819" y2="2191"/>
					<line x1="0" y1="0" x2="0" y2="11078"/>
					<path d="M58,1832L58,1832" tabindex="0">
						<title>00:18.32 on 2018-03-08</title>
					</path>
					<line x1="0" y1="1832" x2="2819" y2="1832"/>
					<line x1="58" y1="0" x2="58" y2="11078"/>
				</g>
				<g style="--index: 1;">
					<path d="M9,2074" tabindex="0">
						<title>0jm3onz8</title>
					</path>
					<rect x="9" y="2074" width="0" height="0"/>
					<path d="M9,2074L9,2074" tabindex="0">
						<title>00:20.74 on 2018-01-18</title>
					</path>
					<line x1="0" y1="2074" x2="2819" y2="2074"/>
					<line x1="9" y1="0" x2="9" y2="11078"/>
				</g>
				<g style="--index: 2;">
					<path d="M72,2315" tabindex="0">
						<title>18qg9ndx</title>
					</path>
					<rect x="72" y="2315" width="0" height="0"/>
					<path d="M72,2315L72,2315" tabindex="0">
						<title>00:23.15 on 2018-03-22</title>
					</path>
					<line x1="0" y1="2315" x2="2819" y2="2315"/>
					<line x1="72" y1="0" x2="72" y2="11078"/>
				</g>
				<g style="--index: 3;">
					<path d="M98,1643L843,1643L843,1161" tabindex="0">
						<title>y8dgoe98</title>
					</path>
					<rect x="98" y="1161" width="745" height="482"/>
					<path d="M98,1643L98,1643" tabindex="0">
						<title>00:16.43 on 2018-04-17</title>
					</path>
					<line x1="0" y1="1643" x2="2819" y2="1643"/>
					<line x1="98" y1="0" x2="98" y2="11078"/>
					<path d="M843,1161L843,1161" tabindex="0">
						<title>00:11.61 on 2020-05-01</title>
					</path>
					<line x1="0" y1="1161" x2="2819" y2="1161"/>
					<line x1="843" y1="0" x2="843" y2="11078"/>
				</g>
				<g style="--index: 4;">
					<path d="M582,2566" tabindex="0">
						<title>j9rlkzoj</title>
					</path>
					<rect x="582" y="2566" width="0" height="0"/>
					<path d="M582,2566L582,2566" tabindex="0">
						<title>00:25.66 on 2019-08-14</title>
					</path>
					<line x1="0" y1="2566" x2="2819" y2="2566"/>
					<line x1="582" y1="0" x2="582" y2="11078"/>
				</g>
				<g style="--index: 5;">
					<path d="M863,1679L929,1679L929,1164L2720,1164L2720,1064" tabindex="0">
						<title>x356nrej</title>
					</path>
					<rect x="863" y="1064" width="1857" height="615"/>
					<path d="M863,1679L863,1679" tabindex="0">
						<title>00:16.79 on 2020-05-21</title>
					</path>
					<line x1="0" y1="1679" x2="2819" y2="1679"/>
					<line x1="863" y1="0" x2="863" y2="11078"/>
					<path d="M929,1164L929,1164" tabindex="0">
						<title>00:11.64 on 2020-07-26</title>
					</path>
					<line x1="0" y1="1164" x2="2819" y2="1164"/>
					<line x1="929" y1="0" x2="929" y2="11078"/>
					<path d="M2720,1064L2720,1064" tabindex="0">
						<title>00:10.64 on 2025-06-21</title>
					</path>
					<line x1="0" y1="1064" x2="2819" y2="1064"/>
					<line x1="2720" y1="0" x2="2720" y2="11078"/>
				</g>
				<g style="--index: 6;">
					<path d="M1026,1289" tabindex="0">
						<title>j0np7or8</title>
					</path>
					<rect x="1026" y="1289" width="0" height="0"/>
					<path d="M1026,1289L1026,1289" tabindex="0">
						<title>00:12.89 on 2020-10-31</title>
					</path>
					<line x1="0" y1="1289" x2="2819" y2="1289"/>
					<line x1="1026" y1="0" x2="1026" y2="11078"/>
				</g>
				<g style="--index: 7;">
					<path d="M1049,1233" tabindex="0">
						<title>x7q00668</title>
					</path>
					<rect x="1049" y="1233" width="0" height="0"/>
					<path d="M1049,1233L1049,1233" tabindex="0">
						<title>00:12.33 on 2020-11-23</title>
					</path>
					<line x1="0" y1="1233" x2="2819" y2="1233"/>
					<line x1="1049" y1="0" x2="1049" y2="11078"/>
				</g>
				<g style="--index: 8;">
					<path d="M1372,1117" tabindex="0">
						<title>814zn7l8</title>
					</path>
					<rect x="1372" y="1117" width="0" height="0"/>
					<path d="M1372,1117L1372,1117" tabindex="0">
						<title>00:11.17 on 2021-10-12</title>
					</path>
					<line x1="0" y1="1117" x2="2819" y2="1117"/>
					<line x1="1372" y1="0" x2="1372" y2="11078"/>
				</g>
				<g style="--index: 9;">
					<path d="M1522,1231" tabindex="0">
						<title>81qlgylj</title>
					</path>
					<rect x="1522" y="1231" width="0" height="0"/>
					<path d="M1522,1231L1522,1231" tabindex="0">
						<title>00:12.31 on 2022-03-11</title>
					</path>
					<line x1="0" y1="1231" x2="2819" y2="1231"/>
					<line x1="1522" y1="0" x2="1522" y2="11078"/>
				</g>
				<g style="--index: 10;">
					<path d="M1550,2780" tabindex="0">
						<title>j956o5n8</title>
					</path>
					<rect x="1550" y="2780" width="0" height="0"/>
					<path d="M1550,2780L1550,2780" tabindex="0">
						<title>00:27.80 on 2022-04-08</title>
					</path>
					<line x1="0" y1="2780" x2="2819" y2="2780"/>
					<line x1="1550" y1="0" x2="1550" y2="11078"/>
				</g>
				<g style="--index: 11;">
					<path d="M1565,1288L1577,1288L1577,1153L1592,1153L1592,1103" tabindex="0">
						<title>xk3m6d68</title>
					</path>
					<rect x="1565" y="1103" width="27" height="185"/>
					<path d="M1565,1288L1565,1288" tabindex="0">
						<title>00:12.88 on 2022-04-23</title>
					</path>
					<line x1="0" y1="1288" x2="2819" y2="1288"/>
					<line x1="1565" y1="0" x2="1565" y2="11078"/>
					<path d="M1577,1153L1577,1153" tabindex="0">
						<title>00:11.53 on 2022-05-05</title>
					</path>
					<line x1="0" y1="1153" x2="2819" y2="1153"/>
					<line x1="1577" y1="0" x2="1577" y2="11078"/>
					<path d="M1592,1103L1592,1103" tabindex="0">
						<title>00:11.03 on 2022-05-20</title>
					</path>
					<line x1="0" y1="1103" x2="2819" y2="1103"/>
					<line x1="1592" y1="0" x2="1592" y2="11078"/>
				</g>
				<g style="--index: 12;">
					<path d="M1620,2110L1674,2110L1674,2036" tabindex="0">
						<title>x7wer7v8</title>
					</path>
					<rect x="1620" y="2036" width="54" height="74"/>
					<path d="M1620,2110L1620,2110" tabindex="0">
						<title>00:21.10 on 2022-06-17</title>
					</path>
					<line x1="0" y1="2110" x2="2819" y2="2110"/>
					<line x1="1620" y1="0" x2="1620" y2="11078"/>
					<path d="M1674,2036L1674,2036" tabindex="0">
						<title>00:20.36 on 2022-08-10</title>
					</path>
					<line x1="0" y1="2036" x2="2819" y2="2036"/>
					<line x1="1674" y1="0" x2="1674" y2="11078"/>
				</g>
				<g style="--index: 13;">
					<path d="M1640,1063" tabindex="0">
						<title>j2yr9lp8</title>
					</path>
					<rect x="1640" y="1063" width="0" height="0"/>
					<path d="M1640,1063L1640,1063" tabindex="0">
						<title>00:10.63 on 2022-07-07</title>
					</path>
					<line x1="0" y1="1063" x2="2819" y2="1063"/>
					<line x1="1640" y1="0" x2="1640" y2="11078"/>
				</g>
				<g style="--index: 14;">
					<path d="M1661,2195" tabindex="0">
						<title>j0grn39x</title>
					</path>
					<rect x="1661" y="2195" width="0" height="0"/>
					<path d="M1661,2195L1661,2195" tabindex="0">
						<title>00:21.95 on 2022-07-28</title>
					</path>
					<line x1="0" y1="2195" x2="2819" y2="2195"/>
					<line x1="1661" y1="0" x2="1661" y2="11078"/>
				</g>
				<g style="--index: 15;">
					<path d="M1673,9603" tabindex="0">
						<title>xz13gmrj</title>
					</path>
					<rect x="1673" y="9603" width="0" height="0"/>
					<path d="M1673,9603L1673,9603" tabindex="0">
						<title>01:36.03 on 2022-08-09</title>
					</path>
					<line x1="0" y1="9603" x2="2819" y2="9603"/>
					<line x1="1673" y1="0" x2="1673" y2="11078"/>
				</g>
				<g style="--index: 16;">
					<path d="M1687,2014L1862,2014L1862,1680" tabindex="0">
						<title>xk1oze6j</title>
					</path>
					<rect x="1687" y="1680" width="175" height="334"/>
					<path d="M1687,2014L1687,2014" tabindex="0">
						<title>00:20.14 on 2022-08-23</title>
					</path>
					<line x1="0" y1="2014" x2="2819" y2="2014"/>
					<line x1="1687" y1="0" x2="1687" y2="11078"/>
					<path d="M1862,1680L1862,1680" tabindex="0">
						<title>00:16.80 on 2023-02-14</title>
					</path>
					<line x1="0" y1="1680" x2="2819" y2="1680"/>
					<line x1="1862" y1="0" x2="1862" y2="11078"/>
				</g>
				<g style="--index: 17;">
					<path d="M1715,1980" tabindex="0">
						<title>x766z2rj</title>
					</path>
					<rect x="1715" y="1980" width="0" height="0"/>
					<path d="M1715,1980L1715,1980" tabindex="0">
						<title>00:19.80 on 2022-09-20</title>
					</path>
					<line x1="0" y1="1980" x2="2819" y2="1980"/>
					<line x1="1715" y1="0" x2="1715" y2="11078"/>
				</g>
				<g style="--index: 18;">
					<path d="M1793,1757" tabindex="0">
						<title>8w0275lj</title>
					</path>
					<rect x="1793" y="1757" width="0" height="0"/>
					<path d="M1793,1757L1793,1757" tabindex="0">
						<title>00:17.57 on 2022-12-07</title>
					</path>
					<line x1="0" y1="1757" x2="2819" y2="1757"/>
					<line x1="1793" y1="0" x2="1793" y2="11078"/>
				</g>
				<g style="--index: 19;">
					<path d="M1842,2475" tabindex="0">
						<title>8ewm6dd8</title>
					</path>
					<rect x="1842" y="2475" width="0" height="0"/>
					<path d="M1842,2475L1842,2475" tabindex="0">
						<title>00:24.75 on 2023-01-25</title>
					</path>
					<line x1="0" y1="2475" x2="2819" y2="2475"/>
					<line x1="1842" y1="0" x2="1842" y2="11078"/>
				</g>
				<g style="--index: 20;">
					<path d="M1892,1050L2098,1050L2098,1015L2778,1015L2778,1011" tabindex="0">
						<title>jn2m23wj</title>
					</path>
					<rect x="1892" y="1011" width="886" height="39"/>
					<path d="M1892,1050L1892,1050" tabindex="0">
						<title>00:10.50 on 2023-03-16</title>
					</path>
					<line x1="0" y1="1050" x2="2819" y2="1050"/>
					<line x1="1892" y1="0" x2="1892" y2="11078"/>
					<path d="M2098,1015L2098,1015" tabindex="0">
						<title>00:10.15 on 2023-10-08</title>
					</path>
					<line x1="0" y1="1015" x2="2819" y2="1015"/>
					<line x1="2098" y1="0" x2="2098" y2="11078"/>
					<path d="M2778,1011L2778,1011" tabindex="0">
						<title>00:10.11 on 2025-08-18</title>
					</path>
					<line x1="0" y1="1011" x2="2819" y2="1011"/>
					<line x1="2778" y1="0" x2="2778" y2="11078"/>
				</g>
				<g style="--index: 21;">
					<path d="M1897,2150" tabindex="0">
						<title>810z203x</title>
					</path>
					<rect x="1897" y="2150" width="0" height="0"/>
					<path d="M1897,2150L1897,2150" tabindex="0">
						<title>00:21.50 on 2023-03-21</title>
					</path>
					<line x1="0" y1="2150" x2="2819" y2="2150"/>
					<line x1="1897" y1="0" x2="1897" y2="11078"/>
				</g>
				<g style="--index: 22;">
					<path d="M1951,1961" tabindex="0">
						<title>xk1wl26j</title>
					</path>
					<rect x="1951" y="1961" width="0" height="0"/>
					<path d="M1951,1961L1951,1961" tabindex="0">
						<title>00:19.61 on 2023-05-14</title>
					</path>
					<line x1="0" y1="1961" x2="2819" y2="1961"/>
					<line x1="1951" y1="0" x2="1951" y2="11078"/>
				</g>
				<g style="--index: 23;">
					<path d="M2009,2259" tabindex="0">
						<title>j9k252w8</title>
					</path>
					<rect x="2009" y="2259" width="0" height="0"/>
					<path d="M2009,2259L2009,2259" tabindex="0">
						<title>00:22.59 on 2023-07-11</title>
					</path>
					<line x1="0" y1="2259" x2="2819" y2="2259"/>
					<line x1="2009" y1="0" x2="2009" y2="11078"/>
				</g>
				<g style="--index: 24;">
					<path d="M2043,11078" tabindex="0">
						<title>jon6e378</title>
					</path>
					<rect x="2043" y="11078" width="0" height="0"/>
					<path d="M2043,11078L2043,11078" tabindex="0">
						<title>01:50.78 on 2023-08-14</title>
					</path>
					<line x1="0" y1="11078" x2="2819" y2="11078"/>
					<line x1="2043" y1="0" x2="2043" y2="11078"/>
				</g>
				<g style="--index: 25;">
					<path d="M2049,3504" tabindex="0">
						<title>8g2med1j</title>
					</path>
					<rect x="2049" y="3504" width="0" height="0"/>
					<path d="M2049,3504L2049,3504" tabindex="0">
						<title>00:35.04 on 2023-08-20</title>
					</path>
					<line x1="0" y1="3504" x2="2819" y2="3504"/>
					<line x1="2049" y1="0" x2="2049" y2="11078"/>
				</g>
				<g style="--index: 26;">
					<path d="M2084,1039" tabindex="0">
						<title>0jmw6wex</title>
					</path>
					<rect x="2084" y="1039" width="0" height="0"/>
					<path d="M2084,1039L2084,1039" tabindex="0">
						<title>00:10.39 on 2023-09-24</title>
					</path>
					<line x1="0" y1="1039" x2="2819" y2="1039"/>
					<line x1="2084" y1="0" x2="2084" y2="11078"/>
				</g>
				<g style="--index: 27;">
					<path d="M2084,1695" tabindex="0">
						<title>j2qq3mlj</title>
					</path>
					<rect x="2084" y="1695" width="0" height="0"/>
					<path d="M2084,1695L2084,1695" tabindex="0">
						<title>00:16.95 on 2023-09-24</title>
					</path>
					<line x1="0" y1="1695" x2="2819" y2="1695"/>
					<line x1="2084" y1="0" x2="2084" y2="11078"/>
				</g>
				<g style="--index: 28;">
					<path d="M2160,1654L2219,1654L2219,1587L2435,1587L2435,1365L2456,1365L2456,1312L2460,1312L2460,1240L2463,1240L2463,1224L2782,1224L2782,1064" tabindex="0">
						<title>8w3l21qj</title>
					</path>
					<rect x="2160" y="1064" width="622" height="590"/>
					<path d="M2160,1654L2160,1654" tabindex="0">
						<title>00:16.54 on 2023-12-09</title>
					</path>
					<line x1="0" y1="1654" x2="2819" y2="1654"/>
					<line x1="2160" y1="0" x2="2160" y2="11078"/>
					<path d="M2219,1587L2219,1587" tabindex="0">
						<title>00:15.87 on 2024-02-06</title>
					</path>
					<line x1="0" y1="1587" x2="2819" y2="1587"/>
					<line x1="2219" y1="0" x2="2219" y2="11078"/>
					<path d="M2435,1365L2435,1365" tabindex="0">
						<title>00:13.65 on 2024-09-09</title>
					</path>
					<line x1="0" y1="1365" x2="2819" y2="1365"/>
					<line x1="2435" y1="0" x2="2435" y2="11078"/>
					<path d="M2456,1312L2456,1312" tabindex="0">
						<title>00:13.12 on 2024-09-30</title>
					</path>
					<line x1="0" y1="1312" x2="2819" y2="1312"/>
					<line x1="2456" y1="0" x2="2456" y2="11078"/>
					<path d="M2460,1240L2460,1240" tabindex="0">
						<title>00:12.40 on 2024-10-04</title>
					</path>
					<line x1="0" y1="1240" x2="2819" y2="1240"/>
					<line x1="2460" y1="0" x2="2460" y2="11078"/>
					<path d="M2463,1224L2463,1224" tabindex="0">
						<title>00:12.24 on 2024-10-07</title>
					</path>
					<line x1="0" y1="1224" x2="2819" y2="1224"/>
					<line x1="2463" y1="0" x2="2463" y2="11078"/>
					<path d="M2782,1064L2782,1064" tabindex="0">
						<title>00:10.64 on 2025-08-22</title>
					</path>
					<line x1="0" y1="1064" x2="2819" y2="1064"/>
					<line x1="2782" y1="0" x2="2782" y2="11078"/>
				</g>
				<g style="--index: 29;">
					<path d="M2166,2349L2172,2349L2172,1511" tabindex="0">
						<title>8v0m9e5x</title>
					</path>
					<rect x="2166" y="1511" width="6" height="838"/>
					<path d="M2166,2349L2166,2349" tabindex="0">
						<title>00:23.49 on 2023-12-15</title>
					</path>
					<line x1="0" y1="2349" x2="2819" y2="2349"/>
					<line x1="2166" y1="0" x2="2166" y2="11078"/>
					<path d="M2172,1511L2172,1511" tabindex="0">
						<title>00:15.11 on 2023-12-21</title>
					</path>
					<line x1="0" y1="1511" x2="2819" y2="1511"/>
					<line x1="2172" y1="0" x2="2172" y2="11078"/>
				</g>
				<g style="--index: 30;">
					<path d="M2261,2388" tabindex="0">
						<title>86rz9rw8</title>
					</path>
					<rect x="2261" y="2388" width="0" height="0"/>
					<path d="M2261,2388L2261,2388" tabindex="0">
						<title>00:23.88 on 2024-03-19</title>
					</path>
					<line x1="0" y1="2388" x2="2819" y2="2388"/>
					<line x1="2261" y1="0" x2="2261" y2="11078"/>
				</g>
				<g style="--index: 31;">
					<path d="M2334,1179L2452,1179L2452,1062" tabindex="0">
						<title>8v0mryvx</title>
					</path>
					<rect x="2334" y="1062" width="118" height="117"/>
					<path d="M2334,1179L2334,1179" tabindex="0">
						<title>00:11.79 on 2024-05-31</title>
					</path>
					<line x1="0" y1="1179" x2="2819" y2="1179"/>
					<line x1="2334" y1="0" x2="2334" y2="11078"/>
					<path d="M2452,1062L2452,1062" tabindex="0">
						<title>00:10.62 on 2024-09-26</title>
					</path>
					<line x1="0" y1="1062" x2="2819" y2="1062"/>
					<line x1="2452" y1="0" x2="2452" y2="11078"/>
				</g>
				<g style="--index: 32;">
					<path d="M2378,1750" tabindex="0">
						<title>8r1g0owj</title>
					</path>
					<rect x="2378" y="1750" width="0" height="0"/>
					<path d="M2378,1750L2378,1750" tabindex="0">
						<title>00:17.50 on 2024-07-14</title>
					</path>
					<line x1="0" y1="1750" x2="2819" y2="1750"/>
					<line x1="2378" y1="0" x2="2378" y2="11078"/>
				</g>
				<g style="--index: 33;">
					<path d="M2406,1236" tabindex="0">
						<title>x3p3rkk8</title>
					</path>
					<rect x="2406" y="1236" width="0" height="0"/>
					<path d="M2406,1236L2406,1236" tabindex="0">
						<title>00:12.36 on 2024-08-11</title>
					</path>
					<line x1="0" y1="1236" x2="2819" y2="1236"/>
					<line x1="2406" y1="0" x2="2406" y2="11078"/>
				</g>
				<g style="--index: 34;">
					<path d="M2428,1796L2730,1796L2730,1062L2758,1062L2758,1026" tabindex="0">
						<title>j2p4pel8</title>
					</path>
					<rect x="2428" y="1026" width="330" height="770"/>
					<path d="M2428,1796L2428,1796" tabindex="0">
						<title>00:17.96 on 2024-09-02</title>
					</path>
					<line x1="0" y1="1796" x2="2819" y2="1796"/>
					<line x1="2428" y1="0" x2="2428" y2="11078"/>
					<path d="M2730,1062L2730,1062" tabindex="0">
						<title>00:10.62 on 2025-07-01</title>
					</path>
					<line x1="0" y1="1062" x2="2819" y2="1062"/>
					<line x1="2730" y1="0" x2="2730" y2="11078"/>
					<path d="M2758,1026L2758,1026" tabindex="0">
						<title>00:10.26 on 2025-07-29</title>
					</path>
					<line x1="0" y1="1026" x2="2819" y2="1026"/>
					<line x1="2758" y1="0" x2="2758" y2="11078"/>
				</g>
				<g style="--index: 35;">
					<path d="M2498,1246" tabindex="0">
						<title>jpz7kp0x</title>
					</path>
					<rect x="2498" y="1246" width="0" height="0"/>
					<path d="M2498,1246L2498,1246" tabindex="0">
						<title>00:12.46 on 2024-11-11</title>
					</path>
					<line x1="0" y1="1246" x2="2819" y2="1246"/>
					<line x1="2498" y1="0" x2="2498" y2="11078"/>
				</g>
				<g style="--index: 36;">
					<path d="M2548,2273" tabindex="0">
						<title>8vrdr1nx</title>
					</path>
					<rect x="2548" y="2273" width="0" height="0"/>
					<path d="M2548,2273L2548,2273" tabindex="0">
						<title>00:22.73 on 2024-12-31</title>
					</path>
					<line x1="0" y1="2273" x2="2819" y2="2273"/>
					<line x1="2548" y1="0" x2="2548" y2="11078"/>
				</g>
				<g style="--index: 37;">
					<path d="M2581,1659" tabindex="0">
						<title>j2p712o8</title>
					</path>
					<rect x="2581" y="1659" width="0" height="0"/>
					<path d="M2581,1659L2581,1659" tabindex="0">
						<title>00:16.59 on 2025-02-02</title>
					</path>
					<line x1="0" y1="1659" x2="2819" y2="1659"/>
					<line x1="2581" y1="0" x2="2581" y2="11078"/>
				</g>
				<g style="--index: 38;">
					<path d="M2581,1024" tabindex="0">
						<title>xkon93k8</title>
					</path>
					<rect x="2581" y="1024" width="0" height="0"/>
					<path d="M2581,1024L2581,1024" tabindex="0">
						<title>00:10.24 on 2025-02-02</title>
					</path>
					<line x1="0" y1="1024" x2="2819" y2="1024"/>
					<line x1="2581" y1="0" x2="2581" y2="11078"/>
				</g>
				<g style="--index: 39;">
					<path d="M2582,1015" tabindex="0">
						<title>8g2pg71j</title>
					</path>
					<rect x="2582" y="1015" width="0" height="0"/>
					<path d="M2582,1015L2582,1015" tabindex="0">
						<title>00:10.15 on 2025-02-03</title>
					</path>
					<line x1="0" y1="1015" x2="2819" y2="1015"/>
					<line x1="2582" y1="0" x2="2582" y2="11078"/>
				</g>
				<g style="--index: 40;">
					<path d="M2647,1037" tabindex="0">
						<title>8gop7k2x</title>
					</path>
					<rect x="2647" y="1037" width="0" height="0"/>
					<path d="M2647,1037L2647,1037" tabindex="0">
						<title>00:10.37 on 2025-04-09</title>
					</path>
					<line x1="0" y1="1037" x2="2819" y2="1037"/>
					<line x1="2647" y1="0" x2="2647" y2="11078"/>
				</g>
				<g style="--index: 41;">
					<path d="M2653,2305" tabindex="0">
						<title>81pg9mr8</title>
					</path>
					<rect x="2653" y="2305" width="0" height="0"/>
					<path d="M2653,2305L2653,2305" tabindex="0">
						<title>00:23.05 on 2025-04-15</title>
					</path>
					<line x1="0" y1="2305" x2="2819" y2="2305"/>
					<line x1="2653" y1="0" x2="2653" y2="11078"/>
				</g>
				<g style="--index: 42;">
					<path d="M2658,1331" tabindex="0">
						<title>8r6739q8</title>
					</path>
					<rect x="2658" y="1331" width="0" height="0"/>
					<path d="M2658,1331L2658,1331" tabindex="0">
						<title>00:13.31 on 2025-04-20</title>
					</path>
					<line x1="0" y1="1331" x2="2819" y2="1331"/>
					<line x1="2658" y1="0" x2="2658" y2="11078"/>
				</g>
				<g style="--index: 43;">
					<path d="M2669,2399" tabindex="0">
						<title>81vq0e38</title>
					</path>
					<rect x="2669" y="2399" width="0" height="0"/>
					<path d="M2669,2399L2669,2399" tabindex="0">
						<title>00:23.99 on 2025-05-01</title>
					</path>
					<line x1="0" y1="2399" x2="2819" y2="2399"/>
					<line x1="2669" y1="0" x2="2669" y2="11078"/>
				</g>
				<g style="--index: 44;">
					<path d="M2684,1237L2685,1237L2685,1157" tabindex="0">
						<title>j4v29mdj</title>
					</path>
					<rect x="2684" y="1157" width="1" height="80"/>
					<path d="M2684,1237L2684,1237" tabindex="0">
						<title>00:12.37 on 2025-05-16</title>
					</path>
					<line x1="0" y1="1237" x2="2819" y2="1237"/>
					<line x1="2684" y1="0" x2="2684" y2="11078"/>
					<path d="M2685,1157L2685,1157" tabindex="0">
						<title>00:11.57 on 2025-05-17</title>
					</path>
					<line x1="0" y1="1157" x2="2819" y2="1157"/>
					<line x1="2685" y1="0" x2="2685" y2="11078"/>
				</g>
				<g style="--index: 45;">
					<path d="M2701,1195L2776,1195L2776,1038" tabindex="0">
						<title>jo1zrpnx</title>
					</path>
					<rect x="2701" y="1038" width="75" height="157"/>
					<path d="M2701,1195L2701,1195" tabindex="0">
						<title>00:11.95 on 2025-06-02</title>
					</path>
					<line x1="0" y1="1195" x2="2819" y2="1195"/>
					<line x1="2701" y1="0" x2="2701" y2="11078"/>
					<path d="M2776,1038L2776,1038" tabindex="0">
						<title>00:10.38 on 2025-08-16</title>
					</path>
					<line x1="0" y1="1038" x2="2819" y2="1038"/>
					<line x1="2776" y1="0" x2="2776" y2="11078"/>
				</g>
				<g style="--index: 46;">
					<path d="M2717,2494" tabindex="0">
						<title>x7g7ngyx</title>
					</path>
					<rect x="2717" y="2494" width="0" height="0"/>
					<path d="M2717,2494L2717,2494" tabindex="0">
						<title>00:24.94 on 2025-06-18</title>
					</path>
					<line x1="0" y1="2494" x2="2819" y2="2494"/>
					<line x1="2717" y1="0" x2="2717" y2="11078"/>
				</g>
				<g style="--index: 47;">
					<path d="M2733,1259" tabindex="0">
						<title>8g5l7n2j</title>
					</path>
					<rect x="2733" y="1259" width="0" height="0"/>
					<path d="M2733,1259L2733,1259" tabindex="0">
						<title>00:12.59 on 2025-07-04</title>
					</path>
					<line x1="0" y1="1259" x2="2819" y2="1259"/>
					<line x1="2733" y1="0" x2="2733" y2="11078"/>
				</g>
				<g style="--index: 48;">
					<path d="M2741,2361" tabindex="0">
						<title>x7g22qrx</title>
					</path>
					<rect x="2741" y="2361" width="0" height="0"/>
					<path d="M2741,2361L2741,2361" tabindex="0">
						<title>00:23.61 on 2025-07-12</title>
					</path>
					<line x1="0" y1="2361" x2="2819" y2="2361"/>
					<line x1="2741" y1="0" x2="2741" y2="11078"/>
				</g>
				<g style="--index: 49;">
					<path d="M2750,1205" tabindex="0">
						<title>xz55p24x</title>
					</path>
					<rect x="2750" y="1205" width="0" height="0"/>
					<path d="M2750,1205L2750,1205" tabindex="0">
						<title>00:12.05 on 2025-07-21</title>
					</path>
					<line x1="0" y1="1205" x2="2819" y2="1205"/>
					<line x1="2750" y1="0" x2="2750" y2="11078"/>
				</g>
				<g style="--index: 50;">
					<path d="M2752,1186" tabindex="0">
						<title>86pek6wj</title>
					</path>
					<rect x="2752" y="1186" width="0" height="0"/>
					<path d="M2752,1186L2752,1186" tabindex="0">
						<title>00:11.86 on 2025-07-23</title>
					</path>
					<line x1="0" y1="1186" x2="2819" y2="1186"/>
					<line x1="2752" y1="0" x2="2752" y2="11078"/>
				</g>
				<g style="--index: 51;">
					<path d="M2754,1353" tabindex="0">
						<title>j2pmdqp8</title>
					</path>
					<rect x="2754" y="1353" width="0" height="0"/>
					<path d="M2754,1353L2754,1353" tabindex="0">
						<title>00:13.53 on 2025-07-25</title>
					</path>
					<line x1="0" y1="1353" x2="2819" y2="1353"/>
					<line x1="2754" y1="0" x2="2754" y2="11078"/>
				</g>
				<g style="--index: 52;">
					<path d="M2759,1064L2765,1064L2765,1059" tabindex="0">
						<title>8qpl62dx</title>
					</path>
					<rect x="2759" y="1059" width="6" height="5"/>
					<path d="M2759,1064L2759,1064" tabindex="0">
						<title>00:10.64 on 2025-07-30</title>
					</path>
					<line x1="0" y1="1064" x2="2819" y2="1064"/>
					<line x1="2759" y1="0" x2="2759" y2="11078"/>
					<path d="M2765,1059L2765,1059" tabindex="0">
						<title>00:10.59 on 2025-08-05</title>
					</path>
					<line x1="0" y1="1059" x2="2819" y2="1059"/>
					<line x1="2765" y1="0" x2="2765" y2="11078"/>
				</g>
				<g style="--index: 53;">
					<path d="M2760,1132" tabindex="0">
						<title>8gzloyyj</title>
					</path>
					<rect x="2760" y="1132" width="0" height="0"/>
					<path d="M2760,1132L2760,1132" tabindex="0">
						<title>00:11.32 on 2025-07-31</title>
					</path>
					<line x1="0" y1="1132" x2="2819" y2="1132"/>
					<line x1="2760" y1="0" x2="2760" y2="11078"/>
				</g>
				<g style="--index: 54;">
					<path d="M2766,1266" tabindex="0">
						<title>81vel658</title>
					</path>
					<rect x="2766" y="1266" width="0" height="0"/>
					<path d="M2766,1266L2766,1266" tabindex="0">
						<title>00:12.66 on 2025-08-06</title>
					</path>
					<line x1="0" y1="1266" x2="2819" y2="1266"/>
					<line x1="2766" y1="0" x2="2766" y2="11078"/>
				</g>
				<g style="--index: 55;">
					<path d="M2778,2566" tabindex="0">
						<title>jm069qo8</title>
					</path>
					<rect x="2778" y="2566" width="0" height="0"/>
					<path d="M2778,2566L2778,2566" tabindex="0">
						<title>00:25.66 on 2025-08-18</title>
					</path>
					<line x1="0" y1="2566" x2="2819" y2="2566"/>
					<line x1="2778" y1="0" x2="2778" y2="11078"/>
				</g>
				<g style="--index: 56;">
					<path d="M2794,2000" tabindex="0">
						<title>j01k6orx</title>
					</path>
					<rect x="2794" y="2000" width="0" height="0"/>
					<path d="M2794,2000L2794,2000" tabindex="0">
						<title>00:20.00 on 2025-09-03</title>
					</path>
					<line x1="0" y1="2000" x2="2819" y2="2000"/>
					<line x1="2794" y1="0" x2="2794" y2="11078"/>
				</g>
				<g style="--index: 57;">
					<path d="M2794,1321L2795,1321L2795,1249" tabindex="0">
						<title>x7g07eyx</title>
					</path>
					<rect x="2794" y="1249" width="1" height="72"/>
					<path d="M2794,1321L2794,1321" tabindex="0">
						<title>00:13.21 on 2025-09-03</title>
					</path>
					<line x1="0" y1="1321" x2="2819" y2="1321"/>
					<line x1="2794" y1="0" x2="2794" y2="11078"/>
					<path d="M2795,1249L2795,1249" tabindex="0">
						<title>00:12.49 on 2025-09-04</title>
					</path>
					<line x1="0" y1="1249" x2="2819" y2="1249"/>
					<line x1="2795" y1="0" x2="2795" y2="11078"/>
				</g>
				<g style="--index: 58;">
					<path d="M2808,2425" tabindex="0">
						<title>xkzvzkkx</title>
					</path>
					<rect x="2808" y="2425" width="0" height="0"/>
					<path d="M2808,2425L2808,2425" tabindex="0">
						<title>00:24.25 on 2025-09-17</title>
					</path>
					<line x1="0" y1="2425" x2="2819" y2="2425"/>
					<line x1="2808" y1="0" x2="2808" y2="11078"/>
				</g>
				<g style="--index: 59;">
					<path d="M2813,1300" tabindex="0">
						<title>jng34ld8</title>
					</path>
					<rect x="2813" y="1300" width="0" height="0"/>
					<path d="M2813,1300L2813,1300" tabindex="0">
						<title>00:13.00 on 2025-09-22</title>
					</path>
					<line x1="0" y1="1300" x2="2819" y2="1300"/>
					<line x1="2813" y1="0" x2="2813" y2="11078"/>
				</g>
				<g style="--index: 60;">
					<path d="M2819,1337" tabindex="0">
						<title>xkz0y59x</title>
					</path>
					<rect x="2819" y="1337" width="0" height="0"/>
					<path d="M2819,1337L2819,1337" tabindex="0">
						<title>00:13.37 on 2025-09-28</title>
					</path>
					<line x1="0" y1="1337" x2="2819" y2="1337"/>
					<line x1="2819" y1="0" x2="2819" y2="11078"/>
				</g>
			</g>
		</svg>
	</foreignObject>
</svg>
