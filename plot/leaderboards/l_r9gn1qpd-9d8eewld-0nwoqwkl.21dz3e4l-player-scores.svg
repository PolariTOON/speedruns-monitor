<svg xmlns="http://www.w3.org/2000/svg" lang="en">
	<title>Score by player for leaderboard l_r9gn1qpd-9d8eewld-0nwoqwkl.21dz3e4l</title>
	<metadata>
		<meta xmlns="http://www.w3.org/1999/xhtml" charset="utf-8" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="viewport" content="width=device-width" />
		<meta xmlns="http://www.w3.org/1999/xhtml" name="color-scheme" content="dark light" />
	</metadata>
	<style>
		*,
		::before,
		::after {
			box-sizing: border-box;
		}
		:root {
			background: var(--canvas-background);
			color: var(--canvas-foreground);
			fill: var(--canvas-background);
			stroke: var(--canvas-foreground);
			stroke-linejoin: round;
			stroke-linecap: round;
		}
		foreignObject {
			pointer-events: none;
		}
		foreignObject::before,
		foreignObject::after {
			content: "";
			position: absolute;
			z-index: 1;
			left: 20px;
			bottom: 20px;
			pointer-events: auto;
		}
		foreignObject::before {
			width: calc(100% - 40px);
			height: calc(20px + var(--date-size) * 1px);
		}
		foreignObject::after {
			width: calc(20px + var(--value-size) * 1px);
			height: calc(100% - 40px);
		}
		foreignObject &gt; div {
			position: absolute;
			z-index: 4;
			right: 0;
			top: 0;
			margin: 20px;
			border: 1px solid var(--canvas-foreground);
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			transition: opacity 1s;
			pointer-events: auto;
		}
		foreignObject:is(:hover, :focus-within) &gt; div:not(:hover, :focus-within) {
			opacity: 0;
			pointer-events: none;
		}
		foreignObject &gt; div &gt; p {
			margin: 0;
		}
		label {
			display: table;
			border-collapse: separate;
			border-spacing: 10px;
			direction: rtl;
		}
		progress,
		input[type="checkbox"] {
			display: table-cell;
			width: 16px;
			height: 16px;
			margin: 2px;
			accent-color: var(--canvas-foreground);
			vertical-align: top;
			direction: ltr;
		}
		progress + span,
		input[type="checkbox"] + span {
			display: table-cell;
			vertical-align: top;
			direction: ltr;
		}
		input[type="checkbox"]:not(:disabled):is(:hover, :focus-within) + span {
			text-decoration: underline;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			position: absolute;
			z-index: 2;
			margin: 0;
			padding: 10px;
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			font-weight: bold;
			pointer-events: auto;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg + svg {
			border-top: 1px solid #0000;
			border-bottom: 1px solid var(--canvas-foreground);
		}
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px dashed #0000;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg {
			width: calc(20px + var(--date-size) * 1px);
			height: 42px;
			bottom: 20px;
		}
		foreignObject &gt; svg:first-of-type {
			left: calc(40px + var(--value-size) * 1px);
			transform: rotate(90deg) translate(-100%, 0);
			transform-origin: left bottom;
		}
		foreignObject &gt; svg:first-of-type + svg {
			right: 20px;
			transform: rotate(90deg) translate(0, 100%);
			transform-origin: right bottom;
		}
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			width: calc(20px + var(--value-size) * 1px);
			height: 42px;
			left: 20px;
		}
		foreignObject &gt; svg:first-of-type + svg + svg {
			bottom: calc(40px + var(--date-size) * 1px);
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			top: 20px;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text {
			fill: var(--canvas-foreground);
			stroke: none;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text {
			cursor: vertical-text;
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg + svg {
			position: relative;
			z-index: 3;
			width: calc(100% - 60px - var(--value-size) * 1px);
			height: calc(100% - 60px - var(--date-size) * 1px);
			margin: 20px 20px calc(40px + var(--date-size) * 1px) calc(40px + var(--value-size) * 1px);
			border-left: 1px solid var(--canvas-foreground);
			border-right: 1px dashed var(--canvas-foreground);
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px solid var(--canvas-foreground);
			background: var(--canvas-background);
			pointer-events: auto;
		}
		g &gt; rect {
			vector-effect: non-scaling-stroke;
			fill: var(--highlighted);
			stroke: none;
		}
		g &gt; rect[tabindex] {
			fill: var(--tier, #0000);
			cursor: help;
		}
		g &gt; rect[tabindex][data-tier="diamond"] {
			--tier: var(--diamond);
		}
		g &gt; rect[tabindex][data-tier="gold"] {
			--tier: var(--gold);
		}
		g &gt; rect[tabindex][data-tier="silver"] {
			--tier: var(--silver);
		}
		g &gt; rect[tabindex][data-tier="bronze"] {
			--tier: var(--bronze);
		}
		g &gt; path[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: hsl(calc(var(--index) / var(--count) * 360), 50%, 50%);
			cursor: help;
		}
		g:is(:hover, :focus-within) &gt; path[tabindex] {
			stroke: var(--canvas-foreground);
		}
		g &gt; path[tabindex]:is(:hover, :focus-within) {
			outline: 0;
		}
		g &gt; path[tabindex]:first-of-type {
			stroke-width: 2;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) {
			stroke-width: 4;
		}
		g &gt; path[tabindex]:first-of-type:not(:last-of-type) {
			stroke-dasharray: 4 8;
		}
		g &gt; path[tabindex]:first-of-type + rect {
			fill: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect {
			fill: var(--highlighted);
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] {
			stroke-width: 8;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) {
			stroke-width: 16;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line + line {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			stroke-width: 2;
			stroke-dasharray: 4 8;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line + line {
			stroke: var(--faded);
		}
		@media (prefers-color-scheme: dark) {
			:root {
				--canvas-background: #000;
				--canvas-foreground: #ccc;
				--diamond: #0363;
				--gold: #6303;
				--silver: #3633;
				--bronze: #6363;
				--highlighted: #6663;
				--faded: #9993;
			}
		}
		@media (prefers-color-scheme: light) {
			:root {
				--canvas-background: #fff;
				--canvas-foreground: #333;
				--diamond: #9cf3;
				--gold: #fc93;
				--silver: #9c93;
				--bronze: #c9c3;
				--highlighted: #9993;
				--faded: #6663;
			}
		}
	</style>
	<script>
		"use strict";
		{
			const script = document.currentScript;
			const documentUrl = location.href;
			const scope = new URL("../../", documentUrl).pathname;
			const playersKey = `${scope}#players`;
			const leaderboardsKey = `${scope}#leaderboards`;
			const sessionKey = `${scope}#session`;
			const lockKey = `${scope}#lock`;
			async function importDataScript(dataScriptUrl, signal) {
				signal.throwIfAborted();
				if (documentUrl.protocol !== "file:") {
					const response = await fetch(dataScriptUrl, {
						signal,
					});
					if (!response.ok) {
						throw new Error(response.statusText);
					}
					const data = await response.json();
					return data;
				}
				return await new Promise((resolve, reject) =&gt; {
					const name = `callback${Math.random() * 2 ** 53}`;
					let called = false;
					let data = null;
					function callback(value) {
						if (!called) {
							called = true;
							data = value;
						}
					}
					window[name] = callback;
					const dataScript = document.createElementNS("http://www.w3.org/2000/svg", "script");
					dataScript.href = `${dataScriptUrl}&amp;callback=${name}`;
					function handleAbort(event) {
						delete window[name];
						dataScript.removeEventListener("error", handleError);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const reason = signal.reason;
						reject(reason);
					}
					function handleError(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const error = event.error;
						reject(error);
					}
					function handleLoad(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("error", handleError);
						dataScript.remove();
						resolve(data);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					dataScript.addEventListener("error", handleError, {
						once: true,
					});
					dataScript.addEventListener("load", handleLoad, {
						once: true,
					});
					script.after(dataScript);
				});
			}
			async function waitForTimeout(delay, signal) {
				signal.throwIfAborted();
				return await new Promise((resolve, reject) =&gt; {
					let timeout = null;
					function handleAbort() {
						clearTimeout(timeout);
						const reason = signal.reason;
						reject(reason);
					}
					function handleTimeout() {
						signal.removeEventListener("abort", handleAbort);
						resolve(delay);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					timeout = setTimeout(handleTimeout, delay);
				});
			}
			window.addEventListener("pageshow", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully restored page from cache`);
				} else {
					console.log(`Unsuccessfully restored page from cache`);
				}
			});
			window.addEventListener("pagehide", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully saved page to cache`);
				} else {
					console.log(`Unsuccessfully saved page to cache`);
				}
			});
			window.addEventListener("pageshow", async (event) =&gt; {
				const rootTitleElement = document.querySelector("title");
				const rootTitleContent = rootTitleElement.textContent;
				const pathTitleElements = Array.from(document.querySelectorAll("g &gt; path[tabindex]:first-of-type &gt; title"));
				const pathTitleContents = pathTitleElements.map((pathTitleElement) =&gt; {
					const pathTitleContent = pathTitleElement.textContent;
					return pathTitleContent;
				});
				const foreignObject = document.querySelector("foreignObject");
				const div = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
				div.dir = "ltr";
				const p = document.createElementNS("http://www.w3.org/1999/xhtml", "p");
				const label = document.createElementNS("http://www.w3.org/1999/xhtml", "label");
				const progress = document.createElementNS("http://www.w3.org/1999/xhtml", "progress");
				label.append(progress);
				const span = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
				span.textContent = "Loading names";
				label.append(span);
				p.append(label);
				div.append(p);
				foreignObject.prepend(div);
				let lock = false;
				let session = null;
				const broadcastChannel = new BroadcastChannel(sessionKey);
				const abortController = new AbortController();
				const signal = abortController.signal;
				const abort = abortController.abort.bind(abortController);
				const {promise, resolve} = Promise.withResolvers();
				broadcastChannel.addEventListener("message", (event) =&gt; {
					const data = event.data;
					const type = data.type;
					switch (type) {
						case "request": {
							if (lock &amp;&amp; signal.aborted) {
								broadcastChannel.postMessage({
									type: "response",
									session,
								});
							}
							break;
						}
						case "response": {
							if (!signal.aborted) {
								session = data.session;
								if (session != null) {
									const {players, leaderboards} = session;
									try {
										const cachedPlayers = JSON.stringify(players);
										const cachedLeaderboards = JSON.stringify(leaderboards);
										sessionStorage.setItem(playersKey, cachedPlayers);
										sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
									} catch {}
									console.log(`Successfully loaded names from peer`);
									abort();
									resolve();
								} else {
									console.log(`Unsuccessfully loaded names from peer`);
									abort();
									resolve();
								}
							}
							break;
						}
					}
				});
				try {
					const cachedPlayers = sessionStorage.getItem(playersKey);
					const cachedLeaderboards = sessionStorage.getItem(leaderboardsKey);
					if (cachedPlayers == null || cachedLeaderboards == null) {
						throw new Error();
					}
					const players = JSON.parse(cachedPlayers);
					const leaderboards = JSON.parse(cachedLeaderboards);
					session = {players, leaderboards};
				} catch {}
				if (session != null) {
					broadcastChannel.postMessage({
						type: "response",
						session,
					});
					console.log(`Successfully loaded names from local`);
					abort();
					resolve();
				} else {
					broadcastChannel.postMessage({
						type: "request",
					});
					console.log(`Unsuccessfully loaded names from local`);
				}
				(async () =&gt; {
					for (;;) {
						await navigator.locks.request(lockKey, async () =&gt; {
							lock = true;
							console.log(`Acquired lock`);
							if (!signal.aborted) {
								try {
									const players = Object.create(null);
									const leaderboards = Object.create(null);
									const games = ["9d3rrxyd", "w6jl2ned"];
									for (const gameId of games) {
										const {data} = await importDataScript(`https://www.speedrun.com/api/v1/games/${gameId}?embed=categories,levels,variables`, signal);
										const versions = data.variables.data.find((variable) =&gt; {
											return variable.name === "Version";
										});
										const levels = Object.fromEntries(data.levels.data.map((level) =&gt; {
											return [level.id, level];
										}));
										const categories = Object.fromEntries(data.categories.data.map((category) =&gt; {
											return [category.id, category];
										}));
										const variables = Object.fromEntries(data.variables.data.map((variable) =&gt; {
											return [variable.id, variable];
										}));
										console.log(`Got game`);
										await waitForTimeout(800, signal);
										const slice = 200;
										for (let offset = 0;; offset += slice) {
											const {data, pagination} = await importDataScript(`https://www.speedrun.com/api/v1/runs?game=${gameId}&amp;orderby=date&amp;direction=asc&amp;embed=players&amp;offset=${offset}&amp;max=${slice}`, signal);
											const {size} = pagination;
											if (size === 0) {
												break;
											}
											for (const run of data) {
												const status = run.status.status;
												if (status == null || status === "new") {
													continue;
												}
												const player = run.players.data[0].rel === "user" ? run.players.data[0].id : "814p2558";
												const playerName = run.players.data[0].rel === "user" ? run.players.data[0].names.international : "anonymous";
												players[player] ??= playerName;
												const level = run.level;
												const category = run.category;
												const values = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return `-${variable}.${value}`;
												});
												const leaderboard = `${level != null ? `l_${level}-` : ""}${category}${values.join("")}`;
												const levelName = run.level != null ? levels[run.level]?.name ?? null : null;
												const categoryName = categories[run.category]?.name ?? null;
												const valueNames = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return variables[variable]?.values.values[value]?.label ?? null;
												}).filter((valueName) =&gt; {
													return valueName != null;
												});
												const leaderboardName = `${levelName != null ? `${levelName}: ` : ""}${categoryName ?? ""}${values.length !== 0 ? ` - ${valueNames.join(", ")}` : ""}`;
												leaderboards[leaderboard] ??= leaderboardName;
											}
											console.log(`Got runs ${offset}-${offset + size - 1}`);
											await waitForTimeout(800, signal);
										}
									}
									session = {players, leaderboards};
								} catch {}
								if (!signal.aborted) {
									if (session != null) {
										const {players, leaderboards} = session;
										try {
											const cachedPlayers = JSON.stringify(players);
											const cachedLeaderboards = JSON.stringify(leaderboards);
											sessionStorage.setItem(playersKey, cachedPlayers);
											sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
										} catch {}
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Successfully loaded names from remote`);
										abort();
										resolve();
									} else {
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Unsuccessfully loaded names from remote`);
										abort();
										resolve();
									}
								}
							}
							await new Promise((resolve) =&gt; {
								window.addEventListener("beforeunload", () =&gt; {
									resolve();
								}, {
									once: true,
								});
							});
						});
						lock = false;
						console.log(`Released lock`);
						await new Promise((resolve) =&gt; {
							window.addEventListener("pagehide", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
						await new Promise((resolve) =&gt;{
							window.addEventListener("pageshow", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
					}
				})();
				await promise;
				if (session == null) {
					const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
					input.type = "checkbox";
					input.autocomplete = "off";
					input.disabled = true;
					input.indeterminate = true;
					progress.replaceWith(input);
					span.textContent = "Unavailable names";
					return;
				}
				const {players, leaderboards} = session;
				const hasPlayerRoot = rootTitleContent.includes(" for player");
				const hasLeaderboardRoot = rootTitleContent.includes(" for leaderboard");
				const rootTitle = {
					element: rootTitleElement,
					contentWithIds: rootTitleContent,
					contentWithNames: hasPlayerRoot ? rootTitleContent.replace(/ for player ([0-9_a-z]+)/, ($0, $1) =&gt; {
						return ` for player ${players[$1] ?? $1}`;
					}) : hasLeaderboardRoot ? rootTitleContent.replace(/ for leaderboard ((?:l_[0-9_a-z]+-)?[0-9_a-z]+(-[0-9_a-z]+\.[0-9_a-z]+)*)/, ($0, $1) =&gt; {
						return ` for leaderboard ${leaderboards[$1] ?? $1}`;
					}) : rootTitleContent,
				};
				const hasPlayerPaths = rootTitleContent.includes(" by player");
				const hasLeaderboardPaths = rootTitleContent.includes(" by leaderboard");
				const pathTitles = pathTitleElements.map((pathTitleElement, k) =&gt; {
					const pathTitleContent = pathTitleContents[k];
					const pathTitle = {
						element: pathTitleElement,
						contentWithIds: pathTitleContent,
						contentWithNames: hasPlayerPaths ? players[pathTitleContent] ?? pathTitleContent : hasLeaderboardPaths ? leaderboards[pathTitleContent] ?? pathTitleContent : pathTitleContent,
					};
					return pathTitle;
				});
				const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
				input.type = "checkbox";
				input.autocomplete = "off";
				input.addEventListener("change", () =&gt; {
					input.disabled = true;
					if (input.checked) {
						rootTitle.element.textContent = rootTitle.contentWithNames;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithNames;
						}
					} else {
						rootTitle.element.textContent = rootTitle.contentWithIds;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithIds;
						}
					}
					input.disabled = false;
				});
				progress.replaceWith(input);
				span.textContent = "Reveal names";
			}, {
				once: true,
			});
		}
	</script>
	<script>
		"use strict";
		{
			document.addEventListener("DOMContentLoaded", (event) =&gt; {
				const minDateText = document.querySelector("foreignObject &gt; svg:first-of-type &gt; text");
				const maxDateText = document.querySelector("foreignObject &gt; svg:first-of-type + svg &gt; text");
				const startX = Math.round(Date.parse(minDateText.textContent) / 86400000);
				function xToDate(x) {
					const datetime = new Date((startX + x) * 86400000);
					const year = `${datetime.getUTCFullYear()}`.padStart(4, "0");
					const month = `${datetime.getUTCMonth() + 1}`.padStart(2, "0");
					const day = `${datetime.getUTCDate()}`.padStart(2, "0");
					const date = `${year}-${month}-${day}`;
					const size = date.length * 10;
					return {date, size};
				}
				function setMinDate(x) {
					const {date, size} = xToDate(Math.floor(x));
					minDateText.textLength.baseVal.value = size;
					minDateText.textContent = date;
				}
				function setMaxDate(x) {
					const {date, size} = xToDate(Math.ceil(x));
					maxDateText.textLength.baseVal.value = size;
					maxDateText.textContent = date;
				}
				const minValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg &gt; text");
				const maxValueText = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text");
				const timed = minValueText.textContent.includes(":");
				function yToValue(y) {
					if (timed) {
						const minutes = `${(y - y % 6000) / 6000}`.padStart(2, "0");
						const seconds = `${(y - y % 100) / 100 % 60}`.padStart(2, "0");
						const centiseconds = `${y % 100}`.padStart(2, "0");
						const value = `${minutes}:${seconds}.${centiseconds}`;
						const size = value.length * 10;
						return {value, size};
					} else {
						const value = `${y}`;
						const size = value.length * 10;
						return {value, size};
					}
				}
				function setMinValue(y) {
					const {value, size} = yToValue(Math.floor(y));
					minValueText.textLength.baseVal.value = size;
					minValueText.textContent = value;
				}
				function setMaxValue(y) {
					const {value, size} = yToValue(Math.ceil(y));
					maxValueText.textLength.baseVal.value = size;
					maxValueText.textContent = value;
				}
				const svg = document.querySelector("foreignObject &gt; svg:first-of-type + svg + svg + svg + svg");
				svg.tabIndex = -1;
				svg.style.setProperty("outline", "0");
				if (CSS.supports("overflow-clip-margin", "8px")) {
					svg.style.setProperty("overflow", "clip");
					svg.style.setProperty("overflow-clip-margin", "8px");
				}
				svg.style.setProperty("touch-action", "none");
				const {x: baseX, y: baseY, width: baseWidth, height: baseHeight} = svg.viewBox.baseVal;
				let pointerCount = 0;
				const pointers = Object.create(null);
				const xPointerIds = [];
				const yPointerIds = [];
				let x = null;
				let y = null;
				let width = null;
				let height = null;
				svg.addEventListener("pointerdown", (event) =&gt; {
					const {pointerId} = event;
					if (pointerId in pointers) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.setPointerCapture(pointerId);
					++pointerCount;
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId] = {
						offsetX,
						offsetY,
					};
					xPointerIds.splice(xPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetX &lt;= offsetX;
					}) + 1, 0, pointerId);
					yPointerIds.splice(yPointerIds.findLastIndex((pointerId) =&gt; {
						return pointers[pointerId].offsetY &lt;= offsetY;
					}) + 1, 0, pointerId);
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					width = Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth);
					height = Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight);
					x = Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX);
					y = Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY);
				});
				svg.addEventListener("pointerup", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					svg.releasePointerCapture(pointerId);
					--pointerCount;
					delete pointers[pointerId];
					xPointerIds.splice(xPointerIds.lastIndexOf(pointerId), 1);
					yPointerIds.splice(yPointerIds.lastIndexOf(pointerId), 1);
					const minOffsetX = pointerCount !== 0 ? pointers[xPointerIds[0]].offsetX : null;
					const minOffsetY = pointerCount !== 0 ? pointers[yPointerIds[0]].offsetY : null;
					const maxClientWidth = pointerCount !== 0 ? pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX : null;
					const maxClientHeight = pointerCount !== 0 ? pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY : null;
					width = pointerCount !== 0 ? Math.min(maxClientWidth / svg.clientWidth * animWidth, baseWidth) : null;
					height = pointerCount !== 0 ? Math.min(maxClientHeight / svg.clientHeight * animHeight, baseHeight) : null;
					x = pointerCount !== 0 ? Math.max(Math.min(animX + minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth), baseX) : null;
					y = pointerCount !== 0 ? Math.max(Math.min(animY + minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight), baseY) : null;
				});
				svg.addEventListener("pointermove", (event) =&gt; {
					const {pointerId} = event;
					if (!(pointerId in pointers)) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					event.preventDefault();
					const offsetX = event.offsetX;
					const offsetY = event.offsetY;
					pointers[pointerId].offsetX = offsetX;
					pointers[pointerId].offsetY = offsetY;
					const oldXIndex = xPointerIds.lastIndexOf(pointerId);
					let newXIndex = oldXIndex;
					while (newXIndex &gt; 0 &amp;&amp; pointers[xPointerIds[newXIndex - 1]].offsetX &gt; offsetX) {
						--newXIndex;
					}
					xPointerIds.copyWithin(newXIndex + 1, newXIndex, oldXIndex);
					xPointerIds[newXIndex] = pointerId;
					while (newXIndex &lt; pointerCount - 1 &amp;&amp; pointers[xPointerIds[newXIndex + 1]].offsetX &lt; offsetX) {
						++newXIndex;
					}
					xPointerIds.copyWithin(oldXIndex, oldXIndex + 1, newXIndex + 1);
					xPointerIds[newXIndex] = pointerId;
					const oldYIndex = yPointerIds.lastIndexOf(pointerId);
					let newYIndex = oldYIndex;
					while (newYIndex &gt; 0 &amp;&amp; pointers[yPointerIds[newYIndex - 1]].offsetY &gt; offsetY) {
						--newYIndex;
					}
					yPointerIds.copyWithin(newYIndex + 1, newYIndex, oldYIndex);
					yPointerIds[newYIndex] = pointerId;
					while (newYIndex &lt; pointerCount - 1 &amp;&amp; pointers[yPointerIds[newYIndex + 1]].offsetY &lt; offsetY) {
						++newYIndex;
					}
					yPointerIds.copyWithin(oldYIndex, oldYIndex + 1, newYIndex + 1);
					yPointerIds[newYIndex] = pointerId;
					const minOffsetX = pointers[xPointerIds[0]].offsetX;
					const minOffsetY = pointers[yPointerIds[0]].offsetY;
					const maxClientWidth = pointers[xPointerIds[pointerCount - 1]].offsetX - minOffsetX;
					const maxClientHeight = pointers[yPointerIds[pointerCount - 1]].offsetY - minOffsetY;
					animWidth = width === 0 ? animWidth : maxClientWidth === 0 ? baseWidth : Math.min(svg.clientWidth / maxClientWidth * width, baseWidth);
					animHeight = height === 0 ? animHeight : maxClientHeight === 0 ? baseHeight : Math.min(svg.clientHeight / maxClientHeight * height, baseHeight);
					animX = Math.max(Math.min(x - minOffsetX / svg.clientWidth * animWidth, baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(y - minOffsetY / svg.clientHeight * animHeight, baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
				const zoomIntensity = 1.25;
				svg.addEventListener("wheel", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					if (!ctrlKey) {
						const vectorX = (shiftKey ? event.deltaY : event.deltaX) / svg.clientWidth * animWidth;
						const vectorY = (shiftKey ? 0 : event.deltaY) / svg.clientHeight * animHeight;
						animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
						animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
						svg.viewBox.baseVal.x = animX;
						svg.viewBox.baseVal.y = animY;
						setMinDate(animX);
						setMaxDate(animX + animWidth);
						setMinValue(baseY * 2 + baseHeight - animHeight - animY);
						setMaxValue(baseY * 2 + baseHeight - animY);
						return;
					}
					const ratioX = zoomIntensity ** Math.sign(shiftKey ? event.deltaY : event.deltaX);
					const ratioY = zoomIntensity ** Math.sign(shiftKey ? 0 : event.deltaY);
					const positionX = Math.max(0, Math.min(event.offsetX / svg.clientWidth, 1)) * animWidth;
					const positionY = Math.max(0, Math.min(event.offsetY / svg.clientHeight, 1)) * animHeight;
					animWidth = Math.min(animWidth * ratioX, baseWidth);
					animHeight = Math.min(animHeight * ratioY, baseHeight);
					animX = Math.max(Math.min(animX + positionX * (1 - ratioX), baseX + baseWidth - animWidth), baseX);
					animY = Math.max(Math.min(animY + positionY * (1 - ratioY), baseY + baseHeight - animHeight), baseY);
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					svg.viewBox.baseVal.width = animWidth;
					svg.viewBox.baseVal.height = animHeight;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				}, {
					passive: false,
				});
				svg.addEventListener("keydown", (event) =&gt; {
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					const {ctrlKey, shiftKey} = event;
					switch (event.code) {
						case "Space": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "Equal":
						case "NumpadAdd":
						case "Minus":
						case "NumpadSubtract": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.code === "Minus" || event.code === "NumpadSubtract" ? zoomIntensity : 1 / zoomIntensity;
							if (!shiftKey) {
								animHeight = Math.min(animHeight * ratio, baseHeight);
								animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "Digit0":
						case "Numpad0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							if (!shiftKey) {
								animY = baseY;
								animHeight = baseHeight;
								svg.viewBox.baseVal.y = animY;
								svg.viewBox.baseVal.height = animHeight;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
							animX = baseX;
							animWidth = baseWidth;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.width = animWidth;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
					}
					switch (event.key) {
						case "ArrowRight": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = 50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowLeft": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorX = -50 / svg.clientWidth * animWidth;
							animX = Math.max(Math.min(animX + vectorX, baseX + baseWidth - animWidth), baseX);
							svg.viewBox.baseVal.x = animX;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							return;
						}
						case "ArrowDown": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = 50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "End": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY + baseHeight - animHeight;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "ArrowUp": {
							if (!ctrlKey) {
								event.preventDefault();
								if (pointerCount !== 0) {
									return;
								}
								const vectorY = -50 / svg.clientHeight * animHeight;
								animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
								svg.viewBox.baseVal.y = animY;
								setMinValue(baseY * 2 + baseHeight - animHeight - animY);
								setMaxValue(baseY * 2 + baseHeight - animY);
								return;
							}
						}
						case "Home": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animY = baseY;
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "PageDown":
						case "PageUp":
						case " ": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const vectorY = event.key === "PageUp" || event.key === " " &amp;&amp; shiftKey ? -animHeight : animHeight;
							animY = Math.max(Math.min(animY + vectorY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.y = animY;
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "+":
						case "-": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							const ratio = event.key === "-" ? 1 / zoomIntensity : zoomIntensity;
							animWidth = Math.min(animWidth * ratio, baseWidth);
							animHeight = Math.min(animHeight * ratio, baseHeight);
							animX = Math.max(Math.min(animX, baseX + baseWidth - animWidth), baseX);
							animY = Math.max(Math.min(animY, baseY + baseHeight - animHeight), baseY);
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
						case "0": {
							event.preventDefault();
							if (pointerCount !== 0) {
								return;
							}
							animX = baseX;
							animY = baseY;
							animWidth = baseWidth;
							animHeight = baseHeight;
							svg.viewBox.baseVal.x = animX;
							svg.viewBox.baseVal.y = animY;
							svg.viewBox.baseVal.width = animWidth;
							svg.viewBox.baseVal.height = animHeight;
							setMinDate(animX);
							setMaxDate(animX + animWidth);
							setMinValue(baseY * 2 + baseHeight - animHeight - animY);
							setMaxValue(baseY * 2 + baseHeight - animY);
							return;
						}
					}
				});
				svg.addEventListener("focusin", (event) =&gt; {
					if (!event.target.matches(":focus-visible")) {
						return;
					}
					event.preventDefault();
					if (pointerCount !== 0) {
						return;
					}
					let {x: animX, y: animY, width: animWidth, height: animHeight} = svg.viewBox.baseVal;
					let {x, y, width, height} = event.target.getBBox();
					width = Math.round(width);
					height = Math.round(height);
					x = Math.round(x);
					y = baseY * 2 + baseHeight - height - Math.round(y);
					if (x + width &lt; animX) {
						animX = x;
						if (width &gt; animWidth) {
							animX += (width - animWidth) / 2;
						}
					} else if (x &gt; animX + animWidth) {
						animX = x + width - animWidth;
						if (width &gt; animWidth) {
							animX -= (width - animWidth) / 2;
						}
					}
					if (y + height &lt; animY) {
						animY = y;
						if (height &gt; animHeight) {
							animY += (height - animHeight) / 2;
						}
					} else if (y &gt; animY + animHeight) {
						animY = y + height - animHeight;
						if (height &gt; animHeight) {
							animY -= (height - animHeight) / 2;
						}
					}
					svg.viewBox.baseVal.x = animX;
					svg.viewBox.baseVal.y = animY;
					setMinDate(animX);
					setMaxDate(animX + animWidth);
					setMinValue(baseY * 2 + baseHeight - animHeight - animY);
					setMaxValue(baseY * 2 + baseHeight - animY);
				});
			}, {
				once: true,
			});
		}
	</script>
	<foreignObject x="0" y="0" width="100%" height="100%" style="--date-size: 100; --value-size: 20;">
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2018-01-17</text>
		</svg>
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2025-08-25</text>
		</svg>
		<svg viewBox="0 0 20 20">
			<text x="10" y="10" dx="0" dy="2" textLength="10" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">0</text>
		</svg>
		<svg viewBox="0 0 20 20">
			<text x="10" y="10" dx="0" dy="2" textLength="20" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">93</text>
		</svg>
		<svg viewBox="0 0 2777 93" preserveAspectRatio="none" overflow="visible">
			<g transform="translate(0 93) scale(1 -1)" style="--count: 93;">
				<g>
					<rect x="0" y="0" width="2777" height="93"/>
				</g>
				<g style="--index: 0;">
					<path d="M0,0L0,0L0,1L2,1L2,1L14,1L14,2L15,2L15,1L16,1L16,1L64,1L64,2L90,2L90,2L172,2L172,3L363,3L363,3L573,3L573,4L853,4L853,4L956,4L956,4L1041,4L1041,4L1067,4L1067,4L1073,4L1073,4L1090,4L1090,4L1116,4L1116,4L1185,4L1185,4L1191,4L1191,5L1354,5L1354,6L1420,6L1420,7L1452,7L1452,8L1516,8L1516,8L1544,8L1544,9L1572,9L1572,9L1634,9L1634,9L1644,9L1644,10L1653,10L1653,11L1666,11L1666,12L1669,12L1669,13L1679,13L1679,14L1681,14L1681,15L1696,15L1696,15L1705,15L1705,15L1753,15L1753,16L1754,16L1754,17L1760,17L1760,18L1765,18L1765,18L1827,18L1827,18L1834,18L1834,19L1848,19L1848,20L1849,20L1849,19L1860,19L1860,20L1887,20L1887,21L1901,21L1901,21L1924,21L1924,21L1969,21L1969,22L1976,22L1976,22L1985,22L1985,23L2001,23L2001,24L2034,24L2034,25L2049,25L2049,25L2062,25L2062,24L2111,24L2111,24L2152,24L2152,24L2154,24L2154,25L2187,25L2187,26L2209,26L2209,27L2213,27L2213,26L2217,26L2217,26L2296,26L2296,26L2300,26L2300,27L2363,27L2363,27L2394,27L2394,27L2433,27L2433,27L2447,27L2447,27L2508,27L2508,27L2509,27L2509,27L2544,27L2544,27L2555,27L2555,27L2564,27L2564,27L2569,27L2569,28L2573,28L2573,29L2599,29L2599,30L2600,30L2600,30L2601,30L2601,31L2604,31L2604,31L2605,31L2605,31L2633,31L2633,31L2650,31L2650,31L2661,31L2661,32L2663,32L2663,33L2692,33L2692,33L2700,33L2700,33L2713,33L2713,33L2717,33L2717,33L2725,33L2725,33L2727,33L2727,34L2740,34L2740,34L2752,34L2752,34L2755,34L2755,35L2758,35L2758,35L2769,35L2769,36L2775,36L2775,36L2777,36L2777,36L2777,36" tabindex="0">
						<title>qj2pq1p8</title>
					</path>
				</g>
				<g style="--index: 1;">
					<path d="M0,0L14,0L14,1L15,1L15,2L16,2L16,2L64,2L64,3L90,3L90,3L172,3L172,5L363,5L363,5L573,5L573,6L853,6L853,6L956,6L956,6L1041,6L1041,7L1049,7L1049,6L1067,6L1067,6L1073,6L1073,6L1090,6L1090,6L1116,6L1116,6L1185,6L1185,6L1191,6L1191,8L1354,8L1354,9L1420,9L1420,10L1452,10L1452,11L1516,11L1516,11L1544,11L1544,12L1572,12L1572,12L1634,12L1634,12L1644,12L1644,13L1653,13L1653,14L1666,14L1666,15L1669,15L1669,16L1679,16L1679,17L1681,17L1681,18L1696,18L1696,18L1705,18L1705,18L1753,18L1753,19L1754,19L1754,20L1760,20L1760,21L1765,21L1765,21L1827,21L1827,21L1834,21L1834,22L1848,22L1848,23L1860,23L1860,24L1887,24L1887,25L1901,25L1901,25L1924,25L1924,25L1969,25L1969,26L1976,26L1976,26L1985,26L1985,27L2001,27L2001,28L2034,28L2034,29L2049,29L2049,29L2062,29L2062,28L2111,28L2111,28L2152,28L2152,28L2154,28L2154,29L2187,29L2187,30L2209,30L2209,31L2217,31L2217,31L2296,31L2296,32L2300,32L2300,33L2363,33L2363,33L2394,33L2394,33L2433,33L2433,34L2447,34L2447,34L2508,34L2508,34L2509,34L2509,34L2544,34L2544,34L2546,34L2546,33L2555,33L2555,34L2564,34L2564,34L2569,34L2569,35L2573,35L2573,36L2599,36L2599,37L2600,37L2600,37L2601,37L2601,38L2604,38L2604,38L2605,38L2605,38L2633,38L2633,38L2650,38L2650,38L2661,38L2661,39L2663,39L2663,40L2692,40L2692,40L2700,40L2700,40L2713,40L2713,40L2717,40L2717,40L2725,40L2725,40L2727,40L2727,41L2740,41L2740,41L2752,41L2752,41L2755,41L2755,42L2758,42L2758,42L2769,42L2769,43L2775,43L2775,43L2777,43L2777,43L2777,43" tabindex="0">
						<title>kj9kz6r8</title>
					</path>
				</g>
				<g style="--index: 2;">
					<path d="M0,0L64,0L64,1L90,1L90,1L172,1L172,1L363,1L363,1L573,1L573,2L853,2L853,2L956,2L956,2L1041,2L1041,2L1067,2L1067,2L1073,2L1073,2L1090,2L1090,2L1116,2L1116,2L1185,2L1185,2L1191,2L1191,2L1354,2L1354,3L1420,3L1420,4L1452,4L1452,5L1516,5L1516,5L1544,5L1544,6L1572,6L1572,6L1634,6L1634,6L1644,6L1644,7L1653,7L1653,8L1666,8L1666,8L1669,8L1669,9L1679,9L1679,9L1681,9L1681,10L1696,10L1696,10L1705,10L1705,10L1753,10L1753,11L1754,11L1754,12L1755,12L1755,11L1760,11L1760,12L1765,12L1765,12L1827,12L1827,12L1834,12L1834,13L1848,13L1848,13L1860,13L1860,14L1887,14L1887,15L1901,15L1901,15L1924,15L1924,15L1969,15L1969,16L1976,16L1976,16L1985,16L1985,17L2001,17L2001,18L2034,18L2034,19L2049,19L2049,19L2062,19L2062,18L2111,18L2111,18L2152,18L2152,18L2154,18L2154,19L2187,19L2187,20L2209,20L2209,21L2213,21L2213,20L2217,20L2217,20L2296,20L2296,20L2300,20L2300,21L2363,21L2363,21L2394,21L2394,21L2433,21L2433,21L2447,21L2447,21L2508,21L2508,21L2509,21L2509,21L2544,21L2544,21L2555,21L2555,21L2564,21L2564,21L2569,21L2569,21L2573,21L2573,21L2599,21L2599,22L2600,22L2600,22L2601,22L2601,23L2604,23L2604,23L2605,23L2605,23L2633,23L2633,23L2650,23L2650,23L2661,23L2661,24L2663,24L2663,25L2692,25L2692,25L2700,25L2700,25L2713,25L2713,25L2717,25L2717,25L2725,25L2725,25L2727,25L2727,26L2740,26L2740,26L2752,26L2752,26L2755,26L2755,27L2758,27L2758,27L2769,27L2769,27L2775,27L2775,27L2777,27L2777,27L2777,27" tabindex="0">
						<title>18qg9ndx</title>
					</path>
				</g>
				<g style="--index: 3;">
					<path d="M0,0L90,0L90,4L96,4L96,4L172,4L172,6L242,6L242,6L363,6L363,7L573,7L573,8L853,8L853,9L956,9L956,9L958,9L958,10L987,10L987,9L1041,9L1041,10L1067,10L1067,11L1073,11L1073,11L1090,11L1090,12L1092,12L1092,11L1093,11L1093,10L1116,10L1116,10L1151,10L1151,9L1185,9L1185,10L1191,10L1191,12L1354,12L1354,13L1420,13L1420,14L1452,14L1452,15L1516,15L1516,16L1544,16L1544,17L1572,17L1572,18L1634,18L1634,19L1644,19L1644,20L1653,20L1653,21L1666,21L1666,22L1669,22L1669,23L1679,23L1679,24L1681,24L1681,25L1696,25L1696,25L1705,25L1705,26L1753,26L1753,27L1754,27L1754,28L1760,28L1760,29L1765,29L1765,30L1827,30L1827,31L1834,31L1834,32L1848,32L1848,33L1860,33L1860,34L1887,34L1887,36L1901,36L1901,37L1924,37L1924,38L1969,38L1969,39L1976,39L1976,40L1985,40L1985,42L2001,42L2001,43L2034,43L2034,44L2049,44L2049,45L2111,45L2111,46L2152,46L2152,47L2154,47L2154,48L2187,48L2187,49L2209,49L2209,50L2217,50L2217,50L2296,50L2296,51L2300,51L2300,52L2363,52L2363,53L2394,53L2394,53L2433,53L2433,54L2447,54L2447,54L2448,54L2448,53L2508,53L2508,54L2509,54L2509,55L2544,55L2544,56L2555,56L2555,57L2564,57L2564,58L2569,58L2569,59L2573,59L2573,60L2599,60L2599,61L2600,61L2600,62L2601,62L2601,63L2604,63L2604,64L2605,64L2605,65L2633,65L2633,65L2650,65L2650,66L2661,66L2661,67L2663,67L2663,68L2692,68L2692,68L2700,68L2700,68L2713,68L2713,69L2717,69L2717,69L2725,69L2725,69L2727,69L2727,70L2740,70L2740,71L2752,71L2752,71L2755,71L2755,72L2758,72L2758,72L2769,72L2769,73L2775,73L2775,74L2777,74L2777,74L2777,74" tabindex="0">
						<title>y8dgoe98</title>
					</path>
				</g>
				<g style="--index: 4;">
					<path d="M0,0L172,0L172,2L363,2L363,2L573,2L573,3L853,3L853,3L956,3L956,3L1041,3L1041,3L1067,3L1067,3L1073,3L1073,3L1090,3L1090,3L1116,3L1116,3L1185,3L1185,3L1191,3L1191,4L1354,4L1354,5L1420,5L1420,6L1452,6L1452,7L1516,7L1516,7L1544,7L1544,8L1572,8L1572,8L1634,8L1634,8L1644,8L1644,9L1653,9L1653,10L1666,10L1666,10L1669,10L1669,11L1679,11L1679,11L1681,11L1681,12L1696,12L1696,12L1705,12L1705,12L1753,12L1753,13L1754,13L1754,14L1760,14L1760,15L1765,15L1765,15L1827,15L1827,15L1834,15L1834,16L1848,16L1848,16L1860,16L1860,17L1887,17L1887,18L1901,18L1901,18L1924,18L1924,18L1969,18L1969,19L1976,19L1976,19L1985,19L1985,20L2001,20L2001,21L2034,21L2034,22L2049,22L2049,22L2062,22L2062,21L2111,21L2111,21L2152,21L2152,21L2154,21L2154,22L2187,22L2187,23L2209,23L2209,24L2213,24L2213,23L2217,23L2217,23L2296,23L2296,23L2300,23L2300,24L2363,24L2363,24L2394,24L2394,24L2433,24L2433,24L2447,24L2447,24L2508,24L2508,24L2509,24L2509,24L2544,24L2544,24L2555,24L2555,24L2564,24L2564,24L2569,24L2569,25L2573,25L2573,26L2599,26L2599,27L2600,27L2600,27L2601,27L2601,28L2604,28L2604,28L2605,28L2605,28L2633,28L2633,28L2650,28L2650,28L2661,28L2661,29L2663,29L2663,30L2692,30L2692,30L2700,30L2700,30L2713,30L2713,30L2717,30L2717,30L2725,30L2725,30L2727,30L2727,31L2740,31L2740,31L2752,31L2752,31L2755,31L2755,32L2758,32L2758,32L2769,32L2769,32L2775,32L2775,32L2777,32L2777,32L2777,32" tabindex="0">
						<title>e8e935oj</title>
					</path>
				</g>
				<g style="--index: 5;">
					<path d="M0,0L172,0L172,4L363,4L363,4L573,4L573,5L853,5L853,5L956,5L956,5L1041,5L1041,6L1049,6L1049,5L1067,5L1067,5L1073,5L1073,5L1090,5L1090,5L1116,5L1116,5L1185,5L1185,5L1191,5L1191,6L1354,6L1354,7L1420,7L1420,8L1452,8L1452,9L1516,9L1516,9L1544,9L1544,10L1572,10L1572,10L1634,10L1634,10L1644,10L1644,11L1653,11L1653,12L1666,12L1666,13L1669,13L1669,14L1679,14L1679,15L1681,15L1681,16L1696,16L1696,16L1705,16L1705,16L1753,16L1753,17L1754,17L1754,18L1760,18L1760,19L1765,19L1765,19L1827,19L1827,19L1834,19L1834,20L1848,20L1848,21L1860,21L1860,22L1887,22L1887,23L1901,23L1901,23L1924,23L1924,23L1969,23L1969,24L1976,24L1976,24L1985,24L1985,25L2001,25L2001,26L2034,26L2034,27L2049,27L2049,27L2062,27L2062,26L2111,26L2111,26L2152,26L2152,26L2154,26L2154,27L2187,27L2187,28L2209,28L2209,29L2217,29L2217,29L2296,29L2296,29L2300,29L2300,30L2363,30L2363,30L2394,30L2394,30L2433,30L2433,31L2447,31L2447,31L2508,31L2508,31L2509,31L2509,31L2544,31L2544,31L2546,31L2546,30L2555,30L2555,31L2564,31L2564,31L2569,31L2569,32L2573,32L2573,33L2599,33L2599,34L2600,34L2600,34L2601,34L2601,35L2604,35L2604,35L2605,35L2605,35L2633,35L2633,35L2650,35L2650,35L2661,35L2661,36L2663,36L2663,37L2692,37L2692,37L2700,37L2700,37L2713,37L2713,37L2717,37L2717,37L2725,37L2725,37L2727,37L2727,38L2740,38L2740,38L2752,38L2752,38L2755,38L2755,39L2758,39L2758,39L2769,39L2769,40L2775,40L2775,40L2777,40L2777,40L2777,40" tabindex="0">
						<title>kjpgdq4j</title>
					</path>
				</g>
				<g style="--index: 6;">
					<path d="M0,0L363,0L363,6L573,6L573,7L853,7L853,7L956,7L956,7L1041,7L1041,8L1049,8L1049,7L1067,7L1067,7L1073,7L1073,7L1090,7L1090,8L1116,8L1116,8L1139,8L1139,7L1185,7L1185,8L1191,8L1191,10L1354,10L1354,11L1420,11L1420,12L1452,12L1452,13L1516,13L1516,14L1544,14L1544,15L1572,15L1572,16L1634,16L1634,17L1644,17L1644,18L1653,18L1653,19L1666,19L1666,20L1669,20L1669,21L1679,21L1679,22L1681,22L1681,23L1696,23L1696,23L1705,23L1705,24L1753,24L1753,25L1754,25L1754,26L1760,26L1760,27L1765,27L1765,27L1827,27L1827,27L1834,27L1834,28L1848,28L1848,29L1860,29L1860,30L1887,30L1887,32L1901,32L1901,33L1924,33L1924,34L1969,34L1969,35L1976,35L1976,35L1985,35L1985,37L2001,37L2001,38L2034,38L2034,39L2049,39L2049,40L2111,40L2111,41L2152,41L2152,42L2154,42L2154,43L2187,43L2187,44L2209,44L2209,45L2210,45L2210,44L2217,44L2217,44L2296,44L2296,45L2300,45L2300,46L2335,46L2335,45L2363,45L2363,45L2394,45L2394,45L2433,45L2433,46L2447,46L2447,46L2508,46L2508,47L2509,47L2509,47L2544,47L2544,48L2555,48L2555,49L2564,49L2564,50L2569,50L2569,51L2573,51L2573,52L2599,52L2599,53L2600,53L2600,54L2601,54L2601,55L2604,55L2604,55L2605,55L2605,55L2633,55L2633,55L2650,55L2650,56L2661,56L2661,57L2663,57L2663,58L2692,58L2692,58L2700,58L2700,58L2713,58L2713,59L2717,59L2717,59L2725,59L2725,59L2727,59L2727,60L2740,60L2740,60L2752,60L2752,60L2755,60L2755,61L2758,61L2758,61L2769,61L2769,62L2775,62L2775,63L2777,63L2777,63L2777,63" tabindex="0">
						<title>48g36l2x</title>
					</path>
				</g>
				<g style="--index: 7;">
					<path d="M0,0L573,0L573,1L853,1L853,1L956,1L956,1L1041,1L1041,1L1067,1L1067,1L1073,1L1073,1L1090,1L1090,1L1116,1L1116,1L1185,1L1185,1L1191,1L1191,1L1354,1L1354,2L1420,2L1420,2L1452,2L1452,3L1516,3L1516,3L1544,3L1544,4L1572,4L1572,4L1634,4L1634,4L1644,4L1644,5L1653,5L1653,6L1666,6L1666,6L1669,6L1669,6L1679,6L1679,6L1681,6L1681,7L1696,7L1696,7L1705,7L1705,7L1753,7L1753,8L1754,8L1754,8L1760,8L1760,9L1765,9L1765,9L1827,9L1827,9L1834,9L1834,9L1848,9L1848,9L1860,9L1860,9L1887,9L1887,10L1901,10L1901,10L1924,10L1924,10L1969,10L1969,10L1976,10L1976,10L1985,10L1985,11L2001,11L2001,12L2034,12L2034,13L2049,13L2049,13L2062,13L2062,12L2111,12L2111,12L2152,12L2152,12L2154,12L2154,12L2187,12L2187,13L2209,13L2209,14L2213,14L2213,13L2217,13L2217,13L2296,13L2296,13L2300,13L2300,14L2363,14L2363,14L2394,14L2394,14L2433,14L2433,14L2447,14L2447,14L2508,14L2508,14L2509,14L2509,14L2544,14L2544,14L2555,14L2555,14L2564,14L2564,14L2569,14L2569,14L2573,14L2573,14L2599,14L2599,15L2600,15L2600,15L2601,15L2601,16L2604,16L2604,16L2605,16L2605,16L2633,16L2633,16L2650,16L2650,16L2661,16L2661,17L2663,17L2663,18L2692,18L2692,18L2700,18L2700,18L2713,18L2713,18L2717,18L2717,18L2725,18L2725,18L2727,18L2727,19L2740,19L2740,19L2752,19L2752,19L2755,19L2755,20L2758,20L2758,20L2769,20L2769,20L2775,20L2775,20L2777,20L2777,20L2777,20" tabindex="0">
						<title>j9rlkzoj</title>
					</path>
				</g>
				<g style="--index: 8;">
					<path d="M0,0L853,0L853,8L956,8L956,8L1027,8L1027,8L1041,8L1041,9L1049,9L1049,8L1067,8L1067,8L1073,8L1073,8L1090,8L1090,9L1092,9L1092,12L1093,12L1093,11L1116,11L1116,11L1151,11L1151,10L1185,10L1185,11L1191,11L1191,13L1354,13L1354,14L1420,14L1420,15L1452,15L1452,16L1516,16L1516,17L1544,17L1544,18L1572,18L1572,19L1634,19L1634,20L1644,20L1644,21L1653,21L1653,22L1666,22L1666,23L1669,23L1669,24L1679,24L1679,25L1681,25L1681,26L1696,26L1696,26L1705,26L1705,27L1753,27L1753,28L1754,28L1754,29L1760,29L1760,30L1765,30L1765,31L1827,31L1827,32L1834,32L1834,33L1848,33L1848,34L1860,34L1860,35L1887,35L1887,37L1901,37L1901,38L1924,38L1924,39L1969,39L1969,40L1976,40L1976,41L1985,41L1985,43L2001,43L2001,44L2034,44L2034,45L2049,45L2049,46L2111,46L2111,47L2152,47L2152,48L2154,48L2154,49L2187,49L2187,50L2209,50L2209,51L2217,51L2217,51L2296,51L2296,52L2300,52L2300,53L2363,53L2363,54L2394,54L2394,54L2433,54L2433,55L2447,55L2447,56L2452,56L2452,55L2508,55L2508,56L2509,56L2509,57L2544,57L2544,58L2555,58L2555,59L2564,59L2564,60L2569,60L2569,61L2573,61L2573,62L2599,62L2599,63L2600,63L2600,64L2601,64L2601,65L2604,65L2604,66L2605,66L2605,67L2633,67L2633,67L2650,67L2650,68L2661,68L2661,69L2663,69L2663,70L2692,70L2692,70L2700,70L2700,71L2712,71L2712,76L2713,76L2713,77L2717,77L2717,77L2725,77L2725,77L2727,77L2727,78L2740,78L2740,79L2752,79L2752,79L2755,79L2755,80L2758,80L2758,81L2769,81L2769,82L2774,82L2774,81L2775,81L2775,82L2777,82L2777,82L2777,82" tabindex="0">
						<title>x356nrej</title>
					</path>
				</g>
				<g style="--index: 9;">
					<path d="M0,0L956,0L956,10L958,10L958,9L987,9L987,10L1041,10L1041,11L1067,11L1067,12L1073,12L1073,12L1090,12L1090,13L1116,13L1116,13L1137,13L1137,15L1165,15L1165,14L1169,14L1169,15L1185,15L1185,16L1191,16L1191,18L1354,18L1354,19L1420,19L1420,20L1452,20L1452,21L1516,21L1516,22L1544,22L1544,23L1572,23L1572,24L1634,24L1634,25L1644,25L1644,26L1653,26L1653,27L1666,27L1666,28L1669,28L1669,29L1679,29L1679,30L1681,30L1681,31L1696,31L1696,32L1705,32L1705,33L1753,33L1753,34L1754,34L1754,35L1760,35L1760,36L1765,36L1765,37L1778,37L1778,36L1827,36L1827,37L1834,37L1834,38L1848,38L1848,39L1860,39L1860,40L1887,40L1887,42L1901,42L1901,43L1924,43L1924,44L1969,44L1969,45L1976,45L1976,46L1985,46L1985,48L2001,48L2001,49L2034,49L2034,50L2049,50L2049,51L2111,51L2111,52L2152,52L2152,53L2154,53L2154,54L2187,54L2187,55L2209,55L2209,56L2217,56L2217,57L2296,57L2296,58L2300,58L2300,59L2363,59L2363,60L2394,60L2394,61L2433,61L2433,62L2447,62L2447,63L2508,63L2508,64L2509,64L2509,65L2544,65L2544,66L2555,66L2555,67L2564,67L2564,68L2569,68L2569,69L2573,69L2573,70L2599,70L2599,71L2600,71L2600,72L2601,72L2601,73L2604,73L2604,74L2605,74L2605,75L2633,75L2633,75L2650,75L2650,76L2661,76L2661,77L2663,77L2663,78L2692,78L2692,79L2700,79L2700,80L2713,80L2713,81L2717,81L2717,82L2721,82L2721,81L2725,81L2725,82L2727,82L2727,83L2740,83L2740,84L2752,84L2752,85L2755,85L2755,86L2758,86L2758,87L2769,87L2769,88L2775,88L2775,89L2777,89L2777,90L2777,90" tabindex="0">
						<title>j2yr9lp8</title>
					</path>
				</g>
				<g style="--index: 10;">
					<path d="M0,0L1041,0L1041,5L1049,5L1049,9L1067,9L1067,9L1073,9L1073,9L1090,9L1090,10L1092,10L1092,9L1116,9L1116,9L1151,9L1151,12L1185,12L1185,13L1191,13L1191,15L1354,15L1354,16L1420,16L1420,17L1452,17L1452,18L1516,18L1516,19L1544,19L1544,20L1572,20L1572,21L1634,21L1634,22L1644,22L1644,23L1653,23L1653,24L1666,24L1666,25L1669,25L1669,26L1679,26L1679,27L1681,27L1681,28L1696,28L1696,28L1705,28L1705,29L1753,29L1753,30L1754,30L1754,31L1760,31L1760,32L1765,32L1765,33L1827,33L1827,34L1834,34L1834,35L1848,35L1848,36L1860,36L1860,37L1887,37L1887,39L1901,39L1901,40L1924,40L1924,41L1969,41L1969,42L1976,42L1976,43L1985,43L1985,45L2001,45L2001,46L2034,46L2034,47L2049,47L2049,48L2111,48L2111,49L2152,49L2152,50L2154,50L2154,51L2187,51L2187,52L2209,52L2209,53L2217,53L2217,54L2218,54L2218,53L2296,53L2296,54L2300,54L2300,55L2363,55L2363,56L2394,56L2394,56L2433,56L2433,57L2447,57L2447,58L2508,58L2508,59L2509,59L2509,60L2544,60L2544,61L2555,61L2555,62L2564,62L2564,63L2569,63L2569,64L2573,64L2573,65L2599,65L2599,66L2600,66L2600,67L2601,67L2601,68L2604,68L2604,69L2605,69L2605,70L2633,70L2633,70L2650,70L2650,71L2661,71L2661,72L2663,72L2663,73L2692,73L2692,73L2700,73L2700,74L2712,74L2712,73L2713,73L2713,74L2717,74L2717,74L2725,74L2725,74L2727,74L2727,75L2740,75L2740,76L2752,76L2752,76L2755,76L2755,77L2758,77L2758,78L2766,78L2766,77L2769,77L2769,78L2775,78L2775,79L2777,79L2777,79L2777,79" tabindex="0">
						<title>x7q00668</title>
					</path>
				</g>
				<g style="--index: 11;">
					<path d="M0,0L1067,0L1067,10L1073,10L1073,10L1090,10L1090,11L1092,11L1092,10L1093,10L1093,12L1116,12L1116,12L1151,12L1151,11L1185,11L1185,12L1191,12L1191,14L1354,14L1354,15L1420,15L1420,16L1452,16L1452,17L1516,17L1516,18L1544,18L1544,19L1572,19L1572,20L1634,20L1634,21L1644,21L1644,22L1653,22L1653,23L1666,23L1666,24L1669,24L1669,25L1679,25L1679,26L1681,26L1681,27L1696,27L1696,27L1705,27L1705,28L1753,28L1753,29L1754,29L1754,30L1760,30L1760,31L1765,31L1765,32L1827,32L1827,33L1834,33L1834,34L1848,34L1848,35L1860,35L1860,36L1887,36L1887,38L1901,38L1901,39L1924,39L1924,40L1969,40L1969,41L1976,41L1976,42L1985,42L1985,44L2001,44L2001,45L2034,45L2034,46L2049,46L2049,47L2111,47L2111,48L2152,48L2152,49L2154,49L2154,50L2187,50L2187,51L2209,51L2209,52L2217,52L2217,52L2296,52L2296,53L2300,53L2300,54L2363,54L2363,55L2394,55L2394,55L2433,55L2433,56L2447,56L2447,57L2452,57L2452,56L2508,56L2508,57L2509,57L2509,58L2544,58L2544,59L2555,59L2555,60L2564,60L2564,61L2569,61L2569,62L2573,62L2573,63L2599,63L2599,64L2600,64L2600,65L2601,65L2601,66L2604,66L2604,67L2605,67L2605,68L2633,68L2633,68L2650,68L2650,69L2661,69L2661,70L2663,70L2663,71L2692,71L2692,71L2700,71L2700,72L2712,72L2712,71L2713,71L2713,72L2717,72L2717,72L2725,72L2725,72L2727,72L2727,73L2740,73L2740,74L2752,74L2752,74L2755,74L2755,75L2758,75L2758,76L2769,76L2769,77L2775,77L2775,78L2777,78L2777,78L2777,78" tabindex="0">
						<title>814zn7l8</title>
					</path>
				</g>
				<g style="--index: 12;">
					<path d="M0,0L1073,0L1073,13L1081,13L1081,13L1090,13L1090,14L1116,14L1116,15L1137,15L1137,14L1165,14L1165,15L1169,15L1169,14L1185,14L1185,15L1191,15L1191,17L1354,17L1354,18L1420,18L1420,19L1452,19L1452,20L1516,20L1516,21L1544,21L1544,22L1572,22L1572,23L1634,23L1634,24L1644,24L1644,25L1653,25L1653,26L1666,26L1666,27L1669,27L1669,28L1679,28L1679,29L1681,29L1681,30L1696,30L1696,30L1705,30L1705,31L1753,31L1753,32L1754,32L1754,33L1760,33L1760,34L1765,34L1765,35L1827,35L1827,36L1834,36L1834,37L1848,37L1848,38L1860,38L1860,39L1887,39L1887,41L1901,41L1901,42L1924,42L1924,43L1969,43L1969,44L1976,44L1976,45L1985,45L1985,47L2001,47L2001,48L2034,48L2034,49L2049,49L2049,50L2111,50L2111,51L2152,51L2152,52L2154,52L2154,53L2187,53L2187,54L2209,54L2209,55L2217,55L2217,56L2218,56L2218,55L2296,55L2296,56L2300,56L2300,57L2363,57L2363,58L2394,58L2394,59L2433,59L2433,60L2447,60L2447,61L2508,61L2508,62L2509,62L2509,63L2544,63L2544,64L2555,64L2555,65L2564,65L2564,66L2569,66L2569,67L2573,67L2573,68L2599,68L2599,69L2600,69L2600,70L2601,70L2601,71L2604,71L2604,72L2605,72L2605,73L2633,73L2633,73L2650,73L2650,74L2661,74L2661,75L2663,75L2663,76L2692,76L2692,76L2700,76L2700,77L2713,77L2713,78L2717,78L2717,78L2725,78L2725,79L2727,79L2727,80L2740,80L2740,81L2752,81L2752,81L2755,81L2755,82L2758,82L2758,83L2769,83L2769,84L2775,84L2775,85L2777,85L2777,85L2777,85" tabindex="0">
						<title>xkon93k8</title>
					</path>
				</g>
				<g style="--index: 13;">
					<path d="M0,0L1090,0L1090,7L1116,7L1116,7L1139,7L1139,8L1185,8L1185,9L1191,9L1191,11L1354,11L1354,12L1420,12L1420,13L1452,13L1452,14L1516,14L1516,15L1544,15L1544,16L1572,16L1572,17L1634,17L1634,18L1644,18L1644,19L1653,19L1653,20L1666,20L1666,21L1669,21L1669,22L1679,22L1679,23L1681,23L1681,24L1696,24L1696,24L1705,24L1705,25L1753,25L1753,26L1754,26L1754,27L1760,27L1760,28L1765,28L1765,28L1827,28L1827,28L1834,28L1834,29L1848,29L1848,30L1860,30L1860,31L1887,31L1887,33L1901,33L1901,34L1924,34L1924,35L1969,35L1969,36L1976,36L1976,36L1985,36L1985,38L2001,38L2001,39L2034,39L2034,40L2049,40L2049,41L2111,41L2111,42L2152,42L2152,43L2154,43L2154,44L2187,44L2187,45L2209,45L2209,46L2217,46L2217,46L2296,46L2296,47L2300,47L2300,48L2363,48L2363,48L2394,48L2394,48L2427,48L2427,47L2433,47L2433,48L2447,48L2447,48L2508,48L2508,49L2509,49L2509,49L2544,49L2544,50L2555,50L2555,51L2564,51L2564,52L2569,52L2569,53L2573,53L2573,54L2599,54L2599,55L2600,55L2600,56L2601,56L2601,57L2604,57L2604,57L2605,57L2605,57L2633,57L2633,57L2650,57L2650,58L2661,58L2661,59L2663,59L2663,60L2692,60L2692,60L2700,60L2700,60L2713,60L2713,61L2717,61L2717,61L2725,61L2725,61L2727,61L2727,62L2740,62L2740,63L2752,63L2752,63L2755,63L2755,64L2758,64L2758,64L2763,64L2763,63L2769,63L2769,64L2775,64L2775,65L2777,65L2777,65L2777,65" tabindex="0">
						<title>j0np7or8</title>
					</path>
				</g>
				<g style="--index: 14;">
					<path d="M0,0L1116,0L1116,14L1137,14L1137,13L1185,13L1185,14L1191,14L1191,16L1354,16L1354,17L1420,17L1420,18L1452,18L1452,19L1516,19L1516,20L1544,20L1544,21L1572,21L1572,22L1634,22L1634,23L1644,23L1644,24L1653,24L1653,25L1666,25L1666,26L1669,26L1669,27L1679,27L1679,28L1681,28L1681,29L1696,29L1696,29L1705,29L1705,30L1753,30L1753,31L1754,31L1754,32L1760,32L1760,33L1765,33L1765,34L1827,34L1827,35L1834,35L1834,36L1848,36L1848,37L1860,37L1860,38L1887,38L1887,40L1901,40L1901,41L1924,41L1924,42L1969,42L1969,43L1976,43L1976,44L1985,44L1985,46L2001,46L2001,47L2034,47L2034,48L2049,48L2049,49L2111,49L2111,50L2152,50L2152,51L2154,51L2154,52L2187,52L2187,53L2209,53L2209,54L2217,54L2217,55L2218,55L2218,54L2296,54L2296,55L2300,55L2300,56L2363,56L2363,57L2394,57L2394,58L2433,58L2433,59L2447,59L2447,60L2508,60L2508,61L2509,61L2509,62L2544,62L2544,63L2555,63L2555,64L2564,64L2564,65L2569,65L2569,66L2573,66L2573,67L2599,67L2599,68L2600,68L2600,69L2601,69L2601,70L2604,70L2604,71L2605,71L2605,72L2633,72L2633,72L2650,72L2650,73L2661,73L2661,74L2663,74L2663,75L2692,75L2692,75L2700,75L2700,76L2712,76L2712,75L2713,75L2713,76L2717,76L2717,76L2725,76L2725,76L2727,76L2727,77L2740,77L2740,78L2752,78L2752,78L2755,78L2755,79L2758,79L2758,80L2769,80L2769,81L2774,81L2774,80L2775,80L2775,81L2777,81L2777,81L2777,81" tabindex="0">
						<title>jnzg27dj</title>
					</path>
				</g>
				<g style="--index: 15;">
					<path d="M0,0L1185,0L1185,7L1186,7L1186,7L1191,7L1191,9L1354,9L1354,10L1420,10L1420,11L1452,11L1452,12L1516,12L1516,13L1544,13L1544,14L1572,14L1572,15L1634,15L1634,15L1644,15L1644,16L1653,16L1653,17L1666,17L1666,18L1669,18L1669,19L1679,19L1679,20L1681,20L1681,21L1696,21L1696,21L1705,21L1705,21L1753,21L1753,22L1754,22L1754,23L1760,23L1760,24L1765,24L1765,24L1827,24L1827,24L1834,24L1834,25L1848,25L1848,26L1860,26L1860,27L1887,27L1887,28L1901,28L1901,29L1924,29L1924,29L1969,29L1969,30L1976,30L1976,30L1985,30L1985,31L2001,31L2001,32L2034,32L2034,33L2049,33L2049,33L2111,33L2111,34L2152,34L2152,34L2154,34L2154,35L2187,35L2187,36L2209,36L2209,37L2217,37L2217,37L2296,37L2296,38L2300,38L2300,39L2335,39L2335,38L2363,38L2363,38L2394,38L2394,38L2433,38L2433,39L2447,39L2447,39L2508,39L2508,39L2509,39L2509,39L2544,39L2544,39L2555,39L2555,40L2564,40L2564,40L2569,40L2569,41L2573,41L2573,42L2599,42L2599,43L2600,43L2600,44L2601,44L2601,45L2604,45L2604,45L2605,45L2605,45L2633,45L2633,45L2650,45L2650,45L2661,45L2661,46L2663,46L2663,47L2692,47L2692,47L2700,47L2700,47L2713,47L2713,48L2717,48L2717,48L2725,48L2725,48L2726,48L2726,47L2727,47L2727,48L2740,48L2740,48L2752,48L2752,48L2755,48L2755,49L2758,49L2758,49L2769,49L2769,50L2775,50L2775,50L2777,50L2777,50L2777,50" tabindex="0">
						<title>jnzen32j</title>
					</path>
				</g>
				<g style="--index: 16;">
					<path d="M0,0L1191,0L1191,3L1354,3L1354,4L1420,4L1420,5L1452,5L1452,6L1516,6L1516,6L1544,6L1544,7L1572,7L1572,7L1634,7L1634,7L1644,7L1644,8L1653,8L1653,9L1666,9L1666,9L1669,9L1669,10L1679,10L1679,10L1681,10L1681,11L1696,11L1696,11L1705,11L1705,11L1753,11L1753,12L1754,12L1754,13L1755,13L1755,12L1760,12L1760,13L1765,13L1765,13L1827,13L1827,13L1834,13L1834,14L1848,14L1848,14L1860,14L1860,15L1887,15L1887,16L1901,16L1901,16L1924,16L1924,16L1969,16L1969,17L1976,17L1976,17L1985,17L1985,18L2001,18L2001,19L2034,19L2034,20L2049,20L2049,20L2062,20L2062,19L2111,19L2111,19L2152,19L2152,19L2154,19L2154,20L2187,20L2187,21L2209,21L2209,22L2213,22L2213,21L2217,21L2217,21L2296,21L2296,21L2300,21L2300,22L2363,22L2363,22L2394,22L2394,22L2433,22L2433,22L2447,22L2447,22L2508,22L2508,22L2509,22L2509,22L2544,22L2544,22L2555,22L2555,22L2564,22L2564,22L2569,22L2569,23L2573,23L2573,24L2599,24L2599,25L2600,25L2600,25L2601,25L2601,26L2604,26L2604,26L2605,26L2605,26L2633,26L2633,26L2650,26L2650,26L2661,26L2661,27L2663,27L2663,28L2692,28L2692,28L2700,28L2700,28L2713,28L2713,28L2717,28L2717,28L2725,28L2725,28L2727,28L2727,29L2740,29L2740,29L2752,29L2752,29L2755,29L2755,30L2758,30L2758,30L2769,30L2769,30L2775,30L2775,30L2777,30L2777,30L2777,30" tabindex="0">
						<title>8r7nmdgj</title>
					</path>
				</g>
				<g style="--index: 17;">
					<path d="M0,0L1191,0L1191,7L1354,7L1354,8L1420,8L1420,9L1452,9L1452,10L1516,10L1516,10L1544,10L1544,11L1572,11L1572,11L1634,11L1634,11L1644,11L1644,12L1653,12L1653,13L1666,13L1666,14L1669,14L1669,15L1679,15L1679,16L1681,16L1681,17L1696,17L1696,17L1705,17L1705,17L1753,17L1753,18L1754,18L1754,19L1760,19L1760,20L1765,20L1765,20L1827,20L1827,20L1834,20L1834,21L1848,21L1848,22L1860,22L1860,23L1887,23L1887,24L1901,24L1901,24L1924,24L1924,24L1969,24L1969,25L1976,25L1976,25L1985,25L1985,26L2001,26L2001,27L2034,27L2034,28L2049,28L2049,28L2062,28L2062,27L2111,27L2111,27L2152,27L2152,27L2154,27L2154,28L2187,28L2187,29L2209,29L2209,30L2217,30L2217,30L2296,30L2296,30L2300,30L2300,31L2363,31L2363,31L2394,31L2394,31L2433,31L2433,32L2447,32L2447,32L2508,32L2508,32L2509,32L2509,32L2544,32L2544,32L2546,32L2546,31L2555,31L2555,32L2564,32L2564,32L2569,32L2569,33L2573,33L2573,34L2599,34L2599,35L2600,35L2600,35L2601,35L2601,36L2604,36L2604,36L2605,36L2605,36L2633,36L2633,36L2650,36L2650,36L2661,36L2661,37L2663,37L2663,38L2692,38L2692,38L2700,38L2700,38L2713,38L2713,38L2717,38L2717,38L2725,38L2725,38L2727,38L2727,39L2740,39L2740,39L2752,39L2752,39L2755,39L2755,40L2758,40L2758,40L2769,40L2769,41L2775,41L2775,41L2777,41L2777,41L2777,41" tabindex="0">
						<title>j2w76dnj</title>
					</path>
				</g>
				<g style="--index: 18;">
					<path d="M0,0L1354,0L1354,1L1420,1L1420,1L1452,1L1452,1L1516,1L1516,1L1544,1L1544,1L1572,1L1572,1L1634,1L1634,1L1644,1L1644,1L1653,1L1653,1L1666,1L1666,1L1669,1L1669,1L1679,1L1679,1L1681,1L1681,1L1696,1L1696,1L1705,1L1705,1L1753,1L1753,1L1754,1L1754,1L1760,1L1760,1L1765,1L1765,1L1827,1L1827,1L1834,1L1834,1L1848,1L1848,1L1860,1L1860,1L1887,1L1887,1L1901,1L1901,1L1924,1L1924,1L1969,1L1969,1L1976,1L1976,1L1985,1L1985,1L2001,1L2001,1L2034,1L2034,1L2049,1L2049,1L2111,1L2111,1L2152,1L2152,1L2154,1L2154,1L2187,1L2187,2L2209,2L2209,3L2213,3L2213,2L2217,2L2217,2L2296,2L2296,2L2300,2L2300,3L2363,3L2363,3L2394,3L2394,3L2433,3L2433,3L2447,3L2447,3L2508,3L2508,3L2509,3L2509,3L2544,3L2544,3L2555,3L2555,3L2564,3L2564,3L2569,3L2569,3L2573,3L2573,3L2599,3L2599,3L2600,3L2600,3L2601,3L2601,3L2604,3L2604,3L2605,3L2605,3L2633,3L2633,3L2650,3L2650,3L2661,3L2661,3L2663,3L2663,3L2692,3L2692,3L2700,3L2700,3L2713,3L2713,3L2717,3L2717,3L2725,3L2725,3L2727,3L2727,3L2740,3L2740,3L2752,3L2752,3L2755,3L2755,3L2758,3L2758,3L2769,3L2769,3L2775,3L2775,3L2777,3L2777,3L2777,3" tabindex="0">
						<title>8vo9gyyx</title>
					</path>
				</g>
				<g style="--index: 19;">
					<path d="M0,0L1420,0L1420,3L1452,3L1452,4L1516,4L1516,4L1544,4L1544,5L1572,5L1572,5L1634,5L1634,5L1644,5L1644,6L1653,6L1653,7L1666,7L1666,7L1669,7L1669,7L1679,7L1679,7L1681,7L1681,8L1696,8L1696,8L1705,8L1705,8L1753,8L1753,9L1754,9L1754,9L1760,9L1760,10L1765,10L1765,10L1827,10L1827,10L1834,10L1834,10L1848,10L1848,10L1860,10L1860,10L1887,10L1887,11L1901,11L1901,11L1924,11L1924,11L1969,11L1969,11L1976,11L1976,11L1985,11L1985,12L2001,12L2001,13L2034,13L2034,14L2049,14L2049,14L2062,14L2062,13L2111,13L2111,13L2152,13L2152,13L2154,13L2154,13L2187,13L2187,14L2209,14L2209,15L2213,15L2213,14L2217,14L2217,14L2296,14L2296,14L2300,14L2300,15L2363,15L2363,15L2394,15L2394,15L2433,15L2433,15L2447,15L2447,15L2508,15L2508,15L2509,15L2509,15L2544,15L2544,15L2555,15L2555,15L2564,15L2564,15L2569,15L2569,15L2573,15L2573,15L2599,15L2599,16L2600,16L2600,16L2601,16L2601,17L2604,17L2604,17L2605,17L2605,17L2633,17L2633,17L2650,17L2650,17L2661,17L2661,18L2663,18L2663,19L2692,19L2692,19L2700,19L2700,19L2713,19L2713,19L2717,19L2717,19L2725,19L2725,19L2727,19L2727,20L2740,20L2740,20L2752,20L2752,20L2755,20L2755,21L2758,21L2758,21L2769,21L2769,21L2775,21L2775,21L2777,21L2777,21L2777,21" tabindex="0">
						<title>x3mn3ok8</title>
					</path>
				</g>
				<g style="--index: 20;">
					<path d="M0,0L1452,0L1452,2L1516,2L1516,2L1544,2L1544,3L1572,3L1572,3L1634,3L1634,3L1644,3L1644,4L1653,4L1653,4L1666,4L1666,4L1669,4L1669,4L1679,4L1679,4L1681,4L1681,4L1696,4L1696,4L1705,4L1705,4L1753,4L1753,5L1754,5L1754,5L1760,5L1760,5L1765,5L1765,5L1827,5L1827,5L1834,5L1834,5L1848,5L1848,5L1860,5L1860,5L1887,5L1887,6L1901,6L1901,6L1924,6L1924,6L1969,6L1969,6L1976,6L1976,6L1985,6L1985,6L2001,6L2001,6L2034,6L2034,7L2049,7L2049,7L2062,7L2062,6L2111,6L2111,6L2152,6L2152,6L2154,6L2154,6L2187,6L2187,7L2209,7L2209,8L2213,8L2213,7L2217,7L2217,7L2296,7L2296,7L2300,7L2300,8L2363,8L2363,8L2394,8L2394,8L2433,8L2433,8L2447,8L2447,8L2508,8L2508,8L2509,8L2509,8L2544,8L2544,8L2555,8L2555,8L2564,8L2564,8L2569,8L2569,8L2573,8L2573,8L2599,8L2599,8L2600,8L2600,8L2601,8L2601,8L2604,8L2604,8L2605,8L2605,8L2633,8L2633,8L2650,8L2650,8L2661,8L2661,8L2663,8L2663,8L2692,8L2692,8L2700,8L2700,8L2713,8L2713,8L2717,8L2717,8L2725,8L2725,8L2727,8L2727,8L2740,8L2740,8L2752,8L2752,8L2755,8L2755,8L2758,8L2758,8L2769,8L2769,8L2775,8L2775,8L2777,8L2777,8L2777,8" tabindex="0">
						<title>j0vrvz4x</title>
					</path>
				</g>
				<g style="--index: 21;">
					<path d="M0,0L1516,0L1516,12L1544,12L1544,13L1572,13L1572,14L1634,14L1634,14L1644,14L1644,15L1653,15L1653,16L1666,16L1666,17L1669,17L1669,18L1679,18L1679,19L1681,19L1681,20L1696,20L1696,20L1705,20L1705,20L1753,20L1753,21L1754,21L1754,22L1760,22L1760,23L1765,23L1765,23L1827,23L1827,23L1834,23L1834,24L1848,24L1848,25L1860,25L1860,26L1887,26L1887,27L1901,27L1901,28L1924,28L1924,28L1969,28L1969,29L1976,29L1976,29L1985,29L1985,30L2001,30L2001,31L2034,31L2034,32L2049,32L2049,32L2111,32L2111,32L2152,32L2152,32L2154,32L2154,33L2187,33L2187,34L2209,34L2209,35L2217,35L2217,35L2296,35L2296,36L2300,36L2300,37L2363,37L2363,37L2394,37L2394,37L2433,37L2433,38L2447,38L2447,38L2508,38L2508,38L2509,38L2509,38L2544,38L2544,38L2546,38L2546,37L2555,37L2555,38L2564,38L2564,38L2569,38L2569,39L2573,39L2573,40L2599,40L2599,41L2600,41L2600,41L2601,41L2601,42L2604,42L2604,42L2605,42L2605,42L2633,42L2633,42L2650,42L2650,42L2661,42L2661,43L2663,43L2663,44L2692,44L2692,44L2700,44L2700,44L2713,44L2713,45L2717,45L2717,45L2725,45L2725,45L2726,45L2726,44L2727,44L2727,45L2740,45L2740,45L2752,45L2752,45L2755,45L2755,46L2758,46L2758,46L2769,46L2769,47L2775,47L2775,47L2777,47L2777,47L2777,47" tabindex="0">
						<title>x334zgex</title>
					</path>
				</g>
				<g style="--index: 22;">
					<path d="M0,0L1544,0L1544,2L1572,2L1572,2L1634,2L1634,2L1644,2L1644,3L1653,3L1653,3L1666,3L1666,3L1669,3L1669,3L1679,3L1679,3L1681,3L1681,3L1696,3L1696,3L1705,3L1705,3L1753,3L1753,3L1754,3L1754,3L1760,3L1760,3L1765,3L1765,3L1827,3L1827,3L1834,3L1834,3L1848,3L1848,3L1860,3L1860,3L1887,3L1887,4L1901,4L1901,4L1924,4L1924,4L1969,4L1969,4L1976,4L1976,4L1985,4L1985,4L2001,4L2001,4L2034,4L2034,5L2049,5L2049,5L2111,5L2111,5L2152,5L2152,5L2154,5L2154,5L2187,5L2187,6L2209,6L2209,7L2213,7L2213,6L2217,6L2217,6L2296,6L2296,6L2300,6L2300,7L2363,7L2363,7L2394,7L2394,7L2433,7L2433,7L2447,7L2447,7L2508,7L2508,7L2509,7L2509,7L2544,7L2544,7L2555,7L2555,7L2564,7L2564,7L2569,7L2569,7L2573,7L2573,7L2599,7L2599,7L2600,7L2600,7L2601,7L2601,7L2604,7L2604,7L2605,7L2605,7L2633,7L2633,7L2650,7L2650,7L2661,7L2661,7L2663,7L2663,7L2692,7L2692,7L2700,7L2700,7L2713,7L2713,7L2717,7L2717,7L2725,7L2725,7L2727,7L2727,7L2740,7L2740,7L2752,7L2752,7L2755,7L2755,7L2758,7L2758,7L2769,7L2769,7L2775,7L2775,7L2777,7L2777,7L2777,7" tabindex="0">
						<title>j95603w8</title>
					</path>
				</g>
				<g style="--index: 23;">
					<path d="M0,0L1572,0L1572,13L1634,13L1634,13L1644,13L1644,14L1653,14L1653,15L1666,15L1666,16L1669,16L1669,17L1679,17L1679,18L1681,18L1681,19L1696,19L1696,19L1705,19L1705,19L1753,19L1753,20L1754,20L1754,21L1760,21L1760,22L1765,22L1765,22L1827,22L1827,22L1834,22L1834,23L1848,23L1848,24L1860,24L1860,25L1887,25L1887,26L1901,26L1901,27L1924,27L1924,27L1969,27L1969,28L1976,28L1976,28L1985,28L1985,29L2001,29L2001,30L2034,30L2034,31L2049,31L2049,31L2111,31L2111,31L2152,31L2152,31L2154,31L2154,32L2187,32L2187,33L2209,33L2209,34L2217,34L2217,34L2296,34L2296,35L2300,35L2300,36L2363,36L2363,36L2394,36L2394,36L2433,36L2433,37L2447,37L2447,37L2508,37L2508,37L2509,37L2509,37L2544,37L2544,37L2546,37L2546,36L2555,36L2555,37L2564,37L2564,37L2569,37L2569,38L2573,38L2573,39L2599,39L2599,40L2600,40L2600,40L2601,40L2601,41L2604,41L2604,41L2605,41L2605,41L2633,41L2633,41L2650,41L2650,41L2661,41L2661,42L2663,42L2663,43L2692,43L2692,43L2700,43L2700,43L2713,43L2713,44L2717,44L2717,44L2725,44L2725,44L2726,44L2726,43L2727,43L2727,44L2740,44L2740,44L2752,44L2752,44L2755,44L2755,45L2758,45L2758,45L2769,45L2769,46L2775,46L2775,46L2777,46L2777,46L2777,46" tabindex="0">
						<title>8qo6r5wj</title>
					</path>
				</g>
				<g style="--index: 24;">
					<path d="M0,0L1634,0L1634,16L1644,16L1644,17L1653,17L1653,18L1666,18L1666,19L1669,19L1669,20L1679,20L1679,21L1681,21L1681,22L1696,22L1696,22L1705,22L1705,22L1753,22L1753,23L1754,23L1754,24L1760,24L1760,25L1765,25L1765,25L1827,25L1827,25L1834,25L1834,26L1848,26L1848,27L1860,27L1860,28L1887,28L1887,29L1901,29L1901,30L1924,30L1924,30L1969,30L1969,31L1976,31L1976,31L1985,31L1985,33L2001,33L2001,34L2034,34L2034,35L2049,35L2049,35L2111,35L2111,36L2152,36L2152,36L2154,36L2154,37L2187,37L2187,38L2209,38L2209,39L2217,39L2217,39L2296,39L2296,40L2300,40L2300,41L2335,41L2335,40L2363,40L2363,40L2394,40L2394,40L2433,40L2433,41L2447,41L2447,41L2508,41L2508,41L2509,41L2509,41L2544,41L2544,41L2555,41L2555,42L2564,42L2564,42L2569,42L2569,43L2573,43L2573,44L2599,44L2599,45L2600,45L2600,46L2601,46L2601,47L2604,47L2604,47L2605,47L2605,47L2633,47L2633,47L2650,47L2650,47L2661,47L2661,48L2663,48L2663,49L2692,49L2692,49L2700,49L2700,49L2713,49L2713,50L2717,50L2717,50L2725,50L2725,50L2726,50L2726,49L2727,49L2727,50L2740,50L2740,50L2752,50L2752,50L2755,50L2755,51L2758,51L2758,51L2769,51L2769,52L2775,52L2775,52L2777,52L2777,52L2777,52" tabindex="0">
						<title>8gmvl418</title>
					</path>
				</g>
				<g style="--index: 25;">
					<path d="M0,0L1644,0L1644,2L1653,2L1653,2L1666,2L1666,2L1669,2L1669,2L1679,2L1679,2L1681,2L1681,2L1696,2L1696,2L1705,2L1705,2L1753,2L1753,2L1754,2L1754,2L1760,2L1760,2L1765,2L1765,2L1827,2L1827,2L1834,2L1834,2L1848,2L1848,2L1860,2L1860,2L1887,2L1887,2L1901,2L1901,2L1924,2L1924,2L1969,2L1969,2L1976,2L1976,2L1985,2L1985,2L2001,2L2001,2L2034,2L2034,3L2049,3L2049,3L2111,3L2111,3L2152,3L2152,3L2154,3L2154,3L2187,3L2187,4L2209,4L2209,5L2213,5L2213,4L2217,4L2217,4L2296,4L2296,4L2300,4L2300,5L2363,5L2363,5L2394,5L2394,5L2433,5L2433,5L2447,5L2447,5L2508,5L2508,5L2509,5L2509,5L2544,5L2544,5L2555,5L2555,5L2564,5L2564,5L2569,5L2569,5L2573,5L2573,5L2599,5L2599,5L2600,5L2600,5L2601,5L2601,5L2604,5L2604,5L2605,5L2605,5L2633,5L2633,5L2650,5L2650,5L2661,5L2661,5L2663,5L2663,5L2692,5L2692,5L2700,5L2700,5L2713,5L2713,5L2717,5L2717,5L2725,5L2725,5L2727,5L2727,5L2740,5L2740,5L2752,5L2752,5L2755,5L2755,5L2758,5L2758,5L2769,5L2769,5L2775,5L2775,5L2777,5L2777,5L2777,5" tabindex="0">
						<title>8l3l2178</title>
					</path>
				</g>
				<g style="--index: 26;">
					<path d="M0,0L1653,0L1653,5L1666,5L1666,5L1669,5L1669,5L1679,5L1679,5L1681,5L1681,6L1696,6L1696,6L1705,6L1705,6L1753,6L1753,7L1754,7L1754,7L1760,7L1760,7L1765,7L1765,7L1827,7L1827,7L1834,7L1834,7L1848,7L1848,7L1860,7L1860,7L1887,7L1887,8L1901,8L1901,8L1924,8L1924,8L1969,8L1969,8L1976,8L1976,8L1985,8L1985,9L2001,9L2001,10L2034,10L2034,11L2049,11L2049,11L2062,11L2062,10L2111,10L2111,10L2152,10L2152,10L2154,10L2154,10L2187,10L2187,11L2209,11L2209,12L2213,12L2213,11L2217,11L2217,11L2296,11L2296,11L2300,11L2300,12L2363,12L2363,12L2394,12L2394,12L2433,12L2433,12L2447,12L2447,12L2508,12L2508,12L2509,12L2509,12L2544,12L2544,12L2555,12L2555,12L2564,12L2564,12L2569,12L2569,12L2573,12L2573,12L2599,12L2599,13L2600,13L2600,13L2601,13L2601,13L2604,13L2604,13L2605,13L2605,13L2633,13L2633,13L2650,13L2650,13L2661,13L2661,14L2663,14L2663,14L2692,14L2692,14L2700,14L2700,14L2713,14L2713,14L2717,14L2717,14L2725,14L2725,14L2727,14L2727,15L2740,15L2740,15L2752,15L2752,15L2755,15L2755,15L2758,15L2758,15L2769,15L2769,15L2775,15L2775,15L2777,15L2777,15L2777,15" tabindex="0">
						<title>j0grn39x</title>
					</path>
				</g>
				<g style="--index: 27;">
					<path d="M0,0L1666,0L1666,11L1669,11L1669,12L1679,12L1679,13L1681,13L1681,14L1696,14L1696,14L1705,14L1705,14L1753,14L1753,15L1754,15L1754,16L1760,16L1760,17L1765,17L1765,17L1827,17L1827,17L1834,17L1834,18L1848,18L1848,19L1849,19L1849,18L1860,18L1860,19L1887,19L1887,20L1901,20L1901,20L1924,20L1924,20L1969,20L1969,21L1976,21L1976,21L1985,21L1985,22L2001,22L2001,23L2034,23L2034,24L2049,24L2049,24L2062,24L2062,23L2111,23L2111,23L2152,23L2152,23L2154,23L2154,24L2187,24L2187,25L2209,25L2209,26L2213,26L2213,25L2217,25L2217,25L2296,25L2296,25L2300,25L2300,26L2363,26L2363,26L2394,26L2394,26L2433,26L2433,26L2447,26L2447,26L2508,26L2508,26L2509,26L2509,26L2544,26L2544,26L2555,26L2555,26L2564,26L2564,26L2569,26L2569,27L2573,27L2573,28L2599,28L2599,29L2600,29L2600,29L2601,29L2601,30L2604,30L2604,30L2605,30L2605,30L2633,30L2633,30L2650,30L2650,30L2661,30L2661,31L2663,31L2663,32L2692,32L2692,32L2700,32L2700,32L2713,32L2713,32L2717,32L2717,32L2725,32L2725,32L2727,32L2727,33L2740,33L2740,33L2752,33L2752,33L2755,33L2755,34L2758,34L2758,34L2769,34L2769,35L2775,35L2775,35L2777,35L2777,35L2777,35" tabindex="0">
						<title>j0gyr64x</title>
					</path>
				</g>
				<g style="--index: 28;">
					<path d="M0,0L1669,0L1669,8L1679,8L1679,8L1681,8L1681,9L1696,9L1696,9L1705,9L1705,9L1753,9L1753,10L1754,10L1754,11L1755,11L1755,10L1760,10L1760,11L1765,11L1765,11L1827,11L1827,11L1834,11L1834,12L1848,12L1848,12L1860,12L1860,13L1887,13L1887,14L1901,14L1901,14L1924,14L1924,14L1969,14L1969,15L1976,15L1976,15L1985,15L1985,16L2001,16L2001,17L2034,17L2034,18L2049,18L2049,18L2062,18L2062,17L2111,17L2111,17L2152,17L2152,17L2154,17L2154,18L2187,18L2187,19L2209,19L2209,20L2213,20L2213,19L2217,19L2217,19L2296,19L2296,19L2300,19L2300,20L2363,20L2363,20L2394,20L2394,20L2433,20L2433,20L2447,20L2447,20L2508,20L2508,20L2509,20L2509,20L2544,20L2544,20L2555,20L2555,20L2564,20L2564,20L2569,20L2569,20L2573,20L2573,20L2599,20L2599,21L2600,21L2600,21L2601,21L2601,22L2604,22L2604,22L2605,22L2605,22L2633,22L2633,22L2650,22L2650,22L2661,22L2661,23L2663,23L2663,24L2692,24L2692,24L2700,24L2700,24L2713,24L2713,24L2717,24L2717,24L2725,24L2725,24L2727,24L2727,25L2740,25L2740,25L2752,25L2752,25L2755,25L2755,26L2758,26L2758,26L2769,26L2769,26L2775,26L2775,26L2777,26L2777,26L2777,26" tabindex="0">
						<title>x3w413qj</title>
					</path>
				</g>
				<g style="--index: 29;">
					<path d="M0,0L1679,0L1679,12L1681,12L1681,13L1696,13L1696,13L1705,13L1705,13L1753,13L1753,14L1754,14L1754,15L1760,15L1760,16L1765,16L1765,16L1827,16L1827,16L1834,16L1834,17L1848,17L1848,17L1849,17L1849,20L1860,20L1860,21L1887,21L1887,22L1901,22L1901,22L1924,22L1924,22L1969,22L1969,23L1976,23L1976,23L1985,23L1985,24L2001,24L2001,25L2034,25L2034,26L2049,26L2049,26L2062,26L2062,25L2111,25L2111,25L2152,25L2152,25L2154,25L2154,26L2187,26L2187,27L2209,27L2209,28L2213,28L2213,27L2217,27L2217,27L2296,27L2296,27L2300,27L2300,28L2363,28L2363,28L2394,28L2394,28L2433,28L2433,29L2447,29L2447,29L2508,29L2508,29L2509,29L2509,29L2544,29L2544,29L2555,29L2555,30L2564,30L2564,30L2569,30L2569,31L2573,31L2573,32L2599,32L2599,33L2600,33L2600,33L2601,33L2601,34L2604,34L2604,34L2605,34L2605,34L2633,34L2633,34L2650,34L2650,34L2661,34L2661,35L2663,35L2663,36L2692,36L2692,36L2700,36L2700,36L2713,36L2713,36L2717,36L2717,36L2725,36L2725,36L2727,36L2727,37L2740,37L2740,37L2752,37L2752,37L2755,37L2755,38L2758,38L2758,38L2769,38L2769,39L2775,39L2775,39L2777,39L2777,39L2777,39" tabindex="0">
						<title>xk1oze6j</title>
					</path>
				</g>
				<g style="--index: 30;">
					<path d="M0,0L1681,0L1681,5L1696,5L1696,5L1705,5L1705,5L1753,5L1753,6L1754,6L1754,6L1760,6L1760,6L1765,6L1765,6L1827,6L1827,6L1834,6L1834,6L1848,6L1848,6L1860,6L1860,6L1887,6L1887,7L1901,7L1901,7L1924,7L1924,7L1969,7L1969,7L1976,7L1976,7L1985,7L1985,7L2001,7L2001,7L2034,7L2034,8L2049,8L2049,8L2062,8L2062,7L2111,7L2111,7L2152,7L2152,7L2154,7L2154,7L2187,7L2187,8L2209,8L2209,9L2213,9L2213,8L2217,8L2217,8L2296,8L2296,8L2300,8L2300,9L2363,9L2363,9L2394,9L2394,9L2433,9L2433,9L2447,9L2447,9L2508,9L2508,9L2509,9L2509,9L2544,9L2544,9L2555,9L2555,9L2564,9L2564,9L2569,9L2569,9L2573,9L2573,9L2599,9L2599,9L2600,9L2600,9L2601,9L2601,9L2604,9L2604,9L2605,9L2605,9L2633,9L2633,9L2650,9L2650,9L2661,9L2661,10L2663,10L2663,10L2692,10L2692,10L2700,10L2700,10L2713,10L2713,10L2717,10L2717,10L2725,10L2725,10L2727,10L2727,11L2740,11L2740,11L2752,11L2752,11L2755,11L2755,11L2758,11L2758,11L2769,11L2769,11L2775,11L2775,11L2777,11L2777,11L2777,11" tabindex="0">
						<title>jonp4ge8</title>
					</path>
				</g>
				<g style="--index: 31;">
					<path d="M0,0L1696,0L1696,31L1705,31L1705,32L1753,32L1753,33L1754,33L1754,34L1760,34L1760,35L1765,35L1765,36L1778,36L1778,37L1827,37L1827,38L1834,38L1834,39L1845,39L1845,39L1848,39L1848,40L1860,40L1860,41L1887,41L1887,43L1901,43L1901,44L1924,44L1924,45L1969,45L1969,46L1976,46L1976,47L1985,47L1985,49L2001,49L2001,50L2034,50L2034,51L2049,51L2049,52L2111,52L2111,53L2152,53L2152,54L2154,54L2154,55L2187,55L2187,56L2209,56L2209,57L2217,57L2217,58L2296,58L2296,59L2300,59L2300,60L2363,60L2363,61L2394,61L2394,62L2433,62L2433,63L2447,63L2447,64L2508,64L2508,65L2509,65L2509,66L2544,66L2544,67L2555,67L2555,68L2564,68L2564,69L2569,69L2569,70L2573,70L2573,71L2599,71L2599,72L2600,72L2600,73L2601,73L2601,74L2604,74L2604,75L2605,75L2605,76L2633,76L2633,77L2650,77L2650,78L2661,78L2661,79L2663,79L2663,80L2692,80L2692,81L2700,81L2700,82L2713,82L2713,83L2717,83L2717,84L2725,84L2725,85L2727,85L2727,86L2740,86L2740,87L2752,87L2752,88L2755,88L2755,89L2758,89L2758,90L2769,90L2769,91L2770,91L2770,91L2771,91L2771,90L2775,90L2775,91L2776,91L2776,92L2777,92L2777,93L2777,93" tabindex="0">
						<title>jn2m23wj</title>
					</path>
				</g>
				<g style="--index: 32;">
					<path d="M0,0L1705,0L1705,23L1753,23L1753,24L1754,24L1754,25L1760,25L1760,26L1765,26L1765,26L1827,26L1827,26L1834,26L1834,27L1848,27L1848,28L1860,28L1860,29L1887,29L1887,31L1901,31L1901,32L1924,32L1924,33L1969,33L1969,34L1976,34L1976,34L1985,34L1985,36L2001,36L2001,37L2034,37L2034,38L2049,38L2049,39L2111,39L2111,40L2152,40L2152,41L2154,41L2154,42L2187,42L2187,43L2209,43L2209,44L2210,44L2210,43L2217,43L2217,43L2296,43L2296,44L2300,44L2300,45L2335,45L2335,44L2363,44L2363,44L2394,44L2394,44L2433,44L2433,45L2447,45L2447,45L2508,45L2508,46L2509,46L2509,46L2544,46L2544,47L2555,47L2555,48L2564,48L2564,49L2569,49L2569,50L2573,50L2573,51L2599,51L2599,52L2600,52L2600,53L2601,53L2601,54L2604,54L2604,54L2605,54L2605,54L2633,54L2633,54L2650,54L2650,55L2661,55L2661,56L2663,56L2663,57L2692,57L2692,57L2700,57L2700,57L2713,57L2713,58L2717,58L2717,58L2725,58L2725,58L2727,58L2727,59L2740,59L2740,59L2752,59L2752,59L2755,59L2755,60L2758,60L2758,60L2769,60L2769,61L2775,61L2775,62L2777,62L2777,62L2777,62" tabindex="0">
						<title>x766z2rj</title>
					</path>
				</g>
				<g style="--index: 33;">
					<path d="M0,0L1753,0L1753,4L1754,4L1754,4L1760,4L1760,4L1765,4L1765,4L1827,4L1827,4L1834,4L1834,4L1848,4L1848,4L1860,4L1860,4L1887,4L1887,5L1901,5L1901,5L1924,5L1924,5L1969,5L1969,5L1976,5L1976,5L1985,5L1985,5L2001,5L2001,5L2034,5L2034,6L2049,6L2049,6L2062,6L2062,29L2111,29L2111,29L2152,29L2152,29L2154,29L2154,30L2187,30L2187,31L2209,31L2209,32L2217,32L2217,32L2296,32L2296,33L2300,33L2300,34L2363,34L2363,34L2394,34L2394,34L2433,34L2433,35L2447,35L2447,35L2508,35L2508,35L2509,35L2509,35L2544,35L2544,35L2546,35L2546,34L2555,34L2555,35L2564,35L2564,35L2569,35L2569,36L2573,36L2573,37L2599,37L2599,38L2600,38L2600,38L2601,38L2601,39L2604,39L2604,39L2605,39L2605,39L2633,39L2633,39L2650,39L2650,39L2661,39L2661,40L2663,40L2663,41L2692,41L2692,41L2700,41L2700,41L2713,41L2713,41L2717,41L2717,41L2725,41L2725,41L2727,41L2727,42L2740,42L2740,42L2752,42L2752,42L2755,42L2755,43L2758,43L2758,43L2769,43L2769,44L2775,44L2775,44L2777,44L2777,44L2777,44" tabindex="0">
						<title>8lokkp48</title>
					</path>
				</g>
				<g style="--index: 34;">
					<path d="M0,0L1754,0L1754,10L1755,10L1755,13L1760,13L1760,14L1765,14L1765,14L1827,14L1827,14L1834,14L1834,15L1848,15L1848,15L1860,15L1860,16L1887,16L1887,17L1901,17L1901,17L1924,17L1924,17L1969,17L1969,18L1976,18L1976,18L1985,18L1985,19L2001,19L2001,20L2034,20L2034,21L2049,21L2049,21L2062,21L2062,20L2111,20L2111,20L2152,20L2152,20L2154,20L2154,21L2187,21L2187,22L2209,22L2209,23L2213,23L2213,22L2217,22L2217,22L2296,22L2296,22L2300,22L2300,23L2363,23L2363,23L2394,23L2394,23L2433,23L2433,23L2447,23L2447,23L2508,23L2508,23L2509,23L2509,23L2544,23L2544,23L2555,23L2555,23L2564,23L2564,23L2569,23L2569,24L2573,24L2573,25L2599,25L2599,26L2600,26L2600,26L2601,26L2601,27L2604,27L2604,27L2605,27L2605,27L2633,27L2633,27L2650,27L2650,27L2661,27L2661,28L2663,28L2663,29L2692,29L2692,29L2700,29L2700,29L2713,29L2713,29L2717,29L2717,29L2725,29L2725,29L2727,29L2727,30L2740,30L2740,30L2752,30L2752,30L2755,30L2755,31L2758,31L2758,31L2769,31L2769,31L2775,31L2775,31L2777,31L2777,31L2777,31" tabindex="0">
						<title>xz0noqn8</title>
					</path>
				</g>
				<g style="--index: 35;">
					<path d="M0,0L1760,0L1760,8L1765,8L1765,8L1827,8L1827,8L1834,8L1834,8L1848,8L1848,8L1860,8L1860,8L1887,8L1887,9L1901,9L1901,9L1924,9L1924,9L1969,9L1969,9L1976,9L1976,9L1985,9L1985,10L2001,10L2001,11L2034,11L2034,12L2049,12L2049,12L2062,12L2062,11L2111,11L2111,11L2152,11L2152,11L2154,11L2154,11L2187,11L2187,12L2209,12L2209,13L2213,13L2213,12L2217,12L2217,12L2296,12L2296,12L2300,12L2300,13L2363,13L2363,13L2394,13L2394,13L2433,13L2433,13L2447,13L2447,13L2508,13L2508,13L2509,13L2509,13L2544,13L2544,13L2555,13L2555,13L2564,13L2564,13L2569,13L2569,13L2573,13L2573,13L2599,13L2599,14L2600,14L2600,14L2601,14L2601,15L2604,15L2604,15L2605,15L2605,15L2633,15L2633,15L2650,15L2650,15L2661,15L2661,16L2663,16L2663,17L2692,17L2692,17L2700,17L2700,17L2713,17L2713,17L2717,17L2717,17L2725,17L2725,17L2727,17L2727,18L2740,18L2740,18L2752,18L2752,18L2755,18L2755,18L2758,18L2758,18L2769,18L2769,18L2775,18L2775,18L2777,18L2777,18L2777,18" tabindex="0">
						<title>jnp5wq28</title>
					</path>
				</g>
				<g style="--index: 36;">
					<path d="M0,0L1765,0L1765,29L1827,29L1827,30L1834,30L1834,31L1848,31L1848,32L1860,32L1860,33L1887,33L1887,35L1901,35L1901,36L1924,36L1924,37L1969,37L1969,38L1976,38L1976,38L1985,38L1985,40L2001,40L2001,41L2034,41L2034,42L2049,42L2049,43L2111,43L2111,44L2152,44L2152,45L2154,45L2154,46L2187,46L2187,47L2209,47L2209,48L2217,48L2217,48L2296,48L2296,49L2300,49L2300,50L2363,50L2363,51L2394,51L2394,51L2427,51L2427,50L2433,50L2433,51L2447,51L2447,51L2508,51L2508,52L2509,52L2509,52L2544,52L2544,53L2555,53L2555,54L2564,54L2564,55L2569,55L2569,56L2573,56L2573,57L2599,57L2599,58L2600,58L2600,59L2601,59L2601,60L2604,60L2604,60L2605,60L2605,61L2633,61L2633,61L2650,61L2650,62L2661,62L2661,63L2663,63L2663,64L2692,64L2692,64L2700,64L2700,64L2713,64L2713,65L2717,65L2717,65L2725,65L2725,65L2727,65L2727,66L2740,66L2740,67L2752,67L2752,67L2755,67L2755,68L2758,68L2758,68L2763,68L2763,67L2769,67L2769,68L2775,68L2775,69L2777,69L2777,69L2777,69" tabindex="0">
						<title>j9pz53wx</title>
					</path>
				</g>
				<g style="--index: 37;">
					<path d="M0,0L1827,0L1827,29L1834,29L1834,30L1848,30L1848,31L1860,31L1860,32L1887,32L1887,34L1901,34L1901,35L1924,35L1924,36L1969,36L1969,37L1976,37L1976,37L1985,37L1985,39L2001,39L2001,40L2034,40L2034,41L2049,41L2049,42L2111,42L2111,43L2152,43L2152,44L2154,44L2154,45L2187,45L2187,46L2209,46L2209,47L2217,47L2217,47L2296,47L2296,48L2300,48L2300,49L2363,49L2363,50L2394,50L2394,50L2427,50L2427,49L2433,49L2433,50L2447,50L2447,50L2508,50L2508,51L2509,51L2509,51L2544,51L2544,52L2555,52L2555,53L2564,53L2564,54L2569,54L2569,55L2573,55L2573,56L2599,56L2599,57L2600,57L2600,58L2601,58L2601,59L2604,59L2604,59L2605,59L2605,60L2633,60L2633,60L2650,60L2650,61L2661,61L2661,62L2663,62L2663,63L2692,63L2692,63L2700,63L2700,63L2713,63L2713,64L2717,64L2717,64L2725,64L2725,64L2727,64L2727,65L2740,65L2740,66L2752,66L2752,66L2755,66L2755,67L2758,67L2758,67L2763,67L2763,66L2769,66L2769,67L2775,67L2775,68L2777,68L2777,68L2777,68" tabindex="0">
						<title>8lo1ge28</title>
					</path>
				</g>
				<g style="--index: 38;">
					<path d="M0,0L1834,0L1834,11L1848,11L1848,11L1860,11L1860,12L1887,12L1887,13L1901,13L1901,13L1924,13L1924,13L1969,13L1969,13L1976,13L1976,13L1985,13L1985,14L2001,14L2001,15L2034,15L2034,16L2049,16L2049,16L2062,16L2062,15L2111,15L2111,15L2152,15L2152,15L2154,15L2154,15L2187,15L2187,16L2209,16L2209,17L2213,17L2213,16L2217,16L2217,16L2296,16L2296,16L2300,16L2300,17L2363,17L2363,17L2394,17L2394,17L2433,17L2433,17L2447,17L2447,17L2508,17L2508,17L2509,17L2509,17L2544,17L2544,17L2555,17L2555,17L2564,17L2564,17L2569,17L2569,17L2573,17L2573,17L2599,17L2599,18L2600,18L2600,18L2601,18L2601,19L2604,19L2604,19L2605,19L2605,19L2633,19L2633,19L2650,19L2650,19L2661,19L2661,20L2663,20L2663,21L2692,21L2692,21L2700,21L2700,21L2713,21L2713,21L2717,21L2717,21L2725,21L2725,21L2727,21L2727,22L2740,22L2740,22L2752,22L2752,22L2755,22L2755,23L2758,23L2758,23L2769,23L2769,23L2775,23L2775,23L2777,23L2777,23L2777,23" tabindex="0">
						<title>8ewm6dd8</title>
					</path>
				</g>
				<g style="--index: 39;">
					<path d="M0,0L1848,0L1848,18L1849,18L1849,17L1860,17L1860,18L1887,18L1887,19L1901,19L1901,19L1924,19L1924,19L1969,19L1969,20L1976,20L1976,20L1985,20L1985,21L2001,21L2001,22L2034,22L2034,23L2049,23L2049,23L2062,23L2062,22L2111,22L2111,22L2152,22L2152,22L2154,22L2154,23L2187,23L2187,24L2209,24L2209,25L2213,25L2213,24L2217,24L2217,24L2296,24L2296,24L2300,24L2300,25L2363,25L2363,25L2394,25L2394,25L2433,25L2433,25L2447,25L2447,25L2508,25L2508,25L2509,25L2509,25L2544,25L2544,25L2555,25L2555,25L2564,25L2564,25L2569,25L2569,26L2573,26L2573,27L2599,27L2599,28L2600,28L2600,28L2601,28L2601,29L2604,29L2604,29L2605,29L2605,29L2633,29L2633,29L2650,29L2650,29L2661,29L2661,30L2663,30L2663,31L2692,31L2692,31L2700,31L2700,31L2713,31L2713,31L2717,31L2717,31L2725,31L2725,31L2727,31L2727,32L2740,32L2740,32L2752,32L2752,32L2755,32L2755,33L2758,33L2758,33L2769,33L2769,34L2775,34L2775,34L2777,34L2777,34L2777,34" tabindex="0">
						<title>joovynnj</title>
					</path>
				</g>
				<g style="--index: 40;">
					<path d="M0,0L1860,0L1860,11L1887,11L1887,12L1901,12L1901,12L1924,12L1924,12L1969,12L1969,12L1976,12L1976,12L1985,12L1985,13L2001,13L2001,14L2034,14L2034,15L2049,15L2049,15L2062,15L2062,14L2111,14L2111,14L2152,14L2152,14L2154,14L2154,14L2187,14L2187,15L2209,15L2209,16L2213,16L2213,15L2217,15L2217,15L2296,15L2296,15L2300,15L2300,16L2363,16L2363,16L2394,16L2394,16L2433,16L2433,16L2447,16L2447,16L2508,16L2508,16L2509,16L2509,16L2544,16L2544,16L2555,16L2555,16L2564,16L2564,16L2569,16L2569,16L2573,16L2573,16L2599,16L2599,17L2600,17L2600,17L2601,17L2601,18L2604,18L2604,18L2605,18L2605,18L2633,18L2633,18L2650,18L2650,18L2661,18L2661,19L2663,19L2663,20L2692,20L2692,20L2700,20L2700,20L2713,20L2713,20L2717,20L2717,20L2725,20L2725,20L2727,20L2727,21L2740,21L2740,21L2752,21L2752,21L2755,21L2755,22L2758,22L2758,22L2769,22L2769,22L2775,22L2775,22L2777,22L2777,22L2777,22" tabindex="0">
						<title>8640q63j</title>
					</path>
				</g>
				<g style="--index: 41;">
					<path d="M0,0L1887,0L1887,30L1901,30L1901,31L1924,31L1924,32L1969,32L1969,33L1976,33L1976,33L1985,33L1985,35L2001,35L2001,36L2034,36L2034,37L2049,37L2049,38L2111,38L2111,39L2152,39L2152,40L2154,40L2154,41L2187,41L2187,42L2209,42L2209,43L2210,43L2210,42L2217,42L2217,42L2296,42L2296,43L2300,43L2300,44L2335,44L2335,43L2363,43L2363,43L2394,43L2394,43L2433,43L2433,44L2447,44L2447,44L2508,44L2508,44L2509,44L2509,44L2544,44L2544,44L2555,44L2555,45L2564,45L2564,45L2569,45L2569,46L2573,46L2573,47L2599,47L2599,48L2600,48L2600,49L2601,49L2601,50L2604,50L2604,50L2605,50L2605,50L2633,50L2633,50L2650,50L2650,50L2661,50L2661,51L2663,51L2663,52L2692,52L2692,52L2700,52L2700,52L2713,52L2713,53L2717,53L2717,53L2725,53L2725,53L2726,53L2726,52L2727,52L2727,53L2740,53L2740,53L2752,53L2752,53L2755,53L2755,54L2758,54L2758,54L2769,54L2769,55L2775,55L2775,56L2777,56L2777,56L2777,56" tabindex="0">
						<title>x7w44nr8</title>
					</path>
				</g>
				<g style="--index: 42;">
					<path d="M0,0L1887,0L1887,3L1901,3L1901,3L1924,3L1924,3L1969,3L1969,3L1976,3L1976,3L1985,3L1985,3L2001,3L2001,3L2034,3L2034,4L2049,4L2049,4L2111,4L2111,4L2152,4L2152,4L2154,4L2154,4L2187,4L2187,5L2209,5L2209,6L2213,6L2213,5L2217,5L2217,5L2296,5L2296,5L2300,5L2300,6L2363,6L2363,6L2394,6L2394,6L2433,6L2433,6L2447,6L2447,6L2508,6L2508,6L2509,6L2509,6L2544,6L2544,6L2555,6L2555,6L2564,6L2564,6L2569,6L2569,6L2573,6L2573,6L2599,6L2599,6L2600,6L2600,6L2601,6L2601,6L2604,6L2604,6L2605,6L2605,6L2633,6L2633,6L2650,6L2650,6L2661,6L2661,6L2663,6L2663,6L2692,6L2692,6L2700,6L2700,6L2713,6L2713,6L2717,6L2717,6L2725,6L2725,6L2727,6L2727,6L2740,6L2740,6L2752,6L2752,6L2755,6L2755,6L2758,6L2758,6L2769,6L2769,6L2775,6L2775,6L2777,6L2777,6L2777,6" tabindex="0">
						<title>jone7r08</title>
					</path>
				</g>
				<g style="--index: 43;">
					<path d="M0,0L1901,0L1901,26L1924,26L1924,26L1969,26L1969,27L1976,27L1976,27L1985,27L1985,28L2001,28L2001,29L2034,29L2034,30L2049,30L2049,30L2111,30L2111,30L2152,30L2152,30L2154,30L2154,31L2187,31L2187,32L2209,32L2209,33L2217,33L2217,33L2296,33L2296,34L2300,34L2300,35L2363,35L2363,35L2394,35L2394,35L2433,35L2433,36L2447,36L2447,36L2508,36L2508,36L2509,36L2509,36L2544,36L2544,36L2546,36L2546,35L2555,35L2555,36L2564,36L2564,36L2569,36L2569,37L2573,37L2573,38L2599,38L2599,39L2600,39L2600,39L2601,39L2601,40L2604,40L2604,40L2605,40L2605,40L2633,40L2633,40L2650,40L2650,40L2661,40L2661,41L2663,41L2663,42L2692,42L2692,42L2700,42L2700,42L2713,42L2713,43L2717,43L2717,43L2725,43L2725,43L2726,43L2726,42L2727,42L2727,43L2740,43L2740,43L2752,43L2752,43L2755,43L2755,44L2758,44L2758,44L2769,44L2769,45L2775,45L2775,45L2777,45L2777,45L2777,45" tabindex="0">
						<title>8lolk7r8</title>
					</path>
				</g>
				<g style="--index: 44;">
					<path d="M0,0L1924,0L1924,31L1969,31L1969,32L1976,32L1976,32L1985,32L1985,34L2001,34L2001,35L2034,35L2034,36L2049,36L2049,37L2111,37L2111,38L2152,38L2152,39L2154,39L2154,40L2187,40L2187,41L2209,41L2209,42L2210,42L2210,41L2217,41L2217,41L2296,41L2296,42L2300,42L2300,43L2335,43L2335,42L2363,42L2363,42L2394,42L2394,42L2433,42L2433,43L2447,43L2447,43L2508,43L2508,43L2509,43L2509,43L2544,43L2544,43L2555,43L2555,44L2564,44L2564,44L2569,44L2569,45L2573,45L2573,46L2599,46L2599,47L2600,47L2600,48L2601,48L2601,49L2604,49L2604,49L2605,49L2605,49L2633,49L2633,49L2650,49L2650,49L2661,49L2661,50L2663,50L2663,51L2692,51L2692,51L2700,51L2700,51L2713,51L2713,52L2717,52L2717,52L2725,52L2725,52L2726,52L2726,51L2727,51L2727,52L2740,52L2740,52L2752,52L2752,52L2755,52L2755,53L2758,53L2758,53L2769,53L2769,54L2775,54L2775,55L2777,55L2777,55L2777,55" tabindex="0">
						<title>jnp37d18</title>
					</path>
				</g>
				<g style="--index: 45;">
					<path d="M0,0L1969,0L1969,14L1976,14L1976,14L1985,14L1985,15L2001,15L2001,16L2034,16L2034,17L2049,17L2049,17L2062,17L2062,16L2111,16L2111,16L2152,16L2152,16L2154,16L2154,16L2187,16L2187,17L2209,17L2209,18L2213,18L2213,17L2217,17L2217,17L2296,17L2296,17L2300,17L2300,18L2363,18L2363,18L2394,18L2394,18L2433,18L2433,18L2447,18L2447,18L2508,18L2508,18L2509,18L2509,18L2544,18L2544,18L2555,18L2555,18L2564,18L2564,18L2569,18L2569,18L2573,18L2573,18L2599,18L2599,19L2600,19L2600,19L2601,19L2601,20L2604,20L2604,20L2605,20L2605,20L2633,20L2633,20L2650,20L2650,20L2661,20L2661,21L2663,21L2663,22L2692,22L2692,22L2700,22L2700,22L2713,22L2713,22L2717,22L2717,22L2725,22L2725,22L2727,22L2727,23L2740,23L2740,23L2752,23L2752,23L2755,23L2755,24L2758,24L2758,24L2769,24L2769,24L2775,24L2775,24L2777,24L2777,24L2777,24" tabindex="0">
						<title>8v21onej</title>
					</path>
				</g>
				<g style="--index: 46;">
					<path d="M0,0L1976,0L1976,39L1985,39L1985,41L2001,41L2001,42L2034,42L2034,43L2049,43L2049,44L2111,44L2111,45L2152,45L2152,46L2154,46L2154,47L2187,47L2187,48L2209,48L2209,49L2217,49L2217,49L2296,49L2296,50L2300,50L2300,51L2363,51L2363,52L2394,52L2394,52L2427,52L2427,51L2433,51L2433,52L2447,52L2447,52L2508,52L2508,53L2509,53L2509,53L2544,53L2544,54L2555,54L2555,55L2564,55L2564,56L2569,56L2569,57L2573,57L2573,58L2599,58L2599,59L2600,59L2600,60L2601,60L2601,61L2604,61L2604,61L2605,61L2605,62L2633,62L2633,62L2650,62L2650,63L2661,63L2661,64L2663,64L2663,65L2692,65L2692,65L2700,65L2700,65L2713,65L2713,66L2717,66L2717,66L2725,66L2725,66L2727,66L2727,67L2740,67L2740,68L2752,68L2752,68L2755,68L2755,69L2758,69L2758,69L2763,69L2763,68L2769,68L2769,69L2775,69L2775,70L2777,70L2777,70L2777,70" tabindex="0">
						<title>8v2lgpvj</title>
					</path>
				</g>
				<g style="--index: 47;">
					<path d="M0,0L1985,0L1985,8L2001,8L2001,8L2034,8L2034,9L2049,9L2049,9L2062,9L2062,8L2111,8L2111,8L2152,8L2152,8L2154,8L2154,8L2187,8L2187,9L2209,9L2209,10L2213,10L2213,9L2217,9L2217,9L2296,9L2296,9L2300,9L2300,10L2363,10L2363,10L2394,10L2394,10L2433,10L2433,10L2447,10L2447,10L2508,10L2508,10L2509,10L2509,10L2544,10L2544,10L2555,10L2555,10L2564,10L2564,10L2569,10L2569,10L2573,10L2573,10L2599,10L2599,10L2600,10L2600,11L2601,11L2601,11L2604,11L2604,11L2605,11L2605,11L2633,11L2633,11L2650,11L2650,11L2661,11L2661,12L2663,12L2663,12L2692,12L2692,12L2700,12L2700,12L2713,12L2713,12L2717,12L2717,12L2725,12L2725,12L2727,12L2727,13L2740,13L2740,13L2752,13L2752,13L2755,13L2755,13L2758,13L2758,13L2769,13L2769,13L2775,13L2775,13L2777,13L2777,13L2777,13" tabindex="0">
						<title>8v2lq0vj</title>
					</path>
				</g>
				<g style="--index: 48;">
					<path d="M0,0L1985,0L1985,32L2001,32L2001,33L2034,33L2034,34L2049,34L2049,34L2111,34L2111,35L2152,35L2152,35L2154,35L2154,36L2187,36L2187,37L2209,37L2209,38L2217,38L2217,38L2296,38L2296,39L2300,39L2300,40L2335,40L2335,39L2363,39L2363,39L2394,39L2394,39L2433,39L2433,40L2447,40L2447,40L2508,40L2508,40L2509,40L2509,40L2544,40L2544,40L2555,40L2555,41L2564,41L2564,41L2569,41L2569,42L2573,42L2573,43L2599,43L2599,44L2600,44L2600,45L2601,45L2601,46L2604,46L2604,46L2605,46L2605,46L2633,46L2633,46L2650,46L2650,46L2661,46L2661,47L2663,47L2663,48L2692,48L2692,48L2700,48L2700,48L2713,48L2713,49L2717,49L2717,49L2725,49L2725,49L2726,49L2726,48L2727,48L2727,49L2740,49L2740,49L2752,49L2752,49L2755,49L2755,50L2758,50L2758,50L2769,50L2769,51L2775,51L2775,51L2777,51L2777,51L2777,51" tabindex="0">
						<title>j06yo5wj</title>
					</path>
				</g>
				<g style="--index: 49;">
					<path d="M0,0L2001,0L2001,9L2034,9L2034,10L2049,10L2049,10L2062,10L2062,9L2111,9L2111,9L2152,9L2152,9L2154,9L2154,9L2187,9L2187,10L2209,10L2209,11L2213,11L2213,10L2217,10L2217,10L2296,10L2296,10L2300,10L2300,11L2363,11L2363,11L2394,11L2394,11L2433,11L2433,11L2447,11L2447,11L2508,11L2508,11L2509,11L2509,11L2544,11L2544,11L2555,11L2555,11L2564,11L2564,11L2569,11L2569,11L2573,11L2573,11L2599,11L2599,11L2600,11L2600,12L2601,12L2601,12L2604,12L2604,12L2605,12L2605,12L2633,12L2633,12L2650,12L2650,12L2661,12L2661,13L2663,13L2663,13L2692,13L2692,13L2700,13L2700,13L2713,13L2713,13L2717,13L2717,13L2725,13L2725,13L2727,13L2727,14L2740,14L2740,14L2752,14L2752,14L2755,14L2755,14L2758,14L2758,14L2769,14L2769,14L2775,14L2775,14L2777,14L2777,14L2777,14" tabindex="0">
						<title>j9k252w8</title>
					</path>
				</g>
				<g style="--index: 50;">
					<path d="M0,0L2034,0L2034,2L2049,2L2049,2L2111,2L2111,2L2152,2L2152,2L2154,2L2154,2L2187,2L2187,3L2209,3L2209,4L2213,4L2213,3L2217,3L2217,3L2296,3L2296,3L2300,3L2300,4L2363,4L2363,4L2394,4L2394,4L2433,4L2433,4L2447,4L2447,4L2508,4L2508,4L2509,4L2509,4L2544,4L2544,4L2555,4L2555,4L2564,4L2564,4L2569,4L2569,4L2573,4L2573,4L2599,4L2599,4L2600,4L2600,4L2601,4L2601,4L2604,4L2604,4L2605,4L2605,4L2633,4L2633,4L2650,4L2650,4L2661,4L2661,4L2663,4L2663,4L2692,4L2692,4L2700,4L2700,4L2713,4L2713,4L2717,4L2717,4L2725,4L2725,4L2727,4L2727,4L2740,4L2740,4L2752,4L2752,4L2755,4L2755,4L2758,4L2758,4L2769,4L2769,4L2775,4L2775,4L2777,4L2777,4L2777,4" tabindex="0">
						<title>j2q65d7j</title>
					</path>
				</g>
				<g style="--index: 51;">
					<path d="M0,0L2049,0L2049,36L2111,36L2111,37L2152,37L2152,37L2154,37L2154,38L2187,38L2187,39L2209,39L2209,40L2217,40L2217,40L2296,40L2296,41L2300,41L2300,42L2335,42L2335,41L2363,41L2363,41L2394,41L2394,41L2433,41L2433,42L2447,42L2447,42L2508,42L2508,42L2509,42L2509,42L2544,42L2544,42L2555,42L2555,43L2564,43L2564,43L2569,43L2569,44L2573,44L2573,45L2599,45L2599,46L2600,46L2600,47L2601,47L2601,48L2604,48L2604,48L2605,48L2605,48L2633,48L2633,48L2650,48L2650,48L2661,48L2661,49L2663,49L2663,50L2692,50L2692,50L2700,50L2700,50L2713,50L2713,51L2717,51L2717,51L2725,51L2725,51L2726,51L2726,50L2727,50L2727,51L2740,51L2740,51L2752,51L2752,51L2755,51L2755,52L2758,52L2758,52L2769,52L2769,53L2775,53L2775,54L2777,54L2777,54L2777,54" tabindex="0">
						<title>81mke9p8</title>
					</path>
				</g>
				<g style="--index: 52;">
					<path d="M0,0L2111,0L2111,33L2152,33L2152,33L2154,33L2154,34L2187,34L2187,35L2209,35L2209,36L2217,36L2217,36L2296,36L2296,37L2300,37L2300,38L2335,38L2335,46L2363,46L2363,46L2394,46L2394,46L2433,46L2433,47L2447,47L2447,47L2508,47L2508,48L2509,48L2509,48L2544,48L2544,49L2555,49L2555,50L2564,50L2564,51L2569,51L2569,52L2573,52L2573,53L2599,53L2599,54L2600,54L2600,55L2601,55L2601,56L2604,56L2604,56L2605,56L2605,56L2633,56L2633,56L2650,56L2650,57L2661,57L2661,58L2663,58L2663,59L2692,59L2692,59L2700,59L2700,59L2713,59L2713,60L2717,60L2717,60L2725,60L2725,60L2727,60L2727,61L2740,61L2740,62L2752,62L2752,62L2755,62L2755,63L2758,63L2758,63L2763,63L2763,62L2769,62L2769,63L2775,63L2775,64L2777,64L2777,64L2777,64" tabindex="0">
						<title>86rpw3p8</title>
					</path>
				</g>
				<g style="--index: 53;">
					<path d="M0,0L2152,0L2152,38L2154,38L2154,39L2187,39L2187,40L2209,40L2209,41L2210,41L2210,45L2217,45L2217,45L2296,45L2296,46L2300,46L2300,47L2363,47L2363,47L2394,47L2394,47L2427,47L2427,52L2433,52L2433,53L2447,53L2447,53L2448,53L2448,54L2452,54L2452,57L2508,57L2508,58L2509,58L2509,59L2544,59L2544,60L2555,60L2555,61L2564,61L2564,62L2569,62L2569,63L2573,63L2573,64L2599,64L2599,65L2600,65L2600,66L2601,66L2601,67L2604,67L2604,68L2605,68L2605,69L2633,69L2633,69L2650,69L2650,70L2661,70L2661,71L2663,71L2663,72L2692,72L2692,72L2700,72L2700,73L2712,73L2712,72L2713,72L2713,73L2717,73L2717,73L2725,73L2725,73L2727,73L2727,74L2740,74L2740,75L2752,75L2752,75L2755,75L2755,76L2758,76L2758,77L2766,77L2766,79L2769,79L2769,80L2774,80L2774,82L2775,82L2775,83L2777,83L2777,83L2777,83" tabindex="0">
						<title>8w3l21qj</title>
					</path>
				</g>
				<g style="--index: 54;">
					<path d="M0,0L2154,0L2154,17L2187,17L2187,18L2209,18L2209,19L2213,19L2213,18L2217,18L2217,18L2296,18L2296,18L2300,18L2300,19L2363,19L2363,19L2394,19L2394,19L2433,19L2433,19L2447,19L2447,19L2508,19L2508,19L2509,19L2509,19L2544,19L2544,19L2555,19L2555,19L2564,19L2564,19L2569,19L2569,19L2573,19L2573,19L2599,19L2599,20L2600,20L2600,20L2601,20L2601,21L2604,21L2604,21L2605,21L2605,21L2633,21L2633,21L2650,21L2650,21L2661,21L2661,22L2663,22L2663,23L2692,23L2692,23L2700,23L2700,23L2713,23L2713,23L2717,23L2717,23L2725,23L2725,23L2727,23L2727,24L2740,24L2740,24L2752,24L2752,24L2755,24L2755,25L2758,25L2758,25L2769,25L2769,25L2775,25L2775,25L2777,25L2777,25L2777,25" tabindex="0">
						<title>8v0m9e5x</title>
					</path>
				</g>
				<g style="--index: 55;">
					<path d="M0,0L2187,0L2187,1L2209,1L2209,1L2217,1L2217,1L2296,1L2296,1L2300,1L2300,1L2363,1L2363,1L2394,1L2394,1L2433,1L2433,1L2447,1L2447,1L2508,1L2508,1L2509,1L2509,1L2544,1L2544,1L2555,1L2555,1L2564,1L2564,1L2569,1L2569,1L2573,1L2573,1L2599,1L2599,1L2600,1L2600,1L2601,1L2601,1L2604,1L2604,1L2605,1L2605,1L2633,1L2633,1L2650,1L2650,1L2661,1L2661,1L2663,1L2663,1L2692,1L2692,1L2700,1L2700,1L2713,1L2713,1L2717,1L2717,1L2725,1L2725,1L2727,1L2727,1L2740,1L2740,1L2752,1L2752,1L2755,1L2755,1L2758,1L2758,1L2769,1L2769,1L2775,1L2775,1L2777,1L2777,1L2777,1" tabindex="0">
						<title>81mw6wq8</title>
					</path>
				</g>
				<g style="--index: 56;">
					<path d="M0,0L2209,0L2209,2L2213,2L2213,28L2217,28L2217,28L2296,28L2296,28L2300,28L2300,29L2363,29L2363,29L2394,29L2394,29L2433,29L2433,30L2447,30L2447,30L2508,30L2508,30L2509,30L2509,30L2544,30L2544,45L2555,45L2555,46L2564,46L2564,46L2569,46L2569,47L2573,47L2573,48L2599,48L2599,49L2600,49L2600,50L2601,50L2601,51L2604,51L2604,51L2605,51L2605,51L2633,51L2633,51L2650,51L2650,51L2661,51L2661,52L2663,52L2663,53L2692,53L2692,53L2700,53L2700,53L2713,53L2713,54L2717,54L2717,54L2725,54L2725,54L2726,54L2726,53L2727,53L2727,54L2740,54L2740,54L2752,54L2752,54L2755,54L2755,55L2758,55L2758,55L2769,55L2769,56L2775,56L2775,57L2777,57L2777,57L2777,57" tabindex="0">
						<title>8q5vvoq8</title>
					</path>
				</g>
				<g style="--index: 57;">
					<path d="M0,0L2217,0L2217,53L2218,53L2218,56L2296,56L2296,57L2300,57L2300,58L2363,58L2363,59L2394,59L2394,60L2433,60L2433,61L2447,61L2447,62L2508,62L2508,63L2509,63L2509,64L2544,64L2544,65L2555,65L2555,66L2564,66L2564,67L2569,67L2569,68L2573,68L2573,69L2599,69L2599,70L2600,70L2600,71L2601,71L2601,72L2604,72L2604,73L2605,73L2605,74L2633,74L2633,74L2650,74L2650,75L2661,75L2661,76L2663,76L2663,77L2692,77L2692,78L2700,78L2700,79L2713,79L2713,80L2717,80L2717,81L2718,81L2718,79L2725,79L2725,80L2727,80L2727,81L2740,81L2740,82L2752,82L2752,83L2755,83L2755,84L2758,84L2758,85L2769,85L2769,86L2775,86L2775,87L2777,87L2777,87L2777,87" tabindex="0">
						<title>xyq9d6m8</title>
					</path>
				</g>
				<g style="--index: 58;">
					<path d="M0,0L2296,0L2296,31L2300,31L2300,32L2363,32L2363,32L2394,32L2394,32L2433,32L2433,33L2447,33L2447,33L2508,33L2508,33L2509,33L2509,33L2544,33L2544,33L2546,33L2546,32L2555,32L2555,33L2564,33L2564,33L2569,33L2569,34L2573,34L2573,35L2599,35L2599,36L2600,36L2600,36L2601,36L2601,37L2604,37L2604,37L2605,37L2605,37L2633,37L2633,37L2650,37L2650,37L2661,37L2661,38L2663,38L2663,39L2692,39L2692,39L2700,39L2700,39L2713,39L2713,39L2717,39L2717,39L2725,39L2725,39L2727,39L2727,40L2740,40L2740,40L2752,40L2752,40L2755,40L2755,41L2758,41L2758,41L2769,41L2769,42L2775,42L2775,42L2777,42L2777,42L2777,42" tabindex="0">
						<title>j46k93w8</title>
					</path>
				</g>
				<g style="--index: 59;">
					<path d="M0,0L2300,0L2300,2L2363,2L2363,2L2394,2L2394,2L2433,2L2433,2L2447,2L2447,2L2508,2L2508,2L2509,2L2509,2L2544,2L2544,2L2555,2L2555,2L2564,2L2564,2L2569,2L2569,2L2573,2L2573,2L2599,2L2599,2L2600,2L2600,2L2601,2L2601,2L2604,2L2604,2L2605,2L2605,2L2633,2L2633,2L2650,2L2650,2L2661,2L2661,2L2663,2L2663,2L2692,2L2692,2L2700,2L2700,2L2713,2L2713,2L2717,2L2717,2L2725,2L2725,2L2727,2L2727,2L2740,2L2740,2L2752,2L2752,2L2755,2L2755,2L2758,2L2758,2L2769,2L2769,2L2775,2L2775,2L2777,2L2777,2L2777,2" tabindex="0">
						<title>j465mqd8</title>
					</path>
				</g>
				<g style="--index: 60;">
					<path d="M0,0L2363,0L2363,49L2394,49L2394,49L2427,49L2427,48L2433,48L2433,49L2447,49L2447,49L2508,49L2508,50L2509,50L2509,50L2544,50L2544,51L2555,51L2555,52L2564,52L2564,53L2569,53L2569,54L2573,54L2573,55L2599,55L2599,56L2600,56L2600,57L2601,57L2601,58L2604,58L2604,58L2605,58L2605,59L2633,59L2633,59L2650,59L2650,60L2661,60L2661,61L2663,61L2663,62L2692,62L2692,62L2700,62L2700,62L2713,62L2713,63L2717,63L2717,63L2725,63L2725,63L2727,63L2727,64L2740,64L2740,65L2752,65L2752,65L2755,65L2755,66L2758,66L2758,66L2763,66L2763,65L2769,65L2769,66L2775,66L2775,67L2777,67L2777,67L2777,67" tabindex="0">
						<title>jm62e748</title>
					</path>
				</g>
				<g style="--index: 61;">
					<path d="M0,0L2394,0L2394,57L2433,57L2433,58L2447,58L2447,59L2508,59L2508,60L2509,60L2509,61L2544,61L2544,62L2555,62L2555,63L2564,63L2564,64L2569,64L2569,65L2573,65L2573,66L2599,66L2599,67L2600,67L2600,68L2601,68L2601,69L2604,69L2604,70L2605,70L2605,71L2633,71L2633,71L2650,71L2650,72L2661,72L2661,73L2663,73L2663,74L2692,74L2692,74L2700,74L2700,75L2712,75L2712,74L2713,74L2713,75L2717,75L2717,75L2725,75L2725,75L2727,75L2727,76L2740,76L2740,77L2752,77L2752,77L2755,77L2755,78L2758,78L2758,79L2766,79L2766,78L2769,78L2769,79L2775,79L2775,80L2777,80L2777,80L2777,80" tabindex="0">
						<title>8v0mryvx</title>
					</path>
				</g>
				<g style="--index: 62;">
					<path d="M0,0L2433,0L2433,28L2447,28L2447,28L2508,28L2508,28L2509,28L2509,28L2544,28L2544,28L2555,28L2555,29L2564,29L2564,29L2569,29L2569,30L2573,30L2573,31L2599,31L2599,32L2600,32L2600,32L2601,32L2601,33L2604,33L2604,33L2605,33L2605,33L2633,33L2633,33L2650,33L2650,33L2661,33L2661,34L2663,34L2663,35L2692,35L2692,35L2700,35L2700,35L2713,35L2713,35L2717,35L2717,35L2725,35L2725,35L2727,35L2727,36L2740,36L2740,36L2752,36L2752,36L2755,36L2755,37L2758,37L2758,37L2769,37L2769,38L2775,38L2775,38L2777,38L2777,38L2777,38" tabindex="0">
						<title>j0ee1k48</title>
					</path>
				</g>
				<g style="--index: 63;">
					<path d="M0,0L2447,0L2447,55L2452,55L2452,54L2508,54L2508,55L2509,55L2509,56L2544,56L2544,57L2555,57L2555,58L2564,58L2564,59L2569,59L2569,60L2573,60L2573,61L2599,61L2599,62L2600,62L2600,63L2601,63L2601,64L2604,64L2604,65L2605,65L2605,66L2633,66L2633,66L2650,66L2650,67L2661,67L2661,68L2663,68L2663,69L2692,69L2692,69L2700,69L2700,69L2713,69L2713,70L2717,70L2717,70L2725,70L2725,70L2727,70L2727,71L2740,71L2740,72L2752,72L2752,72L2755,72L2755,73L2758,73L2758,74L2769,74L2769,75L2775,75L2775,76L2777,76L2777,76L2777,76" tabindex="0">
						<title>0jmw6wex</title>
					</path>
				</g>
				<g style="--index: 64;">
					<path d="M0,0L2508,0L2508,45L2509,45L2509,45L2544,45L2544,46L2555,46L2555,47L2564,47L2564,48L2569,48L2569,49L2573,49L2573,50L2599,50L2599,51L2600,51L2600,52L2601,52L2601,53L2604,53L2604,53L2605,53L2605,53L2633,53L2633,53L2650,53L2650,54L2661,54L2661,55L2663,55L2663,56L2692,56L2692,56L2700,56L2700,56L2713,56L2713,57L2717,57L2717,57L2725,57L2725,57L2726,57L2726,56L2727,56L2727,57L2740,57L2740,57L2752,57L2752,57L2755,57L2755,58L2758,58L2758,58L2769,58L2769,59L2775,59L2775,60L2777,60L2777,60L2777,60" tabindex="0">
						<title>x7z0z768</title>
					</path>
				</g>
				<g style="--index: 65;">
					<path d="M0,0L2509,0L2509,54L2544,54L2544,55L2555,55L2555,56L2564,56L2564,57L2569,57L2569,58L2573,58L2573,59L2599,59L2599,60L2600,60L2600,61L2601,61L2601,62L2604,62L2604,63L2605,63L2605,64L2633,64L2633,64L2650,64L2650,65L2661,65L2661,66L2663,66L2663,67L2692,67L2692,67L2700,67L2700,67L2713,67L2713,68L2717,68L2717,68L2725,68L2725,68L2727,68L2727,69L2740,69L2740,70L2752,70L2752,70L2755,70L2755,71L2758,71L2758,71L2763,71L2763,70L2769,70L2769,71L2775,71L2775,72L2777,72L2777,72L2777,72" tabindex="0">
						<title>8rl97mw8</title>
					</path>
				</g>
				<g style="--index: 66;">
					<path d="M0,0L2544,0L2544,30L2546,30L2546,38L2555,38L2555,39L2564,39L2564,39L2569,39L2569,40L2573,40L2573,41L2599,41L2599,42L2600,42L2600,42L2601,42L2601,43L2604,43L2604,43L2605,43L2605,43L2633,43L2633,43L2650,43L2650,43L2661,43L2661,44L2663,44L2663,45L2692,45L2692,45L2700,45L2700,45L2713,45L2713,46L2717,46L2717,46L2725,46L2725,46L2726,46L2726,45L2727,45L2727,46L2740,46L2740,46L2752,46L2752,46L2755,46L2755,47L2758,47L2758,47L2769,47L2769,48L2775,48L2775,48L2777,48L2777,48L2777,48" tabindex="0">
						<title>j0e5zn38</title>
					</path>
				</g>
				<g style="--index: 67;">
					<path d="M0,0L2555,0L2555,28L2564,28L2564,28L2569,28L2569,29L2573,29L2573,30L2599,30L2599,31L2600,31L2600,31L2601,31L2601,32L2604,32L2604,32L2605,32L2605,32L2633,32L2633,32L2650,32L2650,32L2661,32L2661,33L2663,33L2663,34L2692,34L2692,34L2700,34L2700,34L2713,34L2713,34L2717,34L2717,34L2725,34L2725,34L2727,34L2727,35L2740,35L2740,35L2752,35L2752,35L2755,35L2755,36L2758,36L2758,36L2769,36L2769,37L2775,37L2775,37L2777,37L2777,37L2777,37" tabindex="0">
						<title>x7zr11y8</title>
					</path>
				</g>
				<g style="--index: 68;">
					<path d="M0,0L2564,0L2564,47L2569,47L2569,48L2573,48L2573,49L2599,49L2599,50L2600,50L2600,51L2601,51L2601,52L2604,52L2604,52L2605,52L2605,52L2633,52L2633,52L2650,52L2650,53L2661,53L2661,54L2663,54L2663,55L2692,55L2692,55L2700,55L2700,55L2713,55L2713,56L2717,56L2717,56L2725,56L2725,56L2726,56L2726,55L2727,55L2727,56L2740,56L2740,56L2752,56L2752,56L2755,56L2755,57L2758,57L2758,57L2769,57L2769,58L2775,58L2775,59L2777,59L2777,59L2777,59" tabindex="0">
						<title>8qp1pyox</title>
					</path>
				</g>
				<g style="--index: 69;">
					<path d="M0,0L2569,0L2569,22L2573,22L2573,23L2599,23L2599,24L2600,24L2600,24L2601,24L2601,25L2604,25L2604,25L2605,25L2605,25L2633,25L2633,25L2650,25L2650,25L2661,25L2661,26L2663,26L2663,27L2692,27L2692,27L2700,27L2700,27L2713,27L2713,27L2717,27L2717,27L2725,27L2725,27L2727,27L2727,28L2740,28L2740,28L2752,28L2752,28L2755,28L2755,29L2758,29L2758,29L2769,29L2769,29L2775,29L2775,29L2777,29L2777,29L2777,29" tabindex="0">
						<title>j9vn2ywx</title>
					</path>
				</g>
				<g style="--index: 70;">
					<path d="M0,0L2573,0L2573,22L2599,22L2599,23L2600,23L2600,23L2601,23L2601,24L2604,24L2604,24L2605,24L2605,24L2633,24L2633,24L2650,24L2650,24L2661,24L2661,25L2663,25L2663,26L2692,26L2692,26L2700,26L2700,26L2713,26L2713,26L2717,26L2717,26L2725,26L2725,26L2727,26L2727,27L2740,27L2740,27L2752,27L2752,27L2755,27L2755,28L2758,28L2758,28L2769,28L2769,28L2775,28L2775,28L2777,28L2777,28L2777,28" tabindex="0">
						<title>j2p712o8</title>
					</path>
				</g>
				<g style="--index: 71;">
					<path d="M0,0L2599,0L2599,12L2600,12L2600,43L2601,43L2601,44L2604,44L2604,44L2605,44L2605,44L2633,44L2633,44L2650,44L2650,44L2661,44L2661,45L2663,45L2663,46L2692,46L2692,46L2700,46L2700,46L2713,46L2713,47L2717,47L2717,47L2725,47L2725,47L2726,47L2726,46L2727,46L2727,47L2740,47L2740,47L2752,47L2752,47L2755,47L2755,48L2758,48L2758,48L2769,48L2769,49L2775,49L2775,49L2777,49L2777,49L2777,49" tabindex="0">
						<title>x7zve5r8</title>
					</path>
				</g>
				<g style="--index: 72;">
					<path d="M0,0L2600,0L2600,10L2601,10L2601,10L2604,10L2604,10L2605,10L2605,10L2633,10L2633,10L2650,10L2650,10L2661,10L2661,11L2663,11L2663,11L2692,11L2692,11L2700,11L2700,11L2713,11L2713,11L2717,11L2717,11L2725,11L2725,11L2727,11L2727,12L2740,12L2740,12L2752,12L2752,12L2755,12L2755,12L2758,12L2758,12L2769,12L2769,12L2775,12L2775,12L2777,12L2777,12L2777,12" tabindex="0">
						<title>x7mnw5qx</title>
					</path>
				</g>
				<g style="--index: 73;">
					<path d="M0,0L2601,0L2601,14L2604,14L2604,14L2605,14L2605,14L2633,14L2633,14L2650,14L2650,14L2661,14L2661,15L2663,15L2663,16L2692,16L2692,16L2700,16L2700,16L2713,16L2713,16L2717,16L2717,16L2725,16L2725,16L2727,16L2727,17L2740,17L2740,17L2752,17L2752,17L2755,17L2755,17L2758,17L2758,17L2769,17L2769,17L2775,17L2775,17L2777,17L2777,17L2777,17" tabindex="0">
						<title>j5p41968</title>
					</path>
				</g>
				<g style="--index: 74;">
					<path d="M0,0L2604,0L2604,62L2605,62L2605,63L2633,63L2633,63L2650,63L2650,64L2661,64L2661,65L2663,65L2663,66L2692,66L2692,66L2700,66L2700,66L2713,66L2713,67L2717,67L2717,67L2725,67L2725,67L2727,67L2727,68L2740,68L2740,69L2752,69L2752,69L2755,69L2755,70L2758,70L2758,70L2763,70L2763,69L2769,69L2769,70L2775,70L2775,71L2777,71L2777,71L2777,71" tabindex="0">
						<title>8qplrmdx</title>
					</path>
				</g>
				<g style="--index: 75;">
					<path d="M0,0L2605,0L2605,58L2633,58L2633,58L2650,58L2650,59L2661,59L2661,60L2663,60L2663,61L2692,61L2692,61L2700,61L2700,61L2713,61L2713,62L2717,62L2717,62L2725,62L2725,62L2727,62L2727,63L2740,63L2740,64L2752,64L2752,64L2755,64L2755,65L2758,65L2758,65L2763,65L2763,64L2769,64L2769,65L2775,65L2775,66L2777,66L2777,66L2777,66" tabindex="0">
						<title>81pdyqq8</title>
					</path>
				</g>
				<g style="--index: 76;">
					<path d="M0,0L2633,0L2633,76L2650,76L2650,77L2661,77L2661,78L2663,78L2663,79L2692,79L2692,80L2700,80L2700,81L2713,81L2713,82L2717,82L2717,83L2725,83L2725,84L2727,84L2727,85L2740,85L2740,86L2752,86L2752,87L2755,87L2755,88L2758,88L2758,89L2761,89L2761,88L2769,88L2769,89L2775,89L2775,90L2777,90L2777,91L2777,91" tabindex="0">
						<title>8gop7k2x</title>
					</path>
				</g>
				<g style="--index: 77;">
					<path d="M0,0L2650,0L2650,52L2661,52L2661,53L2663,53L2663,54L2692,54L2692,54L2700,54L2700,54L2713,54L2713,55L2717,55L2717,55L2725,55L2725,55L2726,55L2726,54L2727,54L2727,55L2740,55L2740,55L2752,55L2752,55L2755,55L2755,56L2758,56L2758,56L2769,56L2769,57L2775,57L2775,58L2777,58L2777,58L2777,58" tabindex="0">
						<title>8r6739q8</title>
					</path>
				</g>
				<g style="--index: 78;">
					<path d="M0,0L2661,0L2661,9L2663,9L2663,9L2692,9L2692,9L2700,9L2700,9L2713,9L2713,9L2717,9L2717,9L2725,9L2725,9L2727,9L2727,9L2740,9L2740,9L2752,9L2752,9L2755,9L2755,9L2758,9L2758,9L2769,9L2769,9L2775,9L2775,9L2777,9L2777,9L2777,9" tabindex="0">
						<title>81vq0e38</title>
					</path>
				</g>
				<g style="--index: 79;">
					<path d="M0,0L2663,0L2663,15L2692,15L2692,15L2700,15L2700,15L2713,15L2713,15L2717,15L2717,15L2725,15L2725,15L2727,15L2727,16L2740,16L2740,16L2752,16L2752,16L2755,16L2755,16L2758,16L2758,16L2769,16L2769,16L2775,16L2775,16L2777,16L2777,16L2777,16" tabindex="0">
						<title>j5rv9q6x</title>
					</path>
				</g>
				<g style="--index: 80;">
					<path d="M0,0L2692,0L2692,77L2700,77L2700,78L2713,78L2713,79L2717,79L2717,80L2718,80L2718,81L2721,81L2721,82L2725,82L2725,83L2727,83L2727,84L2740,84L2740,85L2752,85L2752,86L2755,86L2755,87L2758,87L2758,88L2761,88L2761,89L2769,89L2769,90L2771,90L2771,91L2775,91L2775,92L2776,92L2776,91L2777,91L2777,92L2777,92" tabindex="0">
						<title>j2p4pel8</title>
					</path>
				</g>
				<g style="--index: 81;">
					<path d="M0,0L2700,0L2700,70L2713,70L2713,71L2717,71L2717,71L2725,71L2725,71L2727,71L2727,72L2740,72L2740,73L2752,73L2752,73L2755,73L2755,74L2758,74L2758,75L2769,75L2769,76L2775,76L2775,77L2777,77L2777,77L2777,77" tabindex="0">
						<title>j01wv4rx</title>
					</path>
				</g>
				<g style="--index: 82;">
					<path d="M0,0L2713,0L2713,42L2717,42L2717,42L2725,42L2725,42L2726,42L2726,57L2727,57L2727,58L2740,58L2740,58L2752,58L2752,58L2755,58L2755,59L2758,59L2758,59L2769,59L2769,60L2775,60L2775,61L2777,61L2777,61L2777,61" tabindex="0">
						<title>x7gz6krx</title>
					</path>
				</g>
				<g style="--index: 83;">
					<path d="M0,0L2717,0L2717,79L2718,79L2718,80L2725,80L2725,81L2727,81L2727,82L2740,82L2740,83L2752,83L2752,84L2755,84L2755,85L2758,85L2758,86L2769,86L2769,87L2775,87L2775,88L2777,88L2777,88L2777,88" tabindex="0">
						<title>8qpl62dx</title>
					</path>
				</g>
				<g style="--index: 84;">
					<path d="M0,0L2725,0L2725,78L2727,78L2727,79L2740,79L2740,80L2752,80L2752,80L2755,80L2755,81L2758,81L2758,82L2769,82L2769,83L2775,83L2775,84L2777,84L2777,84L2777,84" tabindex="0">
						<title>8g5l7n2j</title>
					</path>
				</g>
				<g style="--index: 85;">
					<path d="M0,0L2727,0L2727,10L2740,10L2740,10L2752,10L2752,10L2755,10L2755,10L2758,10L2758,10L2769,10L2769,10L2775,10L2775,10L2777,10L2777,10L2777,10" tabindex="0">
						<title>8ezzoqo8</title>
					</path>
				</g>
				<g style="--index: 86;">
					<path d="M0,0L2740,0L2740,61L2752,61L2752,61L2755,61L2755,62L2758,62L2758,62L2763,62L2763,71L2769,71L2769,72L2775,72L2775,73L2777,73L2777,73L2777,73" tabindex="0">
						<title>x7ggd6rx</title>
					</path>
				</g>
				<g style="--index: 87;">
					<path d="M0,0L2752,0L2752,82L2755,82L2755,83L2758,83L2758,84L2769,84L2769,85L2775,85L2775,86L2777,86L2777,86L2777,86" tabindex="0">
						<title>86pek6wj</title>
					</path>
				</g>
				<g style="--index: 88;">
					<path d="M0,0L2755,0L2755,19L2758,19L2758,19L2769,19L2769,19L2775,19L2775,19L2777,19L2777,19L2777,19" tabindex="0">
						<title>jppkezkj</title>
					</path>
				</g>
				<g style="--index: 89;">
					<path d="M0,0L2758,0L2758,73L2769,73L2769,74L2775,74L2775,75L2777,75L2777,75L2777,75" tabindex="0">
						<title>j2pmdqp8</title>
					</path>
				</g>
				<g style="--index: 90;">
					<path d="M0,0L2769,0L2769,33L2775,33L2775,33L2777,33L2777,33L2777,33" tabindex="0">
						<title>8gzkpr2j</title>
					</path>
				</g>
				<g style="--index: 91;">
					<path d="M0,0L2775,0L2775,53L2777,53L2777,53L2777,53" tabindex="0">
						<title>xkzqg1mx</title>
					</path>
				</g>
				<g style="--index: 92;">
					<path d="M0,0L2777,0L2777,89L2777,89" tabindex="0">
						<title>jo1zrpnx</title>
					</path>
				</g>
			</g>
		</svg>
	</foreignObject>
</svg>
