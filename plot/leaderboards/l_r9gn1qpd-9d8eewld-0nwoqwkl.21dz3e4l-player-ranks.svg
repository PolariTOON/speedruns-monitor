<svg xmlns="http://www.w3.org/2000/svg" lang="en" style="color-scheme: dark light;">
	<title>Rank by player for leaderboard l_r9gn1qpd-9d8eewld-0nwoqwkl.21dz3e4l</title>
	<style>
		*,
		::before,
		::after {
			box-sizing: border-box;
		}
		:root {
			background: var(--canvas-background);
			color: var(--canvas-foreground);
			fill: var(--canvas-background);
			stroke: var(--canvas-foreground);
			stroke-linejoin: round;
			stroke-linecap: round;
		}
		foreignObject {
			pointer-events: none;
		}
		foreignObject::before,
		foreignObject::after {
			content: "";
			position: absolute;
			z-index: 1;
			left: 20px;
			bottom: 20px;
			pointer-events: auto;
		}
		foreignObject::before {
			width: calc(100% - 40px);
			height: calc(20px + var(--date-size) * 1px);
		}
		foreignObject::after {
			width: calc(20px + var(--value-size) * 1px);
			height: calc(100% - 40px);
		}
		foreignObject &gt; div {
			position: absolute;
			z-index: 4;
			right: 0;
			top: 0;
			margin: 20px;
			border: 1px solid var(--canvas-foreground);
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			transition: opacity 1s;
			pointer-events: auto;
		}
		foreignObject:is(:hover, :focus-within) &gt; div:not(:hover, :focus-within) {
			opacity: 0;
			pointer-events: none;
		}
		foreignObject &gt; div &gt; p {
			margin: 0;
		}
		label {
			display: table;
			border-collapse: separate;
			border-spacing: 10px;
			direction: rtl;
		}
		progress,
		input[type="checkbox"] {
			display: table-cell;
			width: 16px;
			height: 16px;
			margin: 2px;
			accent-color: var(--canvas-foreground);
			vertical-align: top;
			direction: ltr;
		}
		progress + span,
		input[type="checkbox"] + span {
			display: table-cell;
			vertical-align: top;
			direction: ltr;
		}
		input[type="checkbox"]:not(:disabled):is(:hover, :focus-within) + span {
			text-decoration: underline;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			position: absolute;
			z-index: 2;
			margin: 0;
			padding: 10px;
			background: var(--highlighted);
			font: 16px / 1.25 serif;
			font-weight: bold;
			pointer-events: auto;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg + svg {
			border-top: 1px solid #0000;
			border-bottom: 1px solid var(--canvas-foreground);
		}
		foreignObject &gt; svg:first-of-type + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px dashed #0000;
		}
		foreignObject &gt; svg:first-of-type,
		foreignObject &gt; svg:first-of-type + svg {
			width: calc(20px + var(--date-size) * 1px);
			height: 42px;
			bottom: 20px;
		}
		foreignObject &gt; svg:first-of-type {
			left: calc(40px + var(--value-size) * 1px);
			transform: rotate(90deg) translate(-100%, 0);
			transform-origin: left bottom;
		}
		foreignObject &gt; svg:first-of-type + svg {
			right: 20px;
			transform: rotate(90deg) translate(0, 100%);
			transform-origin: right bottom;
		}
		foreignObject &gt; svg:first-of-type + svg + svg,
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			width: calc(20px + var(--value-size) * 1px);
			height: 42px;
			left: 20px;
		}
		foreignObject &gt; svg:first-of-type + svg + svg {
			bottom: calc(40px + var(--date-size) * 1px);
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg {
			top: 20px;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg &gt; text,
		foreignObject &gt; svg:first-of-type + svg + svg + svg &gt; text {
			fill: var(--canvas-foreground);
			stroke: none;
		}
		foreignObject &gt; svg:first-of-type &gt; text,
		foreignObject &gt; svg:first-of-type + svg &gt; text {
			cursor: vertical-text;
		}
		foreignObject &gt; svg:first-of-type + svg + svg + svg + svg {
			position: relative;
			z-index: 3;
			width: calc(100% - 60px - var(--value-size) * 1px);
			height: calc(100% - 60px - var(--date-size) * 1px);
			margin: 20px 20px calc(40px + var(--date-size) * 1px) calc(40px + var(--value-size) * 1px);
			border-left: 1px solid var(--canvas-foreground);
			border-right: 1px dashed var(--canvas-foreground);
			border-top: 1px dashed var(--canvas-foreground);
			border-bottom: 1px solid var(--canvas-foreground);
			background: var(--canvas-background);
			pointer-events: auto;
		}
		g &gt; rect {
			vector-effect: non-scaling-stroke;
			fill: var(--highlighted);
			stroke: none;
		}
		g &gt; rect[tabindex] {
			fill: var(--tier, #0000);
			cursor: help;
		}
		g &gt; rect[tabindex][data-tier="diamond"] {
			--tier: var(--diamond);
		}
		g &gt; rect[tabindex][data-tier="gold"] {
			--tier: var(--gold);
		}
		g &gt; rect[tabindex][data-tier="silver"] {
			--tier: var(--silver);
		}
		g &gt; rect[tabindex][data-tier="bronze"] {
			--tier: var(--bronze);
		}
		g &gt; path[tabindex] {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: hsl(calc(var(--index) / var(--count) * 360), 50%, 50%);
			cursor: help;
		}
		g:is(:hover, :focus-within) &gt; path[tabindex] {
			stroke: var(--canvas-foreground);
		}
		g &gt; path[tabindex]:is(:hover, :focus-within) {
			outline: 0;
		}
		g &gt; path[tabindex]:first-of-type {
			stroke-width: 2;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) {
			stroke-width: 4;
		}
		g &gt; path[tabindex]:first-of-type:not(:last-of-type) {
			stroke-dasharray: 4 8;
		}
		g &gt; path[tabindex]:first-of-type + rect {
			fill: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect {
			fill: var(--highlighted);
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] {
			stroke-width: 8;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) {
			stroke-width: 16;
		}
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex] + line + line {
			vector-effect: non-scaling-stroke;
			fill: none;
			stroke: none;
			stroke-width: 2;
			stroke-dasharray: 4 8;
			pointer-events: none;
		}
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) + rect + path[tabindex] + line + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line,
		g &gt; path[tabindex]:first-of-type:is(:hover, :focus-within) ~ path[tabindex]:last-of-type + line + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line,
		g &gt; path[tabindex]:first-of-type ~ path[tabindex]:is(:hover, :focus-within) + line + line {
			stroke: var(--faded);
		}
		@media (prefers-color-scheme: dark) {
			:root {
				--canvas-background: #000;
				--canvas-foreground: #ccc;
				--diamond: #0363;
				--gold: #6303;
				--silver: #3633;
				--bronze: #6363;
				--highlighted: #6663;
				--faded: #9993;
			}
		}
		@media (prefers-color-scheme: light) {
			:root {
				--canvas-background: #fff;
				--canvas-foreground: #333;
				--diamond: #9cf3;
				--gold: #fc93;
				--silver: #9c93;
				--bronze: #c9c3;
				--highlighted: #9993;
				--faded: #6663;
			}
		}
	</style>
	<script>
		"use strict";
		{
			const script = document.currentScript;
			const documentUrl = location.href;
			const scope = new URL("../../", documentUrl).pathname;
			const playersKey = `${scope}#players`;
			const leaderboardsKey = `${scope}#leaderboards`;
			const sessionKey = `${scope}#session`;
			const lockKey = `${scope}#lock`;
			async function importDataScript(dataScriptUrl, signal) {
				signal.throwIfAborted();
				if (documentUrl.protocol !== "file:") {
					const response = await fetch(dataScriptUrl, {
						signal,
					});
					if (!response.ok) {
						throw new Error(response.statusText);
					}
					const data = await response.json();
					return data;
				}
				return await new Promise((resolve, reject) =&gt; {
					const name = `callback${Math.random() * 2 ** 53}`;
					let called = false;
					let data = null;
					function callback(value) {
						if (!called) {
							called = true;
							data = value;
						}
					}
					window[name] = callback;
					const dataScript = document.createElementNS("http://www.w3.org/2000/svg", "script");
					dataScript.href = `${dataScriptUrl}&amp;callback=${name}`;
					function handleAbort(event) {
						delete window[name];
						dataScript.removeEventListener("error", handleError);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const reason = signal.reason;
						reject(reason);
					}
					function handleError(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("load", handleLoad);
						dataScript.remove();
						const error = event.error;
						reject(error);
					}
					function handleLoad(event) {
						delete window[name];
						signal.removeEventListener("abort", handleAbort);
						dataScript.removeEventListener("error", handleError);
						dataScript.remove();
						resolve(data);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					dataScript.addEventListener("error", handleError, {
						once: true,
					});
					dataScript.addEventListener("load", handleLoad, {
						once: true,
					});
					script.after(dataScript);
				});
			}
			async function waitForTimeout(delay, signal) {
				signal.throwIfAborted();
				return await new Promise((resolve, reject) =&gt; {
					let timeout = null;
					function handleAbort() {
						clearTimeout(timeout);
						const reason = signal.reason;
						reject(reason);
					}
					function handleTimeout() {
						signal.removeEventListener("abort", handleAbort);
						resolve(delay);
					}
					signal.addEventListener("abort", handleAbort, {
						once: true,
					});
					timeout = setTimeout(handleTimeout, delay);
				});
			}
			window.addEventListener("pageshow", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully restored page from cache`);
				} else {
					console.log(`Unsuccessfully restored page from cache`);
				}
			});
			window.addEventListener("pagehide", (event) =&gt; {
				if (event.persisted) {
					console.log(`Successfully saved page to cache`);
				} else {
					console.log(`Unsuccessfully saved page to cache`);
				}
			});
			window.addEventListener("pageshow", async (event) =&gt; {
				const rootTitleElement = document.querySelector("title");
				const rootTitleContent = rootTitleElement.textContent;
				const pathTitleElements = Array.from(document.querySelectorAll("g &gt; path[tabindex]:first-of-type &gt; title"));
				const pathTitleContents = pathTitleElements.map((pathTitleElement) =&gt; {
					const pathTitleContent = pathTitleElement.textContent;
					return pathTitleContent;
				});
				const foreignObject = document.querySelector("foreignObject");
				const div = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
				div.dir = "ltr";
				const p = document.createElementNS("http://www.w3.org/1999/xhtml", "p");
				const label = document.createElementNS("http://www.w3.org/1999/xhtml", "label");
				const progress = document.createElementNS("http://www.w3.org/1999/xhtml", "progress");
				label.append(progress);
				const span = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
				span.textContent = "Loading names";
				label.append(span);
				p.append(label);
				div.append(p);
				foreignObject.prepend(div);
				let lock = false;
				let session = null;
				const broadcastChannel = new BroadcastChannel(sessionKey);
				const abortController = new AbortController();
				const signal = abortController.signal;
				const abort = abortController.abort.bind(abortController);
				const {promise, resolve} = Promise.withResolvers();
				broadcastChannel.addEventListener("message", (event) =&gt; {
					const data = event.data;
					const type = data.type;
					switch (type) {
						case "request": {
							if (lock &amp;&amp; signal.aborted) {
								broadcastChannel.postMessage({
									type: "response",
									session,
								});
							}
							break;
						}
						case "response": {
							if (!signal.aborted) {
								session = data.session;
								if (session != null) {
									const {players, leaderboards} = session;
									try {
										const cachedPlayers = JSON.stringify(players);
										const cachedLeaderboards = JSON.stringify(leaderboards);
										sessionStorage.setItem(playersKey, cachedPlayers);
										sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
									} catch {}
									console.log(`Successfully loaded names from peer`);
									abort();
									resolve();
								} else {
									console.log(`Unsuccessfully loaded names from peer`);
									abort();
									resolve();
								}
							}
							break;
						}
					}
				});
				try {
					const cachedPlayers = sessionStorage.getItem(playersKey);
					const cachedLeaderboards = sessionStorage.getItem(leaderboardsKey);
					if (cachedPlayers == null || cachedLeaderboards == null) {
						throw new Error();
					}
					const players = JSON.parse(cachedPlayers);
					const leaderboards = JSON.parse(cachedLeaderboards);
					session = {players, leaderboards};
				} catch {}
				if (session != null) {
					broadcastChannel.postMessage({
						type: "response",
						session,
					});
					console.log(`Successfully loaded names from local`);
					abort();
					resolve();
				} else {
					broadcastChannel.postMessage({
						type: "request",
					});
					console.log(`Unsuccessfully loaded names from local`);
				}
				(async () =&gt; {
					for (;;) {
						await navigator.locks.request(lockKey, async () =&gt; {
							lock = true;
							console.log(`Acquired lock`);
							if (!signal.aborted) {
								try {
									const players = Object.create(null);
									const leaderboards = Object.create(null);
									const games = ["9d3rrxyd", "w6jl2ned"];
									for (const gameId of games) {
										const {data} = await importDataScript(`https://www.speedrun.com/api/v1/games/${gameId}?embed=categories,levels,variables`, signal);
										const versions = data.variables.data.find((variable) =&gt; {
											return variable.name === "Version";
										});
										const levels = Object.fromEntries(data.levels.data.map((level) =&gt; {
											return [level.id, level];
										}));
										const categories = Object.fromEntries(data.categories.data.map((category) =&gt; {
											return [category.id, category];
										}));
										const variables = Object.fromEntries(data.variables.data.map((variable) =&gt; {
											return [variable.id, variable];
										}));
										console.log(`Got game`);
										await waitForTimeout(800, signal);
										const slice = 200;
										for (let offset = 0;; offset += slice) {
											const {data, pagination} = await importDataScript(`https://www.speedrun.com/api/v1/runs?game=${gameId}&amp;orderby=date&amp;direction=asc&amp;embed=players&amp;offset=${offset}&amp;max=${slice}`, signal);
											const {size} = pagination;
											if (size === 0) {
												break;
											}
											for (const run of data) {
												const status = run.status.status;
												if (status == null || status === "new") {
													continue;
												}
												const player = run.players.data[0].rel === "user" ? run.players.data[0].id : "814p2558";
												const playerName = run.players.data[0].rel === "user" ? run.players.data[0].names.international : "anonymous";
												players[player] ??= playerName;
												const level = run.level;
												const category = run.category;
												const values = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return `-${variable}.${value}`;
												});
												const leaderboard = `${level != null ? `l_${level}-` : ""}${category}${values.join("")}`;
												const levelName = run.level != null ? levels[run.level]?.name ?? null : null;
												const categoryName = categories[run.category]?.name ?? null;
												const valueNames = Object.entries(run.values).filter(([variable]) =&gt; {
													return variables[variable]?.["is-subcategory"] ?? false;
												}).map(([variable, value]) =&gt; {
													return variables[variable]?.values.values[value]?.label ?? null;
												}).filter((valueName) =&gt; {
													return valueName != null;
												});
												const leaderboardName = `${levelName != null ? `${levelName}: ` : ""}${categoryName ?? ""}${values.length !== 0 ? ` - ${valueNames.join(", ")}` : ""}`;
												leaderboards[leaderboard] ??= leaderboardName;
											}
											console.log(`Got runs ${offset}-${offset + size - 1}`);
											await waitForTimeout(800, signal);
										}
									}
									session = {players, leaderboards};
								} catch {}
								if (!signal.aborted) {
									if (session != null) {
										const {players, leaderboards} = session;
										try {
											const cachedPlayers = JSON.stringify(players);
											const cachedLeaderboards = JSON.stringify(leaderboards);
											sessionStorage.setItem(playersKey, cachedPlayers);
											sessionStorage.setItem(leaderboardsKey, cachedLeaderboards);
										} catch {}
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Successfully loaded names from remote`);
										abort();
										resolve();
									} else {
										broadcastChannel.postMessage({
											type: "response",
											session,
										});
										console.log(`Unsuccessfully loaded names from remote`);
										abort();
										resolve();
									}
								}
							}
							await new Promise((resolve) =&gt; {
								window.addEventListener("beforeunload", () =&gt; {
									resolve();
								}, {
									once: true,
								});
							});
						});
						lock = false;
						console.log(`Released lock`);
						await new Promise((resolve) =&gt; {
							window.addEventListener("pagehide", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
						await new Promise((resolve) =&gt;{
							window.addEventListener("pageshow", () =&gt; {
								resolve();
							}, {
								once: true,
							});
						});
					}
				})();
				await promise;
				if (session == null) {
					const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
					input.type = "checkbox";
					input.autocomplete = "off";
					input.disabled = true;
					input.indeterminate = true;
					progress.replaceWith(input);
					span.textContent = "Unavailable names";
					return;
				}
				const {players, leaderboards} = session;
				const hasPlayerRoot = rootTitleContent.includes(" for player");
				const hasLeaderboardRoot = rootTitleContent.includes(" for leaderboard");
				const rootTitle = {
					element: rootTitleElement,
					contentWithIds: rootTitleContent,
					contentWithNames: hasPlayerRoot ? rootTitleContent.replace(/ for player ([0-9_a-z]+)/, ($0, $1) =&gt; {
						return ` for player ${players[$1] ?? $1}`;
					}) : hasLeaderboardRoot ? rootTitleContent.replace(/ for leaderboard ((?:l_[0-9_a-z]+-)?[0-9_a-z]+(-[0-9_a-z]+\.[0-9_a-z]+)*)/, ($0, $1) =&gt; {
						return ` for leaderboard ${leaderboards[$1] ?? $1}`;
					}) : rootTitleContent,
				};
				const hasPlayerPaths = rootTitleContent.includes(" by player");
				const hasLeaderboardPaths = rootTitleContent.includes(" by leaderboard");
				const pathTitles = pathTitleElements.map((pathTitleElement, k) =&gt; {
					const pathTitleContent = pathTitleContents[k];
					const pathTitle = {
						element: pathTitleElement,
						contentWithIds: pathTitleContent,
						contentWithNames: hasPlayerPaths ? players[pathTitleContent] ?? pathTitleContent : hasLeaderboardPaths ? leaderboards[pathTitleContent] ?? pathTitleContent : pathTitleContent,
					};
					return pathTitle;
				});
				const input = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
				input.type = "checkbox";
				input.autocomplete = "off";
				input.addEventListener("change", () =&gt; {
					input.disabled = true;
					if (input.checked) {
						rootTitle.element.textContent = rootTitle.contentWithNames;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithNames;
						}
					} else {
						rootTitle.element.textContent = rootTitle.contentWithIds;
						for (const pathTitle of pathTitles) {
							pathTitle.element.textContent = pathTitle.contentWithIds;
						}
					}
					input.disabled = false;
				});
				progress.replaceWith(input);
				span.textContent = "Reveal names";
			}, {
				once: true,
			});
		}
	</script>
	<foreignObject x="0" y="0" width="100%" height="100%" style="--date-size: 100; --value-size: 20;">
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2018-01-17</text>
		</svg>
		<svg viewBox="0 0 100 20">
			<text x="50" y="10" dx="0" dy="2" textLength="100" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">2024-11-30</text>
		</svg>
		<svg viewBox="0 0 20 20">
			<text x="10" y="10" dx="0" dy="2" textLength="10" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">0</text>
		</svg>
		<svg viewBox="0 0 20 20">
			<text x="10" y="10" dx="0" dy="2" textLength="20" lengthAdjust="spacingAndGlyphs" text-anchor="middle" dominant-baseline="middle">64</text>
		</svg>
		<svg viewBox="0 0 2509 64" preserveAspectRatio="none" overflow="visible">
			<g transform="scale(1 -1)" transform-origin="center center" style="--count: 65;">
				<g>
					<rect x="0" y="0" width="2509" height="64"/>
				</g>
				<g style="--index: 0;">
					<path d="M0,0L0,0L0,0L2,0L2,0L14,0L14,0L15,0L15,1L16,1L16,1L90,1L90,2L172,2L172,3L363,3L363,4L853,4L853,5L956,5L956,6L1041,6L1041,7L1067,7L1067,8L1073,8L1073,9L1090,9L1090,10L1116,10L1116,11L1185,11L1185,12L1191,12L1191,13L1516,13L1516,14L1572,14L1572,15L1634,15L1634,16L1696,16L1696,17L1705,17L1705,18L1765,18L1765,19L1827,19L1827,20L1849,20L1849,21L1887,21L1887,22L1901,22L1901,23L1924,23L1924,24L1976,24L1976,25L1985,25L1985,26L2049,26L2049,27L2062,27L2062,28L2111,28L2111,29L2152,29L2152,30L2213,30L2213,31L2217,31L2217,32L2296,32L2296,33L2363,33L2363,34L2394,34L2394,35L2433,35L2433,36L2508,36L2508,37L2509,37L2509,38L2509,38" tabindex="0">
						<title>qj2pq1p8</title>
					</path>
				</g>
				<g style="--index: 1;">
					<path d="M0,1L14,1L14,1L15,1L15,0L16,0L16,0L90,0L90,1L363,1L363,2L853,2L853,3L956,3L956,4L1049,4L1049,5L1067,5L1067,6L1073,6L1073,7L1090,7L1090,8L1116,8L1116,9L1185,9L1185,10L1516,10L1516,11L1572,11L1572,12L1634,12L1634,13L1696,13L1696,14L1705,14L1705,15L1765,15L1765,16L1827,16L1827,17L1887,17L1887,18L1901,18L1901,19L1924,19L1924,20L1976,20L1976,21L1985,21L1985,22L2049,22L2049,23L2062,23L2062,24L2111,24L2111,25L2152,25L2152,26L2217,26L2217,27L2363,27L2363,28L2394,28L2394,29L2508,29L2508,30L2509,30L2509,31L2509,31" tabindex="0">
						<title>kj9kz6r8</title>
					</path>
				</g>
				<g style="--index: 2;">
					<path d="M0,2L64,2L64,2L90,2L90,3L172,3L172,5L363,5L363,6L853,6L853,7L956,7L956,8L1041,8L1041,9L1067,9L1067,10L1073,10L1073,11L1090,11L1090,12L1116,12L1116,13L1185,13L1185,14L1191,14L1191,16L1516,16L1516,17L1572,17L1572,18L1634,18L1634,19L1666,19L1666,20L1679,20L1679,21L1696,21L1696,22L1705,22L1705,23L1755,23L1755,24L1765,24L1765,25L1827,25L1827,26L1848,26L1848,27L1887,27L1887,28L1901,28L1901,29L1924,29L1924,30L1976,30L1976,31L1985,31L1985,32L2049,32L2049,33L2062,33L2062,34L2111,34L2111,35L2152,35L2152,36L2213,36L2213,37L2217,37L2217,38L2296,38L2296,39L2363,39L2363,40L2394,40L2394,41L2433,41L2433,42L2508,42L2508,43L2509,43L2509,44L2509,44" tabindex="0">
						<title>18qg9ndx</title>
					</path>
				</g>
				<g style="--index: 3;">
					<path d="M0,3L90,3L90,0L96,0L96,0L172,0L172,0L242,0L242,0L956,0L956,1L958,1L958,0L987,0L987,1L1073,1L1073,2L1092,2L1092,3L1093,3L1093,4L1116,4L1116,5L1151,5L1151,6L1696,6L1696,7L2217,7L2217,8L2394,8L2394,9L2448,9L2448,10L2509,10" tabindex="0">
						<title>y8dgoe98</title>
					</path>
				</g>
				<g style="--index: 4;">
					<path d="M0,4L172,4L172,4L363,4L363,5L853,5L853,6L956,6L956,7L1041,7L1041,8L1067,8L1067,9L1073,9L1073,10L1090,10L1090,11L1116,11L1116,12L1185,12L1185,13L1191,13L1191,14L1516,14L1516,15L1572,15L1572,16L1634,16L1634,17L1666,17L1666,18L1679,18L1679,19L1696,19L1696,20L1705,20L1705,21L1765,21L1765,22L1827,22L1827,23L1848,23L1848,24L1887,24L1887,25L1901,25L1901,26L1924,26L1924,27L1976,27L1976,28L1985,28L1985,29L2049,29L2049,30L2062,30L2062,31L2111,31L2111,32L2152,32L2152,33L2213,33L2213,34L2217,34L2217,35L2296,35L2296,36L2363,36L2363,37L2394,37L2394,38L2433,38L2433,39L2508,39L2508,40L2509,40L2509,41L2509,41" tabindex="0">
						<title>e8e935oj</title>
					</path>
				</g>
				<g style="--index: 5;">
					<path d="M0,5L172,5L172,2L363,2L363,3L853,3L853,4L956,4L956,5L1049,5L1049,6L1067,6L1067,7L1073,7L1073,8L1090,8L1090,9L1116,9L1116,10L1185,10L1185,11L1191,11L1191,12L1516,12L1516,13L1572,13L1572,14L1634,14L1634,15L1696,15L1696,16L1705,16L1705,17L1765,17L1765,18L1827,18L1827,19L1887,19L1887,20L1901,20L1901,21L1924,21L1924,22L1976,22L1976,23L1985,23L1985,24L2049,24L2049,25L2062,25L2062,26L2111,26L2111,27L2152,27L2152,28L2217,28L2217,29L2296,29L2296,30L2363,30L2363,31L2394,31L2394,32L2508,32L2508,33L2509,33L2509,34L2509,34" tabindex="0">
						<title>kjpgdq4j</title>
					</path>
				</g>
				<g style="--index: 6;">
					<path d="M0,6L363,6L363,1L853,1L853,2L956,2L956,3L1049,3L1049,4L1067,4L1067,5L1073,5L1073,6L1116,6L1116,7L1139,7L1139,8L1696,8L1696,9L1765,9L1765,10L1827,10L1827,11L1976,11L1976,12L2210,12L2210,13L2217,13L2217,14L2335,14L2335,15L2363,15L2363,16L2394,16L2394,17L2509,17L2509,18L2509,18" tabindex="0">
						<title>48g36l2x</title>
					</path>
				</g>
				<g style="--index: 7;">
					<path d="M0,7L573,7L573,7L853,7L853,8L956,8L956,9L1041,9L1041,10L1067,10L1067,11L1073,11L1073,12L1090,12L1090,13L1116,13L1116,14L1185,14L1185,15L1191,15L1191,17L1420,17L1420,18L1516,18L1516,19L1572,19L1572,20L1634,20L1634,21L1666,21L1666,22L1669,22L1669,23L1679,23L1679,24L1696,24L1696,25L1705,25L1705,26L1754,26L1754,27L1765,27L1765,28L1827,28L1827,29L1834,29L1834,30L1848,30L1848,31L1860,31L1860,32L1887,32L1887,33L1901,33L1901,34L1924,34L1924,35L1969,35L1969,36L1976,36L1976,37L1985,37L1985,38L2049,38L2049,39L2062,39L2062,40L2111,40L2111,41L2152,41L2152,42L2154,42L2154,43L2213,43L2213,44L2217,44L2217,45L2296,45L2296,46L2363,46L2363,47L2394,47L2394,48L2433,48L2433,49L2508,49L2508,50L2509,50L2509,51L2509,51" tabindex="0">
						<title>j9rlkzoj</title>
					</path>
				</g>
				<g style="--index: 8;">
					<path d="M0,8L853,8L853,1L956,1L956,2L1027,2L1027,2L1049,2L1049,3L1067,3L1067,4L1073,4L1073,5L1092,5L1092,2L1093,2L1093,3L1116,3L1116,4L1151,4L1151,5L1696,5L1696,6L2217,6L2217,7L2394,7L2394,8L2452,8L2452,9L2509,9" tabindex="0">
						<title>x356nrej</title>
					</path>
				</g>
				<g style="--index: 9;">
					<path d="M0,9L956,9L956,0L958,0L958,1L987,1L987,0L1073,0L1073,1L1116,1L1116,2L1137,2L1137,0L1165,0L1165,1L1169,1L1169,0L1696,0L1696,0L1778,0L1778,1L2509,1" tabindex="0">
						<title>j2yr9lp8</title>
					</path>
				</g>
				<g style="--index: 10;">
					<path d="M0,10L1041,10L1041,6L1049,6L1049,2L1067,2L1067,3L1073,3L1073,4L1092,4L1092,5L1116,5L1116,6L1151,6L1151,3L1696,3L1696,4L2218,4L2218,5L2394,5L2394,6L2509,6" tabindex="0">
						<title>x7q00668</title>
					</path>
				</g>
				<g style="--index: 11;">
					<path d="M0,11L1067,11L1067,2L1073,2L1073,3L1092,3L1092,4L1093,4L1093,2L1116,2L1116,3L1151,3L1151,4L1696,4L1696,5L2217,5L2217,6L2394,6L2394,7L2452,7L2452,8L2509,8" tabindex="0">
						<title>814zn7l8</title>
					</path>
				</g>
				<g style="--index: 12;">
					<path d="M0,12L1073,12L1073,0L1081,0L1081,0L1137,0L1137,1L1165,1L1165,0L1169,0L1169,1L1696,1L1696,2L2218,2L2218,3L2509,3" tabindex="0">
						<title>xkon93k8</title>
					</path>
				</g>
				<g style="--index: 13;">
					<path d="M0,13L1090,13L1090,7L1116,7L1116,8L1139,8L1139,7L1696,7L1696,8L1765,8L1765,9L1827,9L1827,10L1976,10L1976,11L2217,11L2217,12L2363,12L2363,13L2394,13L2394,14L2427,14L2427,15L2509,15L2509,16L2509,16" tabindex="0">
						<title>j0np7or8</title>
					</path>
				</g>
				<g style="--index: 14;">
					<path d="M0,14L1116,14L1116,1L1137,1L1137,2L1696,2L1696,3L2218,3L2218,4L2509,4" tabindex="0">
						<title>jnzg27dj</title>
					</path>
				</g>
				<g style="--index: 15;">
					<path d="M0,15L1185,15L1185,9L1186,9L1186,9L1634,9L1634,10L1696,10L1696,11L1705,11L1705,12L1765,12L1765,13L1827,13L1827,14L1887,14L1887,15L1924,15L1924,16L1976,16L1976,17L1985,17L1985,18L2049,18L2049,19L2152,19L2152,20L2217,20L2217,21L2335,21L2335,22L2363,22L2363,23L2394,23L2394,24L2508,24L2508,25L2509,25L2509,26L2509,26" tabindex="0">
						<title>jnzen32j</title>
					</path>
				</g>
				<g style="--index: 16;">
					<path d="M0,16L1191,16L1191,15L1516,15L1516,16L1572,16L1572,17L1634,17L1634,18L1666,18L1666,19L1679,19L1679,20L1696,20L1696,21L1705,21L1705,22L1755,22L1755,23L1765,23L1765,24L1827,24L1827,25L1848,25L1848,26L1887,26L1887,27L1901,27L1901,28L1924,28L1924,29L1976,29L1976,30L1985,30L1985,31L2049,31L2049,32L2062,32L2062,33L2111,33L2111,34L2152,34L2152,35L2213,35L2213,36L2217,36L2217,37L2296,37L2296,38L2363,38L2363,39L2394,39L2394,40L2433,40L2433,41L2508,41L2508,42L2509,42L2509,43L2509,43" tabindex="0">
						<title>8r7nmdgj</title>
					</path>
				</g>
				<g style="--index: 17;">
					<path d="M0,17L1191,17L1191,11L1516,11L1516,12L1572,12L1572,13L1634,13L1634,14L1696,14L1696,15L1705,15L1705,16L1765,16L1765,17L1827,17L1827,18L1887,18L1887,19L1901,19L1901,20L1924,20L1924,21L1976,21L1976,22L1985,22L1985,23L2049,23L2049,24L2062,24L2062,25L2111,25L2111,26L2152,26L2152,27L2217,27L2217,28L2296,28L2296,29L2363,29L2363,30L2394,30L2394,31L2508,31L2508,32L2509,32L2509,33L2509,33" tabindex="0">
						<title>j2w76dnj</title>
					</path>
				</g>
				<g style="--index: 18;">
					<path d="M0,18L1354,18L1354,18L1420,18L1420,19L1452,19L1452,20L1516,20L1516,21L1544,21L1544,22L1572,22L1572,23L1634,23L1634,24L1644,24L1644,25L1653,25L1653,26L1666,26L1666,27L1669,27L1669,28L1679,28L1679,29L1681,29L1681,30L1696,30L1696,31L1705,31L1705,32L1753,32L1753,33L1754,33L1754,34L1760,34L1760,35L1765,35L1765,36L1827,36L1827,37L1834,37L1834,38L1848,38L1848,39L1860,39L1860,40L1887,40L1887,42L1901,42L1901,43L1924,43L1924,44L1969,44L1969,45L1976,45L1976,46L1985,46L1985,48L2001,48L2001,49L2034,49L2034,50L2049,50L2049,51L2111,51L2111,52L2152,52L2152,53L2154,53L2154,54L2213,54L2213,55L2217,55L2217,56L2296,56L2296,57L2363,57L2363,58L2394,58L2394,59L2433,59L2433,60L2508,60L2508,61L2509,61L2509,62L2509,62" tabindex="0">
						<title>8vo9gyyx</title>
					</path>
				</g>
				<g style="--index: 19;">
					<path d="M0,19L1420,19L1420,17L1516,17L1516,18L1572,18L1572,19L1634,19L1634,20L1666,20L1666,21L1669,21L1669,22L1679,22L1679,23L1696,23L1696,24L1705,24L1705,25L1754,25L1754,26L1765,26L1765,27L1827,27L1827,28L1834,28L1834,29L1848,29L1848,30L1860,30L1860,31L1887,31L1887,32L1901,32L1901,33L1924,33L1924,34L1969,34L1969,35L1976,35L1976,36L1985,36L1985,37L2049,37L2049,38L2062,38L2062,39L2111,39L2111,40L2152,40L2152,41L2154,41L2154,42L2213,42L2213,43L2217,43L2217,44L2296,44L2296,45L2363,45L2363,46L2394,46L2394,47L2433,47L2433,48L2508,48L2508,49L2509,49L2509,50L2509,50" tabindex="0">
						<title>x3mn3ok8</title>
					</path>
				</g>
				<g style="--index: 20;">
					<path d="M0,20L1452,20L1452,19L1516,19L1516,20L1572,20L1572,21L1634,21L1634,22L1653,22L1653,23L1666,23L1666,24L1669,24L1669,25L1679,25L1679,26L1681,26L1681,27L1696,27L1696,28L1705,28L1705,29L1754,29L1754,30L1760,30L1760,31L1765,31L1765,32L1827,32L1827,33L1834,33L1834,34L1848,34L1848,35L1860,35L1860,36L1887,36L1887,37L1901,37L1901,38L1924,38L1924,39L1969,39L1969,40L1976,40L1976,41L1985,41L1985,43L2001,43L2001,44L2049,44L2049,45L2062,45L2062,46L2111,46L2111,47L2152,47L2152,48L2154,48L2154,49L2213,49L2213,50L2217,50L2217,51L2296,51L2296,52L2363,52L2363,53L2394,53L2394,54L2433,54L2433,55L2508,55L2508,56L2509,56L2509,57L2509,57" tabindex="0">
						<title>j0vrvz4x</title>
					</path>
				</g>
				<g style="--index: 21;">
					<path d="M0,21L1516,21L1516,10L1634,10L1634,11L1696,11L1696,12L1705,12L1705,13L1765,13L1765,14L1827,14L1827,15L1887,15L1887,16L1924,16L1924,17L1976,17L1976,18L1985,18L1985,19L2049,19L2049,20L2111,20L2111,21L2152,21L2152,22L2217,22L2217,23L2363,23L2363,24L2394,24L2394,25L2508,25L2508,26L2509,26L2509,27L2509,27" tabindex="0">
						<title>x334zgex</title>
					</path>
				</g>
				<g style="--index: 22;">
					<path d="M0,22L1544,22L1544,21L1572,21L1572,22L1634,22L1634,23L1653,23L1653,24L1666,24L1666,25L1669,25L1669,26L1679,26L1679,27L1681,27L1681,28L1696,28L1696,29L1705,29L1705,30L1753,30L1753,31L1754,31L1754,32L1760,32L1760,33L1765,33L1765,34L1827,34L1827,35L1834,35L1834,36L1848,36L1848,37L1860,37L1860,38L1887,38L1887,39L1901,39L1901,40L1924,40L1924,41L1969,41L1969,42L1976,42L1976,43L1985,43L1985,45L2001,45L2001,46L2049,46L2049,47L2111,47L2111,48L2152,48L2152,49L2154,49L2154,50L2213,50L2213,51L2217,51L2217,52L2296,52L2296,53L2363,53L2363,54L2394,54L2394,55L2433,55L2433,56L2508,56L2508,57L2509,57L2509,58L2509,58" tabindex="0">
						<title>j95603w8</title>
					</path>
				</g>
				<g style="--index: 23;">
					<path d="M0,23L1572,23L1572,11L1634,11L1634,12L1696,12L1696,13L1705,13L1705,14L1765,14L1765,15L1827,15L1827,16L1887,16L1887,17L1924,17L1924,18L1976,18L1976,19L1985,19L1985,20L2049,20L2049,21L2111,21L2111,22L2152,22L2152,23L2217,23L2217,24L2363,24L2363,25L2394,25L2394,26L2508,26L2508,27L2509,27L2509,28L2509,28" tabindex="0">
						<title>8qo6r5wj</title>
					</path>
				</g>
				<g style="--index: 24;">
					<path d="M0,24L1634,24L1634,9L1696,9L1696,10L1705,10L1705,11L1765,11L1765,12L1827,12L1827,13L1887,13L1887,14L1924,14L1924,15L1976,15L1976,16L2049,16L2049,17L2152,17L2152,18L2217,18L2217,19L2335,19L2335,20L2363,20L2363,21L2394,21L2394,22L2508,22L2508,23L2509,23L2509,24L2509,24" tabindex="0">
						<title>8gmvl418</title>
					</path>
				</g>
				<g style="--index: 25;">
					<path d="M0,25L1644,25L1644,24L1653,24L1653,25L1666,25L1666,26L1669,26L1669,27L1679,27L1679,28L1681,28L1681,29L1696,29L1696,30L1705,30L1705,31L1753,31L1753,32L1754,32L1754,33L1760,33L1760,34L1765,34L1765,35L1827,35L1827,36L1834,36L1834,37L1848,37L1848,38L1860,38L1860,39L1887,39L1887,41L1901,41L1901,42L1924,42L1924,43L1969,43L1969,44L1976,44L1976,45L1985,45L1985,47L2001,47L2001,48L2049,48L2049,49L2111,49L2111,50L2152,50L2152,51L2154,51L2154,52L2213,52L2213,53L2217,53L2217,54L2296,54L2296,55L2363,55L2363,56L2394,56L2394,57L2433,57L2433,58L2508,58L2508,59L2509,59L2509,60L2509,60" tabindex="0">
						<title>8l3l2178</title>
					</path>
				</g>
				<g style="--index: 26;">
					<path d="M0,26L1653,26L1653,22L1666,22L1666,23L1669,23L1669,24L1679,24L1679,25L1696,25L1696,26L1705,26L1705,27L1754,27L1754,28L1760,28L1760,29L1765,29L1765,30L1827,30L1827,31L1834,31L1834,32L1848,32L1848,33L1860,33L1860,34L1887,34L1887,35L1901,35L1901,36L1924,36L1924,37L1969,37L1969,38L1976,38L1976,39L1985,39L1985,40L2049,40L2049,41L2062,41L2062,42L2111,42L2111,43L2152,43L2152,44L2154,44L2154,45L2213,45L2213,46L2217,46L2217,47L2296,47L2296,48L2363,48L2363,49L2394,49L2394,50L2433,50L2433,51L2508,51L2508,52L2509,52L2509,53L2509,53" tabindex="0">
						<title>j0grn39x</title>
					</path>
				</g>
				<g style="--index: 27;">
					<path d="M0,27L1666,27L1666,17L1696,17L1696,18L1705,18L1705,19L1765,19L1765,20L1827,20L1827,21L1849,21L1849,22L1887,22L1887,23L1901,23L1901,24L1924,24L1924,25L1976,25L1976,26L1985,26L1985,27L2049,27L2049,28L2062,28L2062,29L2111,29L2111,30L2152,30L2152,31L2213,31L2213,32L2217,32L2217,33L2296,33L2296,34L2363,34L2363,35L2394,35L2394,36L2433,36L2433,37L2508,37L2508,38L2509,38L2509,39L2509,39" tabindex="0">
						<title>j0gyr64x</title>
					</path>
				</g>
				<g style="--index: 28;">
					<path d="M0,28L1669,28L1669,21L1679,21L1679,22L1696,22L1696,23L1705,23L1705,24L1755,24L1755,25L1765,25L1765,26L1827,26L1827,27L1848,27L1848,28L1887,28L1887,29L1901,29L1901,30L1924,30L1924,31L1976,31L1976,32L1985,32L1985,33L2049,33L2049,34L2062,34L2062,35L2111,35L2111,36L2152,36L2152,37L2213,37L2213,38L2217,38L2217,39L2296,39L2296,40L2363,40L2363,41L2394,41L2394,42L2433,42L2433,43L2508,43L2508,44L2509,44L2509,45L2509,45" tabindex="0">
						<title>x3w413qj</title>
					</path>
				</g>
				<g style="--index: 29;">
					<path d="M0,29L1679,29L1679,18L1696,18L1696,19L1705,19L1705,20L1765,20L1765,21L1827,21L1827,22L1848,22L1848,23L1849,23L1849,20L1887,20L1887,21L1901,21L1901,22L1924,22L1924,23L1976,23L1976,24L1985,24L1985,25L2049,25L2049,26L2062,26L2062,27L2111,27L2111,28L2152,28L2152,29L2213,29L2213,30L2217,30L2217,31L2296,31L2296,32L2363,32L2363,33L2394,33L2394,34L2508,34L2508,35L2509,35L2509,36L2509,36" tabindex="0">
						<title>xk1oze6j</title>
					</path>
				</g>
				<g style="--index: 30;">
					<path d="M0,30L1681,30L1681,26L1696,26L1696,27L1705,27L1705,28L1754,28L1754,29L1760,29L1760,30L1765,30L1765,31L1827,31L1827,32L1834,32L1834,33L1848,33L1848,34L1860,34L1860,35L1887,35L1887,36L1901,36L1901,37L1924,37L1924,38L1969,38L1969,39L1976,39L1976,40L1985,40L1985,42L2001,42L2001,43L2049,43L2049,44L2062,44L2062,45L2111,45L2111,46L2152,46L2152,47L2154,47L2154,48L2213,48L2213,49L2217,49L2217,50L2296,50L2296,51L2363,51L2363,52L2394,52L2394,53L2433,53L2433,54L2508,54L2508,55L2509,55L2509,56L2509,56" tabindex="0">
						<title>jonp4ge8</title>
					</path>
				</g>
				<g style="--index: 31;">
					<path d="M0,31L1696,31L1696,1L1778,1L1778,0L1845,0L1845,0L2509,0" tabindex="0">
						<title>jn2m23wj</title>
					</path>
				</g>
				<g style="--index: 32;">
					<path d="M0,32L1705,32L1705,10L1765,10L1765,11L1827,11L1827,12L1976,12L1976,13L2210,13L2210,14L2217,14L2217,15L2335,15L2335,16L2363,16L2363,17L2394,17L2394,18L2509,18L2509,19L2509,19" tabindex="0">
						<title>x766z2rj</title>
					</path>
				</g>
				<g style="--index: 33;">
					<path d="M0,33L1753,33L1753,30L1754,30L1754,31L1760,31L1760,32L1765,32L1765,33L1827,33L1827,34L1834,34L1834,35L1848,35L1848,36L1860,36L1860,37L1887,37L1887,38L1901,38L1901,39L1924,39L1924,40L1969,40L1969,41L1976,41L1976,42L1985,42L1985,44L2001,44L2001,45L2049,45L2049,46L2062,46L2062,23L2111,23L2111,24L2152,24L2152,25L2217,25L2217,26L2363,26L2363,27L2394,27L2394,28L2508,28L2508,29L2509,29L2509,30L2509,30" tabindex="0">
						<title>8lokkp48</title>
					</path>
				</g>
				<g style="--index: 34;">
					<path d="M0,34L1754,34L1754,25L1755,25L1755,22L1765,22L1765,23L1827,23L1827,24L1848,24L1848,25L1887,25L1887,26L1901,26L1901,27L1924,27L1924,28L1976,28L1976,29L1985,29L1985,30L2049,30L2049,31L2062,31L2062,32L2111,32L2111,33L2152,33L2152,34L2213,34L2213,35L2217,35L2217,36L2296,36L2296,37L2363,37L2363,38L2394,38L2394,39L2433,39L2433,40L2508,40L2508,41L2509,41L2509,42L2509,42" tabindex="0">
						<title>xz0noqn8</title>
					</path>
				</g>
				<g style="--index: 35;">
					<path d="M0,35L1760,35L1760,28L1765,28L1765,29L1827,29L1827,30L1834,30L1834,31L1848,31L1848,32L1860,32L1860,33L1887,33L1887,34L1901,34L1901,35L1924,35L1924,36L1969,36L1969,37L1976,37L1976,38L1985,38L1985,39L2049,39L2049,40L2062,40L2062,41L2111,41L2111,42L2152,42L2152,43L2154,43L2154,44L2213,44L2213,45L2217,45L2217,46L2296,46L2296,47L2363,47L2363,48L2394,48L2394,49L2433,49L2433,50L2508,50L2508,51L2509,51L2509,52L2509,52" tabindex="0">
						<title>jnp5wq28</title>
					</path>
				</g>
				<g style="--index: 36;">
					<path d="M0,36L1765,36L1765,8L1976,8L1976,9L2217,9L2217,10L2394,10L2394,11L2427,11L2427,12L2509,12L2509,13L2509,13" tabindex="0">
						<title>j9pz53wx</title>
					</path>
				</g>
				<g style="--index: 37;">
					<path d="M0,37L1827,37L1827,9L1976,9L1976,10L2217,10L2217,11L2394,11L2394,12L2427,12L2427,13L2509,13L2509,14L2509,14" tabindex="0">
						<title>8lo1ge28</title>
					</path>
				</g>
				<g style="--index: 38;">
					<path d="M0,38L1834,38L1834,28L1848,28L1848,29L1887,29L1887,30L1901,30L1901,31L1924,31L1924,32L1969,32L1969,33L1976,33L1976,34L1985,34L1985,35L2049,35L2049,36L2062,36L2062,37L2111,37L2111,38L2152,38L2152,39L2154,39L2154,40L2213,40L2213,41L2217,41L2217,42L2296,42L2296,43L2363,43L2363,44L2394,44L2394,45L2433,45L2433,46L2508,46L2508,47L2509,47L2509,48L2509,48" tabindex="0">
						<title>8ewm6dd8</title>
					</path>
				</g>
				<g style="--index: 39;">
					<path d="M0,39L1848,39L1848,22L1849,22L1849,23L1887,23L1887,24L1901,24L1901,25L1924,25L1924,26L1976,26L1976,27L1985,27L1985,28L2049,28L2049,29L2062,29L2062,30L2111,30L2111,31L2152,31L2152,32L2213,32L2213,33L2217,33L2217,34L2296,34L2296,35L2363,35L2363,36L2394,36L2394,37L2433,37L2433,38L2508,38L2508,39L2509,39L2509,40L2509,40" tabindex="0">
						<title>joovynnj</title>
					</path>
				</g>
				<g style="--index: 40;">
					<path d="M0,40L1860,40L1860,30L1887,30L1887,31L1901,31L1901,32L1924,32L1924,33L1969,33L1969,34L1976,34L1976,35L1985,35L1985,36L2049,36L2049,37L2062,37L2062,38L2111,38L2111,39L2152,39L2152,40L2154,40L2154,41L2213,41L2213,42L2217,42L2217,43L2296,43L2296,44L2363,44L2363,45L2394,45L2394,46L2433,46L2433,47L2508,47L2508,48L2509,48L2509,49L2509,49" tabindex="0">
						<title>8640q63j</title>
					</path>
				</g>
				<g style="--index: 41;">
					<path d="M0,41L1887,41L1887,13L1976,13L1976,14L2210,14L2210,15L2217,15L2217,16L2335,16L2335,17L2363,17L2363,18L2394,18L2394,19L2508,19L2508,20L2509,20L2509,21L2509,21" tabindex="0">
						<title>x7w44nr8</title>
					</path>
				</g>
				<g style="--index: 42;">
					<path d="M0,42L1887,42L1887,40L1901,40L1901,41L1924,41L1924,42L1969,42L1969,43L1976,43L1976,44L1985,44L1985,46L2001,46L2001,47L2049,47L2049,48L2111,48L2111,49L2152,49L2152,50L2154,50L2154,51L2213,51L2213,52L2217,52L2217,53L2296,53L2296,54L2363,54L2363,55L2394,55L2394,56L2433,56L2433,57L2508,57L2508,58L2509,58L2509,59L2509,59" tabindex="0">
						<title>jone7r08</title>
					</path>
				</g>
				<g style="--index: 43;">
					<path d="M0,43L1901,43L1901,18L1924,18L1924,19L1976,19L1976,20L1985,20L1985,21L2049,21L2049,22L2111,22L2111,23L2152,23L2152,24L2217,24L2217,25L2363,25L2363,26L2394,26L2394,27L2508,27L2508,28L2509,28L2509,29L2509,29" tabindex="0">
						<title>8lolk7r8</title>
					</path>
				</g>
				<g style="--index: 44;">
					<path d="M0,44L1924,44L1924,14L1976,14L1976,15L2210,15L2210,16L2217,16L2217,17L2335,17L2335,18L2363,18L2363,19L2394,19L2394,20L2508,20L2508,21L2509,21L2509,22L2509,22" tabindex="0">
						<title>jnp37d18</title>
					</path>
				</g>
				<g style="--index: 45;">
					<path d="M0,45L1969,45L1969,32L1976,32L1976,33L1985,33L1985,34L2049,34L2049,35L2062,35L2062,36L2111,36L2111,37L2152,37L2152,38L2154,38L2154,39L2213,39L2213,40L2217,40L2217,41L2296,41L2296,42L2363,42L2363,43L2394,43L2394,44L2433,44L2433,45L2508,45L2508,46L2509,46L2509,47L2509,47" tabindex="0">
						<title>8v21onej</title>
					</path>
				</g>
				<g style="--index: 46;">
					<path d="M0,46L1976,46L1976,8L2217,8L2217,9L2394,9L2394,10L2427,10L2427,11L2509,11L2509,12L2509,12" tabindex="0">
						<title>8v2lgpvj</title>
					</path>
				</g>
				<g style="--index: 47;">
					<path d="M0,47L1985,47L1985,41L2001,41L2001,42L2049,42L2049,43L2062,43L2062,44L2111,44L2111,45L2152,45L2152,46L2154,46L2154,47L2213,47L2213,48L2217,48L2217,49L2296,49L2296,50L2363,50L2363,51L2394,51L2394,52L2433,52L2433,53L2508,53L2508,54L2509,54L2509,55L2509,55" tabindex="0">
						<title>8v2lq0vj</title>
					</path>
				</g>
				<g style="--index: 48;">
					<path d="M0,48L1985,48L1985,17L2049,17L2049,18L2152,18L2152,19L2217,19L2217,20L2335,20L2335,21L2363,21L2363,22L2394,22L2394,23L2508,23L2508,24L2509,24L2509,25L2509,25" tabindex="0">
						<title>j06yo5wj</title>
					</path>
				</g>
				<g style="--index: 49;">
					<path d="M0,49L2001,49L2001,41L2049,41L2049,42L2062,42L2062,43L2111,43L2111,44L2152,44L2152,45L2154,45L2154,46L2213,46L2213,47L2217,47L2217,48L2296,48L2296,49L2363,49L2363,50L2394,50L2394,51L2433,51L2433,52L2508,52L2508,53L2509,53L2509,54L2509,54" tabindex="0">
						<title>j9k252w8</title>
					</path>
				</g>
				<g style="--index: 50;">
					<path d="M0,50L2034,50L2034,49L2049,49L2049,50L2111,50L2111,51L2152,51L2152,52L2154,52L2154,53L2213,53L2213,54L2217,54L2217,55L2296,55L2296,56L2363,56L2363,57L2394,57L2394,58L2433,58L2433,59L2508,59L2508,60L2509,60L2509,61L2509,61" tabindex="0">
						<title>j2q65d7j</title>
					</path>
				</g>
				<g style="--index: 51;">
					<path d="M0,51L2049,51L2049,16L2152,16L2152,17L2217,17L2217,18L2335,18L2335,19L2363,19L2363,20L2394,20L2394,21L2508,21L2508,22L2509,22L2509,23L2509,23" tabindex="0">
						<title>81mke9p8</title>
					</path>
				</g>
				<g style="--index: 52;">
					<path d="M0,52L2111,52L2111,20L2152,20L2152,21L2217,21L2217,22L2335,22L2335,14L2363,14L2363,15L2394,15L2394,16L2509,16L2509,17L2509,17" tabindex="0">
						<title>86rpw3p8</title>
					</path>
				</g>
				<g style="--index: 53;">
					<path d="M0,53L2152,53L2152,16L2210,16L2210,12L2217,12L2217,13L2363,13L2363,14L2394,14L2394,15L2427,15L2427,10L2448,10L2448,9L2452,9L2452,7L2509,7" tabindex="0">
						<title>8w3l21qj</title>
					</path>
				</g>
				<g style="--index: 54;">
					<path d="M0,54L2154,54L2154,38L2213,38L2213,39L2217,39L2217,40L2296,40L2296,41L2363,41L2363,42L2394,42L2394,43L2433,43L2433,44L2508,44L2508,45L2509,45L2509,46L2509,46" tabindex="0">
						<title>8v0m9e5x</title>
					</path>
				</g>
				<g style="--index: 55;">
					<path d="M0,55L2187,55L2187,55L2209,55L2209,56L2217,56L2217,57L2296,57L2296,58L2300,58L2300,59L2363,59L2363,60L2394,60L2394,61L2433,61L2433,62L2508,62L2508,63L2509,63L2509,64L2509,64" tabindex="0">
						<title>81mw6wq8</title>
					</path>
				</g>
				<g style="--index: 56;">
					<path d="M0,56L2209,56L2209,55L2213,55L2213,29L2217,29L2217,30L2296,30L2296,31L2363,31L2363,32L2394,32L2394,33L2508,33L2508,34L2509,34L2509,35L2509,35" tabindex="0">
						<title>8q5vvoq8</title>
					</path>
				</g>
				<g style="--index: 57;">
					<path d="M0,57L2217,57L2217,5L2218,5L2218,2L2509,2" tabindex="0">
						<title>xyq9d6m8</title>
					</path>
				</g>
				<g style="--index: 58;">
					<path d="M0,58L2296,58L2296,28L2363,28L2363,29L2394,29L2394,30L2508,30L2508,31L2509,31L2509,32L2509,32" tabindex="0">
						<title>j46k93w8</title>
					</path>
				</g>
				<g style="--index: 59;">
					<path d="M0,59L2300,59L2300,58L2363,58L2363,59L2394,59L2394,60L2433,60L2433,61L2508,61L2508,62L2509,62L2509,63L2509,63" tabindex="0">
						<title>j465mqd8</title>
					</path>
				</g>
				<g style="--index: 60;">
					<path d="M0,60L2363,60L2363,12L2394,12L2394,13L2427,13L2427,14L2509,14L2509,15L2509,15" tabindex="0">
						<title>jm62e748</title>
					</path>
				</g>
				<g style="--index: 61;">
					<path d="M0,61L2394,61L2394,5L2509,5" tabindex="0">
						<title>8v0mryvx</title>
					</path>
				</g>
				<g style="--index: 62;">
					<path d="M0,62L2433,62L2433,35L2508,35L2508,36L2509,36L2509,37L2509,37" tabindex="0">
						<title>j0ee1k48</title>
					</path>
				</g>
				<g style="--index: 63;">
					<path d="M0,63L2508,63L2508,19L2509,19L2509,20L2509,20" tabindex="0">
						<title>x7z0z768</title>
					</path>
				</g>
				<g style="--index: 64;">
					<path d="M0,64L2509,64L2509,11L2509,11" tabindex="0">
						<title>8rl97mw8</title>
					</path>
				</g>
			</g>
		</svg>
	</foreignObject>
</svg>
